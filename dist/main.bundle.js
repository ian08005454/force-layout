/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./js/API.js":
/*!*******************!*\
  !*** ./js/API.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GetJSON\": () => (/* binding */ GetJSON)\n/* harmony export */ });\n/* harmony import */ var jquery_dist_jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery/dist/jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery_dist_jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery_dist_jquery__WEBPACK_IMPORTED_MODULE_0__);\n/**\r\n * @module API\r\n * @description 運用ajax取得資料的方法\r\n * @author Wei-Jie Li\r\n * @createDate 2021-03-21\r\n */\r\n\r\n/**\r\n * 運用ajax來取得url傳回來的資料並存入jdata\r\n * @param {string} url  資料的網址\r\n */\r\nfunction GetJSON(url) {\r\n    jquery_dist_jquery__WEBPACK_IMPORTED_MODULE_0___default().ajax({\r\n        url: url,\r\n        method: \"GET\",\r\n        async: false,\r\n        dataType: \"JSON\",\r\n    })\r\n\r\n        .done( function (response) {\r\n            console.log(jdata);\r\n            var cpdata = Object.assign(jdata, response); //合併之前資料\r\n            console.log(cpdata);\r\n            jdata = response;\r\n        })\r\n        .fail( function (xhr, status, error) {\r\n            console.log( '出現錯誤，無法完成!' )\r\n            console.log( 'Error: ' + error )\r\n            console.log( 'Status: ' + status )\r\n            console.dir(\"xhr:\" +  xhr )\r\n            // console.log(\"xhr:\" + xhr + '\\n' + \"status:\" + status + '\\n' + \"error:\" + error);\r\n        })\r\n}\r\n\n\n//# sourceURL=webpack://ascdc-sna/./js/API.js?");

/***/ }),

/***/ "./js/assignColor.js":
/*!***************************!*\
  !*** ./js/assignColor.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SetLineColor\": () => (/* binding */ SetLineColor),\n/* harmony export */   \"getRandomColor\": () => (/* binding */ getRandomColor)\n/* harmony export */ });\n/**\r\n * @module assignColor\r\n * @description 指定線段顏色的模組\r\n * @author Wei-Jie Li\r\n * @createDate 2021-03-21\r\n * @todo 尚須跟佑生討論接下來要怎麼處，感覺效果不佳\r\n */\r\nvar HSL = [];\r\nfunction SetLineColor (colorList, lineColors, groupColor){\r\n    //運用array接值 sort 去修改color object 的值再重新上色\r\n    colorList.sort();\t\r\n    let hslGroupColor = [];\r\n    for(let group of groupColor){\r\n        // hslGroupColor.push(hexToHsl(group));\r\n\t\thslGroupColor.push(hexToRgb(group));\r\n\t\tconsole.log(hslGroupColor);\r\n    }\r\n//    var centerPoint = setColorRange(hslGroupColor);\r\n\tfor(let color in lineColors){\r\n\t\t// lineColors[color].color = calculateColor(lineColors[color].group, centerPoint, hslGroupColor);\r\n\t\tlineColors[color].color = calculateColor1(lineColors[color].group, hslGroupColor);\r\n\t}\r\n\treturn lineColors;\r\n}\r\nfunction calculateColor1(group, hslGroupColor){\r\n\tvar count = 0;\r\n\tvar RGB = [];\r\n\tgroup.forEach(element => {\r\n\t\tcount += element\r\n\t});\r\n\tfor(let h =0; h<3; h++){\r\n\t\tvar temp = 0;\r\n\t\tfor (let index = 0; index < hslGroupColor.length; index++) {\r\n\t\t\ttemp += group[index] * hslGroupColor[index][h];\r\n\t\t}\r\n\t\ttemp = Math.floor(temp /= count);\r\n\t\tRGB.push(temp);\r\n\t}\r\n\treturn rgbToHex(RGB[0], RGB[1], RGB[2]);\r\n}\r\n//using hsl mode\r\nfunction calculateColor(group, centerPoint, hslGroupColor){\r\n\tvar hsl = centerPoint;\r\n\tvar count = 0;\r\n\tfor(let h =0; h<3; h++){\r\n\t\tvar temp = 1\r\n\t\tfor (let index = 0; index < hslGroupColor.length; index++) {\r\n\t\t\ttemp += group[index] * hslGroupColor[index][h];\r\n\t\t\tcount += group[index]\r\n\t\t}\r\n\t\ttemp =Math.floor(temp /= count);\r\n\t\thsl[h] += temp;\r\n\t}\r\n\treturn hslToHex(hsl[0], hsl[1], hsl[2]);\r\n}\r\nfunction hexToRgb(x){\r\n\tvar r = parseInt((cutHex(x)).substring(0,2),16);\r\n    var g = parseInt((cutHex(x)).substring(2,4), 16);\r\n    var b = parseInt((cutHex(x)).substring(4,6),16);\r\n\treturn[r,g,b];\r\n\tfunction cutHex(h){\r\n        return (h.charAt(0)==\"#\") ? h.substring(1,7):h\r\n    } \r\n}\r\nfunction rgbToHex(r, g, b) {\r\n\t\t  \r\n\treturn \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\r\n}\r\nfunction hexToHsl(x){\r\n    var r = parseInt((cutHex(x)).substring(0,2),16);\r\n    var g = parseInt((cutHex(x)).substring(2,4), 16);\r\n    var b = parseInt((cutHex(x)).substring(4,6),16);\r\n     return rgbToHsl(r, g, b);\r\n\r\n    function cutHex(h){\r\n        return (h.charAt(0)==\"#\") ? h.substring(1,7):h\r\n    }\r\n}\r\n/*\r\n\t\t * Converts an RGB color value to HSL. Conversion formula\r\n\t\t * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n\t\t * Assumes r, g, and b are contained in the set [0, 255] and\r\n\t\t * returns h, s, and l the same way as your browser DevTools color picker.\r\n\t\t *\r\n\t\t * @param   Number  r       The red color value\r\n\t\t * @param   Number  g       The green color value\r\n\t\t * @param   Number  b       The blue color value\r\n\t\t * @return  Array           The HSL representation\r\n\t\t */\r\nfunction rgbToHsl(r, g, b) {\r\n    r /= 255, g /= 255, b /= 255;\r\n\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n    var h, s, l = (max + min) / 2;\r\n\r\n    if (max == min) {\r\n        h = s = 0; // achromatic\r\n    } else {\r\n        var d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n        switch (max) {\r\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n            case g: h = (b - r) / d + 2; break;\r\n            case b: h = (r - g) / d + 4; break;\r\n        }\r\n\r\n        h /= 6;\r\n    }\r\n    h = Math.round(lerp(0,359,h));\r\n    s = Math.round(s*100);\r\n    l = Math.round(l*100);\r\n    return [ h, s, l ];\r\n\t//https://gist.github.com/demonixis/4202528/5f0ce3c2622fba580e78189cfe3ff0f9dd8aefcc\r\n\tfunction lerp (value1, value2, amount) {\r\n\t\tamount = amount < 0 ? 0 : amount;\r\n\t\tamount = amount > 1 ? 1 : amount;\r\n\t\treturn value1 + (value2 - value1) * amount;\r\n\t}\r\n\t\t\t\r\n}\r\n\r\nfunction setColorRange(hslGroupColor){\r\n\tvar centerColor = []\r\n    for (let index = 0; index < 3; index++) {\r\n\t\tvar count = 0;\r\n\t\tfor(let hsl of hslGroupColor){\r\n\t\t\tcount += hsl[index];\r\n\t\t}\r\n\t\tcount /= hslGroupColor.length;\r\n\t\tcenterColor.push(count);\r\n\t}\r\n\treturn centerColor;\r\n}\r\nfunction getRandomColor() {\r\n\tvar hslLength = HSL.length;\r\n\tvar ret = [];\r\n\tret[0] = Math.floor(Math.random() * 360);\r\n\tif (HSL.length > 36) {\r\n\t\tret[1] = 80;\r\n\t\tret[2] = 70;\r\n\t} else {\r\n\t\tret[1] = 70;\r\n\t\tret[2] = 50;\r\n\t}\r\n\r\n\tfor (var i = 0; i < hslLength; i++) {\r\n\t\t// 色相差異調整\r\n\t\tif (i > 0 && Math.abs(ret[0] - HSL[i][0]) < 8) {\r\n\t\t\tret[0] = Math.floor(Math.random() * 360);\r\n\t\t\t// ret[1]= Math.floor(Math.random() * 100);\r\n\t\t\t// ret[2]= Math.floor(Math.random() * 100);\r\n\t\t\ti = 0;\r\n\t\t}\r\n\t}\r\n\t// ret[1] = 70 + (ret[1] * 0.3); // [0.7 - 0.9] 排除过灰颜色\r\n\t// ret[2] = 40 + (ret[2] * 0.4); // [0.4 - 0.8] 排除过亮过暗色\r\n\r\n\t// 数据转化到小数点后两位\r\n\tret = ret.map(function(item) {\r\n\t\treturn parseFloat(item.toFixed(2));\r\n\t});\r\n\r\n\tHSL.push(ret[0]);\r\n\t// console.log(ret);\r\n\tvar color = hslToHex(ret[0], ret[1], ret[2]);\r\n\t// console.log(color);\r\n\treturn color;\r\n}\r\n//https://stackoverflow.com/questions/36721830/convert-hsl-to-rgb-and-hex\r\n//https://www.ginifab.com.tw/tools/colors/rgb_to_hsv_hsl.html\r\nfunction hslToHex(h, s, l) {\r\n\th /= 360;\r\n\ts /= 100;\r\n\tl /= 100;\r\n\tlet r, g, b;\r\n\tif (s === 0) {\r\n\t\tr = g = b = l; // achromatic\r\n\t} else {\r\n\t\tconst hue2rgb = (p, q, t) => {\r\n\t\t\tif (t < 0) t += 1;\r\n\t\t\tif (t > 1) t -= 1;\r\n\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\r\n\t\t\tif (t < 1 / 2) return q;\r\n\t\t\tif (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n\t\t\treturn p;\r\n\t\t};\r\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n\t\tconst p = 2 * l - q;\r\n\t\tr = hue2rgb(p, q, h + 1 / 3);\r\n\t\tg = hue2rgb(p, q, h);\r\n\t\tb = hue2rgb(p, q, h - 1 / 3);\r\n\t}\r\n\tconst toHex = (x) => {\r\n\t\tconst hex = Math.round(x * 255).toString(16);\r\n\t\treturn hex.length === 1 ? '0' + hex : hex;\r\n\t};\r\n\treturn `#${toHex(r)}${toHex(g)}${toHex(b)}`;\r\n}\n\n//# sourceURL=webpack://ascdc-sna/./js/assignColor.js?");

/***/ }),

/***/ "./js/chartSetting.js":
/*!****************************!*\
  !*** ./js/chartSetting.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"data\": () => (/* binding */ data),\n/* harmony export */   \"option\": () => (/* binding */ option),\n/* harmony export */   \"jquery_slider_setting\": () => (/* binding */ jquery_slider_setting)\n/* harmony export */ });\n/* harmony import */ var _dataFormater_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dataFormater.js */ \"./js/dataFormater.js\");\n/* harmony import */ var _API__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./API */ \"./js/API.js\");\n/**\r\n * @module chartSetting\r\n * @description 圖表的設定內容\r\n * @author Wei-Jie Li\r\n * @createDate 2021-03-21\r\n */\r\n\r\n\r\n(0,_API__WEBPACK_IMPORTED_MODULE_1__.GetJSON)(url);\r\nconsole.log(jdata);\r\n/**\r\n * @type {object}\r\n * 整理後的資料\r\n */\r\nconst data = (0,_dataFormater_js__WEBPACK_IMPORTED_MODULE_0__.dataFormat)(jdata); //資料整理模組\r\nvar max_common_show_value = Math.max(..._dataFormater_js__WEBPACK_IMPORTED_MODULE_0__.allValues);\r\nvar min_common_show_value = Math.min(..._dataFormater_js__WEBPACK_IMPORTED_MODULE_0__.allValues);\r\nvar max_idf = Math.max(..._dataFormater_js__WEBPACK_IMPORTED_MODULE_0__.allIdf);\r\nvar min_idf = Math.min(..._dataFormater_js__WEBPACK_IMPORTED_MODULE_0__.allIdf);\r\n/**\r\n * ECharts graph圖表設定檔\r\n * @see ECharts的配置項說明書 {@link https://echarts.apache.org/zh/option.html#series-graph.type }\r\n */\r\nvar option = {\r\n\ttitle: {\r\n        show: true,\r\n\t\ttext: bookName, // this field will connect to the book name\r\n\t\ttextStyle: {\r\n\t\t\tfontSize: 32,\r\n\t\t\tfontWeight: 'bolder',\r\n            color: '#595759'\r\n\t\t},\r\n\t\t// subtextStyle: {\r\n\t\t// \tfontSize: 15,\r\n\t\t// \tfontWeight: 'bolder'\r\n\t\t// },\r\n        top: \"bottom\",\r\n        left: \"right\",\r\n        triggerEvent: true,\r\n\t},\r\n\ttooltip: {\r\n\t\tshow: true,\r\n\t\tformatter: function(element) {\r\n\t\t\tif (element.dataType == 'node') return element.name  +'(<b>' + element.value + '</b>)';\r\n\t\t\tif (element.dataType == 'edge'){\r\n\t\t\t\tvar target,source\r\n\t\t\t\tdata.nodes.forEach(node => {\r\n\t\t\t\t\tif(node.name === element.data.target)\r\n\t\t\t\t\t\ttarget = node.value;\r\n\t\t\t\t\telse if (node.name === element.data.source)\r\n\t\t\t\t\t\tsource = node.value\r\n\t\t\t\t});\r\n\t\t\t\tif(element.data.bilateral === 'true')\r\n\t\t\t\t\treturn element.data.source +  '('+ source +')' + ' <-- <b>' + element.data.name + '(' + element.value + '</b>) -->   ' + element.data.target + '('+ target +')' ;\r\n\t\t\t\telse\r\n\t\t\t\t\treturn element.data.source +  '('+ source +')' + ' -- <b>' + element.data.name + '(' + element.value + '</b>) -->   ' + element.data.target + '('+ target +')' ;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// showContent:false, //mouseover是否顯示\r\n\t},\r\n\ttoolbox: {\r\n\t\tleft: 'right',\r\n\t\tshow: true,\r\n\t\tfeature: {\r\n\t\t\tmagicType: { show: true, type: [ 'force', 'chord' ] },\r\n\t\t\tsaveAsImage: {\r\n\t\t\t\tshow: true,\r\n\t\t\t\ttitle: '存成圖片',\r\n\t\t\t\ttype: 'png'\r\n\t\t\t},\r\n\t\t\t// ! dataView still have to fix\r\n\t\t\t// dataView: {\r\n\t\t\t//     show: true,\r\n\t\t\t//     title: 'data',\r\n\t\t\t//     readOnly: false,\r\n\t\t\t//     lang: ['Detail Data Information', 'Close', 'refresh'],\r\n\t\t\t// },\r\n\t\t\trestore: {\r\n\t\t\t\tshow: true,\r\n\t\t\t\ttitle: 'restore'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t// legend: {\r\n\t//     type: 'scroll',\r\n\t//     data: data.category,\r\n\t//     tooltip: {\r\n\t//         show: false,\r\n\t//     },\r\n\t//     orient: 'vertical',\r\n\t//     pageButtonPosition: 'start',\r\n\t//     selectedMode: 'true',\r\n\t//     width: 100,\r\n\t//     height: 140,\r\n\t//     right: 50\r\n\t// },\r\n\tseries: [\r\n\t\t{\r\n\t\t\ttype: 'graph',\r\n\t\t\tlayout: 'force',\r\n\t\t\tcategories: data.category,\r\n\t\t\tnodes: data.nodes,\r\n\t\t\t// modularity: true,\r\n\t\t\tlinks: data.links,\r\n\t\t\titemStyle: {\r\n\t\t\t\tcolor: 'pink' //預設node顏色\r\n\t\t\t},\r\n\t\t\tlabel: {\r\n\t\t\t\tfontFamily: 'sans-serif',\r\n\t\t\t\tshow: true,\r\n\t\t\t\tfontSize: 17,\r\n\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\tformatter: function(param) {\r\n\t\t\t\t\treturn param.name + `(` + param.data.idf + `)`;\r\n\t\t\t\t},\r\n\t\t\t\tcolor: '#1212128F'\r\n\t\t\t},\r\n\t\t\tdraggable: true, //單獨點的移動\r\n\t\t\troam: true, //禁止使用者作放大縮小 只准拖動 true,'move','scale',false\r\n\t\t\tnodeScaleRatio: 0.1,\r\n\t\t\tforce: {\r\n\t\t\t\t// friction: 0.1,\r\n\t\t\t\trepulsion: 300,\r\n\t\t\t\t// todo : fix the jquery slider\r\n\t\t\t\tedgeLength: [ 250, 400 ],\r\n\t\t\t\t// gravity : 1,\r\n\t\t\t\tgravity: 0.01,\r\n\t\t\t\tlayoutAnimation: true //開始的晃動動畫\r\n\t\t\t},\r\n\t\t\tedgeSymbol: [ 'circle', 'arrow' ],\r\n            edgeSymbolSize: [10, arrowSize],\r\n\t\t\temphasis: {\r\n\t\t\t\tfocus: 'adjacency',\r\n\t\t\t\tscale: true,\r\n\t\t\t\tlable: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\tcolor: \"#121212\",\r\n\t\t\t\t\tfontSize: 20\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tautoCurveness: true, //auto calculate each curveness of lines\r\n\t\t\tedgeLabel: {\r\n\t\t\t\tfontFamily: 'sans-serif',\r\n\t\t\t\toverflow: 'break',\r\n\t\t\t\tverticalAlign: 'bottom',\r\n\t\t\t\tshow: true,\r\n\t\t\t\tfontSize: 18,\r\n\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\tformatter: function(param) {\r\n\t\t\t\t\t// param.name = `${param.data.target}>${param.data.source}`;\r\n\t\t\t\t\treturn param.data.name + `(` + param.data.value + `)`;\r\n\t\t\t\t},\r\n\t\t\t\tposition: 'middle',\r\n\t\t\t\talign: 'center',\r\n\t\t\t\tellipsis: '...',\r\n\t\t\t},\r\n\t\t\tlineStyle: {\r\n\t\t\t\topacity: 1\r\n\t\t\t},\r\n\t\t\tzoom: 1,\r\n\t\t}\r\n\t]\r\n};\r\n\r\n/**\r\n * 調整項的初始化設定值\r\n * @type {object}\r\n */\r\nvar jquery_slider_setting = [\r\n\t{\r\n\t\tobject: 'relation_strength',\r\n\t\tmin: 0,\r\n\t\tmax: 100,\r\n\t\tstep: 1,\r\n\t\tvalue: 0,\r\n\t\tdisable: false,\r\n\t\trange: 'min'\r\n\t},\r\n\t{\r\n\t\tobject: 'group_label_distance',\r\n\t\tmin: 0,\r\n\t\tmax: 100,\r\n\t\tstep: 1,\r\n\t\tvalue: 0,\r\n\t\tdisable: false,\r\n\t\trange: 'min'\r\n\t},\r\n\t{\r\n\t\tobject: 'node_distance',\r\n\t\tmin: 1,\r\n\t\tmax: 100,\r\n\t\tstep: 1,\r\n\t\tvalue: option.series[0].force.repulsion / 100,\r\n\t\tdisable: false,\r\n\t\trange: 'min'\r\n\t},\r\n\t{\r\n\t\tobject: 'relation_link_width',\r\n\t\tmin: 0.5,\r\n\t\tmax: 5,\r\n\t\tstep: 0.5,\r\n\t\tvalue: 1,\r\n\t\tdisable: false,\r\n\t\trange: 'min'\r\n\t},\r\n\t{\r\n\t\tobject: 'main_screen_room',\r\n\t\tmin: 0.1, //option.series[0].zoom,\r\n\t\tmax: 2,\r\n\t\tstep: 0.1,\r\n\t\tvalue: option.series[0].zoom,\r\n\t\tdisable: false,\r\n\t\trange: 'min'\r\n\t},\r\n\t{\r\n\t\tobject: 'relation_font_size',\r\n\t\tmin: 5,\r\n\t\tmax: 100,\r\n\t\tstep: 1,\r\n\t\tvalue: option.series[0].edgeLabel.fontSize,\r\n\t\tdisable: false,\r\n\t\trange: 'min'\r\n\t},\r\n\t{\r\n\t\tobject: 'subject_font_size',\r\n\t\tmin: 5,\r\n\t\tmax: 100,\r\n\t\tstep: 1,\r\n\t\tvalue: option.series[0].label.fontSize,\r\n\t\tdisable: false,\r\n\t\trange: 'min'\r\n\t},\r\n\t{\r\n\t\tobject: 'node_size',\r\n\t\tmin: 0.2,\r\n\t\tmax: 5,\r\n\t\tstep: 0.2,\r\n\t\tvalue: 1,\r\n\t\tdisable: false,\r\n\t\trange: 'min'\r\n\t},\r\n\t{\r\n\t\tobject: 'common_show_value',\r\n\t\tmin: min_common_show_value - 1,\r\n\t\tmax: max_common_show_value,\r\n\t\tstep: 1,\r\n\t\tvalue: min_common_show_value,\r\n\t\tdisable: false,\r\n\t\trange: 'min'\r\n\t},\r\n\t{\r\n\t\tobject: 'word_strength', //idf詞頻強度\r\n\t\tmin: min_idf - 1,\r\n\t\tmax: max_idf,\r\n\t\tstep: 1,\r\n\t\tvalue: min_idf,\r\n\t\tdisable: false,\r\n\t\trange: 'min'\r\n\t},\r\n\t{\r\n\t\tobject: 'relation_distance',\r\n\t\tmin: 50,\r\n\t\tmax: 1000,\r\n\t\tstep: 25,\r\n\t\tvalues: [ option.series[0].force.edgeLength[0] / 5, option.series[0].force.edgeLength[1] / 5 ],\r\n\t\tdisable: false,\r\n\t\trange: true\r\n\t}\r\n\t// {\r\n\t// \tobject: 'arrowSize', //箭頭大小\r\n\t// \tmin: 1,\r\n\t// \tmax: 30,\r\n\t// \tstep: 1,\r\n\t// \tvalue: option.series[0].edgeSymbolSize,\r\n\t// \tdisable: true,\r\n\t// \trange: 'min'\r\n\t// }\r\n];\r\n\n\n//# sourceURL=webpack://ascdc-sna/./js/chartSetting.js?");

/***/ }),

/***/ "./js/colorPanelSetting.js":
/*!*********************************!*\
  !*** ./js/colorPanelSetting.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"colorPanelInit\": () => (/* binding */ colorPanelInit)\n/* harmony export */ });\n/* harmony import */ var _mainSetting_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mainSetting.js */ \"./js/mainSetting.js\");\n/* harmony import */ var _simonwep_pickr_dist_themes_nano_min_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @simonwep/pickr/dist/themes/nano.min.css */ \"./node_modules/@simonwep/pickr/dist/themes/nano.min.css\");\n/* harmony import */ var _simonwep_pickr__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @simonwep/pickr */ \"./node_modules/@simonwep/pickr/dist/pickr.min.js\");\n/* harmony import */ var _simonwep_pickr__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_simonwep_pickr__WEBPACK_IMPORTED_MODULE_2__);\n/**\r\n * @module colorPanelSetting\r\n * @description 調色盤模組\r\n * @author Wei-Jie Li\r\n * @createDate 2021-01-21\r\n * @see  github {@link https://github.com/Simonwep/pickr} \r\n */\r\n\r\n      // 'nano' theme\r\n\r\nlet pickr = null;\r\n/**\r\n * when function call by listGenerator it will init the colorpanel\r\n * @param {string} name 物件名稱\r\n * @param {string} initColor 原本的顏色\r\n * @param {string} id node or line\r\n * @returns lineColorChanger function to change the color\r\n */\r\nfunction colorPanelInit(name, initColor, id){\r\n    // Delete previous instance\r\n    if (pickr) {\r\n        pickr.destroyAndRemove();\r\n    }\r\n    // Create fresh instance\r\n    pickr = new (_simonwep_pickr__WEBPACK_IMPORTED_MODULE_2___default())(Object.assign({\r\n        el: '.color-lump',\r\n        theme: 'nano', // or 'monolith', or 'nano'\r\n        default: initColor,\r\n        defaultRepresentation: 'HEX',\r\n        useAsButton: true ,\r\n        autoReposition: true,\r\n        position: 'bottom-middle',\r\n        swatches: [\r\n            'rgba(244, 67, 54, 1)',\r\n            'rgba(233, 30, 99, 0.95)',\r\n            'rgba(156, 39, 176, 0.9)',\r\n            'rgba(103, 58, 183, 0.85)',\r\n            'rgba(63, 81, 181, 0.8)',\r\n            'rgba(33, 150, 243, 0.75)',\r\n            'rgba(3, 169, 244, 0.7)'\r\n        ],\r\n    \r\n        components: {\r\n            // Main components\r\n            preview: true,\r\n            opacity: true,\r\n            hue: true,\r\n    \r\n            // Input / output Options\r\n            interaction: {\r\n                hex: true,\r\n                rgba: true,\r\n                hsla: false,\r\n                hsva: false,\r\n                cmyk: false,\r\n                input: true,\r\n                clear: false,\r\n                save: true\r\n            }\r\n        }\r\n    }));\r\n    pickr.show();\r\n    // Set events\r\n    pickr.on('init', instance => {\r\n        // console.log('Event: \"init\"', instance);\r\n    }).on('hide', instance => {\r\n        // console.log('Event: \"hide\"', instance);\r\n    }).on('show', (color, instance) => {\r\n        console.log('Event: \"show\"', color, instance);\r\n    }).on('save', (color, instance) => {\r\n        console.log(color.toHEXA().toString());\r\n        console.log('Event: \"save\"', color, instance);\r\n        (0,_mainSetting_js__WEBPACK_IMPORTED_MODULE_0__.lineColorChanger)(name, color.toHEXA().toString(), id);\r\n        pickr.hide();\r\n    }).on('change', (color, source, instance) => {\r\n        // console.log('Event: \"change\"', color, source, instance);\r\n    }).on('changestop', (source, instance) => {\r\n        console.log('Event: \"changestop\"', source, instance);\r\n    }).on('cancel', instance => {\r\n        console.log('Event: \"cancel\"', instance);\r\n    }).on('swatchselect', (color, instance) => {\r\n        console.log('Event: \"swatchselect\"', color, instance);\r\n    });\r\n};\n\n//# sourceURL=webpack://ascdc-sna/./js/colorPanelSetting.js?");

/***/ }),

/***/ "./js/dataFormater.js":
/*!****************************!*\
  !*** ./js/dataFormater.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dataFormat\": () => (/* binding */ dataFormat),\n/* harmony export */   \"allValues\": () => (/* binding */ allValues),\n/* harmony export */   \"allIdf\": () => (/* binding */ allIdf)\n/* harmony export */ });\n/* harmony import */ var _assignColor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assignColor */ \"./js/assignColor.js\");\n/**\r\n * @module dataFormater\r\n * @description 資料格式轉換模組\r\n * @author Wei-Jie Li\r\n * @createDate 2021-03-21\r\n * @exports dataFormat\r\n */\r\n\r\n/**\r\n * 產生顏色的次數\r\n */\r\nvar colorCount = 0;\r\n/**\r\n * 線的顏色資訊\r\n */\r\nvar lineColors = {};\r\n/**\r\n * 整理完成後要回傳的資料，有節點和線段資訊還有全部的\r\n */\r\nvar buf = {\r\n\t//暫存資料用\r\n\tnodes: [],\r\n\tall_nodes: [],\r\n\tlinks: [],\r\n\tcategory: []\r\n};\r\nvar allCookie = parseCookie();\r\nvar allValues = [];\r\nvar allIdf = [];\r\n// var userColors = [\"#cc0000\", \"#00cc00\", \"#0000cc\"];\r\n// var userColors = [];\r\nvar id = 0;\r\n/**\r\n * 隨機顏色編號儲存區\r\n */\r\nvar HSL = [];\r\n/**\r\n * 將節點加入資料集陣列\r\n * @param {object} data_element - 物件json檔\r\n * @param {string} name - 別點名字\r\n * @param {string} bType - 形狀類型\r\n * @param {string} bColor - 邊界顏色\r\n * @param {number} bWidth - 邊界寬度\r\n */\r\nfunction appendNode(data_element, name, bType = 'solid', bColor = 'gray', bWidth = 0) {\r\n\tif (data_element.idf === 0) {\r\n\t\tvar lenghValue = 1;\r\n\t} else lenghValue = data_element.idf;\r\n\tif (userColors.hasOwnProperty(data_element.gp)) {\r\n\t\tvar nodeColor = userColors[data_element.gp];\r\n\t} else {\r\n\t\tif(getCookieByName(kg2_element.type[0]) != null){\r\n\t\t\tvar nodeColor = getCookieByName(kg2_element.type[0]); \r\n\t\t}else{\r\n\t\t\tvar nodeColor = getColor(); \r\n\t\t}\r\n\t\tuserColors[data_element.gp] = nodeColor;\r\n\t}\r\n\tbuf.nodes.push({\r\n\t\tname: name,\r\n\t\tgp: data_element.gp,\r\n\t\tidf: data_element.idf,\r\n\t\tsymbolSize: 30 * Math.sqrt(Math.sqrt(lenghValue, 3) / 0.8),\r\n\t\toriginalSymbolSize: 30 * Math.sqrt(Math.sqrt(lenghValue, 3) / 0.8),\r\n\t\tvalue: data_element.idf, //data_element.idf,\r\n\t\tsymbol: 'circle',\r\n\t\titemStyle: {\r\n\t\t\topacity: 0.9, //work\r\n\t\t\tborderType: bType, //'solid',\r\n\t\t\tborderColor: bColor, //'orange',\r\n\t\t\tborderWidth: bWidth, //css_ele.borderWidth,  //0,\r\n\t\t\tcolor: nodeColor\r\n\t\t}\r\n\t});\r\n}\r\n/**\r\n * 以資料的最大值設定平方數\r\n * @param {number} largest - 全部資料的最大數值 \r\n * @returns {number} 平方數\r\n */\r\nfunction setSquare(largest){\r\n\tif (largest > 4096) var square = 4;\r\n\telse if (largest > 256) var square = 3;\r\n\telse if (largest > 16) var square = 2;\r\n\telse var square = 1;\r\n\treturn square;\r\n}\r\n/**\r\n * 將jason資料轉換成echarts的資料格式\r\n * @param {json} data - json資料 \r\n * @returns {object} 轉換後的資料\r\n */\r\nfunction dataFormat(data) {\r\n\tconst set = new Set(); //為了之後去除重複\r\n\tdata.forEach((data_element) => {\r\n\t\tallIdf.push(data_element.idf);\r\n\t\tif (data_element.idf === 0) appendNode(data_element, data_element.k1, 'solid', '#ffb61e', 3);\r\n\t\telse appendNode(data_element, data_element.k1);\r\n\t\tvar largest = data_element.kg2[0].v;\r\n\t\tdata_element.kg2.forEach((kg2Element) => {\r\n\t\t\tif (kg2Element.v > largest) largest = kg2Element.v;\r\n\t\t});\r\n\t\tvar square = setSquare(largest);\r\n\t\t// foreach kg2 array\r\n\t\tdata_element.kg2.forEach((kg2_element) => {\r\n\t\t\t// random a new color without duplicate, this color will according with category color to pair link color\r\n\t\t\tif (lineColors.hasOwnProperty(kg2_element.type[0])) {\r\n\t\t\t\tvar lineColor = lineColors[kg2_element.type[0]].color;\r\n\t\t\t} else {\r\n\t\t\t\tif(getCookieByName(kg2_element.type[0]) != null){\r\n\t\t\t\t\tvar lineColor = getCookieByName(kg2_element.type[0]); \r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar lineColor = getColor(); \r\n\t\t\t\t}\r\n\t\t\t\tlineColors[kg2_element.type[0]] = {color:lineColor, group:[]};\r\n\t\t\t\tfor (let index = 0; index < userColors.length; index++) {\r\n\t\t\t\t\tlineColors[kg2_element.type[0]].group.push(0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(kg2_element.gp !== data_element.gp){\r\n\t\t\t\tlineColors[kg2_element.type[0]].group[kg2_element.gp]++;\r\n\t\t\t\tlineColors[kg2_element.type[0]].group[data_element.gp]++;\r\n\t\t\t}\r\n\t\t\tif (dataType === 1) {\r\n\t\t\t\tlineColor = '#1A75CF';\r\n\t\t\t}\r\n\t\t\tallIdf.push(kg2_element.idf);\r\n\t\t\t// first : push k2 into nodes array, ignore duplicate problem e.g.AB互為兄弟時 會產生重複兩個節點\r\n\t\t\tif (kg2_element.idf == 0) appendNode(kg2_element, kg2_element.k2, 'solid', '#ffb61e', 3);\r\n\t\t\telse appendNode(kg2_element, kg2_element.k2);\r\n\t\t\t// second : push all category into buf.category array, ignore duplicate problem\r\n\t\t\tallValues.push(kg2_element.v);\r\n\t\t\tif (kg2_element.v == 0) {\r\n\t\t\t\tvar dash = 'dashed';\r\n\t\t\t\tvar ttype = dash;\r\n\t\t\t} else {\r\n\t\t\t\tvar linksolid = 'solid';\r\n\t\t\t\tvar ttype = linksolid;\r\n\t\t\t}\r\n\t\t\tif (kg2_element.type[0] == '未定義' || kg2_element.type[0] == '') {\r\n\t\t\t\tif (dataType !== 1) {\r\n\t\t\t\t\tkg2_element.type[0] = '未定義';\r\n\t\t\t\t\tlineColor = 'black';\r\n\t\t\t\t\tvar shadowBlur = 10;\r\n\t\t\t\t}\r\n\t\t\t} else var shadowBlur = 0;\r\n\t\t\tif (kg2_element.v === 0) {\r\n\t\t\t\tvar lenghValue = 1;\r\n\t\t\t} else if (dataType === 2) {\r\n\t\t\t\tvar lenghValue = 5;\r\n\t\t\t} else lenghValue = kg2_element.v;\r\n\t\t\tbuf.category.push({\r\n\t\t\t\tid: id++,\r\n\t\t\t\tname: kg2_element.type[0],\r\n\t\t\t\ttarget: data_element.k1,\r\n\t\t\t\tsource: kg2_element.k2,\r\n\t\t\t\tvalue: kg2_element.v,\r\n\t\t\t\tshow: true, //是否要顯示於畫面上\r\n\t\t\t\tbilateral: 'false',\r\n\t\t\t\tforce: {\r\n\t\t\t\t\tedgeLength: Math.sqrt(lenghValue, square) * 10000000\r\n\t\t\t\t},\r\n\t\t\t\tlineStyle: {\r\n\t\t\t\t\topacity: 1, //work\r\n\t\t\t\t\tcolor: lineColor,\r\n\t\t\t\t\t// curveness: 0.4, //原1 / Math.sqrt(kg2_element.v, 2) //曲度\r\n\t\t\t\t\twidth: Math.sqrt(lenghValue, square),\r\n\t\t\t\t\toriginalWidth: Math.sqrt(lenghValue, square),\r\n\t\t\t\t\ttype: ttype, //kg2_element.css[0].linetype  //'dashed'\r\n\t\t\t\t\tshadowColor: 'orange',\r\n\t\t\t\t\tshadowBlur: shadowBlur\r\n\t\t\t\t},\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\tcolor: lineColor\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// buf.category has the every property that links object need, etc : source, target, value, lineStyle\r\n\t\t\tbuf.links = buf.category;\r\n\t\t});\r\n\t});\r\n\tbuf.category.sort(function(a, b) {\r\n\t\tif (a.id < b.id) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (a.id > b.id) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t});\r\n\t// remove duplicate item in buf.nodes array\r\n\tbuf.nodes = buf.nodes.filter((item) => (!set.has(item.name) ? set.add(item.name) : false));\r\n\tset.clear();\r\n\r\n\t// push all node into all_nodes to determine keyword search\r\n\tbuf.nodes.forEach((node) => {\r\n\t\tbuf.all_nodes.push(node.name);\r\n\t});\r\n\r\n\t// sort buf.category\r\n\tbuf.category = buf.category.sort((a, b) => {\r\n\t\treturn a.name > b.name ? 1 : -1;\r\n\t});\r\n\tbuf.category.forEach(category =>{\r\n\t\tbuf.category.forEach(item =>{\r\n\t\t\tif(item.target === category.source && item.source === category.target){\r\n\t\t\t\tif(item.name === category.name && category.bilateral !== 'delete'){\r\n\t\t\t\t\tcategory.bilateral = 'true';\r\n\t\t\t\t\titem.bilateral  = 'delete';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t});\r\n\t// var colorList = Object.keys(lineColors);\r\n\t// console.log(lineColors);\r\n\t// lineColors = SetLineColor(colorList, lineColors, userColors);\r\n\t// buf.category.forEach(category =>{\r\n\t// \tcategory.lineStyle.color = lineColors[category.name].color;\r\n\t// \tcategory.label.color = lineColors[category.name].color;\r\n\t// })\r\n\treturn buf;\r\n}\r\n// set each data color a random hex color\r\n// function calculate_color() {\r\n//     return '#' + (Math.random() * 0xFFFFFF << 0).toString(16);//<<=左移賦值\r\n// }\r\n/**\r\n * 隨機回傳一個不重複的顏色\r\n * @see 參考資料{@link https://segmentfault.com/q/1010000010807637/a-1020000010809153 }\r\n * @returns {string} 所選的HEX顏色代碼\r\n */\r\nfunction getRandomColor() {\r\n\tvar hslLength = HSL.length;\r\n\tvar ret = [];\r\n\tret[0] = Math.floor(Math.random() * 360);\r\n\tif (HSL.length > 36) {\r\n\t\tret[1] = 80;\r\n\t\tret[2] = 70;\r\n\t} else {\r\n\t\tret[1] = 70;\r\n\t\tret[2] = 50;\r\n\t}\r\n\r\n\tfor (var i = 0; i < hslLength; i++) {\r\n\t\t// 色相差異調整\r\n\t\tif (i > 0 && Math.abs(ret[0] - HSL[i][0]) < 8) {\r\n\t\t\tret[0] = Math.floor(Math.random() * 360);\r\n\t\t\t// ret[1]= Math.floor(Math.random() * 100);\r\n\t\t\t// ret[2]= Math.floor(Math.random() * 100);\r\n\t\t\ti = 0;\r\n\t\t}\r\n\t}\r\n\t// ret[1] = 70 + (ret[1] * 0.3); // [0.7 - 0.9] 排除过灰颜色\r\n\t// ret[2] = 40 + (ret[2] * 0.4); // [0.4 - 0.8] 排除过亮过暗色\r\n\r\n\t// 数据转化到小数点后两位\r\n\tret = ret.map(function(item) {\r\n\t\treturn parseFloat(item.toFixed(2));\r\n\t});\r\n\r\n\tHSL.push(ret);\r\n\t// console.log(ret);\r\n\tvar color = hslToHex(ret[0], ret[1], ret[2]);\r\n\t// console.log(color);\r\n\treturn color;\r\n}\r\n/**\r\n * 以6個顏色red,yellow,green,cyan,blue,magenta為基礎指定顏色，\r\n * @returns {string} 所選的HEX顏色代碼\r\n */\r\n function getColor() {\r\n\tvar hsl = [0,60,120,180,240,300,30,90,150,270,330,15,45,75,105,135,165,195,225,255,285,315,345]\r\n\tvar ret = [];\r\n\tif (colorCount < 24) {\r\n\t\tret[0] = hsl[colorCount % 24]\r\n\t\tret[1] = 70;\r\n\t\tret[2] = 80;\r\n\t} else if(colorCount < 48) {\r\n\t\tret[0] = hsl[colorCount % 24]\r\n\t\tret[1] = 70;\r\n\t\tret[2] = 50;\r\n\t}else if(colorCount < 72){\r\n\t\tret[0] = hsl[colorCount % 24]\r\n\t\tret[1] = 60;\r\n\t\tret[2] = 60;\r\n\t}else{\r\n\t\treturn getRandomColor()\r\n\t}\r\n\tcolorCount++;\r\n\tvar color = hslToHex(ret[0], ret[1], ret[2]);\r\n\treturn color;\r\n}\r\n/**\r\n *將HSL顏色格式代碼轉成HEX格式代碼 \r\n * @param {number} h 色相\r\n * @param {number} s 飽和度\r\n * @param {number} l 亮度\r\n * @returns {string} HEX color code\r\n * @see 參考資料 {@link https://stackoverflow.com/questions/36721830/convert-hsl-to-rgb-and-hex}\r\n * @see 參考資料 {@link https://www.ginifab.com.tw/tools/colors/rgb_to_hsv_hsl.html}\r\n */\r\nfunction hslToHex(h, s, l) {\r\n\th /= 360;\r\n\ts /= 100;\r\n\tl /= 100;\r\n\tlet r, g, b;\r\n\tif (s === 0) {\r\n\t\tr = g = b = l; // achromatic\r\n\t} else {\r\n\t\tconst hue2rgb = (p, q, t) => {\r\n\t\t\tif (t < 0) t += 1;\r\n\t\t\tif (t > 1) t -= 1;\r\n\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\r\n\t\t\tif (t < 1 / 2) return q;\r\n\t\t\tif (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n\t\t\treturn p;\r\n\t\t};\r\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n\t\tconst p = 2 * l - q;\r\n\t\tr = hue2rgb(p, q, h + 1 / 3);\r\n\t\tg = hue2rgb(p, q, h);\r\n\t\tb = hue2rgb(p, q, h - 1 / 3);\r\n\t}\r\n\tconst toHex = (x) => {\r\n\t\tconst hex = Math.round(x * 255).toString(16);\r\n\t\treturn hex.length === 1 ? '0' + hex : hex;\r\n\t};\r\n\treturn `#${toHex(r)}${toHex(g)}${toHex(b)}`;\r\n}\r\nfunction parseCookie() {\r\n    var cookieObj = {};\r\n    var cookieAry = document.cookie.split(';');\r\n    var cookie;\r\n    \r\n    for (var i=0, l=cookieAry.length; i<l; ++i) {\r\n        cookie = cookieAry[i].trim();\r\n        cookie = cookie.split('=');\r\n        cookieObj[cookie[0]] = cookie[1];\r\n    }\r\n    \r\n    return cookieObj;\r\n}\r\nfunction getCookieByName(name) {\r\n    var value = allCookie[name];\r\n    if (value) {\r\n        value = decodeURIComponent(value);\r\n    }else{\r\n\t\tvalue = null;\r\n\t}\r\n\r\n    return value;\r\n}\r\n\r\n\n\n//# sourceURL=webpack://ascdc-sna/./js/dataFormater.js?");

/***/ }),

/***/ "./js/keywordCleaner.js":
/*!******************************!*\
  !*** ./js/keywordCleaner.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"keywords\": () => (/* binding */ keywords),\n/* harmony export */   \"keywordCleanUp\": () => (/* binding */ keywordCleanUp),\n/* harmony export */   \"keywordItemAppend\": () => (/* binding */ keywordItemAppend)\n/* harmony export */ });\n/* harmony import */ var _mainSetting_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mainSetting.js */ \"./js/mainSetting.js\");\n/* harmony import */ var _chartSetting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chartSetting */ \"./js/chartSetting.js\");\n/**\r\n * @module keywordCleaner\r\n * @description 搜尋項目整理模組\r\n * @author Wei-Jie Li\r\n * @createDate 2021-03-21\r\n */\r\n\r\n\r\n/**\r\n * 紀錄前面多少次搜尋是與這次搜尋有關連\r\n * @type {number}\r\n */\r\nvar keywordCount = 0;\r\n/**\r\n * 紀錄與這一次搜尋有關連的搜尋的位置\r\n * @type {number}\r\n */\r\nvar keywordPoint = 0;\r\n/**\r\n * @desc 儲存整理後的搜尋項目\r\n * @var {array}\r\n */\r\nvar keywordCollection = [];\r\n/**\r\n * 不要出現的關係\r\n * @type {array}\r\n */\r\nvar lineStack = [];\r\n/**\r\n * 不要出現的人物\r\n * @type {array}\r\n */\r\nvar notKeyword = [];\r\n/**\r\n * 搜尋的關鍵字\r\n * @type {array}\r\n */\r\nvar rawKeywords = [];\r\n/**\r\n * 所有查詢的節點\r\n * @type {Array}\r\n */\r\nvar keywords = [];\r\n/**\r\n * 搜尋關鍵字整理控制式\r\n * @returns {searchTarget} - 整理後的搜尋項目\r\n */\r\nfunction keywordCleanUp(){\r\n\tkeywordPoint = 0;\r\n\tkeywordCount = 0;\r\n\tkeywordCollection = [];\r\n\tlineStack = [];\r\n\tnotKeyword = [];\r\n\trawKeywords.forEach((item) => {\r\n\t\tif (item.type === 'not') {\r\n\t\t\titem.keywordNot();\r\n\t\t} else if (item.model === 'line') {\r\n\t\t\titem.lineAppend();\r\n\t\t} else {\r\n\t\t\titem.keywordCleanUp();\r\n\t\t}\r\n\t});\r\n\tkeywords = [];\r\n\tfor(let item of keywordCollection){\r\n\t\tfor (const node of item.nodeName) {\r\n\t\t  keywords.push(node);\r\n\t\t}\r\n\t}\r\n\tif(lineStack.length !== 0 || notKeyword !== 0)\r\n        lineCtrl(lineStack, notKeyword);\r\n\treturn keywordCollection;\r\n}\r\nclass searchTarget{\r\n\t/**\r\n\t * @constructor searchTarget\r\n\t * @description 用來儲存整理後的搜尋項目的專用格式\r\n\t * @param {array} nodeName - 搜尋的節點\r\n\t * @param {array} lineName  - 線段限制\r\n\t * @param {array} lineName2  - 保留\r\n\t */\r\n\tconstructor(nodeName, lineName, lineName2) {\r\n\t\tthis.nodeName = nodeName;\r\n\t\tthis.lineName = lineName;\r\n\t\tthis.lineName2 = lineName2;\r\n\t}\r\n}\r\nclass searchWord {\r\n\t/**\r\n\t * @constructs searchWord\r\n\t * @description 專門給搜尋的資料儲存的格式\r\n\t * @param {string} type 看是and or not 哪一種\r\n\t * @param {string} name  搜尋的內容\r\n\t * @param {string} model  看是點或是線\r\n\t */\r\n\tconstructor(type, name, model) {\r\n\t\tthis.name = name; //搜尋的內容\r\n\t\tthis.type = type; //and or not\r\n\t\tthis.model = model; //看是點或是線\r\n\t}\r\n\t/**\r\n\t * @memberof searchWord\r\n \t* @method keywordCleanUp\r\n \t* @description 組合並整理使用者傳入的節點內容整理成{@link searchTarget}格式的資料並存入{@link keywordCollection}的nodeName\r\n \t*/\r\n\tkeywordCleanUp() {\r\n\t\tlet keyword_search_name_s = [];\r\n\t\tif (this.type === 'and') {\r\n\t\t\tif (this.name.includes('|')) {\r\n\t\t\t\t//先切or\r\n\t\t\t\tkeyword_search_name_s = this.name.split('|');\r\n\t\t\t\tif (keywordCount === 0) {\r\n\t\t\t\t\t//第一次搜尋\r\n\t\t\t\t\tfor (var i = 0; i < keyword_search_name_s.length; i++)\r\n\t\t\t\t\t\tkeywordCollection.push(new searchTarget([], [], [])); //append足夠的空間來存值\r\n\t\t\t\t\tkeywordCount = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var x = 1; x < keyword_search_name_s.length; x++) {\r\n\t\t\t\t\t\tfor (var i = keywordPoint; i < keywordPoint + keywordCount; i++) {\r\n\t\t\t\t\t\t\t//複製前面的值來append\r\n\t\t\t\t\t\t\tkeywordCollection.push(new searchTarget(keywordCollection[i].nodeName, keywordCollection[i].lineName, keywordCollection[i].lineName2));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// console.log(keywordCollection);\r\n\t\t\t\tkeyword_search_name_s.forEach(function(item, index, array) {\r\n\t\t\t\t\t//處理完or接著看有沒有and\r\n\t\t\t\t\titem = item.trim();\r\n\t\t\t\t\tif (item.includes('&'))\r\n\t\t\t\t\t\titem = this.name.split('&'); // 遇到and就直接切成陣列\r\n\t\t\t\t\telse item = Array(item); //沒有也包成陣列\r\n\t\t\t\t\tfor (\r\n\t\t\t\t\t\t//從i開始複製\r\n\t\t\t\t\t\tvar i = keywordPoint + index * keywordCount;\r\n\t\t\t\t\t\ti < keywordPoint + (index + 1) * keywordCount;\r\n\t\t\t\t\t\ti++\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t//將整理好的資料存這陣列裡\r\n\t\t\t\t\t\tfor (var z = 0, keywordLen = item.length; z < keywordLen; z++) {\r\n\t\t\t\t\t\t\tkeywordCollection[i].nodeName.push(item[z]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tkeywordCount *= keyword_search_name_s.length;\r\n\t\t\t\t//要連動的數量是現在的數量*輸入進來的資料\r\n\t\t\t} else {\r\n\t\t\t\tif (this.name.includes('&'))\r\n\t\t\t\t\tkeyword_search_name_s = this.name.split('&'); //將and切開\r\n\t\t\t\telse keyword_search_name_s = Array(this.name);\r\n\t\t\t\tif (keywordCount === 0) {\r\n\t\t\t\t\t//如果先前沒有值就加入空物件\r\n\t\t\t\t\tkeywordCollection.push(new searchTarget([], [], []));\r\n\t\t\t\t\tkeywordCount++;\r\n\t\t\t\t}\r\n\t\t\t\t//push項目從keywordPoint 到 keywordPoint+keywordCount\r\n\t\t\t\tfor (var i = keywordPoint; i < keywordPoint + keywordCount; i++) {\r\n\t\t\t\t\tfor (var z = 0, keywordLen = keyword_search_name_s.length; z < keywordLen; z++) {\r\n\t\t\t\t\t\tkeywordCollection[i].nodeName.push(keyword_search_name_s[z]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//傳進來的是or\r\n\t\t\tkeywordPoint = keywordCollection.length - 1;\r\n\t\t\tkeywordCount = 0;\r\n\t\t\tif (this.name.includes('|')) {\r\n\t\t\t\tkeyword_search_name_s = this.name.split('|');\r\n\t\t\t\tkeywordCount += keyword_search_name_s.length;\r\n\t\t\t\tkeyword_search_name_s.forEach(function(item, index, array) {\r\n\t\t\t\t\tif (item.includes('&')) item = this.name.split('&');\r\n\t\t\t\t\telse item = Array(item);\r\n\t\t\t\t\tkeywordCollection.push(new searchTarget(item, [], []));\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tif (this.name.includes('&')) keyword_search_name_s = this.name.split('&');\r\n\t\t\t\telse keyword_search_name_s = Array(this.name);\r\n\t\t\t\tkeywordCount++;\r\n\t\t\t\tkeywordCollection.push(new searchTarget(keyword_search_name_s, [], []));\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(keywordCollection);\r\n\t\tconsole.log(keywordCount);\r\n\t\tconsole.log(keywordPoint);\r\n\t}\r\n\t/**\r\n\t * @memberof searchWord\r\n \t * @method lineAppend\r\n\t * @description 依使用者輸入的線段項目進行處理成{@link searchTarget}格式的資料並存入{@link keywordCollection}的lineName\r\n \t*/\r\n\tlineAppend() {\r\n\t\tlet lineName = this.name;\r\n\t\tif (keywordCollection.length === 0 || this.type === 'or') {\r\n\t\t\tkeywordCount = 1;\r\n\t\t\tif (lineName.includes('|')) {\r\n\t\t\t\tlineName = lineName.split('|');\r\n\t\t\t\tlet lenName = [];\r\n\t\t\t\tlineName.forEach((item) => {\r\n\t\t\t\t\tif (item.includes('&')) item = item.split('&');\r\n\t\t\t\t\telse item = new Array(item);\r\n\t\t\t\t\tlenName.push(item);\r\n\t\t\t\t});\r\n\t\t\t\tlineName = lenName;\r\n\t\t\t} else {\r\n\t\t\t\tif (lineName.includes('&')) lineName = lineName.split('&');\r\n\t\t\t\telse lineName = Array(lineName);\r\n\t\t\t\tlineName = [ lineName ];\r\n\t\t\t}\r\n\t\t\tkeywordCollection.push(new searchTarget([], lineName, []));\r\n\t\t\tkeywordPoint = keywordCollection.length - 1;\r\n\t\t} else {\r\n\t\t\tvar len = keywordCollection[keywordPoint].lineName.length;\r\n\t\t\tif (lineName.includes('|')) {\r\n\t\t\t\tlineName = lineName.split('|');\r\n\t\t\t\tfor (let i = 1; i < lineName.length; i++) {\r\n\t\t\t\t\tfor (let y = 0; y < len; y++) {\r\n\t\t\t\t\t\tkeywordCollection[keywordPoint].lineName.push(\r\n\t\t\t\t\t\t\tJSON.parse(JSON.stringify(keywordCollection[keywordPoint].lineName[y]))\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (let index = 0; index < lineName.length; index++) {\r\n\t\t\t\t\tif (lineName[index].includes('&')) {\r\n\t\t\t\t\t\tlineName[index] = lineName[index].split('&');\r\n\t\t\t\t\t\tfor (i = len * index; i < len * (index + 1); i++)\r\n\t\t\t\t\t\t\tlineName[index].forEach((item) => {\r\n\t\t\t\t\t\t\t\tkeywordCollection[keywordPoint].lineName[i].push(item);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (len == 0) {\r\n\t\t\t\t\t\t\tlineName[index] = [ lineName[index] ];\r\n\t\t\t\t\t\t\tkeywordCollection[keywordPoint].lineName.push(lineName[index]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfor (i = len * index; i < len * (index + 1); i++)\r\n\t\t\t\t\t\t\t\tkeywordCollection[keywordPoint].lineName[i].push(lineName[index]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (lineName.includes('&')) {\r\n\t\t\t\t\tlineName = lineName.split('&');\r\n\t\t\t\t\tif (len == 0) keywordCollection[keywordPoint].lineName.push([]);\r\n\t\t\t\t\tkeywordCollection[keywordPoint].lineName.forEach((item) => {\r\n\t\t\t\t\t\tlineName.forEach((items) => {\r\n\t\t\t\t\t\t\titem.push(items);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (len == 0) {\r\n\t\t\t\t\t\tlineName = [ lineName ];\r\n\t\t\t\t\t\tkeywordCollection[keywordPoint].lineName.push(lineName);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor (let i = 0; i < len; i++) keywordCollection[keywordPoint].lineName[i].push(lineName);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i = keywordPoint + 1; i < keywordPoint + keywordCount; i++) {\r\n\t\t\t\tkeywordCollection[i].lineName = JSON.parse(JSON.stringify(keywordCollection[keywordPoint].lineName));\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(keywordCollection[keywordPoint].lineName);\r\n\t}\r\n\t/**\r\n\t * @memberof searchWord\r\n \t * @method keywordNot\r\n\t * @description 可以將使用者篩選掉的項目加入{@link notKeyword},{@link lineStack}\r\n \t*/\r\n\tkeywordNot(){\r\n\t\tif (this.model === 'line') {\r\n\t\t\tlet keyword_search_name_s = [];\r\n\t\t\tif (this.name.includes('|')) {\r\n\t\t\t\tkeyword_search_name_s = this.name.split('|');\r\n\t\t\t\tkeyword_search_name_s.forEach((item) => {\r\n\t\t\t\tif (item.includes('&')) item = item.split('&');\r\n\t\t\t\tlineStack.push(item);\r\n\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if (this.name.includes('&')) lineStack.push(this.name.split('&'));\r\n\t\t\telse lineStack.push(this.name);\r\n\t\t} else {\r\n\t\t\tif (this.name.includes('|')) notKeyword.push(this.name.split('|'));\r\n\t\t\telse notKeyword.push(this.name);\r\n\t\t}\r\n\t}\r\n}\r\n  /**\r\n   * 將搜尋項目加入下方的搜尋欄\r\n   * @param {string} keywordSearchName 搜尋的項目\r\n   * @param {string} keywordSearchType 搜尋的類型是and or not\r\n   * @param {string} keywordModel\t搜尋的是點或是線\r\n   */\r\n  function keywordItemAppend(keywordSearchName, keywordSearchType, keywordModel) {\r\n\tif (rawKeywords.includes(keywordSearchName)) {\r\n\t\talert(`Error :  same keyword can not search more than twice`);\r\n\t\t$('#keyword_search_field').val('');\r\n\t\treturn 1;\r\n\t}\r\n\trawKeywords.push(new searchWord(keywordSearchType, keywordSearchName, keywordModel));\r\n\tif (keywordModel === 'line') keywordModel = '線';\r\n\telse keywordModel = '點';\r\n\tlet kwd_en = keywordSearchName.replace('&', ' and ');\r\n\tkwd_en = kwd_en.replace('|', ' or ');\r\n\t$('#keyword_search_field').val(''); // clear the keyword search field\r\n\tif (rawKeywords.length === 1)\r\n\t\t$('.keyword').append(`<div class=\"keyword_item\" data-item=\"${keywordSearchName}\">\r\n\t\t<p class=\"keyword_name\" >${keywordModel}:<font color=\"red\">${kwd_en}</font></p>\r\n\t\t<button class=\"keyword_delete\" data-name='${keywordSearchName}'>刪除</button>\r\n\t</div>`);\r\n\telse\r\n\t\t$('.keyword').append(`<div class=\"keyword_item\" data-item=\"${keywordSearchName}\">\r\n\t\t<p class=\"keyword_name\" >${keywordSearchType} ${keywordModel}:<font color=\"red\">${kwd_en}</font></p>\r\n\t\t<button class=\"keyword_delete\" data-name='${keywordSearchName}'>刪除</button>\r\n\t</div>`);\r\n\tkeyword_item_delete();\r\n\t$('.keyword').scrollTop(function() {\r\n\t\treturn this.scrollHeight;\r\n\t});\r\n\treturn 0\r\n}\r\n// bind the keyword delete button click event\r\n/**\r\n * 整理要刪除內容，並進行刪除，然後交給{@link keywordFliter}重跑圖\r\n */\r\nfunction keyword_item_delete() {\r\n\t// avoid to bind the click(delete) event twice, have to unbind the first click event first.\r\n\t$('.keyword_delete').off('click').click((e) => {\r\n\t\tvar name = e.currentTarget.dataset.name;\r\n\t\tconsole.log(name);\r\n\t\t\tlet mapping = rawKeywords.map(function(item, index, array) {\r\n\t\t\t\treturn item.name;\r\n\t\t\t});\r\n\t\t\tlet index = mapping.indexOf(name);\r\n\t\t\trawKeywords.splice(index, 1);\r\n\t\t\t$(`div[data-item=\"${name}\"]`).remove();\r\n\t\t\t$('.max_level').hide();\r\n\t\t\t(0,_mainSetting_js__WEBPACK_IMPORTED_MODULE_0__.keywordFliter)();\r\n\t});\r\n}\r\n/**\r\n * 讓被使用者移除項目的show屬性等於false\r\n * @param {array} lineStack - 不要出現的關係，參考{@link lineStack}\r\n * @param {array} notKeyword - 不要出現的人物，參考{@link notKeyword}\r\n */\r\nfunction lineCtrl(lineStack,notKeyword) {\r\n    _chartSetting__WEBPACK_IMPORTED_MODULE_1__.data.category = _chartSetting__WEBPACK_IMPORTED_MODULE_1__.data.category.filter((category) => {\r\n        category.show = true;\r\n        return category;\r\n    });\r\n    if (lineStack.length !== 0) {\r\n        lineStack.forEach((item) => {\r\n            let bench = [];\r\n            if (Array.isArray(item)) {\r\n                _chartSetting__WEBPACK_IMPORTED_MODULE_1__.data.category.filter((category) => {\r\n                    if (item.includes(category.name)) bench.push(category.target, category.source);\r\n                });\r\n                for (let i = 1; i < item.length; i++)\r\n                    bench = bench.filter(function(element, index, arr) {\r\n                        return arr.indexOf(element) !== index;\r\n                    });\r\n                _chartSetting__WEBPACK_IMPORTED_MODULE_1__.data.category = _chartSetting__WEBPACK_IMPORTED_MODULE_1__.data.category.filter((category) => {\r\n                    if (item.includes(category.name)) {\r\n                        if (bench.includes(category.target) && bench.includes(category.source)) category.show = false;\r\n                    }\r\n                    return category;\r\n                });\r\n            } else {\r\n                if (item === '無共現') {\r\n                    _chartSetting__WEBPACK_IMPORTED_MODULE_1__.data.category = _chartSetting__WEBPACK_IMPORTED_MODULE_1__.data.category.filter((category) => {\r\n                        if (category.value === 0) category.show = false;\r\n                        return category;\r\n                    });\r\n                } else {\r\n                    _chartSetting__WEBPACK_IMPORTED_MODULE_1__.data.category = _chartSetting__WEBPACK_IMPORTED_MODULE_1__.data.category.filter((category) => {\r\n                        if (item === category.name) category.show = false;\r\n                        return category;\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    // console.log(notKeyword.length);\r\n    if(notKeyword.length !== 0){\r\n        _chartSetting__WEBPACK_IMPORTED_MODULE_1__.data.category = _chartSetting__WEBPACK_IMPORTED_MODULE_1__.data.category.filter((category) => {\r\n            if (notKeyword.includes(category.target) ||　notKeyword.includes(category.source)) category.show = false;\r\n            return category;\r\n        });\r\n    }\r\n}\n\n//# sourceURL=webpack://ascdc-sna/./js/keywordCleaner.js?");

/***/ }),

/***/ "./js/listGenerator.js":
/*!*****************************!*\
  !*** ./js/listGenerator.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"listGenerator\": () => (/* binding */ listGenerator)\n/* harmony export */ });\n/* harmony import */ var _colorPanelSetting__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./colorPanelSetting */ \"./js/colorPanelSetting.js\");\n/* harmony import */ var _mainSetting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mainSetting */ \"./js/mainSetting.js\");\n/* harmony import */ var _keywordCleaner_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./keywordCleaner.js */ \"./js/keywordCleaner.js\");\n/**\r\n * @module listGenerator\r\n * @description 產生節點與線段相關列表的模組\r\n * @author Wei-Jie Li\r\n * @createDate 2021-03-21\r\n */\r\n\r\n\r\n\r\n/**\r\n * 圖例列表控制函式\r\n * @param {*} option - ECharts graph圖表設定檔{@link option}\r\n * @param {array} route - and的搜尋的路徑(現已沒用到)\r\n */\r\nfunction listGenerator(option, route) {\r\n\tnodeList(option.series[0].nodes, route);\r\n\tlineList(option.series[0].categories, route);\r\n}\r\n/**\r\n *節點列表生產函式 \r\n * @param {object} dataset - 畫面上的節點資料\r\n * @param {array} route  - and的搜尋的路徑(現已沒用到)\r\n */\r\nfunction nodeList(dataset, route) {\r\n\t$('.current_node').html(`顯示的點 : (${dataset.length})`);\r\n\t$('.nodeSelected').children().remove();\r\n\tvar index = 0;\r\n\tfor (const name of groupName) {\r\n\t\tconst details = document.createElement('details');\r\n\t\tdetails.className = `nodeList${index}`;\r\n\t\t$('.nodeSelected').append(details);\r\n\t\t$(`.nodeList${index}`).append(`<summary>${name}<button id='node' class=\"color-lump\" role=\"button\"  name=\"${name}\" value=\"${userColors[index]}\" style=\"background-color: ${userColors[index]}\"></button></summary>`);\r\n\t\t// details.appendChild(summary);\r\n\t\tdataset.forEach((item) => {\r\n\t\t\tif (item.gp === index) {\r\n\t\t\t\tvar lableName = item.name;\r\n\t\t\t\tvar disabled = '';\r\n\t\t\t\tif (route !== undefined && route.length !== 0) {\r\n\t\t\t\t\tvar routeCount = 0;\r\n\t\t\t\t\troute.forEach((element) => {\r\n\t\t\t\t\t\tif (element.includes(item.name)) routeCount++;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (route.length === routeCount) lableName = `${item.name} (必要)`;\r\n\t\t\t\t}\r\n\t\t\t\tif (_keywordCleaner_js__WEBPACK_IMPORTED_MODULE_2__.keywords.includes(item.name)) disabled = `disabled=\"disabled\"`;\r\n\t\t\t\t$(`.nodeList${index}`).append(`<div class=\"nodeSelected_item\" value=\"${item.name}\">\r\n             <label><font color=\"${item.itemStyle\r\n\t\t\t\t\t.color}\"><input type=\"checkbox\" id=\"${item.name}\" name=\"node_list\" value=\"${item.name}\" ${disabled}  checked >${lableName}</front></label>\r\n             <div class=\"color-lump\" style=\"background-color:${item.itemStyle.color}\"></div></div>`);\r\n\t\t\t}\r\n\t\t});\r\n\t\tindex++;\r\n\t}\r\n\r\n\t$('.nodeSelected').scrollTop(function() {\r\n\t\treturn this.scrollHeight;\r\n\t});\r\n\tdocument.querySelector('.nodeSelected').onchange = function(e) {\r\n\t\tnodeListChange(e);\r\n\t};\r\n}\r\n/**\r\n * 線斷列表生產函式 \r\n * @param {object} dataset - 畫面上的線段資料\r\n * @param {array} route  - and的搜尋的路徑(現已沒用到)\r\n */\r\nfunction lineList(dataset, route) {\r\n\tlet mustLine = [];\r\n\t$('.current_relation').html(`顯示的線 : (${dataset.length})`);\r\n\t$('.lineSelected').children().remove();\r\n\tlet list = [];\r\n\tif (route !== undefined && route.length !== 0) {\r\n\t\tfor (let index = 1; index < route.length; index++) {\r\n\t\t\tmustLine = mustLine.filter(function(element, index, arr) {\r\n\t\t\t\treturn arr.indexOf(element) !== index;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tdataset.forEach((item) => {\r\n\t\tif (item.value === 0) {\r\n\t\t\tif (!list.includes('無共現')) {\r\n\t\t\t\tlist.push('無共現');\r\n\t\t\t\t$('.lineSelected').append(`<div class=\"lineSelected_item\" data-item=\"無共現\">\r\n            <label><font color=\"gray\"><input type=\"checkbox\" name=\"node_list\" value=\"無共現\" checked>無共現(0)</front></label></div><div class=\"color-lump\" style=\"background-color:\"gray\"></div>`);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tdataset.forEach((item) => {\r\n\t\tif (!list.includes(item.name)) {\r\n\t\t\tlist.push(item.name);\r\n\t\t\tvar name = item.name;\r\n\t\t\tif (mustLine.includes(item.name)) {\r\n\t\t\t\tname = `${item.name} (必要)`;\r\n\t\t\t}\r\n\t\t\t$('.lineSelected').append(`<div class=\"lineSelected_item\" value=\"${item.name}\">\r\n            <label><font color=\"${item.lineStyle\r\n\t\t\t\t.color}\"><input type=\"checkbox\" name=\"lineList\" value=\"${item.name}\" checked>${name}</front></label></div><div classs=\"${item.name}\"><button id='line' class=\"color-lump\" role=\"button\"  name=\"${item.name}\" value=\"${item\r\n\t\t\t\t.lineStyle.color}\" style=\"background-color: ${item.lineStyle.color}\"></button></div>`);\r\n\t\t}\r\n\t});\r\n\t$('.lineSelected').scrollTop(function() {\r\n\t\treturn this.scrollHeight;\r\n\t});\r\n\tdocument.querySelector('.lineSelected').onchange = function(e) {\r\n\t\tlineListChange(e);\r\n\t};\r\n\t$('button.color-lump').off('click').click((e) => {\r\n\t\tconsole.log(e.currentTarget.name);\r\n\t\tconsole.log(e.currentTarget.value);\r\n\t\tconsole.log(e.currentTarget.id);\r\n\t\t(0,_colorPanelSetting__WEBPACK_IMPORTED_MODULE_0__.colorPanelInit)(e.currentTarget.name, e.currentTarget.value, e.currentTarget.id);\r\n\t});\r\n}\r\n/**\r\n * 觸發節點列表點擊事件後執行的函式，將會從畫面中去除該元素\r\n * @param {event} e - 點擊事件資訊\r\n */\r\nfunction nodeListChange(e) {\r\n\tconsole.log(e.target.value);\r\n\t(0,_keywordCleaner_js__WEBPACK_IMPORTED_MODULE_2__.keywordItemAppend)(e.target.value, 'not', 'node');\r\n\t(0,_mainSetting__WEBPACK_IMPORTED_MODULE_1__.keywordFliter)();\r\n}\r\n/**\r\n * 觸發線段列表點擊事件後執行的函式，將會從畫面中去除該關係\r\n * @param {event} e - 點擊事件資訊 \r\n */\r\nfunction lineListChange(e) {\r\n\tconsole.log(e.target.value);\r\n\t(0,_keywordCleaner_js__WEBPACK_IMPORTED_MODULE_2__.keywordItemAppend)(e.target.value, 'not', 'line');\r\n\t(0,_mainSetting__WEBPACK_IMPORTED_MODULE_1__.keywordFliter)();\r\n}\r\n\n\n//# sourceURL=webpack://ascdc-sna/./js/listGenerator.js?");

/***/ }),

/***/ "./js/mainSetting.js":
/*!***************************!*\
  !*** ./js/mainSetting.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"keywordFliter\": () => (/* binding */ keywordFliter),\n/* harmony export */   \"event_setOption_function\": () => (/* binding */ event_setOption_function),\n/* harmony export */   \"lineColorChanger\": () => (/* binding */ lineColorChanger)\n/* harmony export */ });\n/* harmony import */ var _lib_echarts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/echarts */ \"./lib/echarts.js\");\n/* harmony import */ var _lib_echarts__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lib_echarts__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _css_index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../css/index.css */ \"./css/index.css\");\n/* harmony import */ var jquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jquery/dist/jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _keywordCleaner_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./keywordCleaner.js */ \"./js/keywordCleaner.js\");\n/* harmony import */ var _searchFunction_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./searchFunction.js */ \"./js/searchFunction.js\");\n/* harmony import */ var _sliderbarSetting_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sliderbarSetting.js */ \"./js/sliderbarSetting.js\");\n/* harmony import */ var _chartSetting__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chartSetting */ \"./js/chartSetting.js\");\n/* harmony import */ var _listGenerator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./listGenerator */ \"./js/listGenerator.js\");\n/* harmony import */ var _searchSuggest__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./searchSuggest */ \"./js/searchSuggest.js\");\n/**\r\n * @module MainSetting\r\n * @description  主程式\r\n * @author Wei-Jie Li\r\n * @createDate 2020-05-21\r\n */\r\n\r\n//從npm套件中import\r\n// import * as echarts from 'echarts/core';\r\n// import {\r\n//     TitleComponent,\r\n//     TooltipComponent,\r\n//     LegendComponent,\r\n//     ToolboxComponent\r\n// } from 'echarts/components';\r\n// import {\r\n//     GraphChart\r\n// } from 'echarts/charts';\r\n// import {\r\n//     CanvasRenderer\r\n// } from 'echarts/renderers';\r\n\r\n// echarts.use(\r\n//     [TitleComponent, TooltipComponent, LegendComponent, GraphChart, CanvasRenderer, ToolboxComponent]\r\n// );\r\n\r\n\r\nwindow.jQuery = window.$ = (jquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()); //定義jqurey\r\n// export for others scripts to use\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { layoutCalculator } from \"./graphologyLayoutSystem.js\";\r\njquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('.sidebar').hide(); //在圖還沒形成之前要先將左邊的slider隱藏\r\nconst Chart = _lib_echarts__WEBPACK_IMPORTED_MODULE_0__.init(document.getElementById('main'), null, {\r\n\trenderer: 'canvas' //could be svg, but may have performance problems\r\n\t// 如果宽高比大于 1 则宽度为 100，如果小于 1 则高度为 100，保证了不超过 100x100 的区域\r\n\t// 设置这两个值后 left/right/top/bottom/width/height 无效。\r\n\t// width: 1700,\r\n\t// height: 800 //有置中問題\r\n});\r\nChart.showLoading('default'); //轉圈圈~~\r\nvar start = new Date().getTime();\r\nconsole.log('data:');\r\nconsole.log(_chartSetting__WEBPACK_IMPORTED_MODULE_6__.data);\r\nChart.hideLoading(); //跑好後關圈圈~~~\r\njquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('.sidebar').show(); //圖形顯示後再出現slider\r\nvar End = new Date().getTime();\r\nconsole.log(End - start + 'ms');\r\nif (dataType === 1) {\r\n\t_chartSetting__WEBPACK_IMPORTED_MODULE_6__.option.series[0].edgeLabel.show = false;\r\n\t_chartSetting__WEBPACK_IMPORTED_MODULE_6__.option.series[0].edgeSymbol = [];\r\n\t_chartSetting__WEBPACK_IMPORTED_MODULE_6__.option.series[0].edgeLabel.formatter = function(param) {\r\n\t\treturn param.data.value;\r\n\t};\r\n\tjquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('.lineSelected').hide();\r\n\tjquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('#kModel').hide();\r\n\tjquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('.current_relation').hide();\r\n} else if (dataType === 2) {\r\n\t_chartSetting__WEBPACK_IMPORTED_MODULE_6__.option.series[0].edgeLabel.formatter = function(param) {\r\n\t\treturn param.data.name;\r\n\t};\r\n\t_chartSetting__WEBPACK_IMPORTED_MODULE_6__.option.series[0].itemStyle.label.formatter = function(param) {\r\n\t\treturn param.name;\r\n\t};\r\n\tjquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('.common_show_value').hide();\r\n\tjquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('.word_strength').hide();\r\n}\r\n/**\r\n * 儲存max_level slider的現值\r\n * @typedef {(number|string)}\r\n */\r\nvar routeFloor = 'All';\r\nlet allLine = _chartSetting__WEBPACK_IMPORTED_MODULE_6__.data.category.map(function(item, index, array) {\r\n\treturn item.name;\r\n});\r\nallLine = Array.from(new Set(allLine))\r\nvar keywordCollection = [],\r\n\tviewResult;\r\nwindow.onresize = () => {\r\n\tChart.resize();\r\n};\r\n(0,_searchSuggest__WEBPACK_IMPORTED_MODULE_8__.autocomplete)(document.getElementById(\"keyword_search_field\"), [_chartSetting__WEBPACK_IMPORTED_MODULE_6__.data.all_nodes, allLine]);\r\n// EventListener\r\njquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('#keyword_search_field').keyup((e) => {\r\n\tkeyword_search(e);\r\n});\r\njquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('#keyword_search_button').on('click', keyword_search);\r\n\r\n/**\r\n * 搜尋功能前處理\r\n * @param {event} e - 觸發搜尋的事件 \r\n */\r\nfunction keyword_search(e) {\r\n\tif (e.which === 13 || e.type === 'click') {\r\n\t\t//點搜尋或按ENTER\r\n\t\tlet keyword = jquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('#keyword_search_field').val();\r\n\t\tkeyword = keyword.toLowerCase();\r\n\t\tkeyword = keyword.replace(' and ', '&');\r\n\t\tkeyword = keyword.replace(' or ', '|');\r\n\t\tvar keywordSearchType = jquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('#kClass').val();\r\n\t\tif (dataType === 1) var keywordModel = 'node';\r\n\t\telse var keywordModel = jquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('#kModel').val();\r\n\t\tlet names = [];\r\n\t\tlet namess = [];\r\n\t\tif (keyword.includes('|'))\r\n\t\t\tnames = keyword.split('|'); //拆解or\r\n\t\telse names.push(keyword);\r\n\t\tfor (let item of names) {\r\n\t\t\t//拆到剩下單一名詞的陣列\r\n\t\t\tif (item.includes('&')) {\r\n\t\t\t\titem = item.split('&');\r\n\t\t\t\titem.forEach((t) => {\r\n\t\t\t\t\tnamess.push(t);\r\n\t\t\t\t});\r\n\t\t\t} else namess.push(item);\r\n\t\t}\r\n\t\tif (keywordModel === 'node')\r\n\t\t\tfor (const item of namess) {\r\n\t\t\t\t//檢查點\r\n\t\t\t\tif (!_chartSetting__WEBPACK_IMPORTED_MODULE_6__.data.all_nodes.includes(item)) {\r\n\t\t\t\t\tthrow alert(`Error1 : 找不到關鍵字:${keyword}`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\telse\r\n\t\t\tfor (const item of namess) {\r\n\t\t\t\t//檢查線\r\n\t\t\t\tif (!allLine.includes(item)) {\r\n\t\t\t\t\tthrow alert(`Error1 : 找不到關鍵字:${keyword}`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tstart = new Date().getTime();\r\n\t\tlet test = (0,_keywordCleaner_js__WEBPACK_IMPORTED_MODULE_3__.keywordItemAppend)(keyword, keywordSearchType, keywordModel);\r\n\t\tif (test === 0) keywordFliter();\r\n\t}\r\n}\r\n/**\r\n * 做搜尋的init並檢查node是否有在data內，並執行搜尋程式\r\n */\r\nfunction keywordFliter() {\r\n\tkeywordCollection = (0,_keywordCleaner_js__WEBPACK_IMPORTED_MODULE_3__.keywordCleanUp)();\r\n\tconsole.log(keywordCollection);\r\n\t// routeFloor = 'All';\r\n\tif (keywordCollection.length === 0) resetChart();\r\n\telse {\r\n\t\tviewResult = (0,_searchFunction_js__WEBPACK_IMPORTED_MODULE_4__.searchKeyword)(keywordCollection, 'All');\r\n\t\tif (routeFloor != 'All' && viewResult.routeHash.includes(routeFloor)) {\r\n\t\t\tviewResult = (0,_searchFunction_js__WEBPACK_IMPORTED_MODULE_4__.changeMaxlevel)(keywordCollection, routeFloor);\r\n\t\t} else if (!viewResult.routeHash.includes(routeFloor)) routeFloor = 'All';\r\n\t\tif (routeFloor != 'All') var value = routeFloor;\r\n\t\telse var value = viewResult.routeHash.length;\r\n\t\tviewDataChange();\r\n\t\tjquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()(`.slider_item > #max_level`).slider({\r\n\t\t\tmin: 0,\r\n\t\t\tmax: viewResult.routeHash.length, //最大階層數\r\n\t\t\tstep: 1,\r\n\t\t\tvalue: value, //current option setting value\r\n\t\t\tdisable: false,\r\n\t\t\trange: 'min'\r\n\t\t});\r\n\t\tjquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()(`.slider_item > input[id=max_level]`).val(routeFloor);\r\n\t\tjquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('.max_level').show();\r\n\t}\r\n}\r\n/**\r\n * 改變畫面的內容的函式\r\n */\r\nfunction viewDataChange() {\r\n\t_chartSetting__WEBPACK_IMPORTED_MODULE_6__.option.series[0].categories = viewResult.category;\r\n\t_chartSetting__WEBPACK_IMPORTED_MODULE_6__.option.series[0].links = viewResult.links;\r\n\t_chartSetting__WEBPACK_IMPORTED_MODULE_6__.option.series[0].nodes = viewResult.nodes;\r\n\tevent_setOption_function();\r\n\tvar End1 = new Date().getTime();\r\n\tconsole.log(End1 - start + 'ms');\r\n}\r\n// Chart.on('legendselectchanged', (category_select) => {\r\n//圖例的觸發事件\r\n// });\r\n/**\r\n * 初始化資料集\r\n */\r\nfunction resetChart() {\r\n\tlet collect = [];\r\n\t//刪除完全數清空或是砍了第一層\r\n\t_chartSetting__WEBPACK_IMPORTED_MODULE_6__.option.series[0].categories = _chartSetting__WEBPACK_IMPORTED_MODULE_6__.data.category.filter((category) => {\r\n\t\t// return the category that show property is true\r\n\t\tif (category.show == true) {\r\n\t\t\tcollect.push(category.source, category.target);\r\n\t\t\treturn category;\r\n\t\t}\r\n\t});\r\n\t_chartSetting__WEBPACK_IMPORTED_MODULE_6__.option.series[0].links = _chartSetting__WEBPACK_IMPORTED_MODULE_6__.option.series[0].categories;\r\n\tcollect = Array.from(new Set(collect));\r\n\t_chartSetting__WEBPACK_IMPORTED_MODULE_6__.option.series[0].nodes = _chartSetting__WEBPACK_IMPORTED_MODULE_6__.data.nodes.filter((node) => {\r\n\t\tnode.itemStyle.color = userColors[node.gp];\r\n\t\treturn collect.includes(node.name);\r\n\t});\r\n\tevent_setOption_function(true);\r\n}\r\n/**\r\n * 篩選改變會呼叫此函式去針對該條件顯示內容\r\n * @param {number}} ui_value - 篩選的階層數值\r\n */\r\nfunction max_Level(ui_value) {\r\n\tif (ui_value === viewResult.routeHash.length) routeFloor = 'All';\r\n\telse routeFloor = viewResult.routeHash[ui_value];\r\n\tjquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()(`.slider_item > input[id=max_level]`).val(routeFloor);\r\n\tviewResult = (0,_searchFunction_js__WEBPACK_IMPORTED_MODULE_4__.changeMaxlevel)(keywordCollection, routeFloor);\r\n\tviewDataChange();\r\n}\r\n\r\n// the involve function that will read the jquery_slider_setting in Main_setting.js, then create the jquery slider\r\n/**\r\n * 程式啟動時最先執行的函式\r\n */\r\njquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()(() => {\r\n\tjquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('.max_level').hide();\r\n\t(0,_sliderbarSetting_js__WEBPACK_IMPORTED_MODULE_5__.silderInit)();\r\n\tdocument.querySelector('.alone').onclick = function(e) {\r\n\t\t(0,_sliderbarSetting_js__WEBPACK_IMPORTED_MODULE_5__.sliderBar)('All');\r\n\t\tevent_setOption_function();\r\n\t};\r\n\tjquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('.slider_slider').slider({\r\n\t\tslide: function(e, ui) {\r\n\t\t\tif (e.target.id === 'max_level') max_Level(ui.value);\r\n\t\t\telse (0,_sliderbarSetting_js__WEBPACK_IMPORTED_MODULE_5__.sliderBar)(e, ui);\r\n\t\t\tevent_setOption_function(false);\r\n\t\t}\r\n\t});\r\n\tevent_setOption_function();\r\n\tEnd = new Date().getTime();\r\n\tconsole.log(End - start + 'ms');\r\n});\r\n// The function to render the data to canvas after set all option finish\r\n/**\r\n * 此程式會依照現在設定重新渲染畫面\r\n * @param {boolean} render - 值為ture時完全重新渲染，值為false時指更動資料集，須依情況適時調整  \r\n */\r\nfunction event_setOption_function(render = true) {\r\n\tif (viewResult == undefined) (0,_listGenerator__WEBPACK_IMPORTED_MODULE_7__.listGenerator)(_chartSetting__WEBPACK_IMPORTED_MODULE_6__.option, undefined);\r\n\telse (0,_listGenerator__WEBPACK_IMPORTED_MODULE_7__.listGenerator)(_chartSetting__WEBPACK_IMPORTED_MODULE_6__.option, viewResult.route);\r\n\tif (jquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('#Cselecter').val() !== '') (0,_sliderbarSetting_js__WEBPACK_IMPORTED_MODULE_5__.sliderBar)('All');\r\n\t// layoutCalculator(option);\r\n\t// positionCalculator();\r\n\tedgeFilter();\r\n\t// nodeTypeChange();\r\n\tChart.setOption(_chartSetting__WEBPACK_IMPORTED_MODULE_6__.option, render);\r\n}\r\n/**\r\n * 當調色盤選擇了新的顏色，會呼叫此函式去更動資料集\r\n * @param {string} name - 要被替換顏色的元素\r\n * @param {string} color - 新的顏色\r\n * @param {string} id - node or line\r\n */\r\nfunction lineColorChanger(name, color, id) {\r\n\tdocument.cookie = `${name}=${color}; max-age=2592000; path=/`;\r\n\tif (id === 'node') {\r\n\t\tvar gp = parseInt(name);\r\n\t\tuserColors[gp] = color;\r\n\t\t_chartSetting__WEBPACK_IMPORTED_MODULE_6__.data.nodes.forEach((node) => {\r\n\t\t\tif (node.gp === gp) {\r\n\t\t\t\tnode.itemStyle.color = color;\r\n\t\t\t}\r\n\t\t});\r\n\t\t_chartSetting__WEBPACK_IMPORTED_MODULE_6__.option.series[0].nodes.forEach((node) => {\r\n\t\t\tif (node.gp === gp) {\r\n\t\t\t\tnode.itemStyle.color = color;\r\n\t\t\t}\r\n\t\t});\r\n\t} else {\r\n\t\t_chartSetting__WEBPACK_IMPORTED_MODULE_6__.data.category.forEach((category) => {\r\n\t\t\tif (category.name === name) {\r\n\t\t\t\tcategory.lineStyle.color = color;\r\n\t\t\t}\r\n\t\t});\r\n\t\t_chartSetting__WEBPACK_IMPORTED_MODULE_6__.option.series[0].categories.forEach((category) => {\r\n\t\t\tif (category.name === name) {\r\n\t\t\t\tcategory.lineStyle.color = color;\r\n\t\t\t}\r\n\t\t});\r\n\t\t_chartSetting__WEBPACK_IMPORTED_MODULE_6__.option.series[0].links.forEach((category) => {\r\n\t\t\tif (category.name === name) {\r\n\t\t\t\tcategory.lineStyle.color = color;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tevent_setOption_function(false);\r\n}\r\n/**\r\n * 點擊圖表上的元素會開啟新視窗顯示文本中的相關資訊\r\n */\r\nChart.on('click', (e) => {\r\n\t// console.log(e);\r\n\tif (bookId.indexOf('_') == -1 && e.componentType !== 'title') {\r\n\t\tconsole.log(bookId, e.data.source, e.data.target, e.data.name);\r\n\t\tif (e.data.source == undefined && e.data.target == undefined) searchBookUnit(bookId, e.data.name);\r\n\t\telse searchBookAssociation(bookId, e.data.source, e.data.target, e.data.name);\r\n\t}\r\n\r\n\tfunction searchBookAssociation(bid, key1, key2, relation) {\r\n\t\tvar associationQuery = '\"' + key1 + '\" AND \"' + key2 + '\"';\r\n\t\t// http://dh.ascdc.sinica.edu.tw/member/text/segementRelationDetails.jsp\r\n\t\tjquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default().get(\r\n\t\t\twindow.location.origin + '/member/text/segementRelationDetails.jsp',\r\n\t\t\t{\r\n\t\t\t\tbid: bid,\r\n\t\t\t\tsearchKey: associationQuery,\r\n\t\t\t\tpages: 1,\r\n\t\t\t\tisStart: '1',\r\n\t\t\t\trelation: relation\r\n\t\t\t},\r\n\t\t\tfunction(data) {\r\n\t\t\t\t//$('#layout_main').html(data);\r\n\t\t\t\tvar w = window.open('about:blank', key1 + key2, 'width=800,height=600');\r\n\t\t\t\tw.document.write(data);\r\n\t\t\t\tw.document.close();\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\tfunction searchBookUnit(bid, associationKey) {\r\n\t\t//alert(bid);\r\n\t\tvar associationQuery = '';\r\n\t\tassociationQuery = '\"' + associationKey + '\"';\r\n\t\t//$('#searchKey').val(associationKey);\r\n\t\tjquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default().get(\r\n\t\t\twindow.location.origin + '/member/text/segementDetails.jsp',\r\n\t\t\t{\r\n\t\t\t\tonly_show_authority: jquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('#only_show_authority').val(),\r\n\t\t\t\tshow_info: jquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('#show_info').val(),\r\n\t\t\t\tpageNums: jquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('#pageNums').val(),\r\n\t\t\t\tbookID: bid,\r\n\t\t\t\tbid: bid,\r\n\t\t\t\tsearchKey: associationQuery,\r\n\t\t\t\tckDic: jquery_dist_jquery__WEBPACK_IMPORTED_MODULE_2___default()('#DicCK').prop('checked'),\r\n\t\t\t\tpages: 1,\r\n\t\t\t\tisStart: '1'\r\n\t\t\t},\r\n\t\t\tfunction(data) {\r\n\t\t\t\t//$('#layout_main').html(data);\r\n\t\t\t\tvar w = window.open('about:blank', associationKey, 'width=800,height=600');\r\n\t\t\t\tw.document.write(data);\r\n\t\t\t\tw.document.close();\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n});\r\n/**\r\n * 點兩下標題可以修改圖表標題\r\n */\r\nChart.on('dblclick', (params) => {\r\n\tif (params.componentType === 'title') {\r\n\t\tbookName = prompt('請填入標題名稱', bookName);\r\n\t\tif (bookName !== null) _chartSetting__WEBPACK_IMPORTED_MODULE_6__.option.title.text = bookName;\r\n\t\tevent_setOption_function(false);\r\n\t}\r\n});\r\n/**\r\n * 當遇到同關係的兩個關係轉成雙箭頭的關係\r\n */\r\nfunction edgeFilter() {\r\n\t_chartSetting__WEBPACK_IMPORTED_MODULE_6__.option.series[0].links.forEach(function(link, index, array) {\r\n\t\tif (link.bilateral == 'delete') {\r\n\t\t\t_chartSetting__WEBPACK_IMPORTED_MODULE_6__.option.series[0].links.splice(index, 1);\r\n\t\t}\r\n\t\tif (link.bilateral == 'true') {\r\n\t\t\tlink.symbol = 'arrow';\r\n\t\t\tlink.symbolSize = arrowSize;\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// function nodeTypeChange(){\r\n// \tlet target = option.series[0].links.map(function(item, index, array) {\r\n// \t\treturn item.target;\r\n// \t});\r\n// \tlet source = option.series[0].links.map(function(item, index, array) {\r\n// \t\treturn item.source;\r\n// \t});\r\n// \t\toption.series[0].nodes.forEach(item =>{\r\n// \t\tif(item.itemStyle.color == \"red\"){\r\n\r\n// \t\t\t}\r\n// \t\telse if(source.includes(item.name) && target.includes(item.name)){\r\n// \t\t\titem.symbol = \"circle\"\r\n// \t\t\titem.itemStyle.color = \"#955539\";\r\n// \t\t}\r\n// \t\telse if(target.includes(item.name)){\r\n// \t\t\titem.symbol = \"rect\"\r\n// \t\t\titem.itemStyle.color = '#4c8dae';\r\n// \t\t}\r\n// \t\telse if(source.includes(item.name)){\r\n// \t\t\titem.symbol = \"roundRect\"\r\n// \t\t\titem.itemStyle.color = \"#789262\";\r\n// \t\t}\r\n// \t\telse if(!source.includes(item.name) && !target.includes(item.name)){\r\n// \t\t\titem.symbol = \"circle\"\r\n// \t\t\titem.itemStyle.color = \"#ceb888\";\r\n// \t\t}\r\n// \t});\r\n// }\r\n\n\n//# sourceURL=webpack://ascdc-sna/./js/mainSetting.js?");

/***/ }),

/***/ "./js/searchFunction.js":
/*!******************************!*\
  !*** ./js/searchFunction.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"searchKeyword\": () => (/* binding */ searchKeyword),\n/* harmony export */   \"changeMaxlevel\": () => (/* binding */ changeMaxlevel)\n/* harmony export */ });\n/* harmony import */ var _chartSetting_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chartSetting.js */ \"./js/chartSetting.js\");\n/**\r\n * @module searchFunction\r\n * @description 搜尋模組\r\n * @author Wei-Jie Li\r\n * @createDate 2021-03-21\r\n */\r\n\r\n/**\r\n * 搜尋後的結果，裡面包含了三個要顯示的內容和可以篩選的階層\r\n * @typeof {object}\r\n */\r\nvar result ={\r\n\tnodes: [],\r\n\tlinks: [],\r\n\tcategory: [],\r\n\trouteHash:[]\r\n}\r\n/**\r\n * 搜尋功能的主程式\r\n * @param {object} keywordCollection - 經過整理後的搜尋項目，可以參考{@link keywordCollection }\r\n * @param {(number|string)} routeFloor - 搜尋的階層，可以參考{@link routeFloor}\r\n * @returns {object} 搜尋完的結果\r\n */\r\nfunction searchKeyword( keywordCollection, routeFloor){\r\n\tresult.links = [];\r\n\tresult.category = [];\r\n\tresult.nodes = [];\r\n\tresult.routeHash = [];\r\n\tkeywordCollection.forEach((item) => {\r\n\t\tif (item.nodeName.length === 0) lineOr(item);\r\n\t\telse if (item.nodeName.length === 1) data_filter(item, routeFloor);\r\n\t\telse floodingSearch(item, routeFloor);\r\n\t});\r\n\treturn result;\r\n}\r\n/**\r\n * 調整階層的運算程式\r\n * @param {object} keywordCollection - 經過整理後的搜尋項目，可以參考{@link keywordCollection }\r\n * @param {(number|string)} routeFloor -  搜尋的階層，可以參考{@link routeFloor}\r\n * @returns  {object} 搜尋完的結果\r\n */\r\nfunction changeMaxlevel(keywordCollection, routeFloor){\r\n\tresult.links = [];\r\n\tresult.category = [];\r\n\tresult.nodes = [];\r\n\tkeywordCollection.forEach((item) => {\r\n\t\tif (item.nodeName.length === 0) lineOr(item);\r\n\t\telse if (item.nodeName.length === 1) data_filter(item, routeFloor);\r\n\t\telse\tfloodingSearch(item, routeFloor);\r\n\t});\r\n\treturn result;\r\n}\r\n/**\r\n * 回報找不到路線的錯誤訊息，並中止執行\r\n * @param {string} nodeName 找讀但路徑的搜尋項目\r\n */\r\nfunction andSearchNoRoute(nodeName) {\r\n\talert(`Error2 : 搜尋不到路徑 : ${nodeName}`);\r\n}\r\n/**\r\n * 單一和or搜尋的function，會用searchTarget的資訊尋找出的點，並傳給{@link dataAppendOr()}整合搜尋結果\r\n * @param {object} keyword 搜尋的目標\r\n * @param {(number|string)} routeFloor 搜尋的階層，可以參考{@link routeFloor}\r\n */\t\t\t\t\r\nfunction data_filter(keyword, routeFloor) {\r\n\tif (routeFloor === 'All') {\r\n\t\t// 確認最大階層數，如果是All就跑到100層\r\n\t\tvar ui_user = 200;\r\n\t} else {\r\n\t\tui_user = routeFloor;\r\n\t}\r\n\tvar categories = [], // 要加入option.series[0].categories的陣列\r\n\t\tlinks, // 要加入option.series[0].links的陣列\r\n\t\tnodes; // 要加入option.series[0].nodes的陣列\r\n\tlet minus = JSON.parse(JSON.stringify(keyword.nodeName));\r\n\tlet collect = []; // 暫存node\r\n\tvar layer = 0;\r\n\tfor (let i = 0; i < ui_user; i++) {\r\n\t\tcategories = _chartSetting_js__WEBPACK_IMPORTED_MODULE_0__.data.category.filter((category) => {\r\n\t\t\tif (minus.includes(category.target) || minus.includes(category.source)) {\r\n\t\t\t\tlet answer  = false;\r\n\t\t\t\t\tif (keyword.lineName.length !== 0) {\r\n\t\t\t\t\t\t//看看有沒有個別線的條件\r\n\t\t\t\t\t\tkeyword.lineName.forEach((item) => {\r\n\t\t\t\t\t\t\tif (item.includes(category.name)) {\r\n\t\t\t\t\t\t\t\t//看看這條線有沒有在條件內\r\n\t\t\t\t\t\t\t\tif (item.length > 1) {\r\n\t\t\t\t\t\t\t\t\t//如果條件為多種關係組合\r\n\t\t\t\t\t\t\t\t\tlet bench = [];\r\n\t\t\t\t\t\t\t\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_0__.data.category.forEach(cat =>{\r\n\t\t\t\t\t\t\t\t\t\tif(cat.target === category.target && cat.source === category.source)\r\n\t\t\t\t\t\t\t\t\t\t\tbench.push(cat.name);\r\n\t\t\t\t\t\t\t\t\t\telse if(cat.target === category.source && cat.source === category.target)\r\n\t\t\t\t\t\t\t\t\t\t\tbench.push(cat.name);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tlet c = 0;\r\n\t\t\t\t\t\t\t\t\titem.forEach(a=>{\r\n\t\t\t\t\t\t\t\t\t\tif(bench.includes(a))\r\n\t\t\t\t\t\t\t\t\t\tc++;\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tif(c ===  item.length)\r\n\t\t\t\t\t\t\t\t\t\tanswer = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tanswer =  true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tanswer =  true;\r\n\t\t\t\t}\r\n\t\t\t\t\tif (category.show === true && answer == true) {\r\n\t\t\t\t\t\tcollect.push(category.target, category.source);\r\n\t\t\t\t\t\treturn category;\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t//將找到的點去掉重複和搜尋的項目\r\n\t\tminus = collect.filter((item) => {\r\n\t\t\treturn !item.includes(keyword.nodeName);\r\n\t\t});\r\n\t\tminus = Array.from(new Set(minus));\r\n\t\tif (categories.length === layer) {\r\n\t\t\t//跑到最大階層後就停下來\r\n\t\t\tlet maxlevel = i;\r\n\t\t\tfor (var x = 1; x <= maxlevel; x++) {\r\n\t\t\t\t//調整最大階層的sliderbar\r\n\t\t\t\tif (!result.routeHash.includes(x)) result.routeHash.push(x);\r\n\t\t\t}\r\n\t\t\tresult.routeHash.sort(function(a, b) {\r\n\t\t\t\treturn a - b;\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\t} else layer = categories.length; //沒有到最大就繼續跑\r\n\t}\r\n\tcollect = []; // 暫存node\r\n\tlinks = categories.filter((category) => {\r\n\t\t//將要顯示的線整理起來\r\n\t\tif (category.show == true) {\r\n\t\t\tcollect.push(category.source, category.target);\r\n\t\t\treturn category;\r\n\t\t}\r\n\t});\r\n\tcollect = Array.from(new Set(collect));\r\n\tnodes = _chartSetting_js__WEBPACK_IMPORTED_MODULE_0__.data.nodes.filter((node) => {\r\n\t\t//將要顯示的點整理起來\r\n\t\treturn collect.includes(node.name);\r\n\t});\r\n\tnodes.filter((node) => {\r\n\t\t//將收旬的點改成紅色，但不能影響原始資料\r\n\t\tif(keyword.nodeName.includes(node.name))\r\n         \tnode.itemStyle.color = 'red'\r\n\t\treturn node;\r\n\t});\r\n\tdataAppendOr(categories, links, nodes); //將資料整合起來\r\n\t}\r\n/**\r\n * 處理線段or的搜尋，並將結果傳給{@link dataAppendOr()}整合搜尋結果\r\n * @param {object} keyword 搜尋的目標\r\n */\r\nfunction lineOr(keyword) {\r\n\tlet categories = [], //存要傳給dataAppendOr()顯示在畫面上的資料\r\n\t\tlinks,\r\n\t\tnodes;\r\n\tlet collect = []; //存要顯示的點\r\n\tif (keyword.lineName.length !== 0) {\r\n\t\t//處理線的條件，只是dta_filter()的縮減版，參考一下\r\n\t\tkeyword.lineName.forEach((item) => {\r\n\t\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_0__.data.category.forEach((category) => {\r\n\t\t\t\t\tif (category.show === true) {\r\n\t\t\t\t\t\tif (item.includes(category.name)) {\r\n\t\t\t\t\t\t\tif (item.length > 1) {\r\n\t\t\t\t\t\t\t\tlet bench = [];\r\n\t\t\t\t\t\t\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_0__.data.category.forEach(cat =>{\r\n\t\t\t\t\t\t\t\t\tif(cat.target === category.target && cat.source === category.source)\r\n\t\t\t\t\t\t\t\t\t\tbench.push(cat.name);\r\n\t\t\t\t\t\t\t\t\telse if(cat.target === category.source && cat.source === category.target)\r\n\t\t\t\t\t\t\t\t\t\tbench.push(cat.name);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tlet c = 0;\r\n\t\t\t\t\t\t\t\titem.forEach(a=>{\r\n\t\t\t\t\t\t\t\t\tif(bench.includes(a))\r\n\t\t\t\t\t\t\t\t\tc++;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tif(c ===  item.length){\r\n\t\t\t\t\t\t\t\t\tcollect.push(category.target, category.source);\r\n\t\t\t\t\t\t\t\t\tcategories.push(category);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcollect.push(category.target, category.source);\r\n\t\t\t\t\t\t\t\tcategories.push(category);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tlinks = categories;\r\n\tcollect = Array.from(new Set(collect));\r\n\tnodes = _chartSetting_js__WEBPACK_IMPORTED_MODULE_0__.data.nodes.filter((node) => {\r\n\t\treturn collect.includes(node.name);\r\n\t});\r\n\tdataAppendOr(categories, links, nodes); \r\n}\r\n/**\r\n * @description 搜尋多節點之間的所有路徑，方法:先用flooding演算法找出整理過搜尋範圍，並去掉多餘的線與點，再交由底下的參考範例時做出類老鼠迷宮，找出所有路線\r\n * @see {@link https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/713294/2} 參考範例\r\n */\r\nfunction andSearch(keyword, route, searchRangeData) {\r\n\tlet routeTemp = [];\r\n\t//類老鼠迷宮演算法\r\n\t\tlet primaryStack = new Array(); //參考了老鼠迷宮的做法，這是主堆疊\r\n\t\tlet secondaryStack = new Array(); //副堆疊\r\n\t\tlet temp2 = new Array(); //當次搜尋的結果\r\n\t\tlet Finish = true; //是否完成\r\n\t\tlet keywordTemp = keyword.nodeName[0]; //搜尋目標\r\n\t\tlet nodeCollection;\r\n\t\tlet secondaryStackCount = -1; //存副堆疊長度\r\n\t\tlet goal = keyword.nodeName[keyword.nodeName.length];\r\n\t\tdo {\r\n\t\t\t//找出與目標有關的線\r\n\t\t\ttemp2 = [];\r\n\t\t\tnodeCollection = [];\r\n\t\t\tprimaryStack.push(keywordTemp);\r\n\t\t\tlet temp = [];\r\n\t\t\tif (keyword.lineName.length !== 0) {\r\n\t\t\t\t//篩選掉線段限制，大部分和data_filter()一樣\r\n\t\t\t\tkeyword.lineName.forEach((item) => {\r\n\t\t\t\t\tlet bench = [];\r\n\t\t\t\t\tsearchRangeData.filter((category) => {\r\n\t\t\t\t\t\tif (keywordTemp === category.target || keywordTemp === category.source) {\r\n\t\t\t\t\t\t\t\tif (item.includes(category.name)) {\r\n\t\t\t\t\t\t\t\t\tif (item.length > 1) {\r\n\t\t\t\t\t\t\t\t\t\t\tbench.push(category.target, category.source);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tunion_collect.push(category.target, category.source);\r\n\t\t\t\t\t\t\t\t\t\ttemp.push(category);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (item.length > 1) {\r\n\t\t\t\t\t\tfor (let i = 1; i < item.length; i++)\r\n\t\t\t\t\t\t\tbench = bench.filter(function(element, index, arr) {\r\n\t\t\t\t\t\t\t\treturn arr.indexOf(element) !== index;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\tdataSet = searchRangeData.filter((category) => {\r\n\t\t\t\t\t\t\tif (keywordTemp === category.target || keywordTemp === category.source) {\r\n\t\t\t\t\t\t\t\treturn category\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ttemp = searchLine2Filter(item, bench, searchRangeData, dataSet);\r\n\t\t\t\t\t\ttemp.forEach((category) => {\r\n\t\t\t\t\t\tcollect.push(category.target, category.source);\r\n\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\ttemp = searchRangeData.filter((category) => {\r\n\t\t\t\t\tif (keywordTemp === category.target || keywordTemp === category.source) return category;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t// console.log(temp);\r\n\t\t\ttemp.filter((category) => {\r\n\t\t\t\t//將線段的兩端節點存入nodeCollection\r\n\t\t\t\tnodeCollection.push(category.target, category.source);\r\n\t\t\t});\r\n\t\t\tnodeCollection = Array.from(new Set(nodeCollection));\r\n\t\t\tfor (let i = 0, uLen = nodeCollection.length; i < uLen; i++) {\r\n\t\t\t\t//將nodeCollection中走過的路線刪掉\r\n\t\t\t\tif (!primaryStack.includes(nodeCollection[i])) {\r\n\t\t\t\t\ttemp2.push(nodeCollection[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsecondaryStack.push(temp2); //將結果存入副堆疊\r\n\t\t\tsecondaryStackCount++; //副堆疊長度++\r\n\t\t\tif (primaryStack[primaryStack.length - 1] == goal) {\r\n\t\t\t\t//如果路線最後一點是目標\r\n\t\t\t\trouteTemp.push(Array.from(primaryStack)); //存入路線陣列\r\n\t\t\t\tconsole.log(primaryStack);\r\n\t\t\t\tfor (var i = 0, uLen = secondaryStack.length; i < uLen; i++) {\r\n\t\t\t\t\tif (secondaryStack[i].length != 0) {\r\n\t\t\t\t\t\t//副堆疊等於0就算是結束了\r\n\t\t\t\t\t\tFinish = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (Finish == true) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tFinish = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (primaryStack.length == 0 && routeTemp.length == 0) return andSearchNoRoute(keyword.nodeName); //如果路線和路線陣列的長度都是0就算結束\r\n\t\t\tdo {\r\n\t\t\t\t//遇到死路的處理:主堆疊pop出去由副堆疊pop出一個值PUSH進去\r\n\t\t\t\t//下一個節點選法:副堆疊pop出一個值PUSH進去\r\n\t\t\t\t//如果下一個節點走過了:主堆疊pop出去由副堆疊pop出一個值PUSH進去\r\n\t\t\t\twhile (secondaryStack[secondaryStackCount].length == 0) {\r\n\t\t\t\t\t//遇到二維陣列的pop值是空的\r\n\t\t\t\t\tif (secondaryStackCount == 0) {\r\n\t\t\t\t\t\t//真的是空的就結束\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tprimaryStack.pop();\r\n\t\t\t\t\tsecondaryStack.pop();\r\n\t\t\t\t\tsecondaryStackCount--;\r\n\t\t\t\t}\r\n\t\t\t\tkeywordTemp = secondaryStack[secondaryStackCount].pop();\r\n\t\t\t} while (primaryStack.includes(keywordTemp)); //一直都有就一直pop\r\n\t\t\tif (keywordTemp == undefined) {\r\n\t\t\t\t//到最後都還是空的就出去\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} while (1);\r\n\tconsole.log('YA!!!!!');\r\n\tvar end = new Date().getTime();\r\n\tconsole.log('timer', end - start);\r\n\tconsole.log(routeTemp.length);\r\n\tconsole.log(routeTemp);\r\n\tfor (var i = 0; i < routeTemp.length; i++) {\r\n\t\tvar count = 0;\r\n\t\tkeyword.nodeName.forEach((item) => {\r\n\t\t\tif (routeTemp[i].includes(item)) count++;\r\n\t\t});\r\n\t\tif (count != keyword.nodeName.length) {\r\n\t\t\t//如果路線沒有所有目標點都經過就必須去掉\r\n\t\t\trouteTemp.splice(i, 1);\r\n\t\t\ti--;\r\n\t\t}\r\n\t}\r\n\trouteTemp.forEach((item) => {\r\n\t\t//加入路線，並以距離排序\r\n\t\troute.push(item);\r\n\t});\r\n\tconsole.log('finish');\r\n}\r\n/**\r\n * 運用flooding演算法寫成的and搜尋功能，性能大幅提升\r\n * @param {object} keyword - 搜尋的目標\r\n * @param {(number|string)} routeFloor - 搜尋的階層，可以參考{@link routeFloor}\r\n * @throws andSearchNoRoute {@link andSearchNoRoute }\r\n * @returns dataAppendOr 將結果整合\r\n */\r\nfunction floodingSearch(keyword, searchFloor){\r\n\tlet lineStack = {};\r\n\tlet lockLine = new Array();\r\n\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_0__.data.category.forEach(item=>{\r\n\t\tlineStack[item.id] = 0;\r\n\t});\r\n\tfor(let i=0;i<keyword.nodeName.length;i++){ \r\n\t\tlet c = 0;\r\n\t\tlet secondaryStack = new Array(keyword.nodeName[i]);\r\n\t\tlockLine = [];\r\n\t\tdo{\r\n\t\tc++;\r\n\t\tlet union_collect = [];\r\n\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_0__.data.category.filter((category) => {\r\n\t\t\t//搜尋陣列理的節點連到的下一個節點\r\n\t\t\tif (secondaryStack.includes(category.target) || secondaryStack.includes(category.source)) {\r\n\t\t\t\t\tif (category.show === true && !lockLine.includes(category.id)) {\r\n\t\t\t\t\t\tlet answer  = false;\r\n\t\t\t\t\t\tif (keyword.lineName.length !== 0) {\r\n\t\t\t\t\t\t\t//看看有沒有個別線的條件\r\n\t\t\t\t\t\t\tkeyword.lineName.forEach((item) => {\r\n\t\t\t\t\t\t\t\tif (item.includes(category.name)) {\r\n\t\t\t\t\t\t\t\t\t//看看這條線有沒有在條件內\r\n\t\t\t\t\t\t\t\t\tif (item.length > 1) {\r\n\t\t\t\t\t\t\t\t\t\t//如果條件為多種關係組合\r\n\t\t\t\t\t\t\t\t\t\tlet bench = [];\r\n\t\t\t\t\t\t\t\t\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_0__.data.category.forEach(cat =>{\r\n\t\t\t\t\t\t\t\t\t\t\tif(cat.target === category.target && cat.source === category.source)\r\n\t\t\t\t\t\t\t\t\t\t\t\tbench.push(cat.name);\r\n\t\t\t\t\t\t\t\t\t\t\telse if(cat.target === category.source && cat.source === category.target)\r\n\t\t\t\t\t\t\t\t\t\t\t\tbench.push(cat.name);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tlet c = 0;\r\n\t\t\t\t\t\t\t\t\t\titem.forEach(a=>{\r\n\t\t\t\t\t\t\t\t\t\t\tif(bench.includes(a))\r\n\t\t\t\t\t\t\t\t\t\t\tc++;\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tif(c ===  item.length)\r\n\t\t\t\t\t\t\t\t\t\t\tanswer = true;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tanswer =  true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tanswer =  true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(answer ===  true){\r\n\t\t\t\t\t\t\tif(secondaryStack.includes(category.target)){\r\n\t\t\t\t\t\t\t\tunion_collect.push(category.source);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tunion_collect.push(category.target);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlockLine.push(category.id);\r\n\t\t\t\t\t\t\t\tlineStack[category.id] = lineStack[category.id] + c;\r\n\t\t\t\t\t\t}\r\n\t  \t\t\t\t} \r\n\t\t\t}\r\n\t\t});\r\n\t\tsecondaryStack = Array.from(new Set(union_collect)); //去掉重複的節點\r\n\t\tif (secondaryStack.length === 0) break; //如果下一次沒東西就跳出去\r\n\t} while(1);\r\n\t\tlineStack = objectRemover(lineStack, lockLine);\r\n\t}\r\n\tlet unionCollect = [];\r\n\tlet categories = _chartSetting_js__WEBPACK_IMPORTED_MODULE_0__.data.category.filter(category =>{\r\n\t\tif(lineStack.hasOwnProperty(category.id)){\r\n\t\t\tunionCollect.push(category.target,category.source);\r\n\t\t\treturn category\r\n\t\t}\r\n\t});\r\n\tlet count = 0;\r\n\tkeyword.nodeName.forEach(item=>{\r\n\t\tif(unionCollect.includes(item))\r\n\t\t\tcount++;\r\n\t});\r\n\tif(count < keyword.nodeName.length){\r\n\t\treturn andSearchNoRoute(keyword.nodeName);\r\n\t}\r\n\tlockLine = [];\r\n\tlet range = searchFilter(unionCollect, keyword);\r\n\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_0__.data.category.forEach(category =>{\r\n\t\tif(range.includes(category.source) && range.includes(category.target))\r\n\t\t\tlockLine.push(category.id);\r\n\t});\r\n\tlineStack = objectRemover(lineStack, lockLine);\r\n\tlockLine.forEach(item=>{\r\n\t\tlineStack[item] = Math.floor(lineStack[item]/keyword.nodeName.length);\r\n\t\tif(!result.routeHash.includes(lineStack[item]))\r\n\t\t\tresult.routeHash.push(lineStack[item])\r\n\t});\r\n\t// console.log(result.routeHash)\r\n\t// console.log(lineStack);\r\n\tresult.routeHash.sort(function(a, b) {\r\n\t\treturn a - b;\r\n\t});\r\n\tconsole.log(result.routeHash);\r\n\tif(searchFloor === 'All'){\r\n\t\tsearchFloor = result.routeHash[result.routeHash.length - 1];\r\n\t}\r\n\tunionCollect = [];\r\n\tcategories = _chartSetting_js__WEBPACK_IMPORTED_MODULE_0__.data.category.filter(category =>{\r\n\t\tif(lineStack.hasOwnProperty(category.id) && lineStack[category.id] <= searchFloor){\r\n\t\t\tunionCollect.push(category.target,category.source);\r\n\t\t\treturn category;\r\n\t\t}\r\n\t});\r\n\tunionCollect = searchFilter(unionCollect, keyword)\r\n\tcategories = _chartSetting_js__WEBPACK_IMPORTED_MODULE_0__.data.category.filter(category =>{\r\n\t\tif(unionCollect.includes(category.target)&& unionCollect.includes(category.source))\r\n\t\t\treturn category;\r\n\t});\r\n\tlet links = categories.filter((category) => {\r\n\t\t//將要顯示的線整理起來\r\n\t\tif (category.show == true)  return category;\r\n\t});\r\n\tlet nodes = _chartSetting_js__WEBPACK_IMPORTED_MODULE_0__.data.nodes.filter((node) => {\r\n\t\t//將要顯示的點整理起來\r\n\t\treturn unionCollect.includes(node.name);\r\n\t});\r\n\tnodes.filter((node) => {\r\n\t\t//將收旬的點改成紅色，但不能影響原始資料\r\n\t\tif(keyword.nodeName.includes(node.name))\r\n         \tnode.itemStyle.color = 'red'\r\n\t\treturn node;\r\n\t});\r\n\tdataAppendOr(categories, links, nodes); //將資料整合起來\r\n\t/**\r\n\t * 將物件陣列移除\r\n\t * @memberof floodingSearch\r\n\t * @param {object} object - 資料\r\n\t * @param {array} keepId - 要留下來的線段id\r\n\t * @returns {object}處理完的資料\r\n\t */\r\n\tfunction objectRemover(object, keepId){\r\n\t\tlet temp = {};\r\n\t\tkeepId.forEach(item =>{\r\n\t\t\ttemp[item] = object[item];\r\n\t\t})\r\n\t\treturn temp;\r\n\t\t\r\n\t}\r\n\t/**\r\n\t * 去掉不是終點的端點\r\n\t * @memberof floodingSearch\r\n\t * @param {*} range 資料集\r\n\t * @param {*} keyword 搜尋的項目\r\n\t * @returns {array} 篩選後剩下的節點\r\n\t */\r\n\tfunction searchFilter(range, keyword){\r\n\t\tdo{\r\n\t\t\tlet unionCollect = [];\r\n\t\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_0__.data.category.forEach(category =>{\r\n\t\t\t\tif(range.includes(category.target) && range.includes(category.source)){\r\n\t\t\t\t\tunionCollect.push(category.target,category.source);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\trange = unionCollect.filter(function(element, index, arr){\r\n\t\t\t\tif(keyword.nodeName.includes(element))\r\n\t\t\t\t\treturn element;\r\n\t\t\t\telse \t\r\n\t\t\t\treturn arr.indexOf(element) !== index;\r\n\t\t\t});\r\n\t\t\tunionCollect = Array.from(new Set(unionCollect)); \r\n\t\t\trange = Array.from(new Set(range)); \r\n\t\t\tif(unionCollect.length === range.length)\r\n\t\t\tbreak;\r\n\t\t}while(1)\r\n\t\treturn range;\r\n\t}\r\n}\r\n\r\nfunction data_filter_and(route, routeFloor) {\r\n\tvar categories = [],\r\n\t\tlinks = [],\r\n\t\tnodes = [];\r\n\tvar temp = [];\r\n\tvar nodeCollection = [];\r\n\tif (routeFloor === 'All') {\r\n\t\tvar y = 0;\r\n\t} else {\r\n\t\tfor (var i = 0, q = route.length; i < q; i++) {\r\n\t\t\tif (route[i].length - 1 === routeFloor) {\r\n\t\t\t\ty = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor (; y < route.length; y++) {\r\n\t\tfor (var i = 0, len = route[y].length; i < len - 1; i++)\r\n\t\t\tvar temp = temp.concat(\r\n\t\t\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_0__.data.category.filter((category) => {\r\n\t\t\t\t\tif (route[y][i].includes(category.target) && route[y][i + 1].includes(category.source)) {\r\n\t\t\t\t\t\tif (category.show === true) {\r\n\t\t\t\t\t\t\treturn category;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (route[y][i + 1].includes(category.target) && route[y][i].includes(category.source)) {\r\n\t\t\t\t\t\tif (category.show === true) {\r\n\t\t\t\t\t\t\treturn category;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\tlet a = categories.map(function(item, index, array) {\r\n\t\t\treturn item.id;\r\n\t\t});\r\n\t\ttemp = temp.filter((category) => {\r\n\t\t\treturn !a.includes(category.id);\r\n\t\t});\r\n\t\tnodeCollection = nodeCollection.concat(route[y]);\r\n\t\tnodeCollection = Array.from(new Set(nodeCollection));\r\n\t\tcategories = categories.concat(temp);\r\n\t\tif (y + 1 === route.length) break;\r\n\t\tif (routeFloor !== 'All' && route[y].length !== route[y + 1].length) break;\r\n\t}\r\n\tlinks = categories.filter((category) => {\r\n\t\tif (category.show == true) {\r\n\t\t\treturn category;\r\n\t\t}\r\n\t});\r\n\tnodes = _chartSetting_js__WEBPACK_IMPORTED_MODULE_0__.data.nodes.filter((node) => {\r\n\t\treturn nodeCollection.includes(node.name);\r\n\t});\r\n\tdataAppendOr(categories, links, nodes);\r\n}\r\n/**\r\n * 將許多收尋結果整合在一起，並存到result的物件中\r\n * @param {object} categories - 搜尋到的線段結果\r\n * @param {object} links - 要顯示的線段結果\r\n * @param {object} nodes - 要顯示的節點\r\n */\r\nfunction dataAppendOr(categories, links, nodes) {\r\n\tlet a = result.category.map(function(item, index, array) {\r\n\t\treturn item.id;\r\n\t});\r\n\tcategories = categories.filter((category) => {\r\n\t\treturn !a.includes(category.id);\r\n\t});\r\n\tresult.category = result.category.concat(categories);\r\n\ta = result.links.map(function(item, index, array) {\r\n\t\treturn item.id;\r\n\t});\r\n\tlinks = links.filter((links) => {\r\n\t\treturn !a.includes(links.id);\r\n\t});\r\n\tresult.links = result.links.concat(links);\r\n\ta = result.nodes.map(function(item, index, array) {\r\n\t\treturn item.name;\r\n\t});\r\n\tnodes = nodes.filter((node) => {\r\n\t\treturn !a.includes(node.name);\r\n\t});\r\n\tresult.nodes = result.nodes.concat(nodes);\r\n}\n\n//# sourceURL=webpack://ascdc-sna/./js/searchFunction.js?");

/***/ }),

/***/ "./js/searchSuggest.js":
/*!*****************************!*\
  !*** ./js/searchSuggest.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"autocomplete\": () => (/* binding */ autocomplete)\n/* harmony export */ });\n/**\r\n * @module searchSuggest\r\n * @description 搜尋建議模組\r\n * @author Wei-Jie Li\r\n * @createDate 2021-07-15\r\n * @see  w3schools {@link https://www.w3schools.com/howto/howto_js_autocomplete.asp} \r\n */\r\n/**\r\n * \r\n * @param {object} inp - use document.getElementById to select input filed\r\n * @param {array} arr0 - node and line dataset\r\n */\r\nfunction autocomplete(inp, arr0) {\r\n    /*the autocomplete function takes two arguments,\r\n    the text field element and an array of possible autocompleted values:*/\r\n    var currentFocus;\r\n    /*execute a function when someone writes in the text field:*/\r\n    inp.addEventListener(\"input\", function(e) {\r\n        var a, b, i, val = this.value;\r\n        /*close any already open lists of autocompleted values*/\r\n        closeAllLists();\r\n        if (!val) { return false;}\r\n        currentFocus = -1;\r\n        /* choose correct dataset by kModel value*/ \r\n        if($('#kModel').val() === 'node'){\r\n            var arr = arr0[0];\r\n        }else{\r\n            var arr = arr0[1];\r\n        }\r\n        /* remove the val before &、|、and、or and save in searchVal*/\r\n        var x = val.replace(' and ', '&');\r\n\t\t      x = x.replace(' or ', '|');\r\n        if(x.lastIndexOf('&') === x.lastIndexOf('|') === -1)\r\n            var searchVal = x;\r\n        else if(x.lastIndexOf('&') > x.lastIndexOf('|'))\r\n            var searchVal = x.substr(x.lastIndexOf('&')+1);\r\n        else\r\n            var searchVal = x.substr(x.lastIndexOf('|')+1);\r\n        // console.log(searchVal)\r\n        /*create a DIV element that will contain the items (values):*/\r\n        a = document.createElement(\"DIV\");\r\n        a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n        a.setAttribute(\"class\", \"autocomplete-items\");\r\n        /*append the DIV element as a child of the autocomplete container:*/\r\n        this.parentNode.appendChild(a);\r\n        /*for each item in the array...*/\r\n        for (i = 0; i < arr.length; i++) {\r\n          /*check if the item starts with the same letters as the text field value:*/\r\n          if (arr[i].substr(0, searchVal.length).toUpperCase() == searchVal.toUpperCase()) {\r\n            /*create a DIV element for each matching element:*/\r\n            b = document.createElement(\"DIV\");\r\n            /*make the matching letters bold:*/\r\n            b.innerHTML = \"<strong>\" + val + \"</strong>\";\r\n            b.innerHTML += arr[i].substr(searchVal.length);\r\n            /*insert a input field that will hold the current array item's value:*/\r\n            b.innerHTML += \"<input type='hidden' value='\" + val + arr[i].substr(searchVal.length) + \"'>\";\r\n            /*execute a function when someone clicks on the item value (DIV element):*/\r\n            b.addEventListener(\"click\", function(e) {\r\n                /*insert the value for the autocomplete text field:*/\r\n                inp.value = this.getElementsByTagName(\"input\")[0].value;\r\n                /*close the list of autocompleted values,\r\n                (or any other open lists of autocompleted values:*/\r\n                closeAllLists();\r\n            });\r\n            a.appendChild(b);\r\n          }\r\n        }\r\n    });\r\n    /*execute a function presses a key on the keyboard:*/\r\n    inp.addEventListener(\"keydown\", function(e) {\r\n        var x = document.getElementById(this.id + \"autocomplete-list\");\r\n        if (x) x = x.getElementsByTagName(\"div\");\r\n        if (e.keyCode == 40) {\r\n          /*If the arrow DOWN key is pressed,\r\n          increase the currentFocus variable:*/\r\n          currentFocus++;\r\n          /*and and make the current item more visible:*/\r\n          addActive(x);\r\n        } else if (e.keyCode == 38) { //up\r\n          /*If the arrow UP key is pressed,\r\n          decrease the currentFocus variable:*/\r\n          currentFocus--;\r\n          /*and and make the current item more visible:*/\r\n          addActive(x);\r\n        } else if (e.keyCode == 13) {\r\n          /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n          e.preventDefault();\r\n          if (currentFocus > -1) {\r\n            /*and simulate a click on the \"active\" item:*/\r\n            if (x) x[currentFocus].click();\r\n          }\r\n        }\r\n    });\r\n    function addActive(x) {\r\n      /*a function to classify an item as \"active\":*/\r\n      if (!x) return false;\r\n      /*start by removing the \"active\" class on all items:*/\r\n      removeActive(x);\r\n      if (currentFocus >= x.length) currentFocus = 0;\r\n      if (currentFocus < 0) currentFocus = (x.length - 1);\r\n      /*add class \"autocomplete-active\":*/\r\n      x[currentFocus].classList.add(\"autocomplete-active\");\r\n    }\r\n    function removeActive(x) {\r\n      /*a function to remove the \"active\" class from all autocomplete items:*/\r\n      for (var i = 0; i < x.length; i++) {\r\n        x[i].classList.remove(\"autocomplete-active\");\r\n      }\r\n    }\r\n    function closeAllLists(elmnt) {\r\n      /*close all autocomplete lists in the document,\r\n      except the one passed as an argument:*/\r\n      var x = document.getElementsByClassName(\"autocomplete-items\");\r\n      for (var i = 0; i < x.length; i++) {\r\n        if (elmnt != x[i] && elmnt != inp) {\r\n          x[i].parentNode.removeChild(x[i]);\r\n        }\r\n      }\r\n    }\r\n    /*execute a function when someone clicks in the document:*/\r\n    document.addEventListener(\"click\", function (e) {\r\n        closeAllLists(e.target);\r\n    });\r\n  }\r\n\n\n//# sourceURL=webpack://ascdc-sna/./js/searchSuggest.js?");

/***/ }),

/***/ "./js/sliderbarSetting.js":
/*!********************************!*\
  !*** ./js/sliderbarSetting.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"silderInit\": () => (/* binding */ silderInit),\n/* harmony export */   \"sliderBar\": () => (/* binding */ sliderBar),\n/* harmony export */   \"positionCalculator\": () => (/* binding */ positionCalculator)\n/* harmony export */ });\n/* harmony import */ var jquery_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery-ui */ \"./node_modules/jquery-ui-dist/jquery-ui.min.js\");\n/* harmony import */ var jquery_ui__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery_ui__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_closeness_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/closeness.js */ \"./lib/closeness.js\");\n/* harmony import */ var _lib_eccentricity_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/eccentricity.js */ \"./lib/eccentricity.js\");\n/* harmony import */ var _lib_degree_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/degree.js */ \"./lib/degree.js\");\n/* harmony import */ var _lib_betweenness_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lib/betweenness.js */ \"./lib/betweenness.js\");\n/* harmony import */ var _chartSetting_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chartSetting.js */ \"./js/chartSetting.js\");\n/* harmony import */ var ngraph_graph__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngraph.graph */ \"./node_modules/ngraph.graph/index.js\");\n/* harmony import */ var ngraph_graph__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(ngraph_graph__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _mainSetting__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./mainSetting */ \"./js/mainSetting.js\");\n/**\r\n * @module sliderbarSetting\r\n * @description 與左側調整項相關的程式碼\r\n * @author Wei-Jie Li\r\n * @createDate 2021-03-21\r\n */\r\n\r\nvar createLayout = __webpack_require__(/*! ngraph.forcelayout */ \"./node_modules/ngraph.forcelayout/index.js\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * 所有中心性的值\r\n * @type {array}\r\n */\r\nvar central = [];\r\n/**\r\n * 長度為三的陣列，三個值分別代表三個篩選功能的值\r\n * @type {array}\r\n */\r\nvar filterValue = [ 0, 0, 0 ];\r\n/**\r\n * ngraph 的參數\r\n * @type {object}\r\n */\r\nvar g;\r\n/**\r\n * 中心性值的hash表，為了給slider bar 參考\r\n * @type {array}\r\n */\r\nlet centralHash = [];\r\n/**\r\n * 運用{@link jquery_slider_setting }的參數初始化sikderbar  \r\n */\r\nfunction silderInit() {\r\n\tdocument.querySelector('.centralitySelecter').onchange = function(e) {\r\n\t\tcentrality(e.target.value);\r\n\t};\r\n\tdocument.querySelector('.switch-input').onclick = function(e) {\r\n\t\tswitchType();\r\n\t};\r\n\t$('.centrality').hide();\r\n\t// const length = [option.series[0].force.edgeLength[0], option.series[0].force.edgeLength[1]]\r\n\tfor (let jquery_slider_setting_element of _chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.jquery_slider_setting) {\r\n\t\t$(`.slider_item > #${jquery_slider_setting_element.object}`).slider({\r\n\t\t\tdisabled: jquery_slider_setting_element.disable,\r\n\t\t\trange: jquery_slider_setting_element.range,\r\n\t\t\tmin: jquery_slider_setting_element.min,\r\n\t\t\tmax: jquery_slider_setting_element.max,\r\n\t\t\tstep: jquery_slider_setting_element.step,\r\n\t\t\tvalue: jquery_slider_setting_element.value\r\n\t\t});\r\n\t\tif (\r\n\t\t\tjquery_slider_setting_element.object === 'word_strength' ||\r\n\t\t\tjquery_slider_setting_element.object === 'common_show_value'\r\n\t\t)\r\n\t\t\t$(`.slider_item > input[id=${jquery_slider_setting_element.object}]`).val(\r\n\t\t\t\t`≥ ${jquery_slider_setting_element.value}`\r\n\t\t\t);\r\n\t\telse if (jquery_slider_setting_element.object === 'relation_distance')\r\n\t\t\t$(`.slider_item > input[id=${jquery_slider_setting_element.object}]`).val(\r\n\t\t\t\tjquery_slider_setting_element.values\r\n\t\t\t);\r\n\t\telse\r\n\t\t\t$(`.slider_item > input[id=${jquery_slider_setting_element.object}]`).val(\r\n\t\t\t\tjquery_slider_setting_element.value\r\n\t\t\t);\r\n\t}\r\n}\r\n/**\r\n * sliderbar發生改變時執行的動作\r\n * @param {event} e - 觸發事件\r\n * @param {string}} ui - 觸發的項目 \r\n */\r\nfunction sliderBar(e, ui) {\r\n\tif (e === 'All') {\r\n\t\tfilterControler('All', 1);\r\n\t} else {\r\n\t\tif (e.target.id == 'common_show_value' || e.target.id == 'word_strength') {\r\n\t\t\tif(ui.value == -1)\r\n\t\t\t\t$('input[id=' + e.target.id + ']').val('= 0');\r\n\t\t\telse\r\n\t\t\t$('input[id=' + e.target.id + ']').val(`≥ ${ui.value}`);\r\n\t\t} else if (e.target.id == 'relation_distance') {\r\n\t\t\t$('input[id=' + e.target.id + ']').val(ui.values);\r\n\t\t} else {\r\n\t\t\t$('input[id=' + e.target.id + ']').val(ui.value);\r\n\t\t}\r\n\t\tswitch (e.target.id) {\r\n\t\t\tcase 'relation_strength':\r\n\t\t\t\tbreak;\r\n\t\t\t// case 'word_strength':\r\n\t\t\t//     break;\r\n\t\t\tcase 'group_label_distance':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'relation_distance':\r\n\t\t\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].force.edgeLength = ui.values;\r\n\t\t\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].force.edgeLength[0] *= 5;\r\n\t\t\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].force.edgeLength[1] *= 5;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'node_distance':\r\n\t\t\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].force.repulsion = ui.value * 100;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'relation_link_width':\r\n\t\t\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.data.links.forEach((link) => {\r\n\t\t\t\t\tlink.lineStyle.width = link.lineStyle.originalWidth * ui.value;\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'main_screen_room':\r\n\t\t\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].zoom = ui.value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'relation_font_size':\r\n\t\t\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].edgeLabel.fontSize = ui.value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'subject_font_size':\r\n\t\t\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].label.fontSize = ui.value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'node_size':\r\n\t\t\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.data.nodes.forEach((node) => {\r\n\t\t\t\t\tnode.symbolSize = node.originalSymbolSize * ui.value;\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'word_strength': //詞頻強度\r\n\t\t\t\tfilterControler('word', ui.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'common_show_value': //共現次數\r\n\t\t\t\tfilterControler('common', ui.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'centrality': //中心性\r\n\t\t\t\tfilterControler('centrality', ui.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'arrowSize':\r\n\t\t\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].edgeSymbolSize = ui.value;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n/**\r\n * 處理出現次數篩選與中心性篩選的功能\r\n * @param {string} target - 被改變的項目\r\n * @param {number} value - 改變的值 \r\n */\r\nfunction filterControler(target, value) {\r\n\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].links = JSON.parse(JSON.stringify(_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].categories));\r\n\tif (target === 'common') filterValue[0] = value;\r\n\telse if (target === 'word') filterValue[1] = value;\r\n\telse if (target === 'centrality') filterValue[2] = value;\r\n\tcommon_value(filterValue[0]);\r\n\tword_strength(filterValue[1]);\r\n\tcentralityContrl(filterValue[2]);\r\n\r\n\tfunction common_value(value) {\r\n\t\tvar value_filter = [];\r\n\t\t// console.log(value);\r\n\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].links = _chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].links.filter((category) => {\r\n\t\t\tif (value == -1) {\r\n\t\t\t\tif (category.value == 0) {\r\n\t\t\t\t\tvalue_filter.push(category.target, category.source);\r\n\t\t\t\t\treturn category;\r\n\t\t\t\t}\r\n\t\t\t} else if (category.value >= value) {\r\n\t\t\t\tvalue_filter.push(category.target, category.source);\r\n\t\t\t\treturn category;\r\n\t\t\t}\r\n\t\t});\r\n\t\tvalue_filter = Array.from(new Set(value_filter));\r\n\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].nodes = _chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.data.nodes.filter((node) => {\r\n\t\t\t// console.log(value_filter.includes(node.name));\r\n\t\t\treturn value_filter.includes(node.name);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction word_strength(value) {\r\n\t\tvar valueFilter = [];\r\n\t\tvar valueFilter2 = [];\r\n\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].nodes = _chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].nodes.filter((node) => {\r\n\t\t\tif (node.idf >= value) {\r\n\t\t\t\tvalueFilter.push(node.name);\r\n\t\t\t\treturn node;\r\n\t\t\t}\r\n\t\t});\r\n\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].links = _chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].links.filter((category) => {\r\n\t\t\tif (valueFilter.includes(category.target) && valueFilter.includes(category.source)) {\r\n\t\t\t\tvalueFilter2.push(category.target, category.source);\r\n\t\t\t\treturn category;\r\n\t\t\t}\r\n\t\t});\r\n\t\tif ($('.alone').is(':checked') === false) {\r\n\t\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].nodes = _chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.data.nodes.filter((node) => {\r\n\t\t\t\treturn valueFilter2.includes(node.name);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction centralityContrl(value) {\r\n\t\tif (centralHash.length === 0) return;\r\n\t\t$(`.slider_item > input[id=centrality]`).val(centralHash[value]);\r\n\t\tlet temp = [];\r\n\t\tcentral.forEach((item) => {\r\n\t\t\tif (item[1] < centralHash[value]) temp.push(item[0]);\r\n\t\t});\r\n\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].links.forEach(function(item, index, array) {\r\n\t\t\tif (temp.includes(item.target) || temp.includes(item.source)) {\r\n\t\t\t\titem.lineStyle.opacity = 0.1;\r\n\t\t\t\titem.label.show = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].nodes.forEach((node) => {\r\n\t\t\tnode.itemStyle.opacity = 1;\r\n\t\t\tif (temp.includes(node.name)) node.itemStyle.opacity = 0.1;\r\n\t\t});\r\n\t}\r\n}\r\n/**\r\n * 中心性計算並初始化slider bar\r\n * @see ngraph.centrality {@link https://github.com/anvaka/ngraph.centrality}\r\n * @param {string} value - 用哪種中心性(Eccentricity、closeness、betweenness、degree)\r\n */\r\nfunction centrality(value) {\r\n\tngraph();\r\n\tvar valueFilter = [];\r\n\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].categories.forEach((category) => {\r\n\t\tvalueFilter.push(category.target, category.source);\r\n\t});\r\n\tvalueFilter = Array.from(new Set(valueFilter));\r\n\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].nodes = _chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.data.nodes.filter((node) => {\r\n\t\treturn valueFilter.includes(node.name);\r\n\t});\r\n\tif (value === 'betweenness') countBetweenness();\r\n\telse if (value === 'closeness') countCloseness();\r\n\telse if (value === 'eccentricity') countEccentricity();\r\n\telse if (value === 'degree') countDegree();\r\n\tcentralitySlider();\r\n\tfunction countCloseness() {\r\n\t\tlet directedCloseness = (0,_lib_closeness_js__WEBPACK_IMPORTED_MODULE_1__.closeness)(g);\r\n\t\tconsole.log(directedCloseness);\r\n\t\tcentral = [];\r\n\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].nodes.forEach((node) => {\r\n\t\t\tcentral.push([ node.name, directedCloseness[node.name] ]);\r\n\t\t});\r\n\t}\r\n\tfunction countEccentricity() {\r\n\t\tlet directedEccentricity = (0,_lib_eccentricity_js__WEBPACK_IMPORTED_MODULE_2__.eccentricity)(g);\r\n\t\tcentral = [];\r\n\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].nodes.forEach((node) => {\r\n\t\t\tcentral.push([ node.name, directedEccentricity[node.name] ]);\r\n\t\t});\r\n\t}\r\n\tfunction countDegree() {\r\n\t\tlet directedDgree = (0,_lib_degree_js__WEBPACK_IMPORTED_MODULE_3__.degree)(g);\r\n\t\tcentral = [];\r\n\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].nodes.forEach((node) => {\r\n\t\t\tcentral.push([ node.name, directedDgree[node.name] ]);\r\n\t\t});\r\n\t}\r\n\tfunction countBetweenness() {\r\n\t\tlet directedBetweenness = (0,_lib_betweenness_js__WEBPACK_IMPORTED_MODULE_4__.betweennes)(g);\r\n\t\tcentral = [];\r\n\t\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].nodes.forEach((node) => {\r\n\t\t\tcentral.push([ node.name, directedBetweenness[node.name] ]);\r\n\t\t});\r\n\t}\r\n\tfunction centralitySlider() {\r\n\t\tcentral.sort(function(a, b) {\r\n\t\t\tif (a[1] > b[1]) {\r\n\t\t\t\treturn 1;\r\n\t\t\t} else if (a[1] < b[1]) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t});\r\n\t\tvar roundDecimal = function(val, precision) {\r\n\t\t\treturn Math.round(Math.round(val * Math.pow(10, (precision || 0) + 1)) / 10) / Math.pow(10, precision || 0);\r\n\t\t};\r\n\t\tif (central[central.length - 1][1] <= 1) var precision = 5;\r\n\t\telse if (central[central.length - 1][1] <= 10) var precision = 3;\r\n\t\telse if (central[central.length - 1][1] <= 100) var precision = 2;\r\n\t\telse var precision = 0;\r\n\t\tcentralHash = [];\r\n\t\tcentral.forEach((item) => {\r\n\t\t\titem[1] = roundDecimal(item[1], precision);\r\n\t\t\tcentralHash.push(item[1]);\r\n\t\t});\r\n\t\tcentralHash = Array.from(new Set(centralHash));\r\n\t\tconsole.log(centralHash);\r\n\t\t$(`.slider_item > #centrality`).slider({\r\n\t\t\tmin: 0,\r\n\t\t\tmax: centralHash.length - 1, //最大階層數\r\n\t\t\tstep: 1,\r\n\t\t\tvalue: 0, //current option setting value\r\n\t\t\tdisable: false,\r\n\t\t\trange: 'min'\r\n\t\t});\r\n\t\t$(`.slider_item > input[id=centrality]`).val(centralHash[0]);\r\n\t\t$('.centrality').show();\r\n\t}\r\n\t$('.centrality').show();\r\n\tfilterControler('centrality', 0);\r\n}\r\n/**\r\n * 初始化ngraph模組，並將畫面資料傳入該模組來計算中心性，每次畫面更動都須執行一次\r\n * @see ngraph {@link https://github.com/anvaka/ngraph}\r\n */\r\nfunction ngraph() {\r\n\tg = ngraph_graph__WEBPACK_IMPORTED_MODULE_6___default()();\r\n\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].nodes.forEach((node) => {\r\n\t\tg.addNode(node.name);\r\n\t});\r\n\tconsole.log(g);\r\n\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].categories.forEach((category) => {\r\n\t\t// ccc += category.value;\r\n\t\t// for(let i = 0; i<category.value; i++){\r\n\t\t// \tg.addLink(category.target, category.source);\r\n\t\t// }\r\n\t\tg.addLink(category.target, category.source);\r\n\t});\r\n}\r\n/**\r\n * 計算forcelayout用的，現在沒用到\r\n * @see ngraph.forcelayout {@link https://github.com/anvaka/ngraph.forcelayout}\r\n */\r\nfunction positionCalculator() {\r\n\tngraph();\r\n\tvar physicsSettings = {\r\n\t\ttimeStep: 0.5,\r\n\t\tdimensions: 2,\r\n\t\tgravity: -120,\r\n\t\ttheta: 0.8,\r\n\t\tspringLength: 10,\r\n\t\tspringCoefficient: 0.8,\r\n\t\tdragCoefficient: 0.9\r\n\t};\r\n\tvar layout = createLayout(g, physicsSettings);\r\n\t_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].nodes.forEach(function(node) {\r\n\t\tnode.x = createLayout(g).getNodePosition(node.name).x;\r\n\t\tnode.y = createLayout(g).getNodePosition(node.name).y;\r\n\t});\r\n\tconsole.log(_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].nodes);\r\n\t// now we can ask layout where each node/link is best positioned:\r\n\t//   g.forEachNode(function(node) {\r\n\t//     console.log(ngraphCreateLayout(g).getNodePosition(node.id).y);\r\n\t//     // Node position is pair of x,y coordinates:\r\n\t//     // {x: ... , y: ... }\r\n\t//   });\r\n}\r\n/**\r\n * 用來切換不同的layout有環形圖與力佈局\r\n */\r\nfunction switchType() {\r\n\tif (_chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].layout === 'circular') _chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].layout = 'force';\r\n\telse _chartSetting_js__WEBPACK_IMPORTED_MODULE_5__.option.series[0].layout = 'circular';\r\n\t(0,_mainSetting__WEBPACK_IMPORTED_MODULE_7__.event_setOption_function)();\r\n}\r\n\n\n//# sourceURL=webpack://ascdc-sna/./js/sliderbarSetting.js?");

/***/ }),

/***/ "./lib/betweenness.js":
/*!****************************!*\
  !*** ./lib/betweenness.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"betweennes\": () => (/* binding */ betweennes)\n/* harmony export */ });\n// module.exports = betweennes;\r\n\r\n/**\r\n * I'm using http://www.inf.uni-konstanz.de/algo/publications/b-vspbc-08.pdf\r\n * as a reference for this implementation\r\n */\r\nfunction betweennes(graph, oriented) {\r\n  var Q = [],\r\n    S = []; // Queue and Stack\r\n  // list of predecessors on shortest paths from source\r\n  var pred = Object.create(null);\r\n  // distance from source\r\n  var dist = Object.create(null);\r\n  // number of shortest paths from source to key\r\n  var sigma = Object.create(null);\r\n  // dependency of source on key\r\n  var delta = Object.create(null);\r\n\r\n  var currentNode;\r\n  var centrality = Object.create(null);\r\n\r\n  graph.forEachNode(setCentralityToZero);\r\n  graph.forEachNode(calculateCentrality);\r\n\r\n  if (!oriented) {\r\n    // The centrality scores need to be divided by two if the graph is not oriented,\r\n    // since all shortest paths are considered twice\r\n    Object.keys(centrality).forEach(divideByTwo);\r\n  }\r\n\r\n  return centrality;\r\n\r\n  function divideByTwo(key) {\r\n    centrality[key] /= 2;\r\n  }\r\n\r\n  function setCentralityToZero(node) {\r\n    centrality[node.id] = 0;\r\n  }\r\n\r\n  function calculateCentrality(node) {\r\n    currentNode = node.id;\r\n    singleSourceShortestPath(currentNode);\r\n    accumulate();\r\n  }\r\n\r\n  function accumulate() {\r\n    graph.forEachNode(setDeltaToZero);\r\n    while (S.length) {\r\n      var w = S.pop();\r\n      var coeff = (1 + delta[w])/sigma[w];\r\n      var predecessors = pred[w];\r\n      for (var idx = 0; idx < predecessors.length; ++idx) {\r\n        var v = predecessors[idx];\r\n        delta[v] += sigma[v] * coeff;\r\n      }\r\n      if (w !== currentNode) {\r\n        centrality[w] += delta[w];\r\n      }\r\n    }\r\n  }\r\n\r\n  function setDeltaToZero(node) {\r\n    delta[node.id] = 0;\r\n  }\r\n\r\n  function singleSourceShortestPath(source) {\r\n    graph.forEachNode(initNode);\r\n    dist[source] = 0;\r\n    sigma[source] = 1;\r\n    Q.push(source);\r\n\r\n    while (Q.length) {\r\n      var v = Q.shift();\r\n      S.push(v);\r\n      graph.forEachLinkedNode(v, toId, oriented);\r\n    }\r\n\r\n    function toId(otherNode) {\r\n      // NOTE: This code will also consider multi-edges, which are often\r\n      // ignored by popular software (Gephi/NetworkX). Depending on your use\r\n      // case this may not be desired and deduping needs to be performed. To\r\n      // save memory I'm not deduping here...\r\n      processNode(otherNode.id);\r\n    }\r\n\r\n    function initNode(node) {\r\n      var nodeId = node.id;\r\n      pred[nodeId] = []; // empty list\r\n      dist[nodeId] = -1;\r\n      sigma[nodeId] = 0;\r\n    }\r\n\r\n    function processNode(w) {\r\n      // path discovery\r\n      if (dist[w] === -1) {\r\n        // Node w is found for the first time\r\n        dist[w] = dist[v] + 1;\r\n        Q.push(w);\r\n      }\r\n      // path counting\r\n      if (dist[w] === dist[v] + 1) {\r\n        // edge (v, w) on a shortest path\r\n        sigma[w] += sigma[v];\r\n        pred[w].push(v);\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://ascdc-sna/./lib/betweenness.js?");

/***/ }),

/***/ "./lib/closeness.js":
/*!**************************!*\
  !*** ./lib/closeness.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"closeness\": () => (/* binding */ closeness)\n/* harmony export */ });\n// module.exports = closeness;\r\n\r\n/**\r\n * In a connected graph, the normalized closeness centrality of a node is the average\r\n * length of the shortest path between the node and all other nodes in the\r\n * graph. Thus the more central a node is, the closer it is to all other nodes.\r\n */\r\nfunction closeness(graph, oriented) {\r\n  var Q = [];\r\n  // list of predecessors on shortest paths from source\r\n  // distance from source\r\n  var dist = Object.create(null);\r\n\r\n  var currentNode;\r\n  var centrality = Object.create(null);\r\n\r\n  graph.forEachNode(setCentralityToZero);\r\n  graph.forEachNode(calculateCentrality);\r\n\r\n  return centrality;\r\n\r\n  function setCentralityToZero(node) {\r\n    centrality[node.id] = 0;\r\n  }\r\n\r\n  function calculateCentrality(node) {\r\n    currentNode = node.id;\r\n    singleSourceShortestPath(currentNode);\r\n    accumulate();\r\n  }\r\n\r\n  function accumulate() {\r\n    // Add all distances for node to array, excluding -1s\r\n    var distances = Object.keys(dist).map(function(key) {return dist[key]}).filter(function(val){return val !== -1});\r\n    // Set number of reachable nodes\r\n    var reachableNodesTotal = distances.length;\r\n    // Compute sum of all distances for node\r\n    var totalDistance = distances.reduce(function(a,b) { return a + b });\r\n    if (totalDistance > 0) {\r\n      centrality[currentNode] = ((reachableNodesTotal - 1) / totalDistance); \r\n    } else {\r\n      centrality[currentNode] = 0;\r\n    }\r\n  }\r\n\r\n  function singleSourceShortestPath(source) {\r\n    graph.forEachNode(initNode);\r\n    dist[source] = 0;\r\n    Q.push(source);\r\n\r\n    while (Q.length) {\r\n      var v = Q.shift();\r\n      graph.forEachLinkedNode(v, processNode, oriented);\r\n    }\r\n\r\n    function initNode(node) {\r\n      var nodeId = node.id;\r\n      dist[nodeId] = -1;\r\n    }\r\n\r\n    function processNode(otherNode) {\r\n      var w = otherNode.id\r\n      if (dist[w] === -1) {\r\n        // Node w is found for the first time\r\n        dist[w] = dist[v] + 1;\r\n        Q.push(w);\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://ascdc-sna/./lib/closeness.js?");

/***/ }),

/***/ "./lib/degree.js":
/*!***********************!*\
  !*** ./lib/degree.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"degree\": () => (/* binding */ degree)\n/* harmony export */ });\n// module.exports = degree;\r\n\r\n/**\r\n * Calculates graph nodes degree centrality (in/out or both).\r\n *\r\n * @see http://en.wikipedia.org/wiki/Centrality#Degree_centrality\r\n *\r\n * @param {ngraph.graph} graph object for which we are calculating centrality.\r\n * @param {string} [kind=both] What kind of degree centrality needs to be calculated:\r\n *   'in'    - calculate in-degree centrality\r\n *   'out'   - calculate out-degree centrality\r\n *   'inout' - (default) generic degree centrality is calculated\r\n */\r\nfunction degree(graph, kind) {\r\n  var getNodeDegree;\r\n  var result = Object.create(null);\r\n\r\n  kind = (kind || 'both').toLowerCase();\r\n  if (kind === 'both' || kind === 'inout') {\r\n    getNodeDegree = inoutDegreeCalculator;\r\n  } else if (kind === 'in') {\r\n    getNodeDegree = inDegreeCalculator;\r\n  } else if (kind === 'out') {\r\n    getNodeDegree = outDegreeCalculator;\r\n  } else {\r\n    throw new Error('Expected centrality degree kind is: in, out or both');\r\n  }\r\n\r\n  graph.forEachNode(calculateNodeDegree);\r\n\r\n  return result;\r\n\r\n  function calculateNodeDegree(node) {\r\n    var links = graph.getLinks(node.id);\r\n    result[node.id] = getNodeDegree(links, node.id);\r\n  }\r\n}\r\n\r\nfunction inDegreeCalculator(links, nodeId) {\r\n  var total = 0;\r\n  if (!links) return total;\r\n\r\n  for (var i = 0; i < links.length; i += 1) {\r\n    total += (links[i].toId === nodeId) ? 1 : 0;\r\n  }\r\n  return total;\r\n}\r\n\r\nfunction outDegreeCalculator(links, nodeId) {\r\n  var total = 0;\r\n  if (!links) return total;\r\n\r\n  for (var i = 0; i < links.length; i += 1) {\r\n    total += (links[i].fromId === nodeId) ? 1 : 0;\r\n  }\r\n  return total;\r\n}\r\n\r\nfunction inoutDegreeCalculator(links) {\r\n  if (!links) return 0;\r\n\r\n  return links.length;\r\n}\r\n\n\n//# sourceURL=webpack://ascdc-sna/./lib/degree.js?");

/***/ }),

/***/ "./lib/eccentricity.js":
/*!*****************************!*\
  !*** ./lib/eccentricity.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"eccentricity\": () => (/* binding */ eccentricity)\n/* harmony export */ });\n// module.exports = eccentricity;\r\n\r\n/**\r\n * The eccentricity centrality of a node is the greatest distance between that node and\r\n * any other node in the network. \r\n */\r\nfunction eccentricity(graph, oriented) {\r\n  var Q = [];\r\n  // distance from source\r\n  var dist = Object.create(null);\r\n\r\n  var currentNode;\r\n  var centrality = Object.create(null);\r\n\r\n  graph.forEachNode(setCentralityToZero);\r\n  graph.forEachNode(calculateCentrality);\r\n\r\n  return centrality;\r\n\r\n  function setCentralityToZero(node) {\r\n    centrality[node.id] = 0;\r\n  }\r\n\r\n  function calculateCentrality(node) {\r\n    currentNode = node.id;\r\n    singleSourceShortestPath(currentNode);\r\n    accumulate();\r\n  }\r\n\r\n  function accumulate() {\r\n    var maxDist = 0;\r\n    Object.keys(dist).forEach(function (key) {\r\n      var val = dist[key];\r\n      if (maxDist < val) maxDist = val;\r\n    });\r\n\r\n    centrality[currentNode] = maxDist;\r\n  }\r\n\r\n  function singleSourceShortestPath(source) {\r\n    graph.forEachNode(initNode);\r\n    dist[source] = 0;\r\n    Q.push(source);\r\n\r\n    while (Q.length) {\r\n      var v = Q.shift();\r\n      graph.forEachLinkedNode(v, processNode, oriented);\r\n    }\r\n\r\n    function initNode(node) {\r\n      var nodeId = node.id;\r\n      dist[nodeId] = -1;\r\n    }\r\n\r\n    function processNode(otherNode) {\r\n      var w = otherNode.id\r\n      if (dist[w] === -1) {\r\n        // Node w is found for the first time\r\n        dist[w] = dist[v] + 1;\r\n        Q.push(w);\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://ascdc-sna/./lib/eccentricity.js?");

/***/ }),

/***/ "./lib/echarts.js":
/*!************************!*\
  !*** ./lib/echarts.js ***!
  \************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("(function (global, factory) {\r\n   true ? factory(exports) : 0;\r\n})(this, function (exports) {\r\n  'use strict';\r\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation.\r\n  \r\n  Permission to use, copy, modify, and/or distribute this software for any\r\n  purpose with or without fee is hereby granted.\r\n  \r\n  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n  PERFORMANCE OF THIS SOFTWARE.\r\n  ***************************************************************************** */\r\n\r\n  /* global Reflect, Promise */\r\n  /**\r\n     * label旋转变换\r\n     * @param {Float32Array|Array.<number>} out\r\n     * @param {Float32Array|Array.<number>} a\r\n     * @param {number} rad\r\n     */\r\n   function label_rotate(out, a, rad, sub_rotation) {\r\n    // console.log(a);\r\n    var aa = a[0];\r\n    var ac = a[2];\r\n    var atx = a[4];\r\n    var ab = a[1];\r\n    var ad = a[3];\r\n    var aty = a[5];\r\n\r\n    if (rad >= 4.71 && rad <= 6) {\r\n        var st = -Math.sin(rad);\r\n        var ct = -Math.cos(rad);\r\n    } else if (rad >= -1.57 && rad <= 0) {\r\n        var st = Math.sin(rad);\r\n        var ct = Math.cos(rad);\r\n    } else if (sub_rotation >= 3.88)  {\r\n        var st = -Math.sin(rad);\r\n        var ct = -Math.cos(rad);\r\n    }else{\r\n        var st = Math.sin(rad);\r\n        var ct = Math.cos(rad);\r\n    }\r\n\r\n    out[0] = aa * ct + ab * st;\r\n    out[1] = -aa * st + ab * ct;\r\n    out[2] = ac * ct + ad * st;\r\n    out[3] = -ac * st + ct * ad;\r\n    out[4] = ct * atx + st * aty;\r\n    out[5] = ct * aty - st * atx;\r\n    // console.log(out)\r\n    return out;\r\n}\r\n\r\n  var extendStatics = function (d, b) {\r\n    extendStatics = Object.setPrototypeOf || {\r\n      __proto__: []\r\n    } instanceof Array && function (d, b) {\r\n      d.__proto__ = b;\r\n    } || function (d, b) {\r\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\r\n    };\r\n\r\n    return extendStatics(d, b);\r\n  };\r\n\r\n  function __extends(d, b) {\r\n    extendStatics(d, b);\r\n\r\n    function __() {\r\n      this.constructor = d;\r\n    }\r\n\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n  }\r\n\r\n  function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\r\n\r\n    return r;\r\n  }\r\n\r\n  var Browser = function () {\r\n    function Browser() {\r\n      this.firefox = false;\r\n      this.ie = false;\r\n      this.edge = false;\r\n      this.newEdge = false;\r\n      this.weChat = false;\r\n    }\r\n\r\n    return Browser;\r\n  }();\r\n\r\n  var Env = function () {\r\n    function Env() {\r\n      this.browser = new Browser();\r\n      this.node = false;\r\n      this.wxa = false;\r\n      this.worker = false;\r\n      this.canvasSupported = false;\r\n      this.svgSupported = false;\r\n      this.touchEventsSupported = false;\r\n      this.pointerEventsSupported = false;\r\n      this.domSupported = false;\r\n    }\r\n\r\n    return Env;\r\n  }();\r\n\r\n  var env = new Env();\r\n\r\n  if (typeof wx === 'object' && typeof wx.getSystemInfoSync === 'function') {\r\n    env.wxa = true;\r\n    env.canvasSupported = true;\r\n    env.touchEventsSupported = true;\r\n  } else if (typeof document === 'undefined' && typeof self !== 'undefined') {\r\n    env.worker = true;\r\n    env.canvasSupported = true;\r\n  } else if (typeof navigator === 'undefined') {\r\n    env.node = true;\r\n    env.canvasSupported = true;\r\n    env.svgSupported = true;\r\n  } else {\r\n    detect(navigator.userAgent, env);\r\n  }\r\n\r\n  function detect(ua, env) {\r\n    var browser = env.browser;\r\n    var firefox = ua.match(/Firefox\\/([\\d.]+)/);\r\n    var ie = ua.match(/MSIE\\s([\\d.]+)/) || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\r\n    var edge = ua.match(/Edge?\\/([\\d.]+)/);\r\n    var weChat = /micromessenger/i.test(ua);\r\n\r\n    if (firefox) {\r\n      browser.firefox = true;\r\n      browser.version = firefox[1];\r\n    }\r\n\r\n    if (ie) {\r\n      browser.ie = true;\r\n      browser.version = ie[1];\r\n    }\r\n\r\n    if (edge) {\r\n      browser.edge = true;\r\n      browser.version = edge[1];\r\n      browser.newEdge = +edge[1].split('.')[0] > 18;\r\n    }\r\n\r\n    if (weChat) {\r\n      browser.weChat = true;\r\n    }\r\n\r\n    env.canvasSupported = !!document.createElement('canvas').getContext;\r\n    env.svgSupported = typeof SVGRect !== 'undefined';\r\n    env.touchEventsSupported = 'ontouchstart' in window && !browser.ie && !browser.edge;\r\n    env.pointerEventsSupported = 'onpointerdown' in window && (browser.edge || browser.ie && +browser.version >= 11);\r\n    env.domSupported = typeof document !== 'undefined';\r\n  }\r\n\r\n  var BUILTIN_OBJECT = {\r\n    '[object Function]': true,\r\n    '[object RegExp]': true,\r\n    '[object Date]': true,\r\n    '[object Error]': true,\r\n    '[object CanvasGradient]': true,\r\n    '[object CanvasPattern]': true,\r\n    '[object Image]': true,\r\n    '[object Canvas]': true\r\n  };\r\n  var TYPED_ARRAY = {\r\n    '[object Int8Array]': true,\r\n    '[object Uint8Array]': true,\r\n    '[object Uint8ClampedArray]': true,\r\n    '[object Int16Array]': true,\r\n    '[object Uint16Array]': true,\r\n    '[object Int32Array]': true,\r\n    '[object Uint32Array]': true,\r\n    '[object Float32Array]': true,\r\n    '[object Float64Array]': true\r\n  };\r\n  var objToString = Object.prototype.toString;\r\n  var arrayProto = Array.prototype;\r\n  var nativeForEach = arrayProto.forEach;\r\n  var nativeFilter = arrayProto.filter;\r\n  var nativeSlice = arrayProto.slice;\r\n  var nativeMap = arrayProto.map;\r\n\r\n  var ctorFunction = function () {}.constructor;\r\n\r\n  var protoFunction = ctorFunction ? ctorFunction.prototype : null;\r\n  var methods = {};\r\n\r\n  function $override(name, fn) {\r\n    methods[name] = fn;\r\n  }\r\n\r\n  var idStart = 0x0907;\r\n\r\n  function guid() {\r\n    return idStart++;\r\n  }\r\n\r\n  function logError() {\r\n    var args = [];\r\n\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n      args[_i] = arguments[_i];\r\n    }\r\n\r\n    if (typeof console !== 'undefined') {\r\n      console.error.apply(console, args);\r\n    }\r\n  }\r\n\r\n  function clone(source) {\r\n    if (source == null || typeof source !== 'object') {\r\n      return source;\r\n    }\r\n\r\n    var result = source;\r\n    var typeStr = objToString.call(source);\r\n\r\n    if (typeStr === '[object Array]') {\r\n      if (!isPrimitive(source)) {\r\n        result = [];\r\n\r\n        for (var i = 0, len = source.length; i < len; i++) {\r\n          result[i] = clone(source[i]);\r\n        }\r\n      }\r\n    } else if (TYPED_ARRAY[typeStr]) {\r\n      if (!isPrimitive(source)) {\r\n        var Ctor = source.constructor;\r\n\r\n        if (Ctor.from) {\r\n          result = Ctor.from(source);\r\n        } else {\r\n          result = new Ctor(source.length);\r\n\r\n          for (var i = 0, len = source.length; i < len; i++) {\r\n            result[i] = clone(source[i]);\r\n          }\r\n        }\r\n      }\r\n    } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\r\n      result = {};\r\n\r\n      for (var key in source) {\r\n        if (source.hasOwnProperty(key)) {\r\n          result[key] = clone(source[key]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  function merge(target, source, overwrite) {\r\n    if (!isObject$1(source) || !isObject$1(target)) {\r\n      return overwrite ? clone(source) : target;\r\n    }\r\n\r\n    for (var key in source) {\r\n      if (source.hasOwnProperty(key)) {\r\n        var targetProp = target[key];\r\n        var sourceProp = source[key];\r\n\r\n        if (isObject$1(sourceProp) && isObject$1(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\r\n          merge(targetProp, sourceProp, overwrite);\r\n        } else if (overwrite || !(key in target)) {\r\n          target[key] = clone(source[key]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  function mergeAll(targetAndSources, overwrite) {\r\n    var result = targetAndSources[0];\r\n\r\n    for (var i = 1, len = targetAndSources.length; i < len; i++) {\r\n      result = merge(result, targetAndSources[i], overwrite);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  function extend(target, source) {\r\n    if (Object.assign) {\r\n      Object.assign(target, source);\r\n    } else {\r\n      for (var key in source) {\r\n        if (source.hasOwnProperty(key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  function defaults(target, source, overlay) {\r\n    var keysArr = keys(source);\r\n\r\n    for (var i = 0; i < keysArr.length; i++) {\r\n      var key = keysArr[i];\r\n\r\n      if (overlay ? source[key] != null : target[key] == null) {\r\n        target[key] = source[key];\r\n      }\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  var createCanvas = function () {\r\n    return methods.createCanvas();\r\n  };\r\n\r\n  methods.createCanvas = function () {\r\n    return document.createElement('canvas');\r\n  };\r\n\r\n  function indexOf$1(array, value) {\r\n    if (array) {\r\n      if (array.indexOf) {\r\n        return array.indexOf(value);\r\n      }\r\n\r\n      for (var i = 0, len = array.length; i < len; i++) {\r\n        if (array[i] === value) {\r\n          return i;\r\n        }\r\n      }\r\n    }\r\n\r\n    return -1;\r\n  }\r\n\r\n  function inherits(clazz, baseClazz) {\r\n    var clazzPrototype = clazz.prototype;\r\n\r\n    function F() {}\r\n\r\n    F.prototype = baseClazz.prototype;\r\n    clazz.prototype = new F();\r\n\r\n    for (var prop in clazzPrototype) {\r\n      if (clazzPrototype.hasOwnProperty(prop)) {\r\n        clazz.prototype[prop] = clazzPrototype[prop];\r\n      }\r\n    }\r\n\r\n    clazz.prototype.constructor = clazz;\r\n    clazz.superClass = baseClazz;\r\n  }\r\n\r\n  function mixin(target, source, override) {\r\n    target = 'prototype' in target ? target.prototype : target;\r\n    source = 'prototype' in source ? source.prototype : source;\r\n\r\n    if (Object.getOwnPropertyNames) {\r\n      var keyList = Object.getOwnPropertyNames(source);\r\n\r\n      for (var i = 0; i < keyList.length; i++) {\r\n        var key = keyList[i];\r\n\r\n        if (key !== 'constructor') {\r\n          if (override ? source[key] != null : target[key] == null) {\r\n            target[key] = source[key];\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      defaults(target, source, override);\r\n    }\r\n  }\r\n\r\n  function isArrayLike(data) {\r\n    if (!data) {\r\n      return false;\r\n    }\r\n\r\n    if (typeof data === 'string') {\r\n      return false;\r\n    }\r\n\r\n    return typeof data.length === 'number';\r\n  }\r\n\r\n  function each$1(arr, cb, context) {\r\n    if (!(arr && cb)) {\r\n      return;\r\n    }\r\n\r\n    if (arr.forEach && arr.forEach === nativeForEach) {\r\n      arr.forEach(cb, context);\r\n    } else if (arr.length === +arr.length) {\r\n      for (var i = 0, len = arr.length; i < len; i++) {\r\n        cb.call(context, arr[i], i, arr);\r\n      }\r\n    } else {\r\n      for (var key in arr) {\r\n        if (arr.hasOwnProperty(key)) {\r\n          cb.call(context, arr[key], key, arr);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function map(arr, cb, context) {\r\n    if (!arr) {\r\n      return [];\r\n    }\r\n\r\n    if (!cb) {\r\n      return slice(arr);\r\n    }\r\n\r\n    if (arr.map && arr.map === nativeMap) {\r\n      return arr.map(cb, context);\r\n    } else {\r\n      var result = [];\r\n\r\n      for (var i = 0, len = arr.length; i < len; i++) {\r\n        result.push(cb.call(context, arr[i], i, arr));\r\n      }\r\n\r\n      return result;\r\n    }\r\n  }\r\n\r\n  function reduce(arr, cb, memo, context) {\r\n    if (!(arr && cb)) {\r\n      return;\r\n    }\r\n\r\n    for (var i = 0, len = arr.length; i < len; i++) {\r\n      memo = cb.call(context, memo, arr[i], i, arr);\r\n    }\r\n\r\n    return memo;\r\n  }\r\n\r\n  function filter(arr, cb, context) {\r\n    if (!arr) {\r\n      return [];\r\n    }\r\n\r\n    if (!cb) {\r\n      return slice(arr);\r\n    }\r\n\r\n    if (arr.filter && arr.filter === nativeFilter) {\r\n      return arr.filter(cb, context);\r\n    } else {\r\n      var result = [];\r\n\r\n      for (var i = 0, len = arr.length; i < len; i++) {\r\n        if (cb.call(context, arr[i], i, arr)) {\r\n          result.push(arr[i]);\r\n        }\r\n      }\r\n\r\n      return result;\r\n    }\r\n  }\r\n\r\n  function find(arr, cb, context) {\r\n    if (!(arr && cb)) {\r\n      return;\r\n    }\r\n\r\n    for (var i = 0, len = arr.length; i < len; i++) {\r\n      if (cb.call(context, arr[i], i, arr)) {\r\n        return arr[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  function keys(obj) {\r\n    if (!obj) {\r\n      return [];\r\n    }\r\n\r\n    if (Object.keys) {\r\n      return Object.keys(obj);\r\n    }\r\n\r\n    var keyList = [];\r\n\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        keyList.push(key);\r\n      }\r\n    }\r\n\r\n    return keyList;\r\n  }\r\n\r\n  function bindPolyfill(func, context) {\r\n    var args = [];\r\n\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n      args[_i - 2] = arguments[_i];\r\n    }\r\n\r\n    return function () {\r\n      return func.apply(context, args.concat(nativeSlice.call(arguments)));\r\n    };\r\n  }\r\n\r\n  var bind = protoFunction && isFunction$1(protoFunction.bind) ? protoFunction.call.bind(protoFunction.bind) : bindPolyfill;\r\n\r\n  function curry(func) {\r\n    var args = [];\r\n\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n      args[_i - 1] = arguments[_i];\r\n    }\r\n\r\n    return function () {\r\n      return func.apply(this, args.concat(nativeSlice.call(arguments)));\r\n    };\r\n  }\r\n\r\n  function isArray(value) {\r\n    if (Array.isArray) {\r\n      return Array.isArray(value);\r\n    }\r\n\r\n    return objToString.call(value) === '[object Array]';\r\n  }\r\n\r\n  function isFunction$1(value) {\r\n    return typeof value === 'function';\r\n  }\r\n\r\n  function isString(value) {\r\n    return typeof value === 'string';\r\n  }\r\n\r\n  function isStringSafe(value) {\r\n    return objToString.call(value) === '[object String]';\r\n  }\r\n\r\n  function isNumber(value) {\r\n    return typeof value === 'number';\r\n  }\r\n\r\n  function isObject$1(value) {\r\n    var type = typeof value;\r\n    return type === 'function' || !!value && type === 'object';\r\n  }\r\n\r\n  function isBuiltInObject(value) {\r\n    return !!BUILTIN_OBJECT[objToString.call(value)];\r\n  }\r\n\r\n  function isTypedArray(value) {\r\n    return !!TYPED_ARRAY[objToString.call(value)];\r\n  }\r\n\r\n  function isDom(value) {\r\n    return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\r\n  }\r\n\r\n  function isGradientObject(value) {\r\n    return value.colorStops != null;\r\n  }\r\n\r\n  function isPatternObject(value) {\r\n    return value.image != null;\r\n  }\r\n\r\n  function isRegExp(value) {\r\n    return objToString.call(value) === '[object RegExp]';\r\n  }\r\n\r\n  function eqNaN(value) {\r\n    return value !== value;\r\n  }\r\n\r\n  function retrieve() {\r\n    var args = [];\r\n\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n      args[_i] = arguments[_i];\r\n    }\r\n\r\n    for (var i = 0, len = args.length; i < len; i++) {\r\n      if (args[i] != null) {\r\n        return args[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  function retrieve2(value0, value1) {\r\n    return value0 != null ? value0 : value1;\r\n  }\r\n\r\n  function retrieve3(value0, value1, value2) {\r\n    return value0 != null ? value0 : value1 != null ? value1 : value2;\r\n  }\r\n\r\n  function slice(arr) {\r\n    var args = [];\r\n\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n      args[_i - 1] = arguments[_i];\r\n    }\r\n\r\n    return nativeSlice.apply(arr, args);\r\n  }\r\n\r\n  function normalizeCssArray(val) {\r\n    if (typeof val === 'number') {\r\n      return [val, val, val, val];\r\n    }\r\n\r\n    var len = val.length;\r\n\r\n    if (len === 2) {\r\n      return [val[0], val[1], val[0], val[1]];\r\n    } else if (len === 3) {\r\n      return [val[0], val[1], val[2], val[1]];\r\n    }\r\n\r\n    return val;\r\n  }\r\n\r\n  function assert$1(condition, message) {\r\n    if (!condition) {\r\n      throw new Error(message);\r\n    }\r\n  }\r\n\r\n  function trim(str) {\r\n    if (str == null) {\r\n      return null;\r\n    } else if (typeof str.trim === 'function') {\r\n      return str.trim();\r\n    } else {\r\n      return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n    }\r\n  }\r\n\r\n  var primitiveKey = '__ec_primitive__';\r\n\r\n  function setAsPrimitive(obj) {\r\n    obj[primitiveKey] = true;\r\n  }\r\n\r\n  function isPrimitive(obj) {\r\n    return obj[primitiveKey];\r\n  }\r\n\r\n  var HashMap = function () {\r\n    function HashMap(obj) {\r\n      this.data = {};\r\n      var isArr = isArray(obj);\r\n      this.data = {};\r\n      var thisMap = this;\r\n      obj instanceof HashMap ? obj.each(visit) : obj && each$1(obj, visit);\r\n\r\n      function visit(value, key) {\r\n        isArr ? thisMap.set(value, key) : thisMap.set(key, value);\r\n      }\r\n    }\r\n\r\n    HashMap.prototype.get = function (key) {\r\n      return this.data.hasOwnProperty(key) ? this.data[key] : null;\r\n    };\r\n\r\n    HashMap.prototype.set = function (key, value) {\r\n      return this.data[key] = value;\r\n    };\r\n\r\n    HashMap.prototype.each = function (cb, context) {\r\n      for (var key in this.data) {\r\n        if (this.data.hasOwnProperty(key)) {\r\n          cb.call(context, this.data[key], key);\r\n        }\r\n      }\r\n    };\r\n\r\n    HashMap.prototype.keys = function () {\r\n      return keys(this.data);\r\n    };\r\n\r\n    HashMap.prototype.removeKey = function (key) {\r\n      delete this.data[key];\r\n    };\r\n\r\n    return HashMap;\r\n  }();\r\n\r\n  function createHashMap(obj) {\r\n    return new HashMap(obj);\r\n  }\r\n\r\n  function concatArray(a, b) {\r\n    var newArray = new a.constructor(a.length + b.length);\r\n\r\n    for (var i = 0; i < a.length; i++) {\r\n      newArray[i] = a[i];\r\n    }\r\n\r\n    var offset = a.length;\r\n\r\n    for (var i = 0; i < b.length; i++) {\r\n      newArray[i + offset] = b[i];\r\n    }\r\n\r\n    return newArray;\r\n  }\r\n\r\n  function createObject(proto, properties) {\r\n    var obj;\r\n\r\n    if (Object.create) {\r\n      obj = Object.create(proto);\r\n    } else {\r\n      var StyleCtor = function () {};\r\n\r\n      StyleCtor.prototype = proto;\r\n      obj = new StyleCtor();\r\n    }\r\n\r\n    if (properties) {\r\n      extend(obj, properties);\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  function hasOwn(own, prop) {\r\n    return own.hasOwnProperty(prop);\r\n  }\r\n\r\n  function noop() {}\r\n\r\n  var util = (Object.freeze || Object)({\r\n    $override: $override,\r\n    guid: guid,\r\n    logError: logError,\r\n    clone: clone,\r\n    merge: merge,\r\n    mergeAll: mergeAll,\r\n    extend: extend,\r\n    defaults: defaults,\r\n    createCanvas: createCanvas,\r\n    indexOf: indexOf$1,\r\n    inherits: inherits,\r\n    mixin: mixin,\r\n    isArrayLike: isArrayLike,\r\n    each: each$1,\r\n    map: map,\r\n    reduce: reduce,\r\n    filter: filter,\r\n    find: find,\r\n    keys: keys,\r\n    bind: bind,\r\n    curry: curry,\r\n    isArray: isArray,\r\n    isFunction: isFunction$1,\r\n    isString: isString,\r\n    isStringSafe: isStringSafe,\r\n    isNumber: isNumber,\r\n    isObject: isObject$1,\r\n    isBuiltInObject: isBuiltInObject,\r\n    isTypedArray: isTypedArray,\r\n    isDom: isDom,\r\n    isGradientObject: isGradientObject,\r\n    isPatternObject: isPatternObject,\r\n    isRegExp: isRegExp,\r\n    eqNaN: eqNaN,\r\n    retrieve: retrieve,\r\n    retrieve2: retrieve2,\r\n    retrieve3: retrieve3,\r\n    slice: slice,\r\n    normalizeCssArray: normalizeCssArray,\r\n    assert: assert$1,\r\n    trim: trim,\r\n    setAsPrimitive: setAsPrimitive,\r\n    isPrimitive: isPrimitive,\r\n    HashMap: HashMap,\r\n    createHashMap: createHashMap,\r\n    concatArray: concatArray,\r\n    createObject: createObject,\r\n    hasOwn: hasOwn,\r\n    noop: noop\r\n  });\r\n\r\n  function create(x, y) {\r\n    if (x == null) {\r\n      x = 0;\r\n    }\r\n\r\n    if (y == null) {\r\n      y = 0;\r\n    }\r\n\r\n    return [x, y];\r\n  }\r\n\r\n  function copy(out, v) {\r\n    out[0] = v[0];\r\n    out[1] = v[1];\r\n    return out;\r\n  }\r\n\r\n  function clone$1(v) {\r\n    return [v[0], v[1]];\r\n  }\r\n\r\n  function set(out, a, b) {\r\n    out[0] = a;\r\n    out[1] = b;\r\n    return out;\r\n  }\r\n\r\n  function add(out, v1, v2) {\r\n    out[0] = v1[0] + v2[0];\r\n    out[1] = v1[1] + v2[1];\r\n    return out;\r\n  }\r\n\r\n  function scaleAndAdd(out, v1, v2, a) {\r\n    out[0] = v1[0] + v2[0] * a;\r\n    out[1] = v1[1] + v2[1] * a;\r\n    return out;\r\n  }\r\n\r\n  function sub(out, v1, v2) {\r\n    out[0] = v1[0] - v2[0];\r\n    out[1] = v1[1] - v2[1];\r\n    return out;\r\n  }\r\n\r\n  function len(v) {\r\n    return Math.sqrt(lenSquare(v));\r\n  }\r\n\r\n  var length = len;\r\n\r\n  function lenSquare(v) {\r\n    return v[0] * v[0] + v[1] * v[1];\r\n  }\r\n\r\n  var lengthSquare = lenSquare;\r\n\r\n  function mul(out, v1, v2) {\r\n    out[0] = v1[0] * v2[0];\r\n    out[1] = v1[1] * v2[1];\r\n    return out;\r\n  }\r\n\r\n  function div(out, v1, v2) {\r\n    out[0] = v1[0] / v2[0];\r\n    out[1] = v1[1] / v2[1];\r\n    return out;\r\n  }\r\n\r\n  function dot(v1, v2) {\r\n    return v1[0] * v2[0] + v1[1] * v2[1];\r\n  }\r\n\r\n  function scale(out, v, s) {\r\n    out[0] = v[0] * s;\r\n    out[1] = v[1] * s;\r\n    return out;\r\n  }\r\n\r\n  function normalize(out, v) {\r\n    var d = len(v);\r\n\r\n    if (d === 0) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n    } else {\r\n      out[0] = v[0] / d;\r\n      out[1] = v[1] / d;\r\n    }\r\n\r\n    return out;\r\n  }\r\n\r\n  function distance(v1, v2) {\r\n    return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\r\n  }\r\n\r\n  var dist = distance;\r\n\r\n  function distanceSquare(v1, v2) {\r\n    return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\r\n  }\r\n\r\n  var distSquare = distanceSquare;\r\n\r\n  function negate(out, v) {\r\n    out[0] = -v[0];\r\n    out[1] = -v[1];\r\n    return out;\r\n  }\r\n\r\n  function lerp(out, v1, v2, t) {\r\n    out[0] = v1[0] + t * (v2[0] - v1[0]);\r\n    out[1] = v1[1] + t * (v2[1] - v1[1]);\r\n    return out;\r\n  }\r\n\r\n  function applyTransform(out, v, m) {\r\n    var x = v[0];\r\n    var y = v[1];\r\n    out[0] = m[0] * x + m[2] * y + m[4];\r\n    out[1] = m[1] * x + m[3] * y + m[5];\r\n    return out;\r\n  }\r\n\r\n  function min(out, v1, v2) {\r\n    out[0] = Math.min(v1[0], v2[0]);\r\n    out[1] = Math.min(v1[1], v2[1]);\r\n    return out;\r\n  }\r\n\r\n  function max(out, v1, v2) {\r\n    out[0] = Math.max(v1[0], v2[0]);\r\n    out[1] = Math.max(v1[1], v2[1]);\r\n    return out;\r\n  }\r\n\r\n  var vector = (Object.freeze || Object)({\r\n    create: create,\r\n    copy: copy,\r\n    clone: clone$1,\r\n    set: set,\r\n    add: add,\r\n    scaleAndAdd: scaleAndAdd,\r\n    sub: sub,\r\n    len: len,\r\n    length: length,\r\n    lenSquare: lenSquare,\r\n    lengthSquare: lengthSquare,\r\n    mul: mul,\r\n    div: div,\r\n    dot: dot,\r\n    scale: scale,\r\n    normalize: normalize,\r\n    distance: distance,\r\n    dist: dist,\r\n    distanceSquare: distanceSquare,\r\n    distSquare: distSquare,\r\n    negate: negate,\r\n    lerp: lerp,\r\n    applyTransform: applyTransform,\r\n    min: min,\r\n    max: max\r\n  });\r\n\r\n  var Param = function () {\r\n    function Param(target, e) {\r\n      this.target = target;\r\n      this.topTarget = e && e.topTarget;\r\n    }\r\n\r\n    return Param;\r\n  }();\r\n\r\n  var Draggable = function () {\r\n    function Draggable(handler) {\r\n      this.handler = handler;\r\n      handler.on('mousedown', this._dragStart, this);\r\n      handler.on('mousemove', this._drag, this);\r\n      handler.on('mouseup', this._dragEnd, this);\r\n    }\r\n\r\n    Draggable.prototype._dragStart = function (e) {\r\n      var draggingTarget = e.target;\r\n\r\n      while (draggingTarget && !draggingTarget.draggable) {\r\n        draggingTarget = draggingTarget.parent;\r\n      }\r\n\r\n      if (draggingTarget) {\r\n        this._draggingTarget = draggingTarget;\r\n        draggingTarget.dragging = true;\r\n        this._x = e.offsetX;\r\n        this._y = e.offsetY;\r\n        this.handler.dispatchToElement(new Param(draggingTarget, e), 'dragstart', e.event);\r\n      }\r\n    };\r\n\r\n    Draggable.prototype._drag = function (e) {\r\n      var draggingTarget = this._draggingTarget;\r\n\r\n      if (draggingTarget) {\r\n        var x = e.offsetX;\r\n        var y = e.offsetY;\r\n        var dx = x - this._x;\r\n        var dy = y - this._y;\r\n        this._x = x;\r\n        this._y = y;\r\n        draggingTarget.drift(dx, dy, e);\r\n        this.handler.dispatchToElement(new Param(draggingTarget, e), 'drag', e.event);\r\n        var dropTarget = this.handler.findHover(x, y, draggingTarget).target;\r\n        var lastDropTarget = this._dropTarget;\r\n        this._dropTarget = dropTarget;\r\n\r\n        if (draggingTarget !== dropTarget) {\r\n          if (lastDropTarget && dropTarget !== lastDropTarget) {\r\n            this.handler.dispatchToElement(new Param(lastDropTarget, e), 'dragleave', e.event);\r\n          }\r\n\r\n          if (dropTarget && dropTarget !== lastDropTarget) {\r\n            this.handler.dispatchToElement(new Param(dropTarget, e), 'dragenter', e.event);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    Draggable.prototype._dragEnd = function (e) {\r\n      var draggingTarget = this._draggingTarget;\r\n\r\n      if (draggingTarget) {\r\n        draggingTarget.dragging = false;\r\n      }\r\n\r\n      this.handler.dispatchToElement(new Param(draggingTarget, e), 'dragend', e.event);\r\n\r\n      if (this._dropTarget) {\r\n        this.handler.dispatchToElement(new Param(this._dropTarget, e), 'drop', e.event);\r\n      }\r\n\r\n      this._draggingTarget = null;\r\n      this._dropTarget = null;\r\n    };\r\n\r\n    return Draggable;\r\n  }();\r\n\r\n  var Eventful = function () {\r\n    function Eventful(eventProcessors) {\r\n      if (eventProcessors) {\r\n        this._$eventProcessor = eventProcessors;\r\n      }\r\n    }\r\n\r\n    Eventful.prototype.on = function (event, query, handler, context) {\r\n      if (!this._$handlers) {\r\n        this._$handlers = {};\r\n      }\r\n\r\n      var _h = this._$handlers;\r\n\r\n      if (typeof query === 'function') {\r\n        context = handler;\r\n        handler = query;\r\n        query = null;\r\n      }\r\n\r\n      if (!handler || !event) {\r\n        return this;\r\n      }\r\n\r\n      var eventProcessor = this._$eventProcessor;\r\n\r\n      if (query != null && eventProcessor && eventProcessor.normalizeQuery) {\r\n        query = eventProcessor.normalizeQuery(query);\r\n      }\r\n\r\n      if (!_h[event]) {\r\n        _h[event] = [];\r\n      }\r\n\r\n      for (var i = 0; i < _h[event].length; i++) {\r\n        if (_h[event][i].h === handler) {\r\n          return this;\r\n        }\r\n      }\r\n\r\n      var wrap = {\r\n        h: handler,\r\n        query: query,\r\n        ctx: context || this,\r\n        callAtLast: handler.zrEventfulCallAtLast\r\n      };\r\n      var lastIndex = _h[event].length - 1;\r\n      var lastWrap = _h[event][lastIndex];\r\n      lastWrap && lastWrap.callAtLast ? _h[event].splice(lastIndex, 0, wrap) : _h[event].push(wrap);\r\n      return this;\r\n    };\r\n\r\n    Eventful.prototype.isSilent = function (eventName) {\r\n      var _h = this._$handlers;\r\n      return !_h || !_h[eventName] || !_h[eventName].length;\r\n    };\r\n\r\n    Eventful.prototype.off = function (eventType, handler) {\r\n      var _h = this._$handlers;\r\n\r\n      if (!_h) {\r\n        return this;\r\n      }\r\n\r\n      if (!eventType) {\r\n        this._$handlers = {};\r\n        return this;\r\n      }\r\n\r\n      if (handler) {\r\n        if (_h[eventType]) {\r\n          var newList = [];\r\n\r\n          for (var i = 0, l = _h[eventType].length; i < l; i++) {\r\n            if (_h[eventType][i].h !== handler) {\r\n              newList.push(_h[eventType][i]);\r\n            }\r\n          }\r\n\r\n          _h[eventType] = newList;\r\n        }\r\n\r\n        if (_h[eventType] && _h[eventType].length === 0) {\r\n          delete _h[eventType];\r\n        }\r\n      } else {\r\n        delete _h[eventType];\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    Eventful.prototype.trigger = function (eventType) {\r\n      var args = [];\r\n\r\n      for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n      }\r\n\r\n      if (!this._$handlers) {\r\n        return this;\r\n      }\r\n\r\n      var _h = this._$handlers[eventType];\r\n      var eventProcessor = this._$eventProcessor;\r\n\r\n      if (_h) {\r\n        var argLen = args.length;\r\n        var len = _h.length;\r\n\r\n        for (var i = 0; i < len; i++) {\r\n          var hItem = _h[i];\r\n\r\n          if (eventProcessor && eventProcessor.filter && hItem.query != null && !eventProcessor.filter(eventType, hItem.query)) {\r\n            continue;\r\n          }\r\n\r\n          switch (argLen) {\r\n            case 0:\r\n              hItem.h.call(hItem.ctx);\r\n              break;\r\n\r\n            case 1:\r\n              hItem.h.call(hItem.ctx, args[0]);\r\n              break;\r\n\r\n            case 2:\r\n              hItem.h.call(hItem.ctx, args[0], args[1]);\r\n              break;\r\n\r\n            default:\r\n              hItem.h.apply(hItem.ctx, args);\r\n              break;\r\n          }\r\n        }\r\n      }\r\n\r\n      eventProcessor && eventProcessor.afterTrigger && eventProcessor.afterTrigger(eventType);\r\n      return this;\r\n    };\r\n\r\n    Eventful.prototype.triggerWithContext = function (type) {\r\n      if (!this._$handlers) {\r\n        return this;\r\n      }\r\n\r\n      var _h = this._$handlers[type];\r\n      var eventProcessor = this._$eventProcessor;\r\n\r\n      if (_h) {\r\n        var args = arguments;\r\n        var argLen = args.length;\r\n        var ctx = args[argLen - 1];\r\n        var len = _h.length;\r\n\r\n        for (var i = 0; i < len; i++) {\r\n          var hItem = _h[i];\r\n\r\n          if (eventProcessor && eventProcessor.filter && hItem.query != null && !eventProcessor.filter(type, hItem.query)) {\r\n            continue;\r\n          }\r\n\r\n          switch (argLen) {\r\n            case 0:\r\n              hItem.h.call(ctx);\r\n              break;\r\n\r\n            case 1:\r\n              hItem.h.call(ctx, args[0]);\r\n              break;\r\n\r\n            case 2:\r\n              hItem.h.call(ctx, args[0], args[1]);\r\n              break;\r\n\r\n            default:\r\n              hItem.h.apply(ctx, args.slice(1, argLen - 1));\r\n              break;\r\n          }\r\n        }\r\n      }\r\n\r\n      eventProcessor && eventProcessor.afterTrigger && eventProcessor.afterTrigger(type);\r\n      return this;\r\n    };\r\n\r\n    return Eventful;\r\n  }();\r\n\r\n  var LN2 = Math.log(2);\r\n\r\n  function determinant(rows, rank, rowStart, rowMask, colMask, detCache) {\r\n    var cacheKey = rowMask + '-' + colMask;\r\n    var fullRank = rows.length;\r\n\r\n    if (detCache.hasOwnProperty(cacheKey)) {\r\n      return detCache[cacheKey];\r\n    }\r\n\r\n    if (rank === 1) {\r\n      var colStart = Math.round(Math.log((1 << fullRank) - 1 & ~colMask) / LN2);\r\n      return rows[rowStart][colStart];\r\n    }\r\n\r\n    var subRowMask = rowMask | 1 << rowStart;\r\n    var subRowStart = rowStart + 1;\r\n\r\n    while (rowMask & 1 << subRowStart) {\r\n      subRowStart++;\r\n    }\r\n\r\n    var sum = 0;\r\n\r\n    for (var j = 0, colLocalIdx = 0; j < fullRank; j++) {\r\n      var colTag = 1 << j;\r\n\r\n      if (!(colTag & colMask)) {\r\n        sum += (colLocalIdx % 2 ? -1 : 1) * rows[rowStart][j] * determinant(rows, rank - 1, subRowStart, subRowMask, colMask | colTag, detCache);\r\n        colLocalIdx++;\r\n      }\r\n    }\r\n\r\n    detCache[cacheKey] = sum;\r\n    return sum;\r\n  }\r\n\r\n  function buildTransformer(src, dest) {\r\n    var mA = [[src[0], src[1], 1, 0, 0, 0, -dest[0] * src[0], -dest[0] * src[1]], [0, 0, 0, src[0], src[1], 1, -dest[1] * src[0], -dest[1] * src[1]], [src[2], src[3], 1, 0, 0, 0, -dest[2] * src[2], -dest[2] * src[3]], [0, 0, 0, src[2], src[3], 1, -dest[3] * src[2], -dest[3] * src[3]], [src[4], src[5], 1, 0, 0, 0, -dest[4] * src[4], -dest[4] * src[5]], [0, 0, 0, src[4], src[5], 1, -dest[5] * src[4], -dest[5] * src[5]], [src[6], src[7], 1, 0, 0, 0, -dest[6] * src[6], -dest[6] * src[7]], [0, 0, 0, src[6], src[7], 1, -dest[7] * src[6], -dest[7] * src[7]]];\r\n    var detCache = {};\r\n    var det = determinant(mA, 8, 0, 0, 0, detCache);\r\n\r\n    if (det === 0) {\r\n      return;\r\n    }\r\n\r\n    var vh = [];\r\n\r\n    for (var i = 0; i < 8; i++) {\r\n      for (var j = 0; j < 8; j++) {\r\n        vh[j] == null && (vh[j] = 0);\r\n        vh[j] += ((i + j) % 2 ? -1 : 1) * determinant(mA, 7, i === 0 ? 1 : 0, 1 << i, 1 << j, detCache) / det * dest[i];\r\n      }\r\n    }\r\n\r\n    return function (out, srcPointX, srcPointY) {\r\n      var pk = srcPointX * vh[6] + srcPointY * vh[7] + 1;\r\n      out[0] = (srcPointX * vh[0] + srcPointY * vh[1] + vh[2]) / pk;\r\n      out[1] = (srcPointX * vh[3] + srcPointY * vh[4] + vh[5]) / pk;\r\n    };\r\n  }\r\n\r\n  var EVENT_SAVED_PROP = '___zrEVENTSAVED';\r\n  var _calcOut$1 = [];\r\n\r\n  function transformLocalCoord(out, elFrom, elTarget, inX, inY) {\r\n    return transformCoordWithViewport(_calcOut$1, elFrom, inX, inY, true) && transformCoordWithViewport(out, elTarget, _calcOut$1[0], _calcOut$1[1]);\r\n  }\r\n\r\n  function transformCoordWithViewport(out, el, inX, inY, inverse) {\r\n    if (el.getBoundingClientRect && env.domSupported && !isCanvasEl(el)) {\r\n      var saved = el[EVENT_SAVED_PROP] || (el[EVENT_SAVED_PROP] = {});\r\n      var markers = prepareCoordMarkers(el, saved);\r\n      var transformer = preparePointerTransformer(markers, saved, inverse);\r\n\r\n      if (transformer) {\r\n        transformer(out, inX, inY);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function prepareCoordMarkers(el, saved) {\r\n    var markers = saved.markers;\r\n\r\n    if (markers) {\r\n      return markers;\r\n    }\r\n\r\n    markers = saved.markers = [];\r\n    var propLR = ['left', 'right'];\r\n    var propTB = ['top', 'bottom'];\r\n\r\n    for (var i = 0; i < 4; i++) {\r\n      var marker = document.createElement('div');\r\n      var stl = marker.style;\r\n      var idxLR = i % 2;\r\n      var idxTB = (i >> 1) % 2;\r\n      stl.cssText = ['position: absolute', 'visibility: hidden', 'padding: 0', 'margin: 0', 'border-width: 0', 'user-select: none', 'width:0', 'height:0', propLR[idxLR] + ':0', propTB[idxTB] + ':0', propLR[1 - idxLR] + ':auto', propTB[1 - idxTB] + ':auto', ''].join('!important;');\r\n      el.appendChild(marker);\r\n      markers.push(marker);\r\n    }\r\n\r\n    return markers;\r\n  }\r\n\r\n  function preparePointerTransformer(markers, saved, inverse) {\r\n    var transformerName = inverse ? 'invTrans' : 'trans';\r\n    var transformer = saved[transformerName];\r\n    var oldSrcCoords = saved.srcCoords;\r\n    var srcCoords = [];\r\n    var destCoords = [];\r\n    var oldCoordTheSame = true;\r\n\r\n    for (var i = 0; i < 4; i++) {\r\n      var rect = markers[i].getBoundingClientRect();\r\n      var ii = 2 * i;\r\n      var x = rect.left;\r\n      var y = rect.top;\r\n      srcCoords.push(x, y);\r\n      oldCoordTheSame = oldCoordTheSame && oldSrcCoords && x === oldSrcCoords[ii] && y === oldSrcCoords[ii + 1];\r\n      destCoords.push(markers[i].offsetLeft, markers[i].offsetTop);\r\n    }\r\n\r\n    return oldCoordTheSame && transformer ? transformer : (saved.srcCoords = srcCoords, saved[transformerName] = inverse ? buildTransformer(destCoords, srcCoords) : buildTransformer(srcCoords, destCoords));\r\n  }\r\n\r\n  function isCanvasEl(el) {\r\n    return el.nodeName.toUpperCase() === 'CANVAS';\r\n  }\r\n\r\n  var isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\r\n  var MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\r\n  var _calcOut = [];\r\n\r\n  function clientToLocal(el, e, out, calculate) {\r\n    out = out || {};\r\n\r\n    if (calculate || !env.canvasSupported) {\r\n      calculateZrXY(el, e, out);\r\n    } else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\r\n      out.zrX = e.layerX;\r\n      out.zrY = e.layerY;\r\n    } else if (e.offsetX != null) {\r\n      out.zrX = e.offsetX;\r\n      out.zrY = e.offsetY;\r\n    } else {\r\n      calculateZrXY(el, e, out);\r\n    }\r\n\r\n    return out;\r\n  }\r\n\r\n  function calculateZrXY(el, e, out) {\r\n    if (env.domSupported && el.getBoundingClientRect) {\r\n      var ex = e.clientX;\r\n      var ey = e.clientY;\r\n\r\n      if (isCanvasEl(el)) {\r\n        var box = el.getBoundingClientRect();\r\n        out.zrX = ex - box.left;\r\n        out.zrY = ey - box.top;\r\n        return;\r\n      } else {\r\n        if (transformCoordWithViewport(_calcOut, el, ex, ey)) {\r\n          out.zrX = _calcOut[0];\r\n          out.zrY = _calcOut[1];\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    out.zrX = out.zrY = 0;\r\n  }\r\n\r\n  function getNativeEvent(e) {\r\n    return e || window.event;\r\n  }\r\n\r\n  function normalizeEvent(el, e, calculate) {\r\n    e = getNativeEvent(e);\r\n\r\n    if (e.zrX != null) {\r\n      return e;\r\n    }\r\n\r\n    var eventType = e.type;\r\n    var isTouch = eventType && eventType.indexOf('touch') >= 0;\r\n\r\n    if (!isTouch) {\r\n      clientToLocal(el, e, e, calculate);\r\n      var wheelDelta = getWheelDeltaMayPolyfill(e);\r\n      e.zrDelta = wheelDelta ? wheelDelta / 120 : -(e.detail || 0) / 3;\r\n    } else {\r\n      var touch = eventType !== 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\r\n      touch && clientToLocal(el, touch, e, calculate);\r\n    }\r\n\r\n    var button = e.button;\r\n\r\n    if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\r\n      e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\r\n    }\r\n\r\n    return e;\r\n  }\r\n\r\n  function getWheelDeltaMayPolyfill(e) {\r\n    var rawWheelDelta = e.wheelDelta;\r\n\r\n    if (rawWheelDelta) {\r\n      return rawWheelDelta;\r\n    }\r\n\r\n    var deltaX = e.deltaX;\r\n    var deltaY = e.deltaY;\r\n\r\n    if (deltaX == null || deltaY == null) {\r\n      return rawWheelDelta;\r\n    }\r\n\r\n    var delta = deltaY !== 0 ? Math.abs(deltaY) : Math.abs(deltaX);\r\n    var sign = deltaY > 0 ? -1 : deltaY < 0 ? 1 : deltaX > 0 ? -1 : 1;\r\n    return 3 * delta * sign;\r\n  }\r\n\r\n  function addEventListener(el, name, handler, opt) {\r\n    if (isDomLevel2) {\r\n      el.addEventListener(name, handler, opt);\r\n    } else {\r\n      el.attachEvent('on' + name, handler);\r\n    }\r\n  }\r\n\r\n  function removeEventListener(el, name, handler, opt) {\r\n    if (isDomLevel2) {\r\n      el.removeEventListener(name, handler, opt);\r\n    } else {\r\n      el.detachEvent('on' + name, handler);\r\n    }\r\n  }\r\n\r\n  var stop = isDomLevel2 ? function (e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    e.cancelBubble = true;\r\n  } : function (e) {\r\n    e.returnValue = false;\r\n    e.cancelBubble = true;\r\n  };\r\n\r\n  function isMiddleOrRightButtonOnMouseUpDown(e) {\r\n    return e.which === 2 || e.which === 3;\r\n  }\r\n\r\n  var GestureMgr = function () {\r\n    function GestureMgr() {\r\n      this._track = [];\r\n    }\r\n\r\n    GestureMgr.prototype.recognize = function (event, target, root) {\r\n      this._doTrack(event, target, root);\r\n\r\n      return this._recognize(event);\r\n    };\r\n\r\n    GestureMgr.prototype.clear = function () {\r\n      this._track.length = 0;\r\n      return this;\r\n    };\r\n\r\n    GestureMgr.prototype._doTrack = function (event, target, root) {\r\n      var touches = event.touches;\r\n\r\n      if (!touches) {\r\n        return;\r\n      }\r\n\r\n      var trackItem = {\r\n        points: [],\r\n        touches: [],\r\n        target: target,\r\n        event: event\r\n      };\r\n\r\n      for (var i = 0, len = touches.length; i < len; i++) {\r\n        var touch = touches[i];\r\n        var pos = clientToLocal(root, touch, {});\r\n        trackItem.points.push([pos.zrX, pos.zrY]);\r\n        trackItem.touches.push(touch);\r\n      }\r\n\r\n      this._track.push(trackItem);\r\n    };\r\n\r\n    GestureMgr.prototype._recognize = function (event) {\r\n      for (var eventName in recognizers) {\r\n        if (recognizers.hasOwnProperty(eventName)) {\r\n          var gestureInfo = recognizers[eventName](this._track, event);\r\n\r\n          if (gestureInfo) {\r\n            return gestureInfo;\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    return GestureMgr;\r\n  }();\r\n\r\n  function dist$1(pointPair) {\r\n    var dx = pointPair[1][0] - pointPair[0][0];\r\n    var dy = pointPair[1][1] - pointPair[0][1];\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n  }\r\n\r\n  function center(pointPair) {\r\n    return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\r\n  }\r\n\r\n  var recognizers = {\r\n    pinch: function (tracks, event) {\r\n      var trackLen = tracks.length;\r\n\r\n      if (!trackLen) {\r\n        return;\r\n      }\r\n\r\n      var pinchEnd = (tracks[trackLen - 1] || {}).points;\r\n      var pinchPre = (tracks[trackLen - 2] || {}).points || pinchEnd;\r\n\r\n      if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\r\n        var pinchScale = dist$1(pinchEnd) / dist$1(pinchPre);\r\n        !isFinite(pinchScale) && (pinchScale = 1);\r\n        event.pinchScale = pinchScale;\r\n        var pinchCenter = center(pinchEnd);\r\n        event.pinchX = pinchCenter[0];\r\n        event.pinchY = pinchCenter[1];\r\n        return {\r\n          type: 'pinch',\r\n          target: tracks[0].target,\r\n          event: event\r\n        };\r\n      }\r\n    }\r\n  };\r\n  var SILENT = 'silent';\r\n\r\n  function makeEventPacket(eveType, targetInfo, event) {\r\n    return {\r\n      type: eveType,\r\n      event: event,\r\n      target: targetInfo.target,\r\n      topTarget: targetInfo.topTarget,\r\n      cancelBubble: false,\r\n      offsetX: event.zrX,\r\n      offsetY: event.zrY,\r\n      gestureEvent: event.gestureEvent,\r\n      pinchX: event.pinchX,\r\n      pinchY: event.pinchY,\r\n      pinchScale: event.pinchScale,\r\n      wheelDelta: event.zrDelta,\r\n      zrByTouch: event.zrByTouch,\r\n      which: event.which,\r\n      stop: stopEvent\r\n    };\r\n  }\r\n\r\n  function stopEvent() {\r\n    stop(this.event);\r\n  }\r\n\r\n  var EmptyProxy = function (_super) {\r\n    __extends(EmptyProxy, _super);\r\n\r\n    function EmptyProxy() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.handler = null;\r\n      return _this;\r\n    }\r\n\r\n    EmptyProxy.prototype.dispose = function () {};\r\n\r\n    EmptyProxy.prototype.setCursor = function () {};\r\n\r\n    return EmptyProxy;\r\n  }(Eventful);\r\n\r\n  var HoveredResult = function () {\r\n    function HoveredResult(x, y) {\r\n      this.x = x;\r\n      this.y = y;\r\n    }\r\n\r\n    return HoveredResult;\r\n  }();\r\n\r\n  var handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\r\n\r\n  var Handler = function (_super) {\r\n    __extends(Handler, _super);\r\n\r\n    function Handler(storage, painter, proxy, painterRoot) {\r\n      var _this = _super.call(this) || this;\r\n\r\n      _this._hovered = new HoveredResult(0, 0);\r\n      _this.storage = storage;\r\n      _this.painter = painter;\r\n      _this.painterRoot = painterRoot;\r\n      proxy = proxy || new EmptyProxy();\r\n      _this.proxy = null;\r\n\r\n      _this.setHandlerProxy(proxy);\r\n\r\n      _this._draggingMgr = new Draggable(_this);\r\n      return _this;\r\n    }\r\n\r\n    Handler.prototype.setHandlerProxy = function (proxy) {\r\n      if (this.proxy) {\r\n        this.proxy.dispose();\r\n      }\r\n\r\n      if (proxy) {\r\n        each$1(handlerNames, function (name) {\r\n          proxy.on && proxy.on(name, this[name], this);\r\n        }, this);\r\n        proxy.handler = this;\r\n      }\r\n\r\n      this.proxy = proxy;\r\n    };\r\n\r\n    Handler.prototype.mousemove = function (event) {\r\n      var x = event.zrX;\r\n      var y = event.zrY;\r\n      var isOutside = isOutsideBoundary(this, x, y);\r\n      var lastHovered = this._hovered;\r\n      var lastHoveredTarget = lastHovered.target;\r\n\r\n      if (lastHoveredTarget && !lastHoveredTarget.__zr) {\r\n        lastHovered = this.findHover(lastHovered.x, lastHovered.y);\r\n        lastHoveredTarget = lastHovered.target;\r\n      }\r\n\r\n      var hovered = this._hovered = isOutside ? new HoveredResult(x, y) : this.findHover(x, y);\r\n      var hoveredTarget = hovered.target;\r\n      var proxy = this.proxy;\r\n      proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\r\n\r\n      if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\r\n        this.dispatchToElement(lastHovered, 'mouseout', event);\r\n      }\r\n\r\n      this.dispatchToElement(hovered, 'mousemove', event);\r\n\r\n      if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\r\n        this.dispatchToElement(hovered, 'mouseover', event);\r\n      }\r\n    };\r\n\r\n    Handler.prototype.mouseout = function (event) {\r\n      var eventControl = event.zrEventControl;\r\n\r\n      if (eventControl !== 'only_globalout') {\r\n        this.dispatchToElement(this._hovered, 'mouseout', event);\r\n      }\r\n\r\n      if (eventControl !== 'no_globalout') {\r\n        this.trigger('globalout', {\r\n          type: 'globalout',\r\n          event: event\r\n        });\r\n      }\r\n    };\r\n\r\n    Handler.prototype.resize = function () {\r\n      this._hovered = new HoveredResult(0, 0);\r\n    };\r\n\r\n    Handler.prototype.dispatch = function (eventName, eventArgs) {\r\n      var handler = this[eventName];\r\n      handler && handler.call(this, eventArgs);\r\n    };\r\n\r\n    Handler.prototype.dispose = function () {\r\n      this.proxy.dispose();\r\n      this.storage = null;\r\n      this.proxy = null;\r\n      this.painter = null;\r\n    };\r\n\r\n    Handler.prototype.setCursorStyle = function (cursorStyle) {\r\n      var proxy = this.proxy;\r\n      proxy.setCursor && proxy.setCursor(cursorStyle);\r\n    };\r\n\r\n    Handler.prototype.dispatchToElement = function (targetInfo, eventName, event) {\r\n      targetInfo = targetInfo || {};\r\n      var el = targetInfo.target;\r\n\r\n      if (el && el.silent) {\r\n        return;\r\n      }\r\n\r\n      var eventKey = 'on' + eventName;\r\n      var eventPacket = makeEventPacket(eventName, targetInfo, event);\r\n\r\n      while (el) {\r\n        el[eventKey] && (eventPacket.cancelBubble = !!el[eventKey].call(el, eventPacket));\r\n        el.trigger(eventName, eventPacket);\r\n        el = el.__hostTarget ? el.__hostTarget : el.parent;\r\n\r\n        if (eventPacket.cancelBubble) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!eventPacket.cancelBubble) {\r\n        this.trigger(eventName, eventPacket);\r\n\r\n        if (this.painter && this.painter.eachOtherLayer) {\r\n          this.painter.eachOtherLayer(function (layer) {\r\n            if (typeof layer[eventKey] === 'function') {\r\n              layer[eventKey].call(layer, eventPacket);\r\n            }\r\n\r\n            if (layer.trigger) {\r\n              layer.trigger(eventName, eventPacket);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    Handler.prototype.findHover = function (x, y, exclude) {\r\n      var list = this.storage.getDisplayList();\r\n      var out = new HoveredResult(x, y);\r\n\r\n      for (var i = list.length - 1; i >= 0; i--) {\r\n        var hoverCheckResult = void 0;\r\n\r\n        if (list[i] !== exclude && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\r\n          !out.topTarget && (out.topTarget = list[i]);\r\n\r\n          if (hoverCheckResult !== SILENT) {\r\n            out.target = list[i];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return out;\r\n    };\r\n\r\n    Handler.prototype.processGesture = function (event, stage) {\r\n      if (!this._gestureMgr) {\r\n        this._gestureMgr = new GestureMgr();\r\n      }\r\n\r\n      var gestureMgr = this._gestureMgr;\r\n      stage === 'start' && gestureMgr.clear();\r\n      var gestureInfo = gestureMgr.recognize(event, this.findHover(event.zrX, event.zrY, null).target, this.proxy.dom);\r\n      stage === 'end' && gestureMgr.clear();\r\n\r\n      if (gestureInfo) {\r\n        var type = gestureInfo.type;\r\n        event.gestureEvent = type;\r\n        var res = new HoveredResult();\r\n        res.target = gestureInfo.target;\r\n        this.dispatchToElement(res, type, gestureInfo.event);\r\n      }\r\n    };\r\n\r\n    return Handler;\r\n  }(Eventful);\r\n\r\n  each$1(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\r\n    Handler.prototype[name] = function (event) {\r\n      var x = event.zrX;\r\n      var y = event.zrY;\r\n      var isOutside = isOutsideBoundary(this, x, y);\r\n      var hovered;\r\n      var hoveredTarget;\r\n\r\n      if (name !== 'mouseup' || !isOutside) {\r\n        hovered = this.findHover(x, y);\r\n        hoveredTarget = hovered.target;\r\n      }\r\n\r\n      if (name === 'mousedown') {\r\n        this._downEl = hoveredTarget;\r\n        this._downPoint = [event.zrX, event.zrY];\r\n        this._upEl = hoveredTarget;\r\n      } else if (name === 'mouseup') {\r\n        this._upEl = hoveredTarget;\r\n      } else if (name === 'click') {\r\n        if (this._downEl !== this._upEl || !this._downPoint || dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\r\n          return;\r\n        }\r\n\r\n        this._downPoint = null;\r\n      }\r\n\r\n      this.dispatchToElement(hovered, name, event);\r\n    };\r\n  });\r\n\r\n  function isHover(displayable, x, y) {\r\n    if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\r\n      var el = displayable;\r\n      var isSilent = void 0;\r\n      var ignoreClip = false;\r\n\r\n      while (el) {\r\n        if (el.ignoreClip) {\r\n          ignoreClip = true;\r\n        }\r\n\r\n        if (!ignoreClip) {\r\n          var clipPath = el.getClipPath();\r\n\r\n          if (clipPath && !clipPath.contain(x, y)) {\r\n            return false;\r\n          }\r\n\r\n          if (el.silent) {\r\n            isSilent = true;\r\n          }\r\n        }\r\n\r\n        var hostEl = el.__hostTarget;\r\n        el = hostEl ? hostEl : el.parent;\r\n      }\r\n\r\n      return isSilent ? SILENT : true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function isOutsideBoundary(handlerInstance, x, y) {\r\n    var painter = handlerInstance.painter;\r\n    return x < 0 || x > painter.getWidth() || y < 0 || y > painter.getHeight();\r\n  }\r\n\r\n  function create$1() {\r\n    return [1, 0, 0, 1, 0, 0];\r\n  }\r\n\r\n  function identity(out) {\r\n    out[0] = 1;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 1;\r\n    out[4] = 0;\r\n    out[5] = 0;\r\n    return out;\r\n  }\r\n\r\n  function copy$1(out, m) {\r\n    out[0] = m[0];\r\n    out[1] = m[1];\r\n    out[2] = m[2];\r\n    out[3] = m[3];\r\n    out[4] = m[4];\r\n    out[5] = m[5];\r\n    return out;\r\n  }\r\n\r\n  function mul$1(out, m1, m2) {\r\n    var out0 = m1[0] * m2[0] + m1[2] * m2[1];\r\n    var out1 = m1[1] * m2[0] + m1[3] * m2[1];\r\n    var out2 = m1[0] * m2[2] + m1[2] * m2[3];\r\n    var out3 = m1[1] * m2[2] + m1[3] * m2[3];\r\n    var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\r\n    var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\r\n    out[0] = out0;\r\n    out[1] = out1;\r\n    out[2] = out2;\r\n    out[3] = out3;\r\n    out[4] = out4;\r\n    out[5] = out5;\r\n    return out;\r\n  }\r\n\r\n  function translate(out, a, v) {\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[4] = a[4] + v[0];\r\n    out[5] = a[5] + v[1];\r\n    return out;\r\n  }\r\n\r\n  function rotate(out, a, rad) {\r\n    var aa = a[0];\r\n    var ac = a[2];\r\n    var atx = a[4];\r\n    var ab = a[1];\r\n    var ad = a[3];\r\n    var aty = a[5];\r\n    var st = Math.sin(rad);\r\n    var ct = Math.cos(rad);\r\n    out[0] = aa * ct + ab * st;\r\n    out[1] = -aa * st + ab * ct;\r\n    out[2] = ac * ct + ad * st;\r\n    out[3] = -ac * st + ct * ad;\r\n    out[4] = ct * atx + st * aty;\r\n    out[5] = ct * aty - st * atx;\r\n    return out;\r\n  }\r\n\r\n  function scale$1(out, a, v) {\r\n    var vx = v[0];\r\n    var vy = v[1];\r\n    out[0] = a[0] * vx;\r\n    out[1] = a[1] * vy;\r\n    out[2] = a[2] * vx;\r\n    out[3] = a[3] * vy;\r\n    out[4] = a[4] * vx;\r\n    out[5] = a[5] * vy;\r\n    return out;\r\n  }\r\n\r\n  function invert(out, a) {\r\n    var aa = a[0];\r\n    var ac = a[2];\r\n    var atx = a[4];\r\n    var ab = a[1];\r\n    var ad = a[3];\r\n    var aty = a[5];\r\n    var det = aa * ad - ab * ac;\r\n\r\n    if (!det) {\r\n      return null;\r\n    }\r\n\r\n    det = 1.0 / det;\r\n    out[0] = ad * det;\r\n    out[1] = -ab * det;\r\n    out[2] = -ac * det;\r\n    out[3] = aa * det;\r\n    out[4] = (ac * aty - ad * atx) * det;\r\n    out[5] = (ab * atx - aa * aty) * det;\r\n    return out;\r\n  }\r\n\r\n  function clone$2(a) {\r\n    var b = create$1();\r\n    copy$1(b, a);\r\n    return b;\r\n  }\r\n\r\n  var matrix = (Object.freeze || Object)({\r\n    create: create$1,\r\n    identity: identity,\r\n    copy: copy$1,\r\n    mul: mul$1,\r\n    translate: translate,\r\n    rotate: rotate,\r\n    scale: scale$1,\r\n    invert: invert,\r\n    clone: clone$2\r\n  });\r\n  var mIdentity = identity;\r\n  var EPSILON = 5e-5;\r\n\r\n  function isNotAroundZero(val) {\r\n    return val > EPSILON || val < -EPSILON;\r\n  }\r\n\r\n  var scaleTmp = [];\r\n  var tmpTransform = [];\r\n  var originTransform = create$1();\r\n  var abs = Math.abs;\r\n\r\n  var Transformable = function () {\r\n    function Transformable() {}\r\n\r\n    Transformable.prototype.setPosition = function (arr) {\r\n      this.x = arr[0];\r\n      this.y = arr[1];\r\n    };\r\n\r\n    Transformable.prototype.setScale = function (arr) {\r\n      this.scaleX = arr[0];\r\n      this.scaleY = arr[1];\r\n    };\r\n\r\n    Transformable.prototype.setOrigin = function (arr) {\r\n      this.originX = arr[0];\r\n      this.originY = arr[1];\r\n    };\r\n\r\n    Transformable.prototype.needLocalTransform = function () {\r\n      return isNotAroundZero(this.rotation) || isNotAroundZero(this.x) || isNotAroundZero(this.y) || isNotAroundZero(this.scaleX - 1) || isNotAroundZero(this.scaleY - 1);\r\n    };\r\n\r\n    Transformable.prototype.updateTransform = function () {\r\n      var parent = this.parent;\r\n      var parentHasTransform = parent && parent.transform;\r\n      var needLocalTransform = this.needLocalTransform();\r\n      var m = this.transform;\r\n\r\n      if (!(needLocalTransform || parentHasTransform)) {\r\n        m && mIdentity(m);\r\n        return;\r\n      }\r\n\r\n      m = m || create$1();\r\n\r\n      if (needLocalTransform) {\r\n        this.getLocalTransform(m);\r\n      } else {\r\n        mIdentity(m);\r\n      }\r\n\r\n      if (parentHasTransform) {\r\n        if (needLocalTransform) {\r\n          mul$1(m, parent.transform, m);\r\n        } else {\r\n          copy$1(m, parent.transform);\r\n        }\r\n      }\r\n\r\n      this.transform = m;\r\n\r\n      this._resolveGlobalScaleRatio(m);\r\n    };\r\n\r\n    Transformable.prototype._resolveGlobalScaleRatio = function (m) {\r\n      var globalScaleRatio = this.globalScaleRatio;\r\n\r\n      if (globalScaleRatio != null && globalScaleRatio !== 1) {\r\n        this.getGlobalScale(scaleTmp);\r\n        var relX = scaleTmp[0] < 0 ? -1 : 1;\r\n        var relY = scaleTmp[1] < 0 ? -1 : 1;\r\n        var sx = ((scaleTmp[0] - relX) * globalScaleRatio + relX) / scaleTmp[0] || 0;\r\n        var sy = ((scaleTmp[1] - relY) * globalScaleRatio + relY) / scaleTmp[1] || 0;\r\n        m[0] *= sx;\r\n        m[1] *= sx;\r\n        m[2] *= sy;\r\n        m[3] *= sy;\r\n      }\r\n\r\n      this.invTransform = this.invTransform || create$1();\r\n      invert(this.invTransform, m);\r\n    };\r\n\r\n    Transformable.prototype.getLocalTransform = function (m) {\r\n      return Transformable.getLocalTransform(this, m);\r\n    };\r\n\r\n    Transformable.prototype.getComputedTransform = function () {\r\n      var transformNode = this;\r\n      var ancestors = [];\r\n\r\n      while (transformNode) {\r\n        ancestors.push(transformNode);\r\n        transformNode = transformNode.parent;\r\n      }\r\n\r\n      while (transformNode = ancestors.pop()) {\r\n        transformNode.updateTransform();\r\n      }\r\n\r\n      return this.transform;\r\n    };\r\n\r\n    Transformable.prototype.setLocalTransform = function (m) {\r\n      if (!m) {\r\n        return;\r\n      }\r\n\r\n      var sx = m[0] * m[0] + m[1] * m[1];\r\n      var sy = m[2] * m[2] + m[3] * m[3];\r\n\r\n      if (isNotAroundZero(sx - 1)) {\r\n        sx = Math.sqrt(sx);\r\n      }\r\n\r\n      if (isNotAroundZero(sy - 1)) {\r\n        sy = Math.sqrt(sy);\r\n      }\r\n\r\n      if (m[0] < 0) {\r\n        sx = -sx;\r\n      }\r\n\r\n      if (m[3] < 0) {\r\n        sy = -sy;\r\n      }\r\n\r\n      this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\r\n\r\n      if (sx < 0 && sy < 0) {\r\n        this.rotation += Math.PI;\r\n        sx = -sx;\r\n        sy = -sy;\r\n      }\r\n\r\n      this.x = m[4];\r\n      this.y = m[5];\r\n      this.scaleX = sx;\r\n      this.scaleY = sy;\r\n    };\r\n\r\n    Transformable.prototype.decomposeTransform = function () {\r\n      if (!this.transform) {\r\n        return;\r\n      }\r\n\r\n      var parent = this.parent;\r\n      var m = this.transform;\r\n\r\n      if (parent && parent.transform) {\r\n        mul$1(tmpTransform, parent.invTransform, m);\r\n        m = tmpTransform;\r\n      }\r\n\r\n      var ox = this.originX;\r\n      var oy = this.originY;\r\n\r\n      if (ox || oy) {\r\n        originTransform[4] = ox;\r\n        originTransform[5] = oy;\r\n        mul$1(tmpTransform, m, originTransform);\r\n        tmpTransform[4] -= ox;\r\n        tmpTransform[5] -= oy;\r\n        m = tmpTransform;\r\n      }\r\n\r\n      this.setLocalTransform(m);\r\n    };\r\n\r\n    Transformable.prototype.getGlobalScale = function (out) {\r\n      var m = this.transform;\r\n      out = out || [];\r\n\r\n      if (!m) {\r\n        out[0] = 1;\r\n        out[1] = 1;\r\n        return out;\r\n      }\r\n\r\n      out[0] = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\r\n      out[1] = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\r\n\r\n      if (m[0] < 0) {\r\n        out[0] = -out[0];\r\n      }\r\n\r\n      if (m[3] < 0) {\r\n        out[1] = -out[1];\r\n      }\r\n\r\n      return out;\r\n    };\r\n\r\n    Transformable.prototype.transformCoordToLocal = function (x, y) {\r\n      var v2 = [x, y];\r\n      var invTransform = this.invTransform;\r\n\r\n      if (invTransform) {\r\n        applyTransform(v2, v2, invTransform);\r\n      }\r\n\r\n      return v2;\r\n    };\r\n\r\n    Transformable.prototype.transformCoordToGlobal = function (x, y) {\r\n      var v2 = [x, y];\r\n      var transform = this.transform;\r\n\r\n      if (transform) {\r\n        applyTransform(v2, v2, transform);\r\n      }\r\n\r\n      return v2;\r\n    };\r\n\r\n    Transformable.prototype.getLineScale = function () {\r\n      var m = this.transform;\r\n      return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\r\n    };\r\n\r\n    Transformable.getLocalTransform = function (target, m) {\r\n      m = m || [];\r\n      mIdentity(m);\r\n      var ox = target.originX || 0;\r\n      var oy = target.originY || 0;\r\n      var sx = target.scaleX;\r\n      var sy = target.scaleY;\r\n      var rotation = target.rotation || 0;\r\n      var x = target.x;\r\n      var y = target.y;\r\n      m[4] -= ox;\r\n      m[5] -= oy;\r\n      m[0] *= sx;\r\n      m[1] *= sy;\r\n      m[2] *= sx;\r\n      m[3] *= sy;\r\n      m[4] *= sx;\r\n      m[5] *= sy;\r\n      if (rotation) {\r\n          let sub_rotation = target.parent._children[2].rotation;\r\n          if(target.name === undefined)\r\n          label_rotate(m, m, rotation, sub_rotation);\r\n          else\r\n          rotate(m, m, rotation);\r\n      }\r\n\r\n      m[4] += ox;\r\n      m[5] += oy;\r\n      m[4] += x;\r\n      m[5] += y;\r\n      return m;\r\n    };\r\n\r\n    Transformable.initDefaultProps = function () {\r\n      var proto = Transformable.prototype;\r\n      proto.x = 0;\r\n      proto.y = 0;\r\n      proto.scaleX = 1;\r\n      proto.scaleY = 1;\r\n      proto.originX = 0;\r\n      proto.originY = 0;\r\n      proto.rotation = 0;\r\n      proto.globalScaleRatio = 1;\r\n    }();\r\n\r\n    return Transformable;\r\n  }();\r\n\r\n  var easing = {\r\n    linear: function (k) {\r\n      return k;\r\n    },\r\n    quadraticIn: function (k) {\r\n      return k * k;\r\n    },\r\n    quadraticOut: function (k) {\r\n      return k * (2 - k);\r\n    },\r\n    quadraticInOut: function (k) {\r\n      if ((k *= 2) < 1) {\r\n        return 0.5 * k * k;\r\n      }\r\n\r\n      return -0.5 * (--k * (k - 2) - 1);\r\n    },\r\n    cubicIn: function (k) {\r\n      return k * k * k;\r\n    },\r\n    cubicOut: function (k) {\r\n      return --k * k * k + 1;\r\n    },\r\n    cubicInOut: function (k) {\r\n      if ((k *= 2) < 1) {\r\n        return 0.5 * k * k * k;\r\n      }\r\n\r\n      return 0.5 * ((k -= 2) * k * k + 2);\r\n    },\r\n    quarticIn: function (k) {\r\n      return k * k * k * k;\r\n    },\r\n    quarticOut: function (k) {\r\n      return 1 - --k * k * k * k;\r\n    },\r\n    quarticInOut: function (k) {\r\n      if ((k *= 2) < 1) {\r\n        return 0.5 * k * k * k * k;\r\n      }\r\n\r\n      return -0.5 * ((k -= 2) * k * k * k - 2);\r\n    },\r\n    quinticIn: function (k) {\r\n      return k * k * k * k * k;\r\n    },\r\n    quinticOut: function (k) {\r\n      return --k * k * k * k * k + 1;\r\n    },\r\n    quinticInOut: function (k) {\r\n      if ((k *= 2) < 1) {\r\n        return 0.5 * k * k * k * k * k;\r\n      }\r\n\r\n      return 0.5 * ((k -= 2) * k * k * k * k + 2);\r\n    },\r\n    sinusoidalIn: function (k) {\r\n      return 1 - Math.cos(k * Math.PI / 2);\r\n    },\r\n    sinusoidalOut: function (k) {\r\n      return Math.sin(k * Math.PI / 2);\r\n    },\r\n    sinusoidalInOut: function (k) {\r\n      return 0.5 * (1 - Math.cos(Math.PI * k));\r\n    },\r\n    exponentialIn: function (k) {\r\n      return k === 0 ? 0 : Math.pow(1024, k - 1);\r\n    },\r\n    exponentialOut: function (k) {\r\n      return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\r\n    },\r\n    exponentialInOut: function (k) {\r\n      if (k === 0) {\r\n        return 0;\r\n      }\r\n\r\n      if (k === 1) {\r\n        return 1;\r\n      }\r\n\r\n      if ((k *= 2) < 1) {\r\n        return 0.5 * Math.pow(1024, k - 1);\r\n      }\r\n\r\n      return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\r\n    },\r\n    circularIn: function (k) {\r\n      return 1 - Math.sqrt(1 - k * k);\r\n    },\r\n    circularOut: function (k) {\r\n      return Math.sqrt(1 - --k * k);\r\n    },\r\n    circularInOut: function (k) {\r\n      if ((k *= 2) < 1) {\r\n        return -0.5 * (Math.sqrt(1 - k * k) - 1);\r\n      }\r\n\r\n      return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\r\n    },\r\n    elasticIn: function (k) {\r\n      var s;\r\n      var a = 0.1;\r\n      var p = 0.4;\r\n\r\n      if (k === 0) {\r\n        return 0;\r\n      }\r\n\r\n      if (k === 1) {\r\n        return 1;\r\n      }\r\n\r\n      if (!a || a < 1) {\r\n        a = 1;\r\n        s = p / 4;\r\n      } else {\r\n        s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n      }\r\n\r\n      return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\r\n    },\r\n    elasticOut: function (k) {\r\n      var s;\r\n      var a = 0.1;\r\n      var p = 0.4;\r\n\r\n      if (k === 0) {\r\n        return 0;\r\n      }\r\n\r\n      if (k === 1) {\r\n        return 1;\r\n      }\r\n\r\n      if (!a || a < 1) {\r\n        a = 1;\r\n        s = p / 4;\r\n      } else {\r\n        s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n      }\r\n\r\n      return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\r\n    },\r\n    elasticInOut: function (k) {\r\n      var s;\r\n      var a = 0.1;\r\n      var p = 0.4;\r\n\r\n      if (k === 0) {\r\n        return 0;\r\n      }\r\n\r\n      if (k === 1) {\r\n        return 1;\r\n      }\r\n\r\n      if (!a || a < 1) {\r\n        a = 1;\r\n        s = p / 4;\r\n      } else {\r\n        s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n      }\r\n\r\n      if ((k *= 2) < 1) {\r\n        return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\r\n      }\r\n\r\n      return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n    },\r\n    backIn: function (k) {\r\n      var s = 1.70158;\r\n      return k * k * ((s + 1) * k - s);\r\n    },\r\n    backOut: function (k) {\r\n      var s = 1.70158;\r\n      return --k * k * ((s + 1) * k + s) + 1;\r\n    },\r\n    backInOut: function (k) {\r\n      var s = 1.70158 * 1.525;\r\n\r\n      if ((k *= 2) < 1) {\r\n        return 0.5 * (k * k * ((s + 1) * k - s));\r\n      }\r\n\r\n      return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\r\n    },\r\n    bounceIn: function (k) {\r\n      return 1 - easing.bounceOut(1 - k);\r\n    },\r\n    bounceOut: function (k) {\r\n      if (k < 1 / 2.75) {\r\n        return 7.5625 * k * k;\r\n      } else if (k < 2 / 2.75) {\r\n        return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\r\n      } else if (k < 2.5 / 2.75) {\r\n        return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\r\n      } else {\r\n        return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\r\n      }\r\n    },\r\n    bounceInOut: function (k) {\r\n      if (k < 0.5) {\r\n        return easing.bounceIn(k * 2) * 0.5;\r\n      }\r\n\r\n      return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\r\n    }\r\n  };\r\n\r\n  var Clip = function () {\r\n    function Clip(opts) {\r\n      this._initialized = false;\r\n      this._startTime = 0;\r\n      this._pausedTime = 0;\r\n      this._paused = false;\r\n      this._life = opts.life || 1000;\r\n      this._delay = opts.delay || 0;\r\n      this.loop = opts.loop == null ? false : opts.loop;\r\n      this.gap = opts.gap || 0;\r\n      this.easing = opts.easing || 'linear';\r\n      this.onframe = opts.onframe;\r\n      this.ondestroy = opts.ondestroy;\r\n      this.onrestart = opts.onrestart;\r\n    }\r\n\r\n    Clip.prototype.step = function (globalTime, deltaTime) {\r\n      if (!this._initialized) {\r\n        this._startTime = globalTime + this._delay;\r\n        this._initialized = true;\r\n      }\r\n\r\n      if (this._paused) {\r\n        this._pausedTime += deltaTime;\r\n        return;\r\n      }\r\n\r\n      var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\r\n\r\n      if (percent < 0) {\r\n        percent = 0;\r\n      }\r\n\r\n      percent = Math.min(percent, 1);\r\n      var easing$$1 = this.easing;\r\n      var easingFunc = typeof easing$$1 === 'string' ? easing[easing$$1] : easing$$1;\r\n      var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\r\n      this.onframe && this.onframe(schedule);\r\n\r\n      if (percent === 1) {\r\n        if (this.loop) {\r\n          this._restart(globalTime);\r\n\r\n          this.onrestart && this.onrestart();\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    Clip.prototype._restart = function (globalTime) {\r\n      var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\r\n      this._startTime = globalTime - remainder + this.gap;\r\n      this._pausedTime = 0;\r\n    };\r\n\r\n    Clip.prototype.pause = function () {\r\n      this._paused = true;\r\n    };\r\n\r\n    Clip.prototype.resume = function () {\r\n      this._paused = false;\r\n    };\r\n\r\n    return Clip;\r\n  }();\r\n\r\n  var Entry = function () {\r\n    function Entry(val) {\r\n      this.value = val;\r\n    }\r\n\r\n    return Entry;\r\n  }();\r\n\r\n  var LinkedList = function () {\r\n    function LinkedList() {\r\n      this._len = 0;\r\n    }\r\n\r\n    LinkedList.prototype.insert = function (val) {\r\n      var entry = new Entry(val);\r\n      this.insertEntry(entry);\r\n      return entry;\r\n    };\r\n\r\n    LinkedList.prototype.insertEntry = function (entry) {\r\n      if (!this.head) {\r\n        this.head = this.tail = entry;\r\n      } else {\r\n        this.tail.next = entry;\r\n        entry.prev = this.tail;\r\n        entry.next = null;\r\n        this.tail = entry;\r\n      }\r\n\r\n      this._len++;\r\n    };\r\n\r\n    LinkedList.prototype.remove = function (entry) {\r\n      var prev = entry.prev;\r\n      var next = entry.next;\r\n\r\n      if (prev) {\r\n        prev.next = next;\r\n      } else {\r\n        this.head = next;\r\n      }\r\n\r\n      if (next) {\r\n        next.prev = prev;\r\n      } else {\r\n        this.tail = prev;\r\n      }\r\n\r\n      entry.next = entry.prev = null;\r\n      this._len--;\r\n    };\r\n\r\n    LinkedList.prototype.len = function () {\r\n      return this._len;\r\n    };\r\n\r\n    LinkedList.prototype.clear = function () {\r\n      this.head = this.tail = null;\r\n      this._len = 0;\r\n    };\r\n\r\n    return LinkedList;\r\n  }();\r\n\r\n  var LRU = function () {\r\n    function LRU(maxSize) {\r\n      this._list = new LinkedList();\r\n      this._maxSize = 10;\r\n      this._map = {};\r\n      this._maxSize = maxSize;\r\n    }\r\n\r\n    LRU.prototype.put = function (key, value) {\r\n      var list = this._list;\r\n      var map = this._map;\r\n      var removed = null;\r\n\r\n      if (map[key] == null) {\r\n        var len = list.len();\r\n        var entry = this._lastRemovedEntry;\r\n\r\n        if (len >= this._maxSize && len > 0) {\r\n          var leastUsedEntry = list.head;\r\n          list.remove(leastUsedEntry);\r\n          delete map[leastUsedEntry.key];\r\n          removed = leastUsedEntry.value;\r\n          this._lastRemovedEntry = leastUsedEntry;\r\n        }\r\n\r\n        if (entry) {\r\n          entry.value = value;\r\n        } else {\r\n          entry = new Entry(value);\r\n        }\r\n\r\n        entry.key = key;\r\n        list.insertEntry(entry);\r\n        map[key] = entry;\r\n      }\r\n\r\n      return removed;\r\n    };\r\n\r\n    LRU.prototype.get = function (key) {\r\n      var entry = this._map[key];\r\n      var list = this._list;\r\n\r\n      if (entry != null) {\r\n        if (entry !== list.tail) {\r\n          list.remove(entry);\r\n          list.insertEntry(entry);\r\n        }\r\n\r\n        return entry.value;\r\n      }\r\n    };\r\n\r\n    LRU.prototype.clear = function () {\r\n      this._list.clear();\r\n\r\n      this._map = {};\r\n    };\r\n\r\n    LRU.prototype.len = function () {\r\n      return this._list.len();\r\n    };\r\n\r\n    return LRU;\r\n  }();\r\n\r\n  var kCSSColorTable = {\r\n    'transparent': [0, 0, 0, 0],\r\n    'aliceblue': [240, 248, 255, 1],\r\n    'antiquewhite': [250, 235, 215, 1],\r\n    'aqua': [0, 255, 255, 1],\r\n    'aquamarine': [127, 255, 212, 1],\r\n    'azure': [240, 255, 255, 1],\r\n    'beige': [245, 245, 220, 1],\r\n    'bisque': [255, 228, 196, 1],\r\n    'black': [0, 0, 0, 1],\r\n    'blanchedalmond': [255, 235, 205, 1],\r\n    'blue': [0, 0, 255, 1],\r\n    'blueviolet': [138, 43, 226, 1],\r\n    'brown': [165, 42, 42, 1],\r\n    'burlywood': [222, 184, 135, 1],\r\n    'cadetblue': [95, 158, 160, 1],\r\n    'chartreuse': [127, 255, 0, 1],\r\n    'chocolate': [210, 105, 30, 1],\r\n    'coral': [255, 127, 80, 1],\r\n    'cornflowerblue': [100, 149, 237, 1],\r\n    'cornsilk': [255, 248, 220, 1],\r\n    'crimson': [220, 20, 60, 1],\r\n    'cyan': [0, 255, 255, 1],\r\n    'darkblue': [0, 0, 139, 1],\r\n    'darkcyan': [0, 139, 139, 1],\r\n    'darkgoldenrod': [184, 134, 11, 1],\r\n    'darkgray': [169, 169, 169, 1],\r\n    'darkgreen': [0, 100, 0, 1],\r\n    'darkgrey': [169, 169, 169, 1],\r\n    'darkkhaki': [189, 183, 107, 1],\r\n    'darkmagenta': [139, 0, 139, 1],\r\n    'darkolivegreen': [85, 107, 47, 1],\r\n    'darkorange': [255, 140, 0, 1],\r\n    'darkorchid': [153, 50, 204, 1],\r\n    'darkred': [139, 0, 0, 1],\r\n    'darksalmon': [233, 150, 122, 1],\r\n    'darkseagreen': [143, 188, 143, 1],\r\n    'darkslateblue': [72, 61, 139, 1],\r\n    'darkslategray': [47, 79, 79, 1],\r\n    'darkslategrey': [47, 79, 79, 1],\r\n    'darkturquoise': [0, 206, 209, 1],\r\n    'darkviolet': [148, 0, 211, 1],\r\n    'deeppink': [255, 20, 147, 1],\r\n    'deepskyblue': [0, 191, 255, 1],\r\n    'dimgray': [105, 105, 105, 1],\r\n    'dimgrey': [105, 105, 105, 1],\r\n    'dodgerblue': [30, 144, 255, 1],\r\n    'firebrick': [178, 34, 34, 1],\r\n    'floralwhite': [255, 250, 240, 1],\r\n    'forestgreen': [34, 139, 34, 1],\r\n    'fuchsia': [255, 0, 255, 1],\r\n    'gainsboro': [220, 220, 220, 1],\r\n    'ghostwhite': [248, 248, 255, 1],\r\n    'gold': [255, 215, 0, 1],\r\n    'goldenrod': [218, 165, 32, 1],\r\n    'gray': [128, 128, 128, 1],\r\n    'green': [0, 128, 0, 1],\r\n    'greenyellow': [173, 255, 47, 1],\r\n    'grey': [128, 128, 128, 1],\r\n    'honeydew': [240, 255, 240, 1],\r\n    'hotpink': [255, 105, 180, 1],\r\n    'indianred': [205, 92, 92, 1],\r\n    'indigo': [75, 0, 130, 1],\r\n    'ivory': [255, 255, 240, 1],\r\n    'khaki': [240, 230, 140, 1],\r\n    'lavender': [230, 230, 250, 1],\r\n    'lavenderblush': [255, 240, 245, 1],\r\n    'lawngreen': [124, 252, 0, 1],\r\n    'lemonchiffon': [255, 250, 205, 1],\r\n    'lightblue': [173, 216, 230, 1],\r\n    'lightcoral': [240, 128, 128, 1],\r\n    'lightcyan': [224, 255, 255, 1],\r\n    'lightgoldenrodyellow': [250, 250, 210, 1],\r\n    'lightgray': [211, 211, 211, 1],\r\n    'lightgreen': [144, 238, 144, 1],\r\n    'lightgrey': [211, 211, 211, 1],\r\n    'lightpink': [255, 182, 193, 1],\r\n    'lightsalmon': [255, 160, 122, 1],\r\n    'lightseagreen': [32, 178, 170, 1],\r\n    'lightskyblue': [135, 206, 250, 1],\r\n    'lightslategray': [119, 136, 153, 1],\r\n    'lightslategrey': [119, 136, 153, 1],\r\n    'lightsteelblue': [176, 196, 222, 1],\r\n    'lightyellow': [255, 255, 224, 1],\r\n    'lime': [0, 255, 0, 1],\r\n    'limegreen': [50, 205, 50, 1],\r\n    'linen': [250, 240, 230, 1],\r\n    'magenta': [255, 0, 255, 1],\r\n    'maroon': [128, 0, 0, 1],\r\n    'mediumaquamarine': [102, 205, 170, 1],\r\n    'mediumblue': [0, 0, 205, 1],\r\n    'mediumorchid': [186, 85, 211, 1],\r\n    'mediumpurple': [147, 112, 219, 1],\r\n    'mediumseagreen': [60, 179, 113, 1],\r\n    'mediumslateblue': [123, 104, 238, 1],\r\n    'mediumspringgreen': [0, 250, 154, 1],\r\n    'mediumturquoise': [72, 209, 204, 1],\r\n    'mediumvioletred': [199, 21, 133, 1],\r\n    'midnightblue': [25, 25, 112, 1],\r\n    'mintcream': [245, 255, 250, 1],\r\n    'mistyrose': [255, 228, 225, 1],\r\n    'moccasin': [255, 228, 181, 1],\r\n    'navajowhite': [255, 222, 173, 1],\r\n    'navy': [0, 0, 128, 1],\r\n    'oldlace': [253, 245, 230, 1],\r\n    'olive': [128, 128, 0, 1],\r\n    'olivedrab': [107, 142, 35, 1],\r\n    'orange': [255, 165, 0, 1],\r\n    'orangered': [255, 69, 0, 1],\r\n    'orchid': [218, 112, 214, 1],\r\n    'palegoldenrod': [238, 232, 170, 1],\r\n    'palegreen': [152, 251, 152, 1],\r\n    'paleturquoise': [175, 238, 238, 1],\r\n    'palevioletred': [219, 112, 147, 1],\r\n    'papayawhip': [255, 239, 213, 1],\r\n    'peachpuff': [255, 218, 185, 1],\r\n    'peru': [205, 133, 63, 1],\r\n    'pink': [255, 192, 203, 1],\r\n    'plum': [221, 160, 221, 1],\r\n    'powderblue': [176, 224, 230, 1],\r\n    'purple': [128, 0, 128, 1],\r\n    'red': [255, 0, 0, 1],\r\n    'rosybrown': [188, 143, 143, 1],\r\n    'royalblue': [65, 105, 225, 1],\r\n    'saddlebrown': [139, 69, 19, 1],\r\n    'salmon': [250, 128, 114, 1],\r\n    'sandybrown': [244, 164, 96, 1],\r\n    'seagreen': [46, 139, 87, 1],\r\n    'seashell': [255, 245, 238, 1],\r\n    'sienna': [160, 82, 45, 1],\r\n    'silver': [192, 192, 192, 1],\r\n    'skyblue': [135, 206, 235, 1],\r\n    'slateblue': [106, 90, 205, 1],\r\n    'slategray': [112, 128, 144, 1],\r\n    'slategrey': [112, 128, 144, 1],\r\n    'snow': [255, 250, 250, 1],\r\n    'springgreen': [0, 255, 127, 1],\r\n    'steelblue': [70, 130, 180, 1],\r\n    'tan': [210, 180, 140, 1],\r\n    'teal': [0, 128, 128, 1],\r\n    'thistle': [216, 191, 216, 1],\r\n    'tomato': [255, 99, 71, 1],\r\n    'turquoise': [64, 224, 208, 1],\r\n    'violet': [238, 130, 238, 1],\r\n    'wheat': [245, 222, 179, 1],\r\n    'white': [255, 255, 255, 1],\r\n    'whitesmoke': [245, 245, 245, 1],\r\n    'yellow': [255, 255, 0, 1],\r\n    'yellowgreen': [154, 205, 50, 1]\r\n  };\r\n\r\n  function clampCssByte(i) {\r\n    i = Math.round(i);\r\n    return i < 0 ? 0 : i > 255 ? 255 : i;\r\n  }\r\n\r\n  function clampCssAngle(i) {\r\n    i = Math.round(i);\r\n    return i < 0 ? 0 : i > 360 ? 360 : i;\r\n  }\r\n\r\n  function clampCssFloat(f) {\r\n    return f < 0 ? 0 : f > 1 ? 1 : f;\r\n  }\r\n\r\n  function parseCssInt(val) {\r\n    var str = val;\r\n\r\n    if (str.length && str.charAt(str.length - 1) === '%') {\r\n      return clampCssByte(parseFloat(str) / 100 * 255);\r\n    }\r\n\r\n    return clampCssByte(parseInt(str, 10));\r\n  }\r\n\r\n  function parseCssFloat(val) {\r\n    var str = val;\r\n\r\n    if (str.length && str.charAt(str.length - 1) === '%') {\r\n      return clampCssFloat(parseFloat(str) / 100);\r\n    }\r\n\r\n    return clampCssFloat(parseFloat(str));\r\n  }\r\n\r\n  function cssHueToRgb(m1, m2, h) {\r\n    if (h < 0) {\r\n      h += 1;\r\n    } else if (h > 1) {\r\n      h -= 1;\r\n    }\r\n\r\n    if (h * 6 < 1) {\r\n      return m1 + (m2 - m1) * h * 6;\r\n    }\r\n\r\n    if (h * 2 < 1) {\r\n      return m2;\r\n    }\r\n\r\n    if (h * 3 < 2) {\r\n      return m1 + (m2 - m1) * (2 / 3 - h) * 6;\r\n    }\r\n\r\n    return m1;\r\n  }\r\n\r\n  function lerpNumber(a, b, p) {\r\n    return a + (b - a) * p;\r\n  }\r\n\r\n  function setRgba(out, r, g, b, a) {\r\n    out[0] = r;\r\n    out[1] = g;\r\n    out[2] = b;\r\n    out[3] = a;\r\n    return out;\r\n  }\r\n\r\n  function copyRgba(out, a) {\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    return out;\r\n  }\r\n\r\n  var colorCache = new LRU(20);\r\n  var lastRemovedArr = null;\r\n\r\n  function putToCache(colorStr, rgbaArr) {\r\n    if (lastRemovedArr) {\r\n      copyRgba(lastRemovedArr, rgbaArr);\r\n    }\r\n\r\n    lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\r\n  }\r\n\r\n  function parse(colorStr, rgbaArr) {\r\n    if (!colorStr) {\r\n      return;\r\n    }\r\n\r\n    rgbaArr = rgbaArr || [];\r\n    var cached = colorCache.get(colorStr);\r\n\r\n    if (cached) {\r\n      return copyRgba(rgbaArr, cached);\r\n    }\r\n\r\n    colorStr = colorStr + '';\r\n    var str = colorStr.replace(/ /g, '').toLowerCase();\r\n\r\n    if (str in kCSSColorTable) {\r\n      copyRgba(rgbaArr, kCSSColorTable[str]);\r\n      putToCache(colorStr, rgbaArr);\r\n      return rgbaArr;\r\n    }\r\n\r\n    var strLen = str.length;\r\n\r\n    if (str.charAt(0) === '#') {\r\n      if (strLen === 4 || strLen === 5) {\r\n        var iv = parseInt(str.slice(1, 4), 16);\r\n\r\n        if (!(iv >= 0 && iv <= 0xfff)) {\r\n          setRgba(rgbaArr, 0, 0, 0, 1);\r\n          return;\r\n        }\r\n\r\n        setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, strLen === 5 ? parseInt(str.slice(4), 16) / 0xf : 1);\r\n        putToCache(colorStr, rgbaArr);\r\n        return rgbaArr;\r\n      } else if (strLen === 7 || strLen === 9) {\r\n        var iv = parseInt(str.slice(1, 7), 16);\r\n\r\n        if (!(iv >= 0 && iv <= 0xffffff)) {\r\n          setRgba(rgbaArr, 0, 0, 0, 1);\r\n          return;\r\n        }\r\n\r\n        setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, strLen === 9 ? parseInt(str.slice(7), 16) / 0xff : 1);\r\n        putToCache(colorStr, rgbaArr);\r\n        return rgbaArr;\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    var op = str.indexOf('(');\r\n    var ep = str.indexOf(')');\r\n\r\n    if (op !== -1 && ep + 1 === strLen) {\r\n      var fname = str.substr(0, op);\r\n      var params = str.substr(op + 1, ep - (op + 1)).split(',');\r\n      var alpha = 1;\r\n\r\n      switch (fname) {\r\n        case 'rgba':\r\n          if (params.length !== 4) {\r\n            return params.length === 3 ? setRgba(rgbaArr, +params[0], +params[1], +params[2], 1) : setRgba(rgbaArr, 0, 0, 0, 1);\r\n          }\r\n\r\n          alpha = parseCssFloat(params.pop());\r\n\r\n        case 'rgb':\r\n          if (params.length !== 3) {\r\n            setRgba(rgbaArr, 0, 0, 0, 1);\r\n            return;\r\n          }\r\n\r\n          setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\r\n          putToCache(colorStr, rgbaArr);\r\n          return rgbaArr;\r\n\r\n        case 'hsla':\r\n          if (params.length !== 4) {\r\n            setRgba(rgbaArr, 0, 0, 0, 1);\r\n            return;\r\n          }\r\n\r\n          params[3] = parseCssFloat(params[3]);\r\n          hsla2rgba(params, rgbaArr);\r\n          putToCache(colorStr, rgbaArr);\r\n          return rgbaArr;\r\n\r\n        case 'hsl':\r\n          if (params.length !== 3) {\r\n            setRgba(rgbaArr, 0, 0, 0, 1);\r\n            return;\r\n          }\r\n\r\n          hsla2rgba(params, rgbaArr);\r\n          putToCache(colorStr, rgbaArr);\r\n          return rgbaArr;\r\n\r\n        default:\r\n          return;\r\n      }\r\n    }\r\n\r\n    setRgba(rgbaArr, 0, 0, 0, 1);\r\n    return;\r\n  }\r\n\r\n  function hsla2rgba(hsla, rgba) {\r\n    var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360;\r\n    var s = parseCssFloat(hsla[1]);\r\n    var l = parseCssFloat(hsla[2]);\r\n    var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\r\n    var m1 = l * 2 - m2;\r\n    rgba = rgba || [];\r\n    setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\r\n\r\n    if (hsla.length === 4) {\r\n      rgba[3] = hsla[3];\r\n    }\r\n\r\n    return rgba;\r\n  }\r\n\r\n  function rgba2hsla(rgba) {\r\n    if (!rgba) {\r\n      return;\r\n    }\r\n\r\n    var R = rgba[0] / 255;\r\n    var G = rgba[1] / 255;\r\n    var B = rgba[2] / 255;\r\n    var vMin = Math.min(R, G, B);\r\n    var vMax = Math.max(R, G, B);\r\n    var delta = vMax - vMin;\r\n    var L = (vMax + vMin) / 2;\r\n    var H;\r\n    var S;\r\n\r\n    if (delta === 0) {\r\n      H = 0;\r\n      S = 0;\r\n    } else {\r\n      if (L < 0.5) {\r\n        S = delta / (vMax + vMin);\r\n      } else {\r\n        S = delta / (2 - vMax - vMin);\r\n      }\r\n\r\n      var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\r\n      var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\r\n      var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\r\n\r\n      if (R === vMax) {\r\n        H = deltaB - deltaG;\r\n      } else if (G === vMax) {\r\n        H = 1 / 3 + deltaR - deltaB;\r\n      } else if (B === vMax) {\r\n        H = 2 / 3 + deltaG - deltaR;\r\n      }\r\n\r\n      if (H < 0) {\r\n        H += 1;\r\n      }\r\n\r\n      if (H > 1) {\r\n        H -= 1;\r\n      }\r\n    }\r\n\r\n    var hsla = [H * 360, S, L];\r\n\r\n    if (rgba[3] != null) {\r\n      hsla.push(rgba[3]);\r\n    }\r\n\r\n    return hsla;\r\n  }\r\n\r\n  function lift(color, level) {\r\n    var colorArr = parse(color);\r\n\r\n    if (colorArr) {\r\n      for (var i = 0; i < 3; i++) {\r\n        if (level < 0) {\r\n          colorArr[i] = colorArr[i] * (1 - level) | 0;\r\n        } else {\r\n          colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\r\n        }\r\n\r\n        if (colorArr[i] > 255) {\r\n          colorArr[i] = 255;\r\n        } else if (colorArr[i] < 0) {\r\n          colorArr[i] = 0;\r\n        }\r\n      }\r\n\r\n      return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\r\n    }\r\n  }\r\n\r\n  function toHex(color) {\r\n    var colorArr = parse(color);\r\n\r\n    if (colorArr) {\r\n      return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\r\n    }\r\n  }\r\n\r\n  function fastLerp(normalizedValue, colors, out) {\r\n    if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\r\n      return;\r\n    }\r\n\r\n    out = out || [];\r\n    var value = normalizedValue * (colors.length - 1);\r\n    var leftIndex = Math.floor(value);\r\n    var rightIndex = Math.ceil(value);\r\n    var leftColor = colors[leftIndex];\r\n    var rightColor = colors[rightIndex];\r\n    var dv = value - leftIndex;\r\n    out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\r\n    out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\r\n    out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\r\n    out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\r\n    return out;\r\n  }\r\n\r\n  var fastMapToColor = fastLerp;\r\n\r\n  function lerp$1(normalizedValue, colors, fullOutput) {\r\n    if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\r\n      return;\r\n    }\r\n\r\n    var value = normalizedValue * (colors.length - 1);\r\n    var leftIndex = Math.floor(value);\r\n    var rightIndex = Math.ceil(value);\r\n    var leftColor = parse(colors[leftIndex]);\r\n    var rightColor = parse(colors[rightIndex]);\r\n    var dv = value - leftIndex;\r\n    var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\r\n    return fullOutput ? {\r\n      color: color,\r\n      leftIndex: leftIndex,\r\n      rightIndex: rightIndex,\r\n      value: value\r\n    } : color;\r\n  }\r\n\r\n  var mapToColor = lerp$1;\r\n\r\n  function modifyHSL(color, h, s, l) {\r\n    var colorArr = parse(color);\r\n\r\n    if (color) {\r\n      colorArr = rgba2hsla(colorArr);\r\n      h != null && (colorArr[0] = clampCssAngle(h));\r\n      s != null && (colorArr[1] = parseCssFloat(s));\r\n      l != null && (colorArr[2] = parseCssFloat(l));\r\n      return stringify(hsla2rgba(colorArr), 'rgba');\r\n    }\r\n  }\r\n\r\n  function modifyAlpha(color, alpha) {\r\n    var colorArr = parse(color);\r\n\r\n    if (colorArr && alpha != null) {\r\n      colorArr[3] = clampCssFloat(alpha);\r\n      return stringify(colorArr, 'rgba');\r\n    }\r\n  }\r\n\r\n  function stringify(arrColor, type) {\r\n    if (!arrColor || !arrColor.length) {\r\n      return;\r\n    }\r\n\r\n    var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\r\n\r\n    if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\r\n      colorStr += ',' + arrColor[3];\r\n    }\r\n\r\n    return type + '(' + colorStr + ')';\r\n  }\r\n\r\n  function lum(color, backgroundLum) {\r\n    var arr = parse(color);\r\n    return arr ? (0.299 * arr[0] + 0.587 * arr[1] + 0.114 * arr[2]) * arr[3] / 255 + (1 - arr[3]) * backgroundLum : 0;\r\n  }\r\n\r\n  function random() {\r\n    var r = Math.round(Math.random() * 255);\r\n    var g = Math.round(Math.random() * 255);\r\n    var b = Math.round(Math.random() * 255);\r\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\r\n  }\r\n\r\n  var color = (Object.freeze || Object)({\r\n    parse: parse,\r\n    lift: lift,\r\n    toHex: toHex,\r\n    fastLerp: fastLerp,\r\n    fastMapToColor: fastMapToColor,\r\n    lerp: lerp$1,\r\n    mapToColor: mapToColor,\r\n    modifyHSL: modifyHSL,\r\n    modifyAlpha: modifyAlpha,\r\n    stringify: stringify,\r\n    lum: lum,\r\n    random: random\r\n  });\r\n  var arraySlice = Array.prototype.slice;\r\n\r\n  function interpolateNumber(p0, p1, percent) {\r\n    return (p1 - p0) * percent + p0;\r\n  }\r\n\r\n  function step(p0, p1, percent) {\r\n    return percent > 0.5 ? p1 : p0;\r\n  }\r\n\r\n  function interpolate1DArray(out, p0, p1, percent) {\r\n    var len = p0.length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\r\n    }\r\n  }\r\n\r\n  function interpolate2DArray(out, p0, p1, percent) {\r\n    var len = p0.length;\r\n    var len2 = len && p0[0].length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      if (!out[i]) {\r\n        out[i] = [];\r\n      }\r\n\r\n      for (var j = 0; j < len2; j++) {\r\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\r\n      }\r\n    }\r\n  }\r\n\r\n  function add1DArray(out, p0, p1, sign) {\r\n    var len = p0.length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      out[i] = p0[i] + p1[i] * sign;\r\n    }\r\n\r\n    return out;\r\n  }\r\n\r\n  function add2DArray(out, p0, p1, sign) {\r\n    var len = p0.length;\r\n    var len2 = len && p0[0].length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      if (!out[i]) {\r\n        out[i] = [];\r\n      }\r\n\r\n      for (var j = 0; j < len2; j++) {\r\n        out[i][j] = p0[i][j] + p1[i][j] * sign;\r\n      }\r\n    }\r\n\r\n    return out;\r\n  }\r\n\r\n  function fillArray(val0, val1, arrDim) {\r\n    var arr0 = val0;\r\n    var arr1 = val1;\r\n\r\n    if (!arr0.push || !arr1.push) {\r\n      return;\r\n    }\r\n\r\n    var arr0Len = arr0.length;\r\n    var arr1Len = arr1.length;\r\n\r\n    if (arr0Len !== arr1Len) {\r\n      var isPreviousLarger = arr0Len > arr1Len;\r\n\r\n      if (isPreviousLarger) {\r\n        arr0.length = arr1Len;\r\n      } else {\r\n        for (var i = arr0Len; i < arr1Len; i++) {\r\n          arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\r\n        }\r\n      }\r\n    }\r\n\r\n    var len2 = arr0[0] && arr0[0].length;\r\n\r\n    for (var i = 0; i < arr0.length; i++) {\r\n      if (arrDim === 1) {\r\n        if (isNaN(arr0[i])) {\r\n          arr0[i] = arr1[i];\r\n        }\r\n      } else {\r\n        for (var j = 0; j < len2; j++) {\r\n          if (isNaN(arr0[i][j])) {\r\n            arr0[i][j] = arr1[i][j];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function is1DArraySame(arr0, arr1) {\r\n    var len = arr0.length;\r\n\r\n    if (len !== arr1.length) {\r\n      return false;\r\n    }\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      if (arr0[i] !== arr1[i]) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\r\n    var v0 = (p2 - p0) * 0.5;\r\n    var v1 = (p3 - p1) * 0.5;\r\n    return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\r\n  }\r\n\r\n  function catmullRomInterpolate1DArray(out, p0, p1, p2, p3, t, t2, t3) {\r\n    var len = p0.length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\r\n    }\r\n  }\r\n\r\n  function catmullRomInterpolate2DArray(out, p0, p1, p2, p3, t, t2, t3) {\r\n    var len = p0.length;\r\n    var len2 = p0[0].length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      if (!out[i]) {\r\n        out[1] = [];\r\n      }\r\n\r\n      for (var j = 0; j < len2; j++) {\r\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\r\n      }\r\n    }\r\n  }\r\n\r\n  function cloneValue(value) {\r\n    if (isArrayLike(value)) {\r\n      var len = value.length;\r\n\r\n      if (isArrayLike(value[0])) {\r\n        var ret = [];\r\n\r\n        for (var i = 0; i < len; i++) {\r\n          ret.push(arraySlice.call(value[i]));\r\n        }\r\n\r\n        return ret;\r\n      }\r\n\r\n      return arraySlice.call(value);\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  function rgba2String(rgba) {\r\n    rgba[0] = Math.floor(rgba[0]);\r\n    rgba[1] = Math.floor(rgba[1]);\r\n    rgba[2] = Math.floor(rgba[2]);\r\n    return 'rgba(' + rgba.join(',') + ')';\r\n  }\r\n\r\n  function guessArrayDim(value) {\r\n    return isArrayLike(value && value[0]) ? 2 : 1;\r\n  }\r\n\r\n  var tmpRgba = [0, 0, 0, 0];\r\n\r\n  var Track = function () {\r\n    function Track(propName) {\r\n      this.keyframes = [];\r\n      this.maxTime = 0;\r\n      this.arrDim = 0;\r\n      this.interpolable = true;\r\n      this._needsSort = false;\r\n      this._isAllValueEqual = true;\r\n      this._lastFrame = 0;\r\n      this._lastFramePercent = 0;\r\n      this.propName = propName;\r\n    }\r\n\r\n    Track.prototype.isFinished = function () {\r\n      return this._finished;\r\n    };\r\n\r\n    Track.prototype.setFinished = function () {\r\n      this._finished = true;\r\n\r\n      if (this._additiveTrack) {\r\n        this._additiveTrack.setFinished();\r\n      }\r\n    };\r\n\r\n    Track.prototype.needsAnimate = function () {\r\n      return !this._isAllValueEqual && this.keyframes.length >= 2 && this.interpolable;\r\n    };\r\n\r\n    Track.prototype.getAdditiveTrack = function () {\r\n      return this._additiveTrack;\r\n    };\r\n\r\n    Track.prototype.addKeyframe = function (time, value) {\r\n      if (time >= this.maxTime) {\r\n        this.maxTime = time;\r\n      } else {\r\n        this._needsSort = true;\r\n      }\r\n\r\n      var keyframes = this.keyframes;\r\n      var len = keyframes.length;\r\n\r\n      if (this.interpolable) {\r\n        if (isArrayLike(value)) {\r\n          var arrayDim = guessArrayDim(value);\r\n\r\n          if (len > 0 && this.arrDim !== arrayDim) {\r\n            this.interpolable = false;\r\n            return;\r\n          }\r\n\r\n          if (arrayDim === 1 && typeof value[0] !== 'number' || arrayDim === 2 && typeof value[0][0] !== 'number') {\r\n            this.interpolable = false;\r\n            return;\r\n          }\r\n\r\n          if (len > 0) {\r\n            var lastFrame = keyframes[len - 1];\r\n\r\n            if (this._isAllValueEqual) {\r\n              if (arrayDim === 1) {\r\n                if (!is1DArraySame(value, lastFrame.value)) {\r\n                  this._isAllValueEqual = false;\r\n                }\r\n              } else {\r\n                this._isAllValueEqual = false;\r\n              }\r\n            }\r\n          }\r\n\r\n          this.arrDim = arrayDim;\r\n        } else {\r\n          if (this.arrDim > 0) {\r\n            this.interpolable = false;\r\n            return;\r\n          }\r\n\r\n          if (typeof value === 'string') {\r\n            var colorArray = parse(value);\r\n\r\n            if (colorArray) {\r\n              value = colorArray;\r\n              this.isValueColor = true;\r\n            } else {\r\n              this.interpolable = false;\r\n            }\r\n          } else if (typeof value !== 'number') {\r\n            this.interpolable = false;\r\n            return;\r\n          }\r\n\r\n          if (this._isAllValueEqual && len > 0) {\r\n            var lastFrame = keyframes[len - 1];\r\n\r\n            if (this.isValueColor && !is1DArraySame(lastFrame.value, value)) {\r\n              this._isAllValueEqual = false;\r\n            } else if (lastFrame.value !== value) {\r\n              this._isAllValueEqual = false;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      var kf = {\r\n        time: time,\r\n        value: value,\r\n        percent: 0\r\n      };\r\n      this.keyframes.push(kf);\r\n      return kf;\r\n    };\r\n\r\n    Track.prototype.prepare = function (additiveTrack) {\r\n      var kfs = this.keyframes;\r\n\r\n      if (this._needsSort) {\r\n        kfs.sort(function (a, b) {\r\n          return a.time - b.time;\r\n        });\r\n      }\r\n\r\n      var arrDim = this.arrDim;\r\n      var kfsLen = kfs.length;\r\n      var lastKf = kfs[kfsLen - 1];\r\n\r\n      for (var i = 0; i < kfsLen; i++) {\r\n        kfs[i].percent = kfs[i].time / this.maxTime;\r\n\r\n        if (arrDim > 0 && i !== kfsLen - 1) {\r\n          fillArray(kfs[i].value, lastKf.value, arrDim);\r\n        }\r\n      }\r\n\r\n      if (additiveTrack && this.needsAnimate() && additiveTrack.needsAnimate() && arrDim === additiveTrack.arrDim && this.isValueColor === additiveTrack.isValueColor && !additiveTrack._finished) {\r\n        this._additiveTrack = additiveTrack;\r\n        var startValue = kfs[0].value;\r\n\r\n        for (var i = 0; i < kfsLen; i++) {\r\n          if (arrDim === 0) {\r\n            if (this.isValueColor) {\r\n              kfs[i].additiveValue = add1DArray([], kfs[i].value, startValue, -1);\r\n            } else {\r\n              kfs[i].additiveValue = kfs[i].value - startValue;\r\n            }\r\n          } else if (arrDim === 1) {\r\n            kfs[i].additiveValue = add1DArray([], kfs[i].value, startValue, -1);\r\n          } else if (arrDim === 2) {\r\n            kfs[i].additiveValue = add2DArray([], kfs[i].value, startValue, -1);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    Track.prototype.step = function (target, percent) {\r\n      if (this._finished) {\r\n        return;\r\n      }\r\n\r\n      if (this._additiveTrack && this._additiveTrack._finished) {\r\n        this._additiveTrack = null;\r\n      }\r\n\r\n      var isAdditive = this._additiveTrack != null;\r\n      var valueKey = isAdditive ? 'additiveValue' : 'value';\r\n      var keyframes = this.keyframes;\r\n      var kfsNum = this.keyframes.length;\r\n      var propName = this.propName;\r\n      var arrDim = this.arrDim;\r\n      var isValueColor = this.isValueColor;\r\n      var frameIdx;\r\n\r\n      if (percent < 0) {\r\n        frameIdx = 0;\r\n      } else if (percent < this._lastFramePercent) {\r\n        var start = Math.min(this._lastFrame + 1, kfsNum - 1);\r\n\r\n        for (frameIdx = start; frameIdx >= 0; frameIdx--) {\r\n          if (keyframes[frameIdx].percent <= percent) {\r\n            break;\r\n          }\r\n        }\r\n\r\n        frameIdx = Math.min(frameIdx, kfsNum - 2);\r\n      } else {\r\n        for (frameIdx = this._lastFrame; frameIdx < kfsNum; frameIdx++) {\r\n          if (keyframes[frameIdx].percent > percent) {\r\n            break;\r\n          }\r\n        }\r\n\r\n        frameIdx = Math.min(frameIdx - 1, kfsNum - 2);\r\n      }\r\n\r\n      var nextFrame = keyframes[frameIdx + 1];\r\n      var frame = keyframes[frameIdx];\r\n\r\n      if (!(frame && nextFrame)) {\r\n        return;\r\n      }\r\n\r\n      this._lastFrame = frameIdx;\r\n      this._lastFramePercent = percent;\r\n      var range = nextFrame.percent - frame.percent;\r\n\r\n      if (range === 0) {\r\n        return;\r\n      }\r\n\r\n      var w = (percent - frame.percent) / range;\r\n      var targetArr = isAdditive ? this._additiveValue : isValueColor ? tmpRgba : target[propName];\r\n\r\n      if ((arrDim > 0 || isValueColor) && !targetArr) {\r\n        targetArr = this._additiveValue = [];\r\n      }\r\n\r\n      if (this.useSpline) {\r\n        var p1 = keyframes[frameIdx][valueKey];\r\n        var p0 = keyframes[frameIdx === 0 ? frameIdx : frameIdx - 1][valueKey];\r\n        var p2 = keyframes[frameIdx > kfsNum - 2 ? kfsNum - 1 : frameIdx + 1][valueKey];\r\n        var p3 = keyframes[frameIdx > kfsNum - 3 ? kfsNum - 1 : frameIdx + 2][valueKey];\r\n\r\n        if (arrDim > 0) {\r\n          arrDim === 1 ? catmullRomInterpolate1DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w) : catmullRomInterpolate2DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w);\r\n        } else if (isValueColor) {\r\n          catmullRomInterpolate1DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w);\r\n\r\n          if (!isAdditive) {\r\n            target[propName] = rgba2String(targetArr);\r\n          }\r\n        } else {\r\n          var value = void 0;\r\n\r\n          if (!this.interpolable) {\r\n            value = p2;\r\n          } else {\r\n            value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\r\n          }\r\n\r\n          if (isAdditive) {\r\n            this._additiveValue = value;\r\n          } else {\r\n            target[propName] = value;\r\n          }\r\n        }\r\n      } else {\r\n        if (arrDim > 0) {\r\n          arrDim === 1 ? interpolate1DArray(targetArr, frame[valueKey], nextFrame[valueKey], w) : interpolate2DArray(targetArr, frame[valueKey], nextFrame[valueKey], w);\r\n        } else if (isValueColor) {\r\n          interpolate1DArray(targetArr, frame[valueKey], nextFrame[valueKey], w);\r\n\r\n          if (!isAdditive) {\r\n            target[propName] = rgba2String(targetArr);\r\n          }\r\n        } else {\r\n          var value = void 0;\r\n\r\n          if (!this.interpolable) {\r\n            value = step(frame[valueKey], nextFrame[valueKey], w);\r\n          } else {\r\n            value = interpolateNumber(frame[valueKey], nextFrame[valueKey], w);\r\n          }\r\n\r\n          if (isAdditive) {\r\n            this._additiveValue = value;\r\n          } else {\r\n            target[propName] = value;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (isAdditive) {\r\n        this._addToTarget(target);\r\n      }\r\n    };\r\n\r\n    Track.prototype._addToTarget = function (target) {\r\n      var arrDim = this.arrDim;\r\n      var propName = this.propName;\r\n      var additiveValue = this._additiveValue;\r\n\r\n      if (arrDim === 0) {\r\n        if (this.isValueColor) {\r\n          parse(target[propName], tmpRgba);\r\n          add1DArray(tmpRgba, tmpRgba, additiveValue, 1);\r\n          target[propName] = rgba2String(tmpRgba);\r\n        } else {\r\n          target[propName] = target[propName] + additiveValue;\r\n        }\r\n      } else if (arrDim === 1) {\r\n        add1DArray(target[propName], target[propName], additiveValue, 1);\r\n      } else if (arrDim === 2) {\r\n        add2DArray(target[propName], target[propName], additiveValue, 1);\r\n      }\r\n    };\r\n\r\n    return Track;\r\n  }();\r\n\r\n  var Animator = function () {\r\n    function Animator(target, loop, additiveTo) {\r\n      this._tracks = {};\r\n      this._trackKeys = [];\r\n      this._delay = 0;\r\n      this._maxTime = 0;\r\n      this._paused = false;\r\n      this._started = 0;\r\n      this._clip = null;\r\n      this._target = target;\r\n      this._loop = loop;\r\n\r\n      if (loop && additiveTo) {\r\n        logError('Can\\' use additive animation on looped animation.');\r\n        return;\r\n      }\r\n\r\n      this._additiveAnimators = additiveTo;\r\n    }\r\n\r\n    Animator.prototype.getTarget = function () {\r\n      return this._target;\r\n    };\r\n\r\n    Animator.prototype.changeTarget = function (target) {\r\n      this._target = target;\r\n    };\r\n\r\n    Animator.prototype.when = function (time, props) {\r\n      return this.whenWithKeys(time, props, keys(props));\r\n    };\r\n\r\n    Animator.prototype.whenWithKeys = function (time, props, propNames) {\r\n      var tracks = this._tracks;\r\n\r\n      for (var i = 0; i < propNames.length; i++) {\r\n        var propName = propNames[i];\r\n        var track = tracks[propName];\r\n\r\n        if (!track) {\r\n          track = tracks[propName] = new Track(propName);\r\n          var initialValue = void 0;\r\n\r\n          var additiveTrack = this._getAdditiveTrack(propName);\r\n\r\n          if (additiveTrack) {\r\n            var lastFinalKf = additiveTrack.keyframes[additiveTrack.keyframes.length - 1];\r\n            initialValue = lastFinalKf && lastFinalKf.value;\r\n\r\n            if (additiveTrack.isValueColor && initialValue) {\r\n              initialValue = rgba2String(initialValue);\r\n            }\r\n          } else {\r\n            initialValue = this._target[propName];\r\n          }\r\n\r\n          if (initialValue == null) {\r\n            continue;\r\n          }\r\n\r\n          if (time !== 0) {\r\n            track.addKeyframe(0, cloneValue(initialValue));\r\n          }\r\n\r\n          this._trackKeys.push(propName);\r\n        }\r\n\r\n        track.addKeyframe(time, cloneValue(props[propName]));\r\n      }\r\n\r\n      this._maxTime = Math.max(this._maxTime, time);\r\n      return this;\r\n    };\r\n\r\n    Animator.prototype.pause = function () {\r\n      this._clip.pause();\r\n\r\n      this._paused = true;\r\n    };\r\n\r\n    Animator.prototype.resume = function () {\r\n      this._clip.resume();\r\n\r\n      this._paused = false;\r\n    };\r\n\r\n    Animator.prototype.isPaused = function () {\r\n      return !!this._paused;\r\n    };\r\n\r\n    Animator.prototype._doneCallback = function () {\r\n      this._setTracksFinished();\r\n\r\n      this._clip = null;\r\n      var doneList = this._doneList;\r\n\r\n      if (doneList) {\r\n        var len = doneList.length;\r\n\r\n        for (var i = 0; i < len; i++) {\r\n          doneList[i].call(this);\r\n        }\r\n      }\r\n    };\r\n\r\n    Animator.prototype._abortedCallback = function () {\r\n      this._setTracksFinished();\r\n\r\n      var animation = this.animation;\r\n      var abortedList = this._abortedList;\r\n\r\n      if (animation) {\r\n        animation.removeClip(this._clip);\r\n      }\r\n\r\n      this._clip = null;\r\n\r\n      if (abortedList) {\r\n        for (var i = 0; i < abortedList.length; i++) {\r\n          abortedList[i].call(this);\r\n        }\r\n      }\r\n    };\r\n\r\n    Animator.prototype._setTracksFinished = function () {\r\n      var tracks = this._tracks;\r\n      var tracksKeys = this._trackKeys;\r\n\r\n      for (var i = 0; i < tracksKeys.length; i++) {\r\n        tracks[tracksKeys[i]].setFinished();\r\n      }\r\n    };\r\n\r\n    Animator.prototype._getAdditiveTrack = function (trackName) {\r\n      var additiveTrack;\r\n      var additiveAnimators = this._additiveAnimators;\r\n\r\n      if (additiveAnimators) {\r\n        for (var i = 0; i < additiveAnimators.length; i++) {\r\n          var track = additiveAnimators[i].getTrack(trackName);\r\n\r\n          if (track) {\r\n            additiveTrack = track;\r\n          }\r\n        }\r\n      }\r\n\r\n      return additiveTrack;\r\n    };\r\n\r\n    Animator.prototype.start = function (easing, forceAnimate) {\r\n      if (this._started > 0) {\r\n        return;\r\n      }\r\n\r\n      this._started = 1;\r\n      var self = this;\r\n      var tracks = [];\r\n\r\n      for (var i = 0; i < this._trackKeys.length; i++) {\r\n        var propName = this._trackKeys[i];\r\n        var track = this._tracks[propName];\r\n\r\n        var additiveTrack = this._getAdditiveTrack(propName);\r\n\r\n        var kfs = track.keyframes;\r\n        track.prepare(additiveTrack);\r\n\r\n        if (track.needsAnimate()) {\r\n          tracks.push(track);\r\n        } else if (!track.interpolable) {\r\n          var lastKf = kfs[kfs.length - 1];\r\n\r\n          if (lastKf) {\r\n            self._target[track.propName] = lastKf.value;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (tracks.length || forceAnimate) {\r\n        var clip = new Clip({\r\n          life: this._maxTime,\r\n          loop: this._loop,\r\n          delay: this._delay,\r\n          onframe: function (percent) {\r\n            self._started = 2;\r\n            var additiveAnimators = self._additiveAnimators;\r\n\r\n            if (additiveAnimators) {\r\n              var stillHasAdditiveAnimator = false;\r\n\r\n              for (var i = 0; i < additiveAnimators.length; i++) {\r\n                if (additiveAnimators[i]._clip) {\r\n                  stillHasAdditiveAnimator = true;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              if (!stillHasAdditiveAnimator) {\r\n                self._additiveAnimators = null;\r\n              }\r\n            }\r\n\r\n            for (var i = 0; i < tracks.length; i++) {\r\n              tracks[i].step(self._target, percent);\r\n            }\r\n\r\n            var onframeList = self._onframeList;\r\n\r\n            if (onframeList) {\r\n              for (var i = 0; i < onframeList.length; i++) {\r\n                onframeList[i](self._target, percent);\r\n              }\r\n            }\r\n          },\r\n          ondestroy: function () {\r\n            self._doneCallback();\r\n          }\r\n        });\r\n        this._clip = clip;\r\n\r\n        if (this.animation) {\r\n          this.animation.addClip(clip);\r\n        }\r\n\r\n        if (easing && easing !== 'spline') {\r\n          clip.easing = easing;\r\n        }\r\n      } else {\r\n        this._doneCallback();\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    Animator.prototype.stop = function (forwardToLast) {\r\n      if (!this._clip) {\r\n        return;\r\n      }\r\n\r\n      var clip = this._clip;\r\n\r\n      if (forwardToLast) {\r\n        clip.onframe(1);\r\n      }\r\n\r\n      this._abortedCallback();\r\n    };\r\n\r\n    Animator.prototype.delay = function (time) {\r\n      this._delay = time;\r\n      return this;\r\n    };\r\n\r\n    Animator.prototype.during = function (cb) {\r\n      if (cb) {\r\n        if (!this._onframeList) {\r\n          this._onframeList = [];\r\n        }\r\n\r\n        this._onframeList.push(cb);\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    Animator.prototype.done = function (cb) {\r\n      if (cb) {\r\n        if (!this._doneList) {\r\n          this._doneList = [];\r\n        }\r\n\r\n        this._doneList.push(cb);\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    Animator.prototype.aborted = function (cb) {\r\n      if (cb) {\r\n        if (!this._abortedList) {\r\n          this._abortedList = [];\r\n        }\r\n\r\n        this._abortedList.push(cb);\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    Animator.prototype.getClip = function () {\r\n      return this._clip;\r\n    };\r\n\r\n    Animator.prototype.getTrack = function (propName) {\r\n      return this._tracks[propName];\r\n    };\r\n\r\n    Animator.prototype.stopTracks = function (propNames, forwardToLast) {\r\n      if (!propNames.length || !this._clip) {\r\n        return true;\r\n      }\r\n\r\n      var tracks = this._tracks;\r\n      var tracksKeys = this._trackKeys;\r\n\r\n      for (var i = 0; i < propNames.length; i++) {\r\n        var track = tracks[propNames[i]];\r\n\r\n        if (track) {\r\n          if (forwardToLast) {\r\n            track.step(this._target, 1);\r\n          } else if (this._started === 1) {\r\n            track.step(this._target, 0);\r\n          }\r\n\r\n          track.setFinished();\r\n        }\r\n      }\r\n\r\n      var allAborted = true;\r\n\r\n      for (var i = 0; i < tracksKeys.length; i++) {\r\n        if (!tracks[tracksKeys[i]].isFinished()) {\r\n          allAborted = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (allAborted) {\r\n        this._abortedCallback();\r\n      }\r\n\r\n      return allAborted;\r\n    };\r\n\r\n    Animator.prototype.saveFinalToTarget = function (target, trackKeys) {\r\n      if (!target) {\r\n        return;\r\n      }\r\n\r\n      trackKeys = trackKeys || this._trackKeys;\r\n\r\n      for (var i = 0; i < trackKeys.length; i++) {\r\n        var propName = trackKeys[i];\r\n        var track = this._tracks[propName];\r\n\r\n        if (!track || track.isFinished()) {\r\n          continue;\r\n        }\r\n\r\n        var kfs = track.keyframes;\r\n        var lastKf = kfs[kfs.length - 1];\r\n\r\n        if (lastKf) {\r\n          var val = cloneValue(lastKf.value);\r\n\r\n          if (track.isValueColor) {\r\n            val = rgba2String(val);\r\n          }\r\n\r\n          target[propName] = val;\r\n        }\r\n      }\r\n    };\r\n\r\n    Animator.prototype.__changeFinalValue = function (finalProps, trackKeys) {\r\n      trackKeys = trackKeys || keys(finalProps);\r\n\r\n      for (var i = 0; i < trackKeys.length; i++) {\r\n        var propName = trackKeys[i];\r\n        var track = this._tracks[propName];\r\n\r\n        if (!track) {\r\n          continue;\r\n        }\r\n\r\n        var kfs = track.keyframes;\r\n\r\n        if (kfs.length > 1) {\r\n          var lastKf = kfs.pop();\r\n          track.addKeyframe(lastKf.time, finalProps[propName]);\r\n          track.prepare(track.getAdditiveTrack());\r\n        }\r\n      }\r\n    };\r\n\r\n    return Animator;\r\n  }();\r\n\r\n  var Point = function () {\r\n    function Point(x, y) {\r\n      this.x = x || 0;\r\n      this.y = y || 0;\r\n    }\r\n\r\n    Point.prototype.copy = function (other) {\r\n      this.x = other.x;\r\n      this.y = other.y;\r\n      return this;\r\n    };\r\n\r\n    Point.prototype.clone = function () {\r\n      return new Point(this.x, this.y);\r\n    };\r\n\r\n    Point.prototype.set = function (x, y) {\r\n      this.x = x;\r\n      this.y = y;\r\n      return this;\r\n    };\r\n\r\n    Point.prototype.equal = function (other) {\r\n      return other.x === this.x && other.y === this.y;\r\n    };\r\n\r\n    Point.prototype.add = function (other) {\r\n      this.x += other.x;\r\n      this.y += other.y;\r\n      return this;\r\n    };\r\n\r\n    Point.prototype.scale = function (scalar) {\r\n      this.x *= scalar;\r\n      this.y *= scalar;\r\n    };\r\n\r\n    Point.prototype.scaleAndAdd = function (other, scalar) {\r\n      this.x += other.x * scalar;\r\n      this.y += other.y * scalar;\r\n    };\r\n\r\n    Point.prototype.sub = function (other) {\r\n      this.x -= other.x;\r\n      this.y -= other.y;\r\n      return this;\r\n    };\r\n\r\n    Point.prototype.dot = function (other) {\r\n      return this.x * other.x + this.y * other.y;\r\n    };\r\n\r\n    Point.prototype.len = function () {\r\n      return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    };\r\n\r\n    Point.prototype.lenSquare = function () {\r\n      return this.x * this.x + this.y * this.y;\r\n    };\r\n\r\n    Point.prototype.normalize = function () {\r\n      var len = this.len();\r\n      this.x /= len;\r\n      this.y /= len;\r\n      return this;\r\n    };\r\n\r\n    Point.prototype.distance = function (other) {\r\n      var dx = this.x - other.x;\r\n      var dy = this.y - other.y;\r\n      return Math.sqrt(dx * dx + dy * dy);\r\n    };\r\n\r\n    Point.prototype.distanceSquare = function (other) {\r\n      var dx = this.x - other.x;\r\n      var dy = this.y - other.y;\r\n      return dx * dx + dy * dy;\r\n    };\r\n\r\n    Point.prototype.negate = function () {\r\n      this.x = -this.x;\r\n      this.y = -this.y;\r\n      return this;\r\n    };\r\n\r\n    Point.prototype.transform = function (m) {\r\n      if (!m) {\r\n        return;\r\n      }\r\n\r\n      var x = this.x;\r\n      var y = this.y;\r\n      this.x = m[0] * x + m[2] * y + m[4];\r\n      this.y = m[1] * x + m[3] * y + m[5];\r\n      return this;\r\n    };\r\n\r\n    Point.prototype.toArray = function (out) {\r\n      out[0] = this.x;\r\n      out[1] = this.y;\r\n      return out;\r\n    };\r\n\r\n    Point.prototype.fromArray = function (input) {\r\n      this.x = input[0];\r\n      this.y = input[1];\r\n    };\r\n\r\n    Point.set = function (p, x, y) {\r\n      p.x = x;\r\n      p.y = y;\r\n    };\r\n\r\n    Point.copy = function (p, p2) {\r\n      p.x = p2.x;\r\n      p.y = p2.y;\r\n    };\r\n\r\n    Point.len = function (p) {\r\n      return Math.sqrt(p.x * p.x + p.y * p.y);\r\n    };\r\n\r\n    Point.lenSquare = function (p) {\r\n      return p.x * p.x + p.y * p.y;\r\n    };\r\n\r\n    Point.dot = function (p0, p1) {\r\n      return p0.x * p1.x + p0.y * p1.y;\r\n    };\r\n\r\n    Point.add = function (out, p0, p1) {\r\n      out.x = p0.x + p1.x;\r\n      out.y = p0.y + p1.y;\r\n    };\r\n\r\n    Point.sub = function (out, p0, p1) {\r\n      out.x = p0.x - p1.x;\r\n      out.y = p0.y - p1.y;\r\n    };\r\n\r\n    Point.scale = function (out, p0, scalar) {\r\n      out.x = p0.x * scalar;\r\n      out.y = p0.y * scalar;\r\n    };\r\n\r\n    Point.scaleAndAdd = function (out, p0, p1, scalar) {\r\n      out.x = p0.x + p1.x * scalar;\r\n      out.y = p0.y + p1.y * scalar;\r\n    };\r\n\r\n    Point.lerp = function (out, p0, p1, t) {\r\n      var onet = 1 - t;\r\n      out.x = onet * p0.x + t * p1.x;\r\n      out.y = onet * p0.y + t * p1.y;\r\n    };\r\n\r\n    return Point;\r\n  }();\r\n\r\n  var mathMin = Math.min;\r\n  var mathMax = Math.max;\r\n  var lt = new Point();\r\n  var rb = new Point();\r\n  var lb = new Point();\r\n  var rt = new Point();\r\n  var minTv = new Point();\r\n  var maxTv = new Point();\r\n\r\n  var BoundingRect = function () {\r\n    function BoundingRect(x, y, width, height) {\r\n      if (width < 0 && isFinite(width)) {\r\n        x = x + width;\r\n        width = -width;\r\n      }\r\n\r\n      if (height < 0 && isFinite(height)) {\r\n        y = y + height;\r\n        height = -height;\r\n      }\r\n\r\n      this.x = x;\r\n      this.y = y;\r\n      this.width = width;\r\n      this.height = height;\r\n    }\r\n\r\n    BoundingRect.prototype.union = function (other) {\r\n      var x = mathMin(other.x, this.x);\r\n      var y = mathMin(other.y, this.y);\r\n\r\n      if (isFinite(this.x) && isFinite(this.width)) {\r\n        this.width = mathMax(other.x + other.width, this.x + this.width) - x;\r\n      } else {\r\n        this.width = other.width;\r\n      }\r\n\r\n      if (isFinite(this.y) && isFinite(this.height)) {\r\n        this.height = mathMax(other.y + other.height, this.y + this.height) - y;\r\n      } else {\r\n        this.height = other.height;\r\n      }\r\n\r\n      this.x = x;\r\n      this.y = y;\r\n    };\r\n\r\n    BoundingRect.prototype.applyTransform = function (m) {\r\n      BoundingRect.applyTransform(this, this, m);\r\n    };\r\n\r\n    BoundingRect.prototype.calculateTransform = function (b) {\r\n      var a = this;\r\n      var sx = b.width / a.width;\r\n      var sy = b.height / a.height;\r\n      var m = create$1();\r\n      translate(m, m, [-a.x, -a.y]);\r\n      scale$1(m, m, [sx, sy]);\r\n      translate(m, m, [b.x, b.y]);\r\n      return m;\r\n    };\r\n\r\n    BoundingRect.prototype.intersect = function (b, mtv) {\r\n      if (!b) {\r\n        return false;\r\n      }\r\n\r\n      if (!(b instanceof BoundingRect)) {\r\n        b = BoundingRect.create(b);\r\n      }\r\n\r\n      var a = this;\r\n      var ax0 = a.x;\r\n      var ax1 = a.x + a.width;\r\n      var ay0 = a.y;\r\n      var ay1 = a.y + a.height;\r\n      var bx0 = b.x;\r\n      var bx1 = b.x + b.width;\r\n      var by0 = b.y;\r\n      var by1 = b.y + b.height;\r\n      var overlap = !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\r\n\r\n      if (mtv) {\r\n        var dMin = Infinity;\r\n        var dMax = 0;\r\n        var d0 = Math.abs(ax1 - bx0);\r\n        var d1 = Math.abs(bx1 - ax0);\r\n        var d2 = Math.abs(ay1 - by0);\r\n        var d3 = Math.abs(by1 - ay0);\r\n        var dx = Math.min(d0, d1);\r\n        var dy = Math.min(d2, d3);\r\n\r\n        if (ax1 < bx0 || bx1 < ax0) {\r\n          if (dx > dMax) {\r\n            dMax = dx;\r\n\r\n            if (d0 < d1) {\r\n              Point.set(maxTv, -d0, 0);\r\n            } else {\r\n              Point.set(maxTv, d1, 0);\r\n            }\r\n          }\r\n        } else {\r\n          if (dx < dMin) {\r\n            dMin = dx;\r\n\r\n            if (d0 < d1) {\r\n              Point.set(minTv, d0, 0);\r\n            } else {\r\n              Point.set(minTv, -d1, 0);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (ay1 < by0 || by1 < ay0) {\r\n          if (dy > dMax) {\r\n            dMax = dy;\r\n\r\n            if (d2 < d3) {\r\n              Point.set(maxTv, 0, -d2);\r\n            } else {\r\n              Point.set(maxTv, 0, d3);\r\n            }\r\n          }\r\n        } else {\r\n          if (dx < dMin) {\r\n            dMin = dx;\r\n\r\n            if (d2 < d3) {\r\n              Point.set(minTv, 0, d2);\r\n            } else {\r\n              Point.set(minTv, 0, -d3);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (mtv) {\r\n        Point.copy(mtv, overlap ? minTv : maxTv);\r\n      }\r\n\r\n      return overlap;\r\n    };\r\n\r\n    BoundingRect.prototype.contain = function (x, y) {\r\n      var rect = this;\r\n      return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\r\n    };\r\n\r\n    BoundingRect.prototype.clone = function () {\r\n      return new BoundingRect(this.x, this.y, this.width, this.height);\r\n    };\r\n\r\n    BoundingRect.prototype.copy = function (other) {\r\n      BoundingRect.copy(this, other);\r\n    };\r\n\r\n    BoundingRect.prototype.plain = function () {\r\n      return {\r\n        x: this.x,\r\n        y: this.y,\r\n        width: this.width,\r\n        height: this.height\r\n      };\r\n    };\r\n\r\n    BoundingRect.prototype.isFinite = function () {\r\n      return isFinite(this.x) && isFinite(this.y) && isFinite(this.width) && isFinite(this.height);\r\n    };\r\n\r\n    BoundingRect.prototype.isZero = function () {\r\n      return this.width === 0 || this.height === 0;\r\n    };\r\n\r\n    BoundingRect.create = function (rect) {\r\n      return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\r\n    };\r\n\r\n    BoundingRect.copy = function (target, source) {\r\n      target.x = source.x;\r\n      target.y = source.y;\r\n      target.width = source.width;\r\n      target.height = source.height;\r\n    };\r\n\r\n    BoundingRect.applyTransform = function (target, source, m) {\r\n      if (!m) {\r\n        if (target !== source) {\r\n          BoundingRect.copy(target, source);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if (m[1] < 1e-5 && m[1] > -1e-5 && m[2] < 1e-5 && m[2] > -1e-5) {\r\n        var sx = m[0];\r\n        var sy = m[3];\r\n        var tx = m[4];\r\n        var ty = m[5];\r\n        target.x = source.x * sx + tx;\r\n        target.y = source.y * sy + ty;\r\n        target.width = source.width * sx;\r\n        target.height = source.height * sy;\r\n\r\n        if (target.width < 0) {\r\n          target.x += target.width;\r\n          target.width = -target.width;\r\n        }\r\n\r\n        if (target.height < 0) {\r\n          target.y += target.height;\r\n          target.height = -target.height;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      lt.x = lb.x = source.x;\r\n      lt.y = rt.y = source.y;\r\n      rb.x = rt.x = source.x + source.width;\r\n      rb.y = lb.y = source.y + source.height;\r\n      lt.transform(m);\r\n      rt.transform(m);\r\n      rb.transform(m);\r\n      lb.transform(m);\r\n      target.x = mathMin(lt.x, rb.x, lb.x, rt.x);\r\n      target.y = mathMin(lt.y, rb.y, lb.y, rt.y);\r\n      var maxX = mathMax(lt.x, rb.x, lb.x, rt.x);\r\n      var maxY = mathMax(lt.y, rb.y, lb.y, rt.y);\r\n      target.width = maxX - target.x;\r\n      target.height = maxY - target.y;\r\n    };\r\n\r\n    return BoundingRect;\r\n  }();\r\n\r\n  var textWidthCache = {};\r\n  var DEFAULT_FONT = '12px sans-serif';\r\n\r\n  var _ctx;\r\n\r\n  var _cachedFont;\r\n\r\n  function defaultMeasureText(text, font) {\r\n    if (!_ctx) {\r\n      _ctx = createCanvas().getContext('2d');\r\n    }\r\n\r\n    if (_cachedFont !== font) {\r\n      _cachedFont = _ctx.font = font || DEFAULT_FONT;\r\n    }\r\n\r\n    return _ctx.measureText(text);\r\n  }\r\n\r\n  var methods$1 = {\r\n    measureText: defaultMeasureText\r\n  };\r\n\r\n  function getWidth(text, font) {\r\n    font = font || DEFAULT_FONT;\r\n    var cacheOfFont = textWidthCache[font];\r\n\r\n    if (!cacheOfFont) {\r\n      cacheOfFont = textWidthCache[font] = new LRU(500);\r\n    }\r\n\r\n    var width = cacheOfFont.get(text);\r\n\r\n    if (width == null) {\r\n      width = methods$1.measureText(text, font).width;\r\n      cacheOfFont.put(text, width);\r\n    }\r\n\r\n    return width;\r\n  }\r\n\r\n  function innerGetBoundingRect(text, font, textAlign, textBaseline) {\r\n    var width = getWidth(text, font);\r\n    var height = getLineHeight(font);\r\n    var x = adjustTextX(0, width, textAlign);\r\n    var y = adjustTextY(0, height, textBaseline);\r\n    var rect = new BoundingRect(x, y, width, height);\r\n    return rect;\r\n  }\r\n\r\n  function getBoundingRect(text, font, textAlign, textBaseline) {\r\n    var textLines = ((text || '') + '').split('\\n');\r\n    var len = textLines.length;\r\n\r\n    if (len === 1) {\r\n      return innerGetBoundingRect(textLines[0], font, textAlign, textBaseline);\r\n    } else {\r\n      var uniondRect = new BoundingRect(0, 0, 0, 0);\r\n\r\n      for (var i = 0; i < textLines.length; i++) {\r\n        var rect = innerGetBoundingRect(textLines[i], font, textAlign, textBaseline);\r\n        i === 0 ? uniondRect.copy(rect) : uniondRect.union(rect);\r\n      }\r\n\r\n      return uniondRect;\r\n    }\r\n  }\r\n\r\n  function adjustTextX(x, width, textAlign) {\r\n    if (textAlign === 'right') {\r\n      x -= width;\r\n    } else if (textAlign === 'center') {\r\n      x -= width / 2;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n  function adjustTextY(y, height, verticalAlign) {\r\n    if (verticalAlign === 'middle') {\r\n      y -= height / 2;\r\n    } else if (verticalAlign === 'bottom') {\r\n      y -= height;\r\n    }\r\n\r\n    return y;\r\n  }\r\n\r\n  function getLineHeight(font) {\r\n    return getWidth('国', font);\r\n  }\r\n\r\n  function parsePercent(value, maxValue) {\r\n    if (typeof value === 'string') {\r\n      if (value.lastIndexOf('%') >= 0) {\r\n        return parseFloat(value) / 100 * maxValue;\r\n      }\r\n\r\n      return parseFloat(value);\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  function calculateTextPosition(out, opts, rect) {\r\n    var textPosition = opts.position || 'inside';\r\n    var distance = opts.distance != null ? opts.distance : 5;\r\n    var height = rect.height;\r\n    var width = rect.width;\r\n    var halfHeight = height / 2;\r\n    var x = rect.x;\r\n    var y = rect.y;\r\n    var textAlign = 'left';\r\n    var textVerticalAlign = 'top';\r\n\r\n    if (textPosition instanceof Array) {\r\n      x += parsePercent(textPosition[0], rect.width);\r\n      y += parsePercent(textPosition[1], rect.height);\r\n      textAlign = null;\r\n      textVerticalAlign = null;\r\n    } else {\r\n      switch (textPosition) {\r\n        case 'left':\r\n          x -= distance;\r\n          y += halfHeight;\r\n          textAlign = 'right';\r\n          textVerticalAlign = 'middle';\r\n          break;\r\n\r\n        case 'right':\r\n          x += distance + width;\r\n          y += halfHeight;\r\n          textVerticalAlign = 'middle';\r\n          break;\r\n\r\n        case 'top':\r\n          x += width / 2;\r\n          y -= distance;\r\n          textAlign = 'center';\r\n          textVerticalAlign = 'bottom';\r\n          break;\r\n\r\n        case 'bottom':\r\n          x += width / 2;\r\n          y += height + distance;\r\n          textAlign = 'center';\r\n          break;\r\n\r\n        case 'inside':\r\n          x += width / 2;\r\n          y += halfHeight;\r\n          textAlign = 'center';\r\n          textVerticalAlign = 'middle';\r\n          break;\r\n\r\n        case 'insideLeft':\r\n          x += distance;\r\n          y += halfHeight;\r\n          textVerticalAlign = 'middle';\r\n          break;\r\n\r\n        case 'insideRight':\r\n          x += width - distance;\r\n          y += halfHeight;\r\n          textAlign = 'right';\r\n          textVerticalAlign = 'middle';\r\n          break;\r\n\r\n        case 'insideTop':\r\n          x += width / 2;\r\n          y += distance;\r\n          textAlign = 'center';\r\n          break;\r\n\r\n        case 'insideBottom':\r\n          x += width / 2;\r\n          y += height - distance;\r\n          textAlign = 'center';\r\n          textVerticalAlign = 'bottom';\r\n          break;\r\n\r\n        case 'insideTopLeft':\r\n          x += distance;\r\n          y += distance;\r\n          break;\r\n\r\n        case 'insideTopRight':\r\n          x += width - distance;\r\n          y += distance;\r\n          textAlign = 'right';\r\n          break;\r\n\r\n        case 'insideBottomLeft':\r\n          x += distance;\r\n          y += height - distance;\r\n          textVerticalAlign = 'bottom';\r\n          break;\r\n\r\n        case 'insideBottomRight':\r\n          x += width - distance;\r\n          y += height - distance;\r\n          textAlign = 'right';\r\n          textVerticalAlign = 'bottom';\r\n          break;\r\n      }\r\n    }\r\n\r\n    out = out || {};\r\n    out.x = x;\r\n    out.y = y;\r\n    out.align = textAlign;\r\n    out.verticalAlign = textVerticalAlign;\r\n    return out;\r\n  }\r\n\r\n  var dpr = 1;\r\n\r\n  if (typeof window !== 'undefined') {\r\n    dpr = Math.max(window.devicePixelRatio || window.screen && window.screen.deviceXDPI / window.screen.logicalXDPI || 1, 1);\r\n  }\r\n\r\n  var devicePixelRatio = dpr;\r\n  var DARK_MODE_THRESHOLD = 0.4;\r\n  var DARK_LABEL_COLOR = '#333';\r\n  var LIGHT_LABEL_COLOR = '#ccc';\r\n  var LIGHTER_LABEL_COLOR = '#eee';\r\n  var PRESERVED_NORMAL_STATE = '__zr_normal__';\r\n  var PRIMARY_STATES_KEYS = ['x', 'y', 'scaleX', 'scaleY', 'originX', 'originY', 'rotation', 'ignore'];\r\n  var DEFAULT_ANIMATABLE_MAP = {\r\n    x: true,\r\n    y: true,\r\n    scaleX: true,\r\n    scaleY: true,\r\n    originX: true,\r\n    originY: true,\r\n    rotation: true,\r\n    ignore: false\r\n  };\r\n  var tmpTextPosCalcRes = {};\r\n  var tmpBoundingRect = new BoundingRect(0, 0, 0, 0);\r\n\r\n  var Element = function () {\r\n    function Element(props) {\r\n      this.id = guid();\r\n      this.animators = [];\r\n      this.currentStates = [];\r\n      this.states = {};\r\n\r\n      this._init(props);\r\n    }\r\n\r\n    Element.prototype._init = function (props) {\r\n      this.attr(props);\r\n    };\r\n\r\n    Element.prototype.drift = function (dx, dy, e) {\r\n      switch (this.draggable) {\r\n        case 'horizontal':\r\n          dy = 0;\r\n          break;\r\n\r\n        case 'vertical':\r\n          dx = 0;\r\n          break;\r\n      }\r\n\r\n      var m = this.transform;\r\n\r\n      if (!m) {\r\n        m = this.transform = [1, 0, 0, 1, 0, 0];\r\n      }\r\n\r\n      m[4] += dx;\r\n      m[5] += dy;\r\n      this.decomposeTransform();\r\n      this.markRedraw();\r\n    };\r\n\r\n    Element.prototype.beforeUpdate = function () {};\r\n\r\n    Element.prototype.afterUpdate = function () {};\r\n\r\n    Element.prototype.update = function () {\r\n      this.updateTransform();\r\n\r\n      if (this.__dirty) {\r\n        this.updateInnerText();\r\n      }\r\n    };\r\n\r\n    Element.prototype.updateInnerText = function (forceUpdate) {\r\n      var textEl = this._textContent;\r\n\r\n      if (textEl && (!textEl.ignore || forceUpdate)) {\r\n        if (!this.textConfig) {\r\n          this.textConfig = {};\r\n        }\r\n\r\n        var textConfig = this.textConfig;\r\n        var isLocal = textConfig.local;\r\n        var attachedTransform = textEl.attachedTransform;\r\n        var textAlign = void 0;\r\n        var textVerticalAlign = void 0;\r\n        var textStyleChanged = false;\r\n\r\n        if (isLocal) {\r\n          attachedTransform.parent = this;\r\n        } else {\r\n          attachedTransform.parent = null;\r\n        }\r\n\r\n        var innerOrigin = false;\r\n        attachedTransform.x = textEl.x;\r\n        attachedTransform.y = textEl.y;\r\n        attachedTransform.originX = textEl.originX;\r\n        attachedTransform.originY = textEl.originY;\r\n        attachedTransform.rotation = textEl.rotation;\r\n        attachedTransform.scaleX = textEl.scaleX;\r\n        attachedTransform.scaleY = textEl.scaleY;\r\n\r\n        if (textConfig.position != null) {\r\n          var layoutRect = tmpBoundingRect;\r\n\r\n          if (textConfig.layoutRect) {\r\n            layoutRect.copy(textConfig.layoutRect);\r\n          } else {\r\n            layoutRect.copy(this.getBoundingRect());\r\n          }\r\n\r\n          if (!isLocal) {\r\n            layoutRect.applyTransform(this.transform);\r\n          }\r\n\r\n          if (this.calculateTextPosition) {\r\n            this.calculateTextPosition(tmpTextPosCalcRes, textConfig, layoutRect);\r\n          } else {\r\n            calculateTextPosition(tmpTextPosCalcRes, textConfig, layoutRect);\r\n          }\r\n\r\n          attachedTransform.x = tmpTextPosCalcRes.x;\r\n          attachedTransform.y = tmpTextPosCalcRes.y;\r\n          textAlign = tmpTextPosCalcRes.align;\r\n          textVerticalAlign = tmpTextPosCalcRes.verticalAlign;\r\n          var textOrigin = textConfig.origin;\r\n\r\n          if (textOrigin && textConfig.rotation != null) {\r\n            var relOriginX = void 0;\r\n            var relOriginY = void 0;\r\n\r\n            if (textOrigin === 'center') {\r\n              relOriginX = layoutRect.width * 0.5;\r\n              relOriginY = layoutRect.height * 0.5;\r\n            } else {\r\n              relOriginX = parsePercent(textOrigin[0], layoutRect.width);\r\n              relOriginY = parsePercent(textOrigin[1], layoutRect.height);\r\n            }\r\n\r\n            innerOrigin = true;\r\n            attachedTransform.originX = -attachedTransform.x + relOriginX + (isLocal ? 0 : layoutRect.x);\r\n            attachedTransform.originY = -attachedTransform.y + relOriginY + (isLocal ? 0 : layoutRect.y);\r\n          }\r\n        }\r\n\r\n        if (textConfig.rotation != null) {\r\n          attachedTransform.rotation = textConfig.rotation;\r\n        }\r\n\r\n        var textOffset = textConfig.offset;\r\n\r\n        if (textOffset) {\r\n          attachedTransform.x += textOffset[0];\r\n          attachedTransform.y += textOffset[1];\r\n\r\n          if (!innerOrigin) {\r\n            attachedTransform.originX = -textOffset[0];\r\n            attachedTransform.originY = -textOffset[1];\r\n          }\r\n        }\r\n\r\n        var isInside = textConfig.inside == null ? typeof textConfig.position === 'string' && textConfig.position.indexOf('inside') >= 0 : textConfig.inside;\r\n        var innerTextDefaultStyle = this._innerTextDefaultStyle || (this._innerTextDefaultStyle = {});\r\n        var textFill = void 0;\r\n        var textStroke = void 0;\r\n        var autoStroke = void 0;\r\n\r\n        if (isInside && this.canBeInsideText()) {\r\n          textFill = textConfig.insideFill;\r\n          textStroke = textConfig.insideStroke;\r\n\r\n          if (textFill == null || textFill === 'auto') {\r\n            textFill = this.getInsideTextFill();\r\n          }\r\n\r\n          if (textStroke == null || textStroke === 'auto') {\r\n            textStroke = this.getInsideTextStroke(textFill);\r\n            autoStroke = true;\r\n          }\r\n        } else {\r\n          textFill = textConfig.outsideFill;\r\n          textStroke = textConfig.outsideStroke;\r\n\r\n          if (textFill == null || textFill === 'auto') {\r\n            textFill = this.getOutsideFill();\r\n          }\r\n\r\n          if (textStroke == null || textStroke === 'auto') {\r\n            textStroke = this.getOutsideStroke(textFill);\r\n            autoStroke = true;\r\n          }\r\n        }\r\n\r\n        textFill = textFill || '#000';\r\n\r\n        if (textFill !== innerTextDefaultStyle.fill || textStroke !== innerTextDefaultStyle.stroke || autoStroke !== innerTextDefaultStyle.autoStroke || textAlign !== innerTextDefaultStyle.align || textVerticalAlign !== innerTextDefaultStyle.verticalAlign) {\r\n          textStyleChanged = true;\r\n          innerTextDefaultStyle.fill = textFill;\r\n          innerTextDefaultStyle.stroke = textStroke;\r\n          innerTextDefaultStyle.autoStroke = autoStroke;\r\n          innerTextDefaultStyle.align = textAlign;\r\n          innerTextDefaultStyle.verticalAlign = textVerticalAlign;\r\n          textEl.setDefaultTextStyle(innerTextDefaultStyle);\r\n        }\r\n\r\n        if (textStyleChanged) {\r\n          textEl.dirtyStyle();\r\n        }\r\n\r\n        textEl.markRedraw();\r\n      }\r\n    };\r\n\r\n    Element.prototype.canBeInsideText = function () {\r\n      return true;\r\n    };\r\n\r\n    Element.prototype.getInsideTextFill = function () {\r\n      return '#fff';\r\n    };\r\n\r\n    Element.prototype.getInsideTextStroke = function (textFill) {\r\n      return '#000';\r\n    };\r\n\r\n    Element.prototype.getOutsideFill = function () {\r\n      return this.__zr && this.__zr.isDarkMode() ? LIGHT_LABEL_COLOR : DARK_LABEL_COLOR;\r\n    };\r\n\r\n    Element.prototype.getOutsideStroke = function (textFill) {\r\n      var backgroundColor = this.__zr && this.__zr.getBackgroundColor();\r\n\r\n      var colorArr = typeof backgroundColor === 'string' && parse(backgroundColor);\r\n\r\n      if (!colorArr) {\r\n        colorArr = [255, 255, 255, 1];\r\n      }\r\n\r\n      var alpha = colorArr[3];\r\n\r\n      var isDark = this.__zr.isDarkMode();\r\n\r\n      for (var i = 0; i < 3; i++) {\r\n        colorArr[i] = colorArr[i] * alpha + (isDark ? 0 : 255) * (1 - alpha);\r\n      }\r\n\r\n      colorArr[3] = 1;\r\n      return stringify(colorArr, 'rgba');\r\n    };\r\n\r\n    Element.prototype.traverse = function (cb, context) {};\r\n\r\n    Element.prototype.attrKV = function (key, value) {\r\n      if (key === 'textConfig') {\r\n        this.setTextConfig(value);\r\n      } else if (key === 'textContent') {\r\n        this.setTextContent(value);\r\n      } else if (key === 'clipPath') {\r\n        this.setClipPath(value);\r\n      } else if (key === 'extra') {\r\n        this.extra = this.extra || {};\r\n        extend(this.extra, value);\r\n      } else {\r\n        this[key] = value;\r\n      }\r\n    };\r\n\r\n    Element.prototype.hide = function () {\r\n      this.ignore = true;\r\n      this.markRedraw();\r\n    };\r\n\r\n    Element.prototype.show = function () {\r\n      this.ignore = false;\r\n      this.markRedraw();\r\n    };\r\n\r\n    Element.prototype.attr = function (keyOrObj, value) {\r\n      if (typeof keyOrObj === 'string') {\r\n        this.attrKV(keyOrObj, value);\r\n      } else if (isObject$1(keyOrObj)) {\r\n        var obj = keyOrObj;\r\n        var keysArr = keys(obj);\r\n\r\n        for (var i = 0; i < keysArr.length; i++) {\r\n          var key = keysArr[i];\r\n          this.attrKV(key, keyOrObj[key]);\r\n        }\r\n      }\r\n\r\n      this.markRedraw();\r\n      return this;\r\n    };\r\n\r\n    Element.prototype.saveCurrentToNormalState = function (toState) {\r\n      this._innerSaveToNormal(toState);\r\n\r\n      var normalState = this._normalState;\r\n\r\n      for (var i = 0; i < this.animators.length; i++) {\r\n        var animator = this.animators[i];\r\n        var fromStateTransition = animator.__fromStateTransition;\r\n\r\n        if (fromStateTransition && fromStateTransition !== PRESERVED_NORMAL_STATE) {\r\n          continue;\r\n        }\r\n\r\n        var targetName = animator.targetName;\r\n        var target = targetName ? normalState[targetName] : normalState;\r\n        animator.saveFinalToTarget(target);\r\n      }\r\n    };\r\n\r\n    Element.prototype._innerSaveToNormal = function (toState) {\r\n      var normalState = this._normalState;\r\n\r\n      if (!normalState) {\r\n        normalState = this._normalState = {};\r\n      }\r\n\r\n      if (toState.textConfig && !normalState.textConfig) {\r\n        normalState.textConfig = this.textConfig;\r\n      }\r\n\r\n      this._savePrimaryToNormal(toState, normalState, PRIMARY_STATES_KEYS);\r\n    };\r\n\r\n    Element.prototype._savePrimaryToNormal = function (toState, normalState, primaryKeys) {\r\n      for (var i = 0; i < primaryKeys.length; i++) {\r\n        var key = primaryKeys[i];\r\n\r\n        if (toState[key] != null && !(key in normalState)) {\r\n          normalState[key] = this[key];\r\n        }\r\n      }\r\n    };\r\n\r\n    Element.prototype.hasState = function () {\r\n      return this.currentStates.length > 0;\r\n    };\r\n\r\n    Element.prototype.getState = function (name) {\r\n      return this.states[name];\r\n    };\r\n\r\n    Element.prototype.ensureState = function (name) {\r\n      var states = this.states;\r\n\r\n      if (!states[name]) {\r\n        states[name] = {};\r\n      }\r\n\r\n      return states[name];\r\n    };\r\n\r\n    Element.prototype.clearStates = function (noAnimation) {\r\n      this.useState(PRESERVED_NORMAL_STATE, false, noAnimation);\r\n    };\r\n\r\n    Element.prototype.useState = function (stateName, keepCurrentStates, noAnimation) {\r\n      var toNormalState = stateName === PRESERVED_NORMAL_STATE;\r\n      var hasStates = this.hasState();\r\n\r\n      if (!hasStates && toNormalState) {\r\n        return;\r\n      }\r\n\r\n      var currentStates = this.currentStates;\r\n      var animationCfg = this.stateTransition;\r\n\r\n      if (indexOf$1(currentStates, stateName) >= 0 && (keepCurrentStates || currentStates.length === 1)) {\r\n        return;\r\n      }\r\n\r\n      var state;\r\n\r\n      if (this.stateProxy && !toNormalState) {\r\n        state = this.stateProxy(stateName);\r\n      }\r\n\r\n      if (!state) {\r\n        state = this.states && this.states[stateName];\r\n      }\r\n\r\n      if (!state && !toNormalState) {\r\n        logError(\"State \" + stateName + \" not exists.\");\r\n        return;\r\n      }\r\n\r\n      if (!toNormalState) {\r\n        this.saveCurrentToNormalState(state);\r\n      }\r\n\r\n      var useHoverLayer = !!(state && state.hoverLayer);\r\n\r\n      if (useHoverLayer) {\r\n        this._toggleHoverLayerFlag(true);\r\n      }\r\n\r\n      this._applyStateObj(stateName, state, this._normalState, keepCurrentStates, !noAnimation && !this.__inHover && animationCfg && animationCfg.duration > 0, animationCfg);\r\n\r\n      if (this._textContent) {\r\n        this._textContent.useState(stateName, keepCurrentStates);\r\n      }\r\n\r\n      if (this._textGuide) {\r\n        this._textGuide.useState(stateName, keepCurrentStates);\r\n      }\r\n\r\n      if (toNormalState) {\r\n        this.currentStates = [];\r\n        this._normalState = {};\r\n      } else {\r\n        if (!keepCurrentStates) {\r\n          this.currentStates = [stateName];\r\n        } else {\r\n          this.currentStates.push(stateName);\r\n        }\r\n      }\r\n\r\n      this._updateAnimationTargets();\r\n\r\n      this.markRedraw();\r\n\r\n      if (!useHoverLayer && this.__inHover) {\r\n        this._toggleHoverLayerFlag(false);\r\n\r\n        this.__dirty &= ~Element.REDARAW_BIT;\r\n      }\r\n\r\n      return state;\r\n    };\r\n\r\n    Element.prototype.useStates = function (states, noAnimation) {\r\n      if (!states.length) {\r\n        this.clearStates();\r\n      } else {\r\n        var stateObjects = [];\r\n        var currentStates = this.currentStates;\r\n        var len = states.length;\r\n        var notChange = len === currentStates.length;\r\n\r\n        if (notChange) {\r\n          for (var i = 0; i < len; i++) {\r\n            if (states[i] !== currentStates[i]) {\r\n              notChange = false;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (notChange) {\r\n          return;\r\n        }\r\n\r\n        for (var i = 0; i < len; i++) {\r\n          var stateName = states[i];\r\n          var stateObj = void 0;\r\n\r\n          if (this.stateProxy) {\r\n            stateObj = this.stateProxy(stateName, states);\r\n          }\r\n\r\n          if (!stateObj) {\r\n            stateObj = this.states[stateName];\r\n          }\r\n\r\n          if (stateObj) {\r\n            stateObjects.push(stateObj);\r\n          }\r\n        }\r\n\r\n        var useHoverLayer = !!(stateObjects[len - 1] && stateObjects[len - 1].hoverLayer);\r\n\r\n        if (useHoverLayer) {\r\n          this._toggleHoverLayerFlag(true);\r\n        }\r\n\r\n        var mergedState = this._mergeStates(stateObjects);\r\n\r\n        var animationCfg = this.stateTransition;\r\n        this.saveCurrentToNormalState(mergedState);\r\n\r\n        this._applyStateObj(states.join(','), mergedState, this._normalState, false, !noAnimation && !this.__inHover && animationCfg && animationCfg.duration > 0, animationCfg);\r\n\r\n        if (this._textContent) {\r\n          this._textContent.useStates(states);\r\n        }\r\n\r\n        if (this._textGuide) {\r\n          this._textGuide.useStates(states);\r\n        }\r\n\r\n        this._updateAnimationTargets();\r\n\r\n        this.currentStates = states.slice();\r\n        this.markRedraw();\r\n\r\n        if (!useHoverLayer && this.__inHover) {\r\n          this._toggleHoverLayerFlag(false);\r\n\r\n          this.__dirty &= ~Element.REDARAW_BIT;\r\n        }\r\n      }\r\n    };\r\n\r\n    Element.prototype._updateAnimationTargets = function () {\r\n      for (var i = 0; i < this.animators.length; i++) {\r\n        var animator = this.animators[i];\r\n\r\n        if (animator.targetName) {\r\n          animator.changeTarget(this[animator.targetName]);\r\n        }\r\n      }\r\n    };\r\n\r\n    Element.prototype.removeState = function (state) {\r\n      var idx = indexOf$1(this.currentStates, state);\r\n\r\n      if (idx >= 0) {\r\n        var currentStates = this.currentStates.slice();\r\n        currentStates.splice(idx, 1);\r\n        this.useStates(currentStates);\r\n      }\r\n    };\r\n\r\n    Element.prototype.replaceState = function (oldState, newState, forceAdd) {\r\n      var currentStates = this.currentStates.slice();\r\n      var idx = indexOf$1(currentStates, oldState);\r\n      var newStateExists = indexOf$1(currentStates, newState) >= 0;\r\n\r\n      if (idx >= 0) {\r\n        if (!newStateExists) {\r\n          currentStates[idx] = newState;\r\n        } else {\r\n          currentStates.splice(idx, 1);\r\n        }\r\n      } else if (forceAdd && !newStateExists) {\r\n        currentStates.push(newState);\r\n      }\r\n\r\n      this.useStates(currentStates);\r\n    };\r\n\r\n    Element.prototype.toggleState = function (state, enable) {\r\n      if (enable) {\r\n        this.useState(state, true);\r\n      } else {\r\n        this.removeState(state);\r\n      }\r\n    };\r\n\r\n    Element.prototype._mergeStates = function (states) {\r\n      var mergedState = {};\r\n      var mergedTextConfig;\r\n\r\n      for (var i = 0; i < states.length; i++) {\r\n        var state = states[i];\r\n        extend(mergedState, state);\r\n\r\n        if (state.textConfig) {\r\n          mergedTextConfig = mergedTextConfig || {};\r\n          extend(mergedTextConfig, state.textConfig);\r\n        }\r\n      }\r\n\r\n      if (mergedTextConfig) {\r\n        mergedState.textConfig = mergedTextConfig;\r\n      }\r\n\r\n      return mergedState;\r\n    };\r\n\r\n    Element.prototype._applyStateObj = function (stateName, state, normalState, keepCurrentStates, transition, animationCfg) {\r\n      var needsRestoreToNormal = !(state && keepCurrentStates);\r\n\r\n      if (state && state.textConfig) {\r\n        this.textConfig = extend({}, keepCurrentStates ? this.textConfig : normalState.textConfig);\r\n        extend(this.textConfig, state.textConfig);\r\n      } else if (needsRestoreToNormal) {\r\n        if (normalState.textConfig) {\r\n          this.textConfig = normalState.textConfig;\r\n        }\r\n      }\r\n\r\n      var transitionTarget = {};\r\n      var hasTransition = false;\r\n\r\n      for (var i = 0; i < PRIMARY_STATES_KEYS.length; i++) {\r\n        var key = PRIMARY_STATES_KEYS[i];\r\n        var propNeedsTransition = transition && DEFAULT_ANIMATABLE_MAP[key];\r\n\r\n        if (state && state[key] != null) {\r\n          if (propNeedsTransition) {\r\n            hasTransition = true;\r\n            transitionTarget[key] = state[key];\r\n          } else {\r\n            this[key] = state[key];\r\n          }\r\n        } else if (needsRestoreToNormal) {\r\n          if (normalState[key] != null) {\r\n            if (propNeedsTransition) {\r\n              hasTransition = true;\r\n              transitionTarget[key] = normalState[key];\r\n            } else {\r\n              this[key] = normalState[key];\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!transition) {\r\n        for (var i = 0; i < this.animators.length; i++) {\r\n          var animator = this.animators[i];\r\n          var targetName = animator.targetName;\r\n\r\n          animator.__changeFinalValue(targetName ? (state || normalState)[targetName] : state || normalState);\r\n        }\r\n      }\r\n\r\n      if (hasTransition) {\r\n        this._transitionState(stateName, transitionTarget, animationCfg);\r\n      }\r\n    };\r\n\r\n    Element.prototype._attachComponent = function (componentEl) {\r\n      if (componentEl.__zr && !componentEl.__hostTarget) {\r\n        throw new Error('Text element has been added to zrender.');\r\n      }\r\n\r\n      if (componentEl === this) {\r\n        throw new Error('Recursive component attachment.');\r\n      }\r\n\r\n      var zr = this.__zr;\r\n\r\n      if (zr) {\r\n        componentEl.addSelfToZr(zr);\r\n      }\r\n\r\n      componentEl.__zr = zr;\r\n      componentEl.__hostTarget = this;\r\n    };\r\n\r\n    Element.prototype._detachComponent = function (componentEl) {\r\n      if (componentEl.__zr) {\r\n        componentEl.removeSelfFromZr(componentEl.__zr);\r\n      }\r\n\r\n      componentEl.__zr = null;\r\n      componentEl.__hostTarget = null;\r\n    };\r\n\r\n    Element.prototype.getClipPath = function () {\r\n      return this._clipPath;\r\n    };\r\n\r\n    Element.prototype.setClipPath = function (clipPath) {\r\n      if (this._clipPath && this._clipPath !== clipPath) {\r\n        this.removeClipPath();\r\n      }\r\n\r\n      this._attachComponent(clipPath);\r\n\r\n      this._clipPath = clipPath;\r\n      this.markRedraw();\r\n    };\r\n\r\n    Element.prototype.removeClipPath = function () {\r\n      var clipPath = this._clipPath;\r\n\r\n      if (clipPath) {\r\n        this._detachComponent(clipPath);\r\n\r\n        this._clipPath = null;\r\n        this.markRedraw();\r\n      }\r\n    };\r\n\r\n    Element.prototype.getTextContent = function () {\r\n      return this._textContent;\r\n    };\r\n\r\n    Element.prototype.setTextContent = function (textEl) {\r\n      var previousTextContent = this._textContent;\r\n\r\n      if (previousTextContent === textEl) {\r\n        return;\r\n      }\r\n\r\n      if (previousTextContent && previousTextContent !== textEl) {\r\n        this.removeTextContent();\r\n      }\r\n\r\n      if (textEl.__zr && !textEl.__hostTarget) {\r\n        throw new Error('Text element has been added to zrender.');\r\n      }\r\n\r\n      textEl.attachedTransform = new Transformable();\r\n\r\n      this._attachComponent(textEl);\r\n\r\n      this._textContent = textEl;\r\n      this.markRedraw();\r\n    };\r\n\r\n    Element.prototype.setTextConfig = function (cfg) {\r\n      if (!this.textConfig) {\r\n        this.textConfig = {};\r\n      }\r\n\r\n      extend(this.textConfig, cfg);\r\n      this.markRedraw();\r\n    };\r\n\r\n    Element.prototype.removeTextContent = function () {\r\n      var textEl = this._textContent;\r\n\r\n      if (textEl) {\r\n        textEl.attachedTransform = null;\r\n\r\n        this._detachComponent(textEl);\r\n\r\n        this._textContent = null;\r\n        this._innerTextDefaultStyle = null;\r\n        this.markRedraw();\r\n      }\r\n    };\r\n\r\n    Element.prototype.getTextGuideLine = function () {\r\n      return this._textGuide;\r\n    };\r\n\r\n    Element.prototype.setTextGuideLine = function (guideLine) {\r\n      if (this._textGuide && this._textGuide !== guideLine) {\r\n        this.removeTextGuideLine();\r\n      }\r\n\r\n      this._attachComponent(guideLine);\r\n\r\n      this._textGuide = guideLine;\r\n      this.markRedraw();\r\n    };\r\n\r\n    Element.prototype.removeTextGuideLine = function () {\r\n      var textGuide = this._textGuide;\r\n\r\n      if (textGuide) {\r\n        this._detachComponent(textGuide);\r\n\r\n        this._textGuide = null;\r\n        this.markRedraw();\r\n      }\r\n    };\r\n\r\n    Element.prototype.markRedraw = function () {\r\n      this.__dirty |= Element.REDARAW_BIT;\r\n      var zr = this.__zr;\r\n\r\n      if (zr) {\r\n        if (this.__inHover) {\r\n          zr.refreshHover();\r\n        } else {\r\n          zr.refresh();\r\n        }\r\n      }\r\n\r\n      if (this.__hostTarget) {\r\n        this.__hostTarget.markRedraw();\r\n      }\r\n    };\r\n\r\n    Element.prototype.dirty = function () {\r\n      this.markRedraw();\r\n    };\r\n\r\n    Element.prototype._toggleHoverLayerFlag = function (inHover) {\r\n      this.__inHover = inHover;\r\n      var textContent = this._textContent;\r\n      var textGuide = this._textGuide;\r\n\r\n      if (textContent) {\r\n        textContent.__inHover = inHover;\r\n      }\r\n\r\n      if (textGuide) {\r\n        textGuide.__inHover = inHover;\r\n      }\r\n    };\r\n\r\n    Element.prototype.addSelfToZr = function (zr) {\r\n      this.__zr = zr;\r\n      var animators = this.animators;\r\n\r\n      if (animators) {\r\n        for (var i = 0; i < animators.length; i++) {\r\n          zr.animation.addAnimator(animators[i]);\r\n        }\r\n      }\r\n\r\n      if (this._clipPath) {\r\n        this._clipPath.addSelfToZr(zr);\r\n      }\r\n\r\n      if (this._textContent) {\r\n        this._textContent.addSelfToZr(zr);\r\n      }\r\n\r\n      if (this._textGuide) {\r\n        this._textGuide.addSelfToZr(zr);\r\n      }\r\n    };\r\n\r\n    Element.prototype.removeSelfFromZr = function (zr) {\r\n      this.__zr = null;\r\n      var animators = this.animators;\r\n\r\n      if (animators) {\r\n        for (var i = 0; i < animators.length; i++) {\r\n          zr.animation.removeAnimator(animators[i]);\r\n        }\r\n      }\r\n\r\n      if (this._clipPath) {\r\n        this._clipPath.removeSelfFromZr(zr);\r\n      }\r\n\r\n      if (this._textContent) {\r\n        this._textContent.removeSelfFromZr(zr);\r\n      }\r\n\r\n      if (this._textGuide) {\r\n        this._textGuide.removeSelfFromZr(zr);\r\n      }\r\n    };\r\n\r\n    Element.prototype.animate = function (key, loop) {\r\n      var target = key ? this[key] : this;\r\n\r\n      if (!target) {\r\n        logError('Property \"' + key + '\" is not existed in element ' + this.id);\r\n        return;\r\n      }\r\n\r\n      var animator = new Animator(target, loop);\r\n      this.addAnimator(animator, key);\r\n      return animator;\r\n    };\r\n\r\n    Element.prototype.addAnimator = function (animator, key) {\r\n      var zr = this.__zr;\r\n      var el = this;\r\n      animator.during(function () {\r\n        el.updateDuringAnimation(key);\r\n      }).done(function () {\r\n        var animators = el.animators;\r\n        var idx = indexOf$1(animators, animator);\r\n\r\n        if (idx >= 0) {\r\n          animators.splice(idx, 1);\r\n        }\r\n      });\r\n      this.animators.push(animator);\r\n\r\n      if (zr) {\r\n        zr.animation.addAnimator(animator);\r\n      }\r\n\r\n      zr && zr.wakeUp();\r\n    };\r\n\r\n    Element.prototype.updateDuringAnimation = function (key) {\r\n      this.markRedraw();\r\n    };\r\n\r\n    Element.prototype.stopAnimation = function (scope, forwardToLast) {\r\n      var animators = this.animators;\r\n      var len = animators.length;\r\n      var leftAnimators = [];\r\n\r\n      for (var i = 0; i < len; i++) {\r\n        var animator = animators[i];\r\n\r\n        if (!scope || scope === animator.scope) {\r\n          animator.stop(forwardToLast);\r\n        } else {\r\n          leftAnimators.push(animator);\r\n        }\r\n      }\r\n\r\n      this.animators = leftAnimators;\r\n      return this;\r\n    };\r\n\r\n    Element.prototype.animateTo = function (target, cfg, animationProps) {\r\n      animateTo(this, target, cfg, animationProps);\r\n    };\r\n\r\n    Element.prototype.animateFrom = function (target, cfg, animationProps) {\r\n      animateTo(this, target, cfg, animationProps, true);\r\n    };\r\n\r\n    Element.prototype._transitionState = function (stateName, target, cfg, animationProps) {\r\n      var animators = animateTo(this, target, cfg, animationProps);\r\n\r\n      for (var i = 0; i < animators.length; i++) {\r\n        animators[i].__fromStateTransition = stateName;\r\n      }\r\n    };\r\n\r\n    Element.prototype.getBoundingRect = function () {\r\n      return null;\r\n    };\r\n\r\n    Element.prototype.getPaintRect = function () {\r\n      return null;\r\n    };\r\n\r\n    Element.REDARAW_BIT = 1;\r\n\r\n    Element.initDefaultProps = function () {\r\n      var elProto = Element.prototype;\r\n      elProto.type = 'element';\r\n      elProto.name = '';\r\n      elProto.ignore = false;\r\n      elProto.silent = false;\r\n      elProto.isGroup = false;\r\n      elProto.draggable = false;\r\n      elProto.dragging = false;\r\n      elProto.ignoreClip = false;\r\n      elProto.__inHover = false;\r\n      elProto.__dirty = Element.REDARAW_BIT;\r\n      var logs = {};\r\n\r\n      function logDeprecatedError(key, xKey, yKey) {\r\n        if (!logs[key + xKey + yKey]) {\r\n          console.warn(\"DEPRECATED: '\" + key + \"' has been deprecated. use '\" + xKey + \"', '\" + yKey + \"' instead\");\r\n          logs[key + xKey + yKey] = true;\r\n        }\r\n      }\r\n\r\n      function createLegacyProperty(key, privateKey, xKey, yKey) {\r\n        Object.defineProperty(elProto, key, {\r\n          get: function () {\r\n            logDeprecatedError(key, xKey, yKey);\r\n\r\n            if (!this[privateKey]) {\r\n              var pos = this[privateKey] = [];\r\n              enhanceArray(this, pos);\r\n            }\r\n\r\n            return this[privateKey];\r\n          },\r\n          set: function (pos) {\r\n            logDeprecatedError(key, xKey, yKey);\r\n            this[xKey] = pos[0];\r\n            this[yKey] = pos[1];\r\n            this[privateKey] = pos;\r\n            enhanceArray(this, pos);\r\n          }\r\n        });\r\n\r\n        function enhanceArray(self, pos) {\r\n          Object.defineProperty(pos, 0, {\r\n            get: function () {\r\n              return self[xKey];\r\n            },\r\n            set: function (val) {\r\n              self[xKey] = val;\r\n            }\r\n          });\r\n          Object.defineProperty(pos, 1, {\r\n            get: function () {\r\n              return self[yKey];\r\n            },\r\n            set: function (val) {\r\n              self[yKey] = val;\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if (Object.defineProperty && (!env.browser.ie || env.browser.version > 8)) {\r\n        createLegacyProperty('position', '_legacyPos', 'x', 'y');\r\n        createLegacyProperty('scale', '_legacyScale', 'scaleX', 'scaleY');\r\n        createLegacyProperty('origin', '_legacyOrigin', 'originX', 'originY');\r\n      }\r\n    }();\r\n\r\n    return Element;\r\n  }();\r\n\r\n  mixin(Element, Eventful);\r\n  mixin(Element, Transformable);\r\n\r\n  function animateTo(animatable, target, cfg, animationProps, reverse) {\r\n    cfg = cfg || {};\r\n    var animators = [];\r\n    animateToShallow(animatable, '', animatable, target, cfg, animationProps, animators, reverse);\r\n    var finishCount = animators.length;\r\n    var doneHappened = false;\r\n    var cfgDone = cfg.done;\r\n    var cfgAborted = cfg.aborted;\r\n\r\n    var doneCb = function () {\r\n      doneHappened = true;\r\n      finishCount--;\r\n\r\n      if (finishCount <= 0) {\r\n        doneHappened ? cfgDone && cfgDone() : cfgAborted && cfgAborted();\r\n      }\r\n    };\r\n\r\n    var abortedCb = function () {\r\n      finishCount--;\r\n\r\n      if (finishCount <= 0) {\r\n        doneHappened ? cfgDone && cfgDone() : cfgAborted && cfgAborted();\r\n      }\r\n    };\r\n\r\n    if (!finishCount) {\r\n      cfgDone && cfgDone();\r\n    }\r\n\r\n    if (animators.length > 0 && cfg.during) {\r\n      animators[0].during(function (target, percent) {\r\n        cfg.during(percent);\r\n      });\r\n    }\r\n\r\n    for (var i = 0; i < animators.length; i++) {\r\n      var animator = animators[i];\r\n\r\n      if (doneCb) {\r\n        animator.done(doneCb);\r\n      }\r\n\r\n      if (abortedCb) {\r\n        animator.aborted(abortedCb);\r\n      }\r\n\r\n      animator.start(cfg.easing, cfg.force);\r\n    }\r\n\r\n    return animators;\r\n  }\r\n\r\n  function copyArrShallow(source, target, len) {\r\n    for (var i = 0; i < len; i++) {\r\n      source[i] = target[i];\r\n    }\r\n  }\r\n\r\n  function is2DArray(value) {\r\n    return isArrayLike(value[0]);\r\n  }\r\n\r\n  function copyValue(target, source, key) {\r\n    if (isArrayLike(source[key])) {\r\n      if (!isArrayLike(target[key])) {\r\n        target[key] = [];\r\n      }\r\n\r\n      if (isTypedArray(source[key])) {\r\n        var len = source[key].length;\r\n\r\n        if (target[key].length !== len) {\r\n          target[key] = new source[key].constructor(len);\r\n          copyArrShallow(target[key], source[key], len);\r\n        }\r\n      } else {\r\n        var sourceArr = source[key];\r\n        var targetArr = target[key];\r\n        var len0 = sourceArr.length;\r\n\r\n        if (is2DArray(sourceArr)) {\r\n          var len1 = sourceArr[0].length;\r\n\r\n          for (var i = 0; i < len0; i++) {\r\n            if (!targetArr[i]) {\r\n              targetArr[i] = Array.prototype.slice.call(sourceArr[i]);\r\n            } else {\r\n              copyArrShallow(targetArr[i], sourceArr[i], len1);\r\n            }\r\n          }\r\n        } else {\r\n          copyArrShallow(targetArr, sourceArr, len0);\r\n        }\r\n\r\n        targetArr.length = sourceArr.length;\r\n      }\r\n    } else {\r\n      target[key] = source[key];\r\n    }\r\n  }\r\n\r\n  function animateToShallow(animatable, topKey, source, target, cfg, animationProps, animators, reverse) {\r\n    var animatableKeys = [];\r\n    var changedKeys = [];\r\n    var targetKeys = keys(target);\r\n    var duration = cfg.duration;\r\n    var delay = cfg.delay;\r\n    var additive = cfg.additive;\r\n    var setToFinal = cfg.setToFinal;\r\n    var animateAll = !isObject$1(animationProps);\r\n\r\n    for (var k = 0; k < targetKeys.length; k++) {\r\n      var innerKey = targetKeys[k];\r\n\r\n      if (source[innerKey] != null && target[innerKey] != null && (animateAll || animationProps[innerKey])) {\r\n        if (isObject$1(target[innerKey]) && !isArrayLike(target[innerKey])) {\r\n          if (topKey) {\r\n            if (!reverse) {\r\n              source[innerKey] = target[innerKey];\r\n              animatable.updateDuringAnimation(topKey);\r\n            }\r\n\r\n            continue;\r\n          }\r\n\r\n          animateToShallow(animatable, innerKey, source[innerKey], target[innerKey], cfg, animationProps && animationProps[innerKey], animators, reverse);\r\n        } else {\r\n          animatableKeys.push(innerKey);\r\n          changedKeys.push(innerKey);\r\n        }\r\n      } else if (!reverse) {\r\n        source[innerKey] = target[innerKey];\r\n        animatable.updateDuringAnimation(topKey);\r\n        changedKeys.push(innerKey);\r\n      }\r\n    }\r\n\r\n    var keyLen = animatableKeys.length;\r\n\r\n    if (keyLen > 0 || cfg.force && !animators.length) {\r\n      var existsAnimators = animatable.animators;\r\n      var existsAnimatorsOnSameTarget = [];\r\n\r\n      for (var i = 0; i < existsAnimators.length; i++) {\r\n        if (existsAnimators[i].targetName === topKey) {\r\n          existsAnimatorsOnSameTarget.push(existsAnimators[i]);\r\n        }\r\n      }\r\n\r\n      if (!additive && existsAnimatorsOnSameTarget.length) {\r\n        for (var i = 0; i < existsAnimatorsOnSameTarget.length; i++) {\r\n          var allAborted = existsAnimatorsOnSameTarget[i].stopTracks(changedKeys);\r\n\r\n          if (allAborted) {\r\n            var idx = indexOf$1(existsAnimators, existsAnimatorsOnSameTarget[i]);\r\n            existsAnimators.splice(idx, 1);\r\n          }\r\n        }\r\n      }\r\n\r\n      var revertedSource = void 0;\r\n      var reversedTarget = void 0;\r\n      var sourceClone = void 0;\r\n\r\n      if (reverse) {\r\n        reversedTarget = {};\r\n\r\n        if (setToFinal) {\r\n          revertedSource = {};\r\n        }\r\n\r\n        for (var i = 0; i < keyLen; i++) {\r\n          var innerKey = animatableKeys[i];\r\n          reversedTarget[innerKey] = source[innerKey];\r\n\r\n          if (setToFinal) {\r\n            revertedSource[innerKey] = target[innerKey];\r\n          } else {\r\n            source[innerKey] = target[innerKey];\r\n          }\r\n        }\r\n      } else if (setToFinal) {\r\n        sourceClone = {};\r\n\r\n        for (var i = 0; i < keyLen; i++) {\r\n          var innerKey = animatableKeys[i];\r\n          sourceClone[innerKey] = cloneValue(source[innerKey]);\r\n          copyValue(source, target, innerKey);\r\n        }\r\n      }\r\n\r\n      var animator = new Animator(source, false, additive ? existsAnimatorsOnSameTarget : null);\r\n      animator.targetName = topKey;\r\n\r\n      if (cfg.scope) {\r\n        animator.scope = cfg.scope;\r\n      }\r\n\r\n      if (setToFinal && revertedSource) {\r\n        animator.whenWithKeys(0, revertedSource, animatableKeys);\r\n      }\r\n\r\n      if (sourceClone) {\r\n        animator.whenWithKeys(0, sourceClone, animatableKeys);\r\n      }\r\n\r\n      animator.whenWithKeys(duration == null ? 500 : duration, reverse ? reversedTarget : target, animatableKeys).delay(delay || 0);\r\n      animatable.addAnimator(animator, topKey);\r\n      animators.push(animator);\r\n    }\r\n  }\r\n\r\n  var DEFAULT_MIN_MERGE = 32;\r\n  var DEFAULT_MIN_GALLOPING = 7;\r\n\r\n  function minRunLength(n) {\r\n    var r = 0;\r\n\r\n    while (n >= DEFAULT_MIN_MERGE) {\r\n      r |= n & 1;\r\n      n >>= 1;\r\n    }\r\n\r\n    return n + r;\r\n  }\r\n\r\n  function makeAscendingRun(array, lo, hi, compare) {\r\n    var runHi = lo + 1;\r\n\r\n    if (runHi === hi) {\r\n      return 1;\r\n    }\r\n\r\n    if (compare(array[runHi++], array[lo]) < 0) {\r\n      while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\r\n        runHi++;\r\n      }\r\n\r\n      reverseRun(array, lo, runHi);\r\n    } else {\r\n      while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\r\n        runHi++;\r\n      }\r\n    }\r\n\r\n    return runHi - lo;\r\n  }\r\n\r\n  function reverseRun(array, lo, hi) {\r\n    hi--;\r\n\r\n    while (lo < hi) {\r\n      var t = array[lo];\r\n      array[lo++] = array[hi];\r\n      array[hi--] = t;\r\n    }\r\n  }\r\n\r\n  function binaryInsertionSort(array, lo, hi, start, compare) {\r\n    if (start === lo) {\r\n      start++;\r\n    }\r\n\r\n    for (; start < hi; start++) {\r\n      var pivot = array[start];\r\n      var left = lo;\r\n      var right = start;\r\n      var mid;\r\n\r\n      while (left < right) {\r\n        mid = left + right >>> 1;\r\n\r\n        if (compare(pivot, array[mid]) < 0) {\r\n          right = mid;\r\n        } else {\r\n          left = mid + 1;\r\n        }\r\n      }\r\n\r\n      var n = start - left;\r\n\r\n      switch (n) {\r\n        case 3:\r\n          array[left + 3] = array[left + 2];\r\n\r\n        case 2:\r\n          array[left + 2] = array[left + 1];\r\n\r\n        case 1:\r\n          array[left + 1] = array[left];\r\n          break;\r\n\r\n        default:\r\n          while (n > 0) {\r\n            array[left + n] = array[left + n - 1];\r\n            n--;\r\n          }\r\n\r\n      }\r\n\r\n      array[left] = pivot;\r\n    }\r\n  }\r\n\r\n  function gallopLeft(value, array, start, length, hint, compare) {\r\n    var lastOffset = 0;\r\n    var maxOffset = 0;\r\n    var offset = 1;\r\n\r\n    if (compare(value, array[start + hint]) > 0) {\r\n      maxOffset = length - hint;\r\n\r\n      while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\r\n        lastOffset = offset;\r\n        offset = (offset << 1) + 1;\r\n\r\n        if (offset <= 0) {\r\n          offset = maxOffset;\r\n        }\r\n      }\r\n\r\n      if (offset > maxOffset) {\r\n        offset = maxOffset;\r\n      }\r\n\r\n      lastOffset += hint;\r\n      offset += hint;\r\n    } else {\r\n      maxOffset = hint + 1;\r\n\r\n      while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\r\n        lastOffset = offset;\r\n        offset = (offset << 1) + 1;\r\n\r\n        if (offset <= 0) {\r\n          offset = maxOffset;\r\n        }\r\n      }\r\n\r\n      if (offset > maxOffset) {\r\n        offset = maxOffset;\r\n      }\r\n\r\n      var tmp = lastOffset;\r\n      lastOffset = hint - offset;\r\n      offset = hint - tmp;\r\n    }\r\n\r\n    lastOffset++;\r\n\r\n    while (lastOffset < offset) {\r\n      var m = lastOffset + (offset - lastOffset >>> 1);\r\n\r\n      if (compare(value, array[start + m]) > 0) {\r\n        lastOffset = m + 1;\r\n      } else {\r\n        offset = m;\r\n      }\r\n    }\r\n\r\n    return offset;\r\n  }\r\n\r\n  function gallopRight(value, array, start, length, hint, compare) {\r\n    var lastOffset = 0;\r\n    var maxOffset = 0;\r\n    var offset = 1;\r\n\r\n    if (compare(value, array[start + hint]) < 0) {\r\n      maxOffset = hint + 1;\r\n\r\n      while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\r\n        lastOffset = offset;\r\n        offset = (offset << 1) + 1;\r\n\r\n        if (offset <= 0) {\r\n          offset = maxOffset;\r\n        }\r\n      }\r\n\r\n      if (offset > maxOffset) {\r\n        offset = maxOffset;\r\n      }\r\n\r\n      var tmp = lastOffset;\r\n      lastOffset = hint - offset;\r\n      offset = hint - tmp;\r\n    } else {\r\n      maxOffset = length - hint;\r\n\r\n      while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\r\n        lastOffset = offset;\r\n        offset = (offset << 1) + 1;\r\n\r\n        if (offset <= 0) {\r\n          offset = maxOffset;\r\n        }\r\n      }\r\n\r\n      if (offset > maxOffset) {\r\n        offset = maxOffset;\r\n      }\r\n\r\n      lastOffset += hint;\r\n      offset += hint;\r\n    }\r\n\r\n    lastOffset++;\r\n\r\n    while (lastOffset < offset) {\r\n      var m = lastOffset + (offset - lastOffset >>> 1);\r\n\r\n      if (compare(value, array[start + m]) < 0) {\r\n        offset = m;\r\n      } else {\r\n        lastOffset = m + 1;\r\n      }\r\n    }\r\n\r\n    return offset;\r\n  }\r\n\r\n  function TimSort(array, compare) {\r\n    var minGallop = DEFAULT_MIN_GALLOPING;\r\n    var runStart;\r\n    var runLength;\r\n    var stackSize = 0;\r\n    var tmp = [];\r\n    runStart = [];\r\n    runLength = [];\r\n\r\n    function pushRun(_runStart, _runLength) {\r\n      runStart[stackSize] = _runStart;\r\n      runLength[stackSize] = _runLength;\r\n      stackSize += 1;\r\n    }\r\n\r\n    function mergeRuns() {\r\n      while (stackSize > 1) {\r\n        var n = stackSize - 2;\r\n\r\n        if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\r\n          if (runLength[n - 1] < runLength[n + 1]) {\r\n            n--;\r\n          }\r\n        } else if (runLength[n] > runLength[n + 1]) {\r\n          break;\r\n        }\r\n\r\n        mergeAt(n);\r\n      }\r\n    }\r\n\r\n    function forceMergeRuns() {\r\n      while (stackSize > 1) {\r\n        var n = stackSize - 2;\r\n\r\n        if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\r\n          n--;\r\n        }\r\n\r\n        mergeAt(n);\r\n      }\r\n    }\r\n\r\n    function mergeAt(i) {\r\n      var start1 = runStart[i];\r\n      var length1 = runLength[i];\r\n      var start2 = runStart[i + 1];\r\n      var length2 = runLength[i + 1];\r\n      runLength[i] = length1 + length2;\r\n\r\n      if (i === stackSize - 3) {\r\n        runStart[i + 1] = runStart[i + 2];\r\n        runLength[i + 1] = runLength[i + 2];\r\n      }\r\n\r\n      stackSize--;\r\n      var k = gallopRight(array[start2], array, start1, length1, 0, compare);\r\n      start1 += k;\r\n      length1 -= k;\r\n\r\n      if (length1 === 0) {\r\n        return;\r\n      }\r\n\r\n      length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\r\n\r\n      if (length2 === 0) {\r\n        return;\r\n      }\r\n\r\n      if (length1 <= length2) {\r\n        mergeLow(start1, length1, start2, length2);\r\n      } else {\r\n        mergeHigh(start1, length1, start2, length2);\r\n      }\r\n    }\r\n\r\n    function mergeLow(start1, length1, start2, length2) {\r\n      var i = 0;\r\n\r\n      for (i = 0; i < length1; i++) {\r\n        tmp[i] = array[start1 + i];\r\n      }\r\n\r\n      var cursor1 = 0;\r\n      var cursor2 = start2;\r\n      var dest = start1;\r\n      array[dest++] = array[cursor2++];\r\n\r\n      if (--length2 === 0) {\r\n        for (i = 0; i < length1; i++) {\r\n          array[dest + i] = tmp[cursor1 + i];\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if (length1 === 1) {\r\n        for (i = 0; i < length2; i++) {\r\n          array[dest + i] = array[cursor2 + i];\r\n        }\r\n\r\n        array[dest + length2] = tmp[cursor1];\r\n        return;\r\n      }\r\n\r\n      var _minGallop = minGallop;\r\n      var count1;\r\n      var count2;\r\n      var exit;\r\n\r\n      while (1) {\r\n        count1 = 0;\r\n        count2 = 0;\r\n        exit = false;\r\n\r\n        do {\r\n          if (compare(array[cursor2], tmp[cursor1]) < 0) {\r\n            array[dest++] = array[cursor2++];\r\n            count2++;\r\n            count1 = 0;\r\n\r\n            if (--length2 === 0) {\r\n              exit = true;\r\n              break;\r\n            }\r\n          } else {\r\n            array[dest++] = tmp[cursor1++];\r\n            count1++;\r\n            count2 = 0;\r\n\r\n            if (--length1 === 1) {\r\n              exit = true;\r\n              break;\r\n            }\r\n          }\r\n        } while ((count1 | count2) < _minGallop);\r\n\r\n        if (exit) {\r\n          break;\r\n        }\r\n\r\n        do {\r\n          count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\r\n\r\n          if (count1 !== 0) {\r\n            for (i = 0; i < count1; i++) {\r\n              array[dest + i] = tmp[cursor1 + i];\r\n            }\r\n\r\n            dest += count1;\r\n            cursor1 += count1;\r\n            length1 -= count1;\r\n\r\n            if (length1 <= 1) {\r\n              exit = true;\r\n              break;\r\n            }\r\n          }\r\n\r\n          array[dest++] = array[cursor2++];\r\n\r\n          if (--length2 === 0) {\r\n            exit = true;\r\n            break;\r\n          }\r\n\r\n          count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\r\n\r\n          if (count2 !== 0) {\r\n            for (i = 0; i < count2; i++) {\r\n              array[dest + i] = array[cursor2 + i];\r\n            }\r\n\r\n            dest += count2;\r\n            cursor2 += count2;\r\n            length2 -= count2;\r\n\r\n            if (length2 === 0) {\r\n              exit = true;\r\n              break;\r\n            }\r\n          }\r\n\r\n          array[dest++] = tmp[cursor1++];\r\n\r\n          if (--length1 === 1) {\r\n            exit = true;\r\n            break;\r\n          }\r\n\r\n          _minGallop--;\r\n        } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\r\n\r\n        if (exit) {\r\n          break;\r\n        }\r\n\r\n        if (_minGallop < 0) {\r\n          _minGallop = 0;\r\n        }\r\n\r\n        _minGallop += 2;\r\n      }\r\n\r\n      minGallop = _minGallop;\r\n      minGallop < 1 && (minGallop = 1);\r\n\r\n      if (length1 === 1) {\r\n        for (i = 0; i < length2; i++) {\r\n          array[dest + i] = array[cursor2 + i];\r\n        }\r\n\r\n        array[dest + length2] = tmp[cursor1];\r\n      } else if (length1 === 0) {\r\n        throw new Error();\r\n      } else {\r\n        for (i = 0; i < length1; i++) {\r\n          array[dest + i] = tmp[cursor1 + i];\r\n        }\r\n      }\r\n    }\r\n\r\n    function mergeHigh(start1, length1, start2, length2) {\r\n      var i = 0;\r\n\r\n      for (i = 0; i < length2; i++) {\r\n        tmp[i] = array[start2 + i];\r\n      }\r\n\r\n      var cursor1 = start1 + length1 - 1;\r\n      var cursor2 = length2 - 1;\r\n      var dest = start2 + length2 - 1;\r\n      var customCursor = 0;\r\n      var customDest = 0;\r\n      array[dest--] = array[cursor1--];\r\n\r\n      if (--length1 === 0) {\r\n        customCursor = dest - (length2 - 1);\r\n\r\n        for (i = 0; i < length2; i++) {\r\n          array[customCursor + i] = tmp[i];\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if (length2 === 1) {\r\n        dest -= length1;\r\n        cursor1 -= length1;\r\n        customDest = dest + 1;\r\n        customCursor = cursor1 + 1;\r\n\r\n        for (i = length1 - 1; i >= 0; i--) {\r\n          array[customDest + i] = array[customCursor + i];\r\n        }\r\n\r\n        array[dest] = tmp[cursor2];\r\n        return;\r\n      }\r\n\r\n      var _minGallop = minGallop;\r\n\r\n      while (true) {\r\n        var count1 = 0;\r\n        var count2 = 0;\r\n        var exit = false;\r\n\r\n        do {\r\n          if (compare(tmp[cursor2], array[cursor1]) < 0) {\r\n            array[dest--] = array[cursor1--];\r\n            count1++;\r\n            count2 = 0;\r\n\r\n            if (--length1 === 0) {\r\n              exit = true;\r\n              break;\r\n            }\r\n          } else {\r\n            array[dest--] = tmp[cursor2--];\r\n            count2++;\r\n            count1 = 0;\r\n\r\n            if (--length2 === 1) {\r\n              exit = true;\r\n              break;\r\n            }\r\n          }\r\n        } while ((count1 | count2) < _minGallop);\r\n\r\n        if (exit) {\r\n          break;\r\n        }\r\n\r\n        do {\r\n          count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\r\n\r\n          if (count1 !== 0) {\r\n            dest -= count1;\r\n            cursor1 -= count1;\r\n            length1 -= count1;\r\n            customDest = dest + 1;\r\n            customCursor = cursor1 + 1;\r\n\r\n            for (i = count1 - 1; i >= 0; i--) {\r\n              array[customDest + i] = array[customCursor + i];\r\n            }\r\n\r\n            if (length1 === 0) {\r\n              exit = true;\r\n              break;\r\n            }\r\n          }\r\n\r\n          array[dest--] = tmp[cursor2--];\r\n\r\n          if (--length2 === 1) {\r\n            exit = true;\r\n            break;\r\n          }\r\n\r\n          count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\r\n\r\n          if (count2 !== 0) {\r\n            dest -= count2;\r\n            cursor2 -= count2;\r\n            length2 -= count2;\r\n            customDest = dest + 1;\r\n            customCursor = cursor2 + 1;\r\n\r\n            for (i = 0; i < count2; i++) {\r\n              array[customDest + i] = tmp[customCursor + i];\r\n            }\r\n\r\n            if (length2 <= 1) {\r\n              exit = true;\r\n              break;\r\n            }\r\n          }\r\n\r\n          array[dest--] = array[cursor1--];\r\n\r\n          if (--length1 === 0) {\r\n            exit = true;\r\n            break;\r\n          }\r\n\r\n          _minGallop--;\r\n        } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\r\n\r\n        if (exit) {\r\n          break;\r\n        }\r\n\r\n        if (_minGallop < 0) {\r\n          _minGallop = 0;\r\n        }\r\n\r\n        _minGallop += 2;\r\n      }\r\n\r\n      minGallop = _minGallop;\r\n\r\n      if (minGallop < 1) {\r\n        minGallop = 1;\r\n      }\r\n\r\n      if (length2 === 1) {\r\n        dest -= length1;\r\n        cursor1 -= length1;\r\n        customDest = dest + 1;\r\n        customCursor = cursor1 + 1;\r\n\r\n        for (i = length1 - 1; i >= 0; i--) {\r\n          array[customDest + i] = array[customCursor + i];\r\n        }\r\n\r\n        array[dest] = tmp[cursor2];\r\n      } else if (length2 === 0) {\r\n        throw new Error();\r\n      } else {\r\n        customCursor = dest - (length2 - 1);\r\n\r\n        for (i = 0; i < length2; i++) {\r\n          array[customCursor + i] = tmp[i];\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      mergeRuns: mergeRuns,\r\n      forceMergeRuns: forceMergeRuns,\r\n      pushRun: pushRun\r\n    };\r\n  }\r\n\r\n  function sort(array, compare, lo, hi) {\r\n    if (!lo) {\r\n      lo = 0;\r\n    }\r\n\r\n    if (!hi) {\r\n      hi = array.length;\r\n    }\r\n\r\n    var remaining = hi - lo;\r\n\r\n    if (remaining < 2) {\r\n      return;\r\n    }\r\n\r\n    var runLength = 0;\r\n\r\n    if (remaining < DEFAULT_MIN_MERGE) {\r\n      runLength = makeAscendingRun(array, lo, hi, compare);\r\n      binaryInsertionSort(array, lo, hi, lo + runLength, compare);\r\n      return;\r\n    }\r\n\r\n    var ts = TimSort(array, compare);\r\n    var minRun = minRunLength(remaining);\r\n\r\n    do {\r\n      runLength = makeAscendingRun(array, lo, hi, compare);\r\n\r\n      if (runLength < minRun) {\r\n        var force = remaining;\r\n\r\n        if (force > minRun) {\r\n          force = minRun;\r\n        }\r\n\r\n        binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\r\n        runLength = force;\r\n      }\r\n\r\n      ts.pushRun(lo, runLength);\r\n      ts.mergeRuns();\r\n      remaining -= runLength;\r\n      lo += runLength;\r\n    } while (remaining !== 0);\r\n\r\n    ts.forceMergeRuns();\r\n  }\r\n\r\n  var invalidZErrorLogged = false;\r\n\r\n  function logInvalidZError() {\r\n    if (invalidZErrorLogged) {\r\n      return;\r\n    }\r\n\r\n    invalidZErrorLogged = true;\r\n    console.warn('z / z2 / zlevel of displayable is invalid, which may cause unexpected errors');\r\n  }\r\n\r\n  function shapeCompareFunc(a, b) {\r\n    if (a.zlevel === b.zlevel) {\r\n      if (a.z === b.z) {\r\n        return a.z2 - b.z2;\r\n      }\r\n\r\n      return a.z - b.z;\r\n    }\r\n\r\n    return a.zlevel - b.zlevel;\r\n  }\r\n\r\n  var Storage = function () {\r\n    function Storage() {\r\n      this._roots = [];\r\n      this._displayList = [];\r\n      this._displayListLen = 0;\r\n      this.displayableSortFunc = shapeCompareFunc;\r\n    }\r\n\r\n    Storage.prototype.traverse = function (cb, context) {\r\n      for (var i = 0; i < this._roots.length; i++) {\r\n        this._roots[i].traverse(cb, context);\r\n      }\r\n    };\r\n\r\n    Storage.prototype.getDisplayList = function (update, includeIgnore) {\r\n      includeIgnore = includeIgnore || false;\r\n      var displayList = this._displayList;\r\n\r\n      if (update || !displayList.length) {\r\n        this.updateDisplayList(includeIgnore);\r\n      }\r\n\r\n      return displayList;\r\n    };\r\n\r\n    Storage.prototype.updateDisplayList = function (includeIgnore) {\r\n      this._displayListLen = 0;\r\n      var roots = this._roots;\r\n      var displayList = this._displayList;\r\n\r\n      for (var i = 0, len = roots.length; i < len; i++) {\r\n        this._updateAndAddDisplayable(roots[i], null, includeIgnore);\r\n      }\r\n\r\n      displayList.length = this._displayListLen;\r\n      env.canvasSupported && sort(displayList, shapeCompareFunc);\r\n    };\r\n\r\n    Storage.prototype._updateAndAddDisplayable = function (el, clipPaths, includeIgnore) {\r\n      if (el.ignore && !includeIgnore) {\r\n        return;\r\n      }\r\n\r\n      el.beforeUpdate();\r\n      el.update();\r\n      el.afterUpdate();\r\n      var userSetClipPath = el.getClipPath();\r\n\r\n      if (el.ignoreClip) {\r\n        clipPaths = null;\r\n      } else if (userSetClipPath) {\r\n        if (clipPaths) {\r\n          clipPaths = clipPaths.slice();\r\n        } else {\r\n          clipPaths = [];\r\n        }\r\n\r\n        var currentClipPath = userSetClipPath;\r\n        var parentClipPath = el;\r\n\r\n        while (currentClipPath) {\r\n          currentClipPath.parent = parentClipPath;\r\n          currentClipPath.updateTransform();\r\n          clipPaths.push(currentClipPath);\r\n          parentClipPath = currentClipPath;\r\n          currentClipPath = currentClipPath.getClipPath();\r\n        }\r\n      }\r\n\r\n      if (el.childrenRef) {\r\n        var children = el.childrenRef();\r\n\r\n        for (var i = 0; i < children.length; i++) {\r\n          var child = children[i];\r\n\r\n          if (el.__dirty) {\r\n            child.__dirty |= Element.REDARAW_BIT;\r\n          }\r\n\r\n          this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\r\n        }\r\n\r\n        el.__dirty = 0;\r\n      } else {\r\n        var disp = el;\r\n\r\n        if (clipPaths && clipPaths.length) {\r\n          disp.__clipPaths = clipPaths;\r\n        } else if (disp.__clipPaths && disp.__clipPaths.length > 0) {\r\n          disp.__clipPaths = [];\r\n        }\r\n\r\n        if (isNaN(disp.z)) {\r\n          logInvalidZError();\r\n          disp.z = 0;\r\n        }\r\n\r\n        if (isNaN(disp.z2)) {\r\n          logInvalidZError();\r\n          disp.z2 = 0;\r\n        }\r\n\r\n        if (isNaN(disp.zlevel)) {\r\n          logInvalidZError();\r\n          disp.zlevel = 0;\r\n        }\r\n\r\n        this._displayList[this._displayListLen++] = disp;\r\n      }\r\n\r\n      var decalEl = el.getDecalElement && el.getDecalElement();\r\n\r\n      if (decalEl) {\r\n        this._updateAndAddDisplayable(decalEl, clipPaths, includeIgnore);\r\n      }\r\n\r\n      var textGuide = el.getTextGuideLine();\r\n\r\n      if (textGuide) {\r\n        this._updateAndAddDisplayable(textGuide, clipPaths, includeIgnore);\r\n      }\r\n\r\n      var textEl = el.getTextContent();\r\n\r\n      if (textEl) {\r\n        this._updateAndAddDisplayable(textEl, clipPaths, includeIgnore);\r\n      }\r\n    };\r\n\r\n    Storage.prototype.addRoot = function (el) {\r\n      if (el.__zr && el.__zr.storage === this) {\r\n        return;\r\n      }\r\n\r\n      this._roots.push(el);\r\n    };\r\n\r\n    Storage.prototype.delRoot = function (el) {\r\n      if (el instanceof Array) {\r\n        for (var i = 0, l = el.length; i < l; i++) {\r\n          this.delRoot(el[i]);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      var idx = indexOf$1(this._roots, el);\r\n\r\n      if (idx >= 0) {\r\n        this._roots.splice(idx, 1);\r\n      }\r\n    };\r\n\r\n    Storage.prototype.delAllRoots = function () {\r\n      this._roots = [];\r\n      this._displayList = [];\r\n      this._displayListLen = 0;\r\n      return;\r\n    };\r\n\r\n    Storage.prototype.getRoots = function () {\r\n      return this._roots;\r\n    };\r\n\r\n    Storage.prototype.dispose = function () {\r\n      this._displayList = null;\r\n      this._roots = null;\r\n    };\r\n\r\n    return Storage;\r\n  }();\r\n\r\n  var requestAnimationFrame;\r\n\r\n  requestAnimationFrame = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\r\n    return setTimeout(func, 16);\r\n  };\r\n\r\n  var requestAnimationFrame$1 = requestAnimationFrame;\r\n\r\n  var Animation = function (_super) {\r\n    __extends(Animation, _super);\r\n\r\n    function Animation(opts) {\r\n      var _this = _super.call(this) || this;\r\n\r\n      _this._running = false;\r\n      _this._time = 0;\r\n      _this._pausedTime = 0;\r\n      _this._pauseStart = 0;\r\n      _this._paused = false;\r\n      opts = opts || {};\r\n      _this.stage = opts.stage || {};\r\n\r\n      _this.onframe = opts.onframe || function () {};\r\n\r\n      return _this;\r\n    }\r\n\r\n    Animation.prototype.addClip = function (clip) {\r\n      if (clip.animation) {\r\n        this.removeClip(clip);\r\n      }\r\n\r\n      if (!this._clipsHead) {\r\n        this._clipsHead = this._clipsTail = clip;\r\n      } else {\r\n        this._clipsTail.next = clip;\r\n        clip.prev = this._clipsTail;\r\n        clip.next = null;\r\n        this._clipsTail = clip;\r\n      }\r\n\r\n      clip.animation = this;\r\n    };\r\n\r\n    Animation.prototype.addAnimator = function (animator) {\r\n      animator.animation = this;\r\n      var clip = animator.getClip();\r\n\r\n      if (clip) {\r\n        this.addClip(clip);\r\n      }\r\n    };\r\n\r\n    Animation.prototype.removeClip = function (clip) {\r\n      if (!clip.animation) {\r\n        return;\r\n      }\r\n\r\n      var prev = clip.prev;\r\n      var next = clip.next;\r\n\r\n      if (prev) {\r\n        prev.next = next;\r\n      } else {\r\n        this._clipsHead = next;\r\n      }\r\n\r\n      if (next) {\r\n        next.prev = prev;\r\n      } else {\r\n        this._clipsTail = prev;\r\n      }\r\n\r\n      clip.next = clip.prev = clip.animation = null;\r\n    };\r\n\r\n    Animation.prototype.removeAnimator = function (animator) {\r\n      var clip = animator.getClip();\r\n\r\n      if (clip) {\r\n        this.removeClip(clip);\r\n      }\r\n\r\n      animator.animation = null;\r\n    };\r\n\r\n    Animation.prototype.update = function (notTriggerFrameAndStageUpdate) {\r\n      var time = new Date().getTime() - this._pausedTime;\r\n\r\n      var delta = time - this._time;\r\n      var clip = this._clipsHead;\r\n\r\n      while (clip) {\r\n        var nextClip = clip.next;\r\n        var finished = clip.step(time, delta);\r\n\r\n        if (finished) {\r\n          clip.ondestroy && clip.ondestroy();\r\n          this.removeClip(clip);\r\n          clip = nextClip;\r\n        } else {\r\n          clip = nextClip;\r\n        }\r\n      }\r\n\r\n      this._time = time;\r\n\r\n      if (!notTriggerFrameAndStageUpdate) {\r\n        this.onframe(delta);\r\n        this.trigger('frame', delta);\r\n        this.stage.update && this.stage.update();\r\n      }\r\n    };\r\n\r\n    Animation.prototype._startLoop = function () {\r\n      var self = this;\r\n      this._running = true;\r\n\r\n      function step$$1() {\r\n        if (self._running) {\r\n          requestAnimationFrame$1(step$$1);\r\n          !self._paused && self.update();\r\n        }\r\n      }\r\n\r\n      requestAnimationFrame$1(step$$1);\r\n    };\r\n\r\n    Animation.prototype.start = function () {\r\n      if (this._running) {\r\n        return;\r\n      }\r\n\r\n      this._time = new Date().getTime();\r\n      this._pausedTime = 0;\r\n\r\n      this._startLoop();\r\n    };\r\n\r\n    Animation.prototype.stop = function () {\r\n      this._running = false;\r\n    };\r\n\r\n    Animation.prototype.pause = function () {\r\n      if (!this._paused) {\r\n        this._pauseStart = new Date().getTime();\r\n        this._paused = true;\r\n      }\r\n    };\r\n\r\n    Animation.prototype.resume = function () {\r\n      if (this._paused) {\r\n        this._pausedTime += new Date().getTime() - this._pauseStart;\r\n        this._paused = false;\r\n      }\r\n    };\r\n\r\n    Animation.prototype.clear = function () {\r\n      var clip = this._clipsHead;\r\n\r\n      while (clip) {\r\n        var nextClip = clip.next;\r\n        clip.prev = clip.next = clip.animation = null;\r\n        clip = nextClip;\r\n      }\r\n\r\n      this._clipsHead = this._clipsTail = null;\r\n    };\r\n\r\n    Animation.prototype.isFinished = function () {\r\n      return this._clipsHead == null;\r\n    };\r\n\r\n    Animation.prototype.animate = function (target, options) {\r\n      options = options || {};\r\n      this.start();\r\n      var animator = new Animator(target, options.loop);\r\n      this.addAnimator(animator);\r\n      return animator;\r\n    };\r\n\r\n    return Animation;\r\n  }(Eventful);\r\n\r\n  var TOUCH_CLICK_DELAY = 300;\r\n  var globalEventSupported = env.domSupported;\r\n\r\n  var localNativeListenerNames = function () {\r\n    var mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'wheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\r\n    var touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\r\n    var pointerEventNameMap = {\r\n      pointerdown: 1,\r\n      pointerup: 1,\r\n      pointermove: 1,\r\n      pointerout: 1\r\n    };\r\n    var pointerHandlerNames = map(mouseHandlerNames, function (name) {\r\n      var nm = name.replace('mouse', 'pointer');\r\n      return pointerEventNameMap.hasOwnProperty(nm) ? nm : name;\r\n    });\r\n    return {\r\n      mouse: mouseHandlerNames,\r\n      touch: touchHandlerNames,\r\n      pointer: pointerHandlerNames\r\n    };\r\n  }();\r\n\r\n  var globalNativeListenerNames = {\r\n    mouse: ['mousemove', 'mouseup'],\r\n    pointer: ['pointermove', 'pointerup']\r\n  };\r\n  var wheelEventSupported = false;\r\n\r\n  function isPointerFromTouch(event) {\r\n    var pointerType = event.pointerType;\r\n    return pointerType === 'pen' || pointerType === 'touch';\r\n  }\r\n\r\n  function setTouchTimer(scope) {\r\n    scope.touching = true;\r\n\r\n    if (scope.touchTimer != null) {\r\n      clearTimeout(scope.touchTimer);\r\n      scope.touchTimer = null;\r\n    }\r\n\r\n    scope.touchTimer = setTimeout(function () {\r\n      scope.touching = false;\r\n      scope.touchTimer = null;\r\n    }, 700);\r\n  }\r\n\r\n  function markTouch(event) {\r\n    event && (event.zrByTouch = true);\r\n  }\r\n\r\n  function normalizeGlobalEvent(instance, event) {\r\n    return normalizeEvent(instance.dom, new FakeGlobalEvent(instance, event), true);\r\n  }\r\n\r\n  function isLocalEl(instance, el) {\r\n    var elTmp = el;\r\n    var isLocal = false;\r\n\r\n    while (elTmp && elTmp.nodeType !== 9 && !(isLocal = elTmp.domBelongToZr || elTmp !== el && elTmp === instance.painterRoot)) {\r\n      elTmp = elTmp.parentNode;\r\n    }\r\n\r\n    return isLocal;\r\n  }\r\n\r\n  var FakeGlobalEvent = function () {\r\n    function FakeGlobalEvent(instance, event) {\r\n      this.stopPropagation = noop;\r\n      this.stopImmediatePropagation = noop;\r\n      this.preventDefault = noop;\r\n      this.type = event.type;\r\n      this.target = this.currentTarget = instance.dom;\r\n      this.pointerType = event.pointerType;\r\n      this.clientX = event.clientX;\r\n      this.clientY = event.clientY;\r\n    }\r\n\r\n    return FakeGlobalEvent;\r\n  }();\r\n\r\n  var localDOMHandlers = {\r\n    mousedown: function (event) {\r\n      event = normalizeEvent(this.dom, event);\r\n      this.__mayPointerCapture = [event.zrX, event.zrY];\r\n      this.trigger('mousedown', event);\r\n    },\r\n    mousemove: function (event) {\r\n      event = normalizeEvent(this.dom, event);\r\n      var downPoint = this.__mayPointerCapture;\r\n\r\n      if (downPoint && (event.zrX !== downPoint[0] || event.zrY !== downPoint[1])) {\r\n        this.__togglePointerCapture(true);\r\n      }\r\n\r\n      this.trigger('mousemove', event);\r\n    },\r\n    mouseup: function (event) {\r\n      event = normalizeEvent(this.dom, event);\r\n\r\n      this.__togglePointerCapture(false);\r\n\r\n      this.trigger('mouseup', event);\r\n    },\r\n    mouseout: function (event) {\r\n      event = normalizeEvent(this.dom, event);\r\n      var element = event.toElement || event.relatedTarget;\r\n\r\n      if (!isLocalEl(this, element)) {\r\n        if (this.__pointerCapturing) {\r\n          event.zrEventControl = 'no_globalout';\r\n        }\r\n\r\n        this.trigger('mouseout', event);\r\n      }\r\n    },\r\n    wheel: function (event) {\r\n      wheelEventSupported = true;\r\n      event = normalizeEvent(this.dom, event);\r\n      this.trigger('mousewheel', event);\r\n    },\r\n    mousewheel: function (event) {\r\n      if (wheelEventSupported) {\r\n        return;\r\n      }\r\n\r\n      event = normalizeEvent(this.dom, event);\r\n      this.trigger('mousewheel', event);\r\n    },\r\n    touchstart: function (event) {\r\n      event = normalizeEvent(this.dom, event);\r\n      markTouch(event);\r\n      this.__lastTouchMoment = new Date();\r\n      this.handler.processGesture(event, 'start');\r\n      localDOMHandlers.mousemove.call(this, event);\r\n      localDOMHandlers.mousedown.call(this, event);\r\n    },\r\n    touchmove: function (event) {\r\n      event = normalizeEvent(this.dom, event);\r\n      markTouch(event);\r\n      this.handler.processGesture(event, 'change');\r\n      localDOMHandlers.mousemove.call(this, event);\r\n    },\r\n    touchend: function (event) {\r\n      event = normalizeEvent(this.dom, event);\r\n      markTouch(event);\r\n      this.handler.processGesture(event, 'end');\r\n      localDOMHandlers.mouseup.call(this, event);\r\n\r\n      if (+new Date() - +this.__lastTouchMoment < TOUCH_CLICK_DELAY) {\r\n        localDOMHandlers.click.call(this, event);\r\n      }\r\n    },\r\n    pointerdown: function (event) {\r\n      localDOMHandlers.mousedown.call(this, event);\r\n    },\r\n    pointermove: function (event) {\r\n      if (!isPointerFromTouch(event)) {\r\n        localDOMHandlers.mousemove.call(this, event);\r\n      }\r\n    },\r\n    pointerup: function (event) {\r\n      localDOMHandlers.mouseup.call(this, event);\r\n    },\r\n    pointerout: function (event) {\r\n      if (!isPointerFromTouch(event)) {\r\n        localDOMHandlers.mouseout.call(this, event);\r\n      }\r\n    }\r\n  };\r\n  each$1(['click', 'dblclick', 'contextmenu'], function (name) {\r\n    localDOMHandlers[name] = function (event) {\r\n      event = normalizeEvent(this.dom, event);\r\n      this.trigger(name, event);\r\n    };\r\n  });\r\n  var globalDOMHandlers = {\r\n    pointermove: function (event) {\r\n      if (!isPointerFromTouch(event)) {\r\n        globalDOMHandlers.mousemove.call(this, event);\r\n      }\r\n    },\r\n    pointerup: function (event) {\r\n      globalDOMHandlers.mouseup.call(this, event);\r\n    },\r\n    mousemove: function (event) {\r\n      this.trigger('mousemove', event);\r\n    },\r\n    mouseup: function (event) {\r\n      var pointerCaptureReleasing = this.__pointerCapturing;\r\n\r\n      this.__togglePointerCapture(false);\r\n\r\n      this.trigger('mouseup', event);\r\n\r\n      if (pointerCaptureReleasing) {\r\n        event.zrEventControl = 'only_globalout';\r\n        this.trigger('mouseout', event);\r\n      }\r\n    }\r\n  };\r\n\r\n  function mountLocalDOMEventListeners(instance, scope) {\r\n    var domHandlers = scope.domHandlers;\r\n\r\n    if (env.pointerEventsSupported) {\r\n      each$1(localNativeListenerNames.pointer, function (nativeEventName) {\r\n        mountSingleDOMEventListener(scope, nativeEventName, function (event) {\r\n          domHandlers[nativeEventName].call(instance, event);\r\n        });\r\n      });\r\n    } else {\r\n      if (env.touchEventsSupported) {\r\n        each$1(localNativeListenerNames.touch, function (nativeEventName) {\r\n          mountSingleDOMEventListener(scope, nativeEventName, function (event) {\r\n            domHandlers[nativeEventName].call(instance, event);\r\n            setTouchTimer(scope);\r\n          });\r\n        });\r\n      }\r\n\r\n      each$1(localNativeListenerNames.mouse, function (nativeEventName) {\r\n        mountSingleDOMEventListener(scope, nativeEventName, function (event) {\r\n          event = getNativeEvent(event);\r\n\r\n          if (!scope.touching) {\r\n            domHandlers[nativeEventName].call(instance, event);\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  function mountGlobalDOMEventListeners(instance, scope) {\r\n    if (env.pointerEventsSupported) {\r\n      each$1(globalNativeListenerNames.pointer, mount);\r\n    } else if (!env.touchEventsSupported) {\r\n      each$1(globalNativeListenerNames.mouse, mount);\r\n    }\r\n\r\n    function mount(nativeEventName) {\r\n      function nativeEventListener(event) {\r\n        event = getNativeEvent(event);\r\n\r\n        if (!isLocalEl(instance, event.target)) {\r\n          event = normalizeGlobalEvent(instance, event);\r\n          scope.domHandlers[nativeEventName].call(instance, event);\r\n        }\r\n      }\r\n\r\n      mountSingleDOMEventListener(scope, nativeEventName, nativeEventListener, {\r\n        capture: true\r\n      });\r\n    }\r\n  }\r\n\r\n  function mountSingleDOMEventListener(scope, nativeEventName, listener, opt) {\r\n    scope.mounted[nativeEventName] = listener;\r\n    scope.listenerOpts[nativeEventName] = opt;\r\n    addEventListener(scope.domTarget, nativeEventName, listener, opt);\r\n  }\r\n\r\n  function unmountDOMEventListeners(scope) {\r\n    var mounted = scope.mounted;\r\n\r\n    for (var nativeEventName in mounted) {\r\n      if (mounted.hasOwnProperty(nativeEventName)) {\r\n        removeEventListener(scope.domTarget, nativeEventName, mounted[nativeEventName], scope.listenerOpts[nativeEventName]);\r\n      }\r\n    }\r\n\r\n    scope.mounted = {};\r\n  }\r\n\r\n  var DOMHandlerScope = function () {\r\n    function DOMHandlerScope(domTarget, domHandlers) {\r\n      this.mounted = {};\r\n      this.listenerOpts = {};\r\n      this.touching = false;\r\n      this.domTarget = domTarget;\r\n      this.domHandlers = domHandlers;\r\n    }\r\n\r\n    return DOMHandlerScope;\r\n  }();\r\n\r\n  var HandlerDomProxy = function (_super) {\r\n    __extends(HandlerDomProxy, _super);\r\n\r\n    function HandlerDomProxy(dom, painterRoot) {\r\n      var _this = _super.call(this) || this;\r\n\r\n      _this.__pointerCapturing = false;\r\n      _this.dom = dom;\r\n      _this.painterRoot = painterRoot;\r\n      _this._localHandlerScope = new DOMHandlerScope(dom, localDOMHandlers);\r\n\r\n      if (globalEventSupported) {\r\n        _this._globalHandlerScope = new DOMHandlerScope(document, globalDOMHandlers);\r\n      }\r\n\r\n      mountLocalDOMEventListeners(_this, _this._localHandlerScope);\r\n      return _this;\r\n    }\r\n\r\n    HandlerDomProxy.prototype.dispose = function () {\r\n      unmountDOMEventListeners(this._localHandlerScope);\r\n\r\n      if (globalEventSupported) {\r\n        unmountDOMEventListeners(this._globalHandlerScope);\r\n      }\r\n    };\r\n\r\n    HandlerDomProxy.prototype.setCursor = function (cursorStyle) {\r\n      this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\r\n    };\r\n\r\n    HandlerDomProxy.prototype.__togglePointerCapture = function (isPointerCapturing) {\r\n      this.__mayPointerCapture = null;\r\n\r\n      if (globalEventSupported && +this.__pointerCapturing ^ +isPointerCapturing) {\r\n        this.__pointerCapturing = isPointerCapturing;\r\n        var globalHandlerScope = this._globalHandlerScope;\r\n        isPointerCapturing ? mountGlobalDOMEventListeners(this, globalHandlerScope) : unmountDOMEventListeners(globalHandlerScope);\r\n      }\r\n    };\r\n\r\n    return HandlerDomProxy;\r\n  }(Eventful);\r\n\r\n  var Group = function (_super) {\r\n    __extends(Group, _super);\r\n\r\n    function Group(opts) {\r\n      var _this = _super.call(this) || this;\r\n\r\n      _this.isGroup = true;\r\n      _this._children = [];\r\n\r\n      _this.attr(opts);\r\n\r\n      return _this;\r\n    }\r\n\r\n    Group.prototype.childrenRef = function () {\r\n      return this._children;\r\n    };\r\n\r\n    Group.prototype.children = function () {\r\n      return this._children.slice();\r\n    };\r\n\r\n    Group.prototype.childAt = function (idx) {\r\n      return this._children[idx];\r\n    };\r\n\r\n    Group.prototype.childOfName = function (name) {\r\n      var children = this._children;\r\n\r\n      for (var i = 0; i < children.length; i++) {\r\n        if (children[i].name === name) {\r\n          return children[i];\r\n        }\r\n      }\r\n    };\r\n\r\n    Group.prototype.childCount = function () {\r\n      return this._children.length;\r\n    };\r\n\r\n    Group.prototype.add = function (child) {\r\n      if (child) {\r\n        if (child !== this && child.parent !== this) {\r\n          this._children.push(child);\r\n\r\n          this._doAdd(child);\r\n        }\r\n\r\n        if (child.__hostTarget) {\r\n          throw 'This elemenet has been used as an attachment';\r\n        }\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    Group.prototype.addBefore = function (child, nextSibling) {\r\n      if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\r\n        var children = this._children;\r\n        var idx = children.indexOf(nextSibling);\r\n\r\n        if (idx >= 0) {\r\n          children.splice(idx, 0, child);\r\n\r\n          this._doAdd(child);\r\n        }\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    Group.prototype.replaceAt = function (child, index) {\r\n      var children = this._children;\r\n      var old = children[index];\r\n\r\n      if (child && child !== this && child.parent !== this && child !== old) {\r\n        children[index] = child;\r\n        old.parent = null;\r\n        var zr = this.__zr;\r\n\r\n        if (zr) {\r\n          old.removeSelfFromZr(zr);\r\n        }\r\n\r\n        this._doAdd(child);\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    Group.prototype._doAdd = function (child) {\r\n      if (child.parent) {\r\n        child.parent.remove(child);\r\n      }\r\n\r\n      child.parent = this;\r\n      var zr = this.__zr;\r\n\r\n      if (zr && zr !== child.__zr) {\r\n        child.addSelfToZr(zr);\r\n      }\r\n\r\n      zr && zr.refresh();\r\n    };\r\n\r\n    Group.prototype.remove = function (child) {\r\n      var zr = this.__zr;\r\n      var children = this._children;\r\n      var idx = indexOf$1(children, child);\r\n\r\n      if (idx < 0) {\r\n        return this;\r\n      }\r\n\r\n      children.splice(idx, 1);\r\n      child.parent = null;\r\n\r\n      if (zr) {\r\n        child.removeSelfFromZr(zr);\r\n      }\r\n\r\n      zr && zr.refresh();\r\n      return this;\r\n    };\r\n\r\n    Group.prototype.removeAll = function () {\r\n      var children = this._children;\r\n      var zr = this.__zr;\r\n\r\n      for (var i = 0; i < children.length; i++) {\r\n        var child = children[i];\r\n\r\n        if (zr) {\r\n          child.removeSelfFromZr(zr);\r\n        }\r\n\r\n        child.parent = null;\r\n      }\r\n\r\n      children.length = 0;\r\n      return this;\r\n    };\r\n\r\n    Group.prototype.eachChild = function (cb, context) {\r\n      var children = this._children;\r\n\r\n      for (var i = 0; i < children.length; i++) {\r\n        var child = children[i];\r\n        cb.call(context, child, i);\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    Group.prototype.traverse = function (cb, context) {\r\n      for (var i = 0; i < this._children.length; i++) {\r\n        var child = this._children[i];\r\n        var stopped = cb.call(context, child);\r\n\r\n        if (child.isGroup && !stopped) {\r\n          child.traverse(cb, context);\r\n        }\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    Group.prototype.addSelfToZr = function (zr) {\r\n      _super.prototype.addSelfToZr.call(this, zr);\r\n\r\n      for (var i = 0; i < this._children.length; i++) {\r\n        var child = this._children[i];\r\n        child.addSelfToZr(zr);\r\n      }\r\n    };\r\n\r\n    Group.prototype.removeSelfFromZr = function (zr) {\r\n      _super.prototype.removeSelfFromZr.call(this, zr);\r\n\r\n      for (var i = 0; i < this._children.length; i++) {\r\n        var child = this._children[i];\r\n        child.removeSelfFromZr(zr);\r\n      }\r\n    };\r\n\r\n    Group.prototype.getBoundingRect = function (includeChildren) {\r\n      var tmpRect = new BoundingRect(0, 0, 0, 0);\r\n      var children = includeChildren || this._children;\r\n      var tmpMat = [];\r\n      var rect = null;\r\n\r\n      for (var i = 0; i < children.length; i++) {\r\n        var child = children[i];\r\n\r\n        if (child.ignore || child.invisible) {\r\n          continue;\r\n        }\r\n\r\n        var childRect = child.getBoundingRect();\r\n        var transform = child.getLocalTransform(tmpMat);\r\n\r\n        if (transform) {\r\n          BoundingRect.applyTransform(tmpRect, childRect, transform);\r\n          rect = rect || tmpRect.clone();\r\n          rect.union(tmpRect);\r\n        } else {\r\n          rect = rect || childRect.clone();\r\n          rect.union(childRect);\r\n        }\r\n      }\r\n\r\n      return rect || tmpRect;\r\n    };\r\n\r\n    return Group;\r\n  }(Element);\r\n\r\n  Group.prototype.type = 'group';\r\n  /*!\r\n  * ZRender, a high performance 2d drawing library.\r\n  *\r\n  * Copyright (c) 2013, Baidu Inc.\r\n  * All rights reserved.\r\n  *\r\n  * LICENSE\r\n  * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\r\n  */\r\n\r\n  var useVML = !env.canvasSupported;\r\n  var painterCtors = {};\r\n  var instances$1 = {};\r\n\r\n  function delInstance(id) {\r\n    delete instances$1[id];\r\n  }\r\n\r\n  function isDarkMode(backgroundColor) {\r\n    if (!backgroundColor) {\r\n      return false;\r\n    }\r\n\r\n    if (typeof backgroundColor === 'string') {\r\n      return lum(backgroundColor, 1) < DARK_MODE_THRESHOLD;\r\n    } else if (backgroundColor.colorStops) {\r\n      var colorStops = backgroundColor.colorStops;\r\n      var totalLum = 0;\r\n      var len = colorStops.length;\r\n\r\n      for (var i = 0; i < len; i++) {\r\n        totalLum += lum(colorStops[i].color, 1);\r\n      }\r\n\r\n      totalLum /= len;\r\n      return totalLum < DARK_MODE_THRESHOLD;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  var ZRender = function () {\r\n    function ZRender(id, dom, opts) {\r\n      var _this = this;\r\n\r\n      this._sleepAfterStill = 10;\r\n      this._stillFrameAccum = 0;\r\n      this._needsRefresh = true;\r\n      this._needsRefreshHover = true;\r\n      this._darkMode = false;\r\n      opts = opts || {};\r\n      this.dom = dom;\r\n      this.id = id;\r\n      var storage = new Storage();\r\n      var rendererType = opts.renderer || 'canvas';\r\n\r\n      if (useVML) {\r\n        throw new Error('IE8 support has been dropped since 5.0');\r\n      }\r\n\r\n      if (!painterCtors[rendererType]) {\r\n        rendererType = keys(painterCtors)[0];\r\n      }\r\n\r\n      if (!painterCtors[rendererType]) {\r\n        throw new Error(\"Renderer '\" + rendererType + \"' is not imported. Please import it first.\");\r\n      }\r\n\r\n      opts.useDirtyRect = opts.useDirtyRect == null ? false : opts.useDirtyRect;\r\n      var painter = new painterCtors[rendererType](dom, storage, opts, id);\r\n      this.storage = storage;\r\n      this.painter = painter;\r\n      var handerProxy = !env.node && !env.worker ? new HandlerDomProxy(painter.getViewportRoot(), painter.root) : null;\r\n      this.handler = new Handler(storage, painter, handerProxy, painter.root);\r\n      this.animation = new Animation({\r\n        stage: {\r\n          update: function () {\r\n            return _this._flush(true);\r\n          }\r\n        }\r\n      });\r\n      this.animation.start();\r\n    }\r\n\r\n    ZRender.prototype.add = function (el) {\r\n      if (!el) {\r\n        return;\r\n      }\r\n\r\n      this.storage.addRoot(el);\r\n      el.addSelfToZr(this);\r\n      this.refresh();\r\n    };\r\n\r\n    ZRender.prototype.remove = function (el) {\r\n      if (!el) {\r\n        return;\r\n      }\r\n\r\n      this.storage.delRoot(el);\r\n      el.removeSelfFromZr(this);\r\n      this.refresh();\r\n    };\r\n\r\n    ZRender.prototype.configLayer = function (zLevel, config) {\r\n      if (this.painter.configLayer) {\r\n        this.painter.configLayer(zLevel, config);\r\n      }\r\n\r\n      this.refresh();\r\n    };\r\n\r\n    ZRender.prototype.setBackgroundColor = function (backgroundColor) {\r\n      if (this.painter.setBackgroundColor) {\r\n        this.painter.setBackgroundColor(backgroundColor);\r\n      }\r\n\r\n      this.refresh();\r\n      this._backgroundColor = backgroundColor;\r\n      this._darkMode = isDarkMode(backgroundColor);\r\n    };\r\n\r\n    ZRender.prototype.getBackgroundColor = function () {\r\n      return this._backgroundColor;\r\n    };\r\n\r\n    ZRender.prototype.setDarkMode = function (darkMode) {\r\n      this._darkMode = darkMode;\r\n    };\r\n\r\n    ZRender.prototype.isDarkMode = function () {\r\n      return this._darkMode;\r\n    };\r\n\r\n    ZRender.prototype.refreshImmediately = function (fromInside) {\r\n      if (!fromInside) {\r\n        this.animation.update(true);\r\n      }\r\n\r\n      this._needsRefresh = false;\r\n      this.painter.refresh();\r\n      this._needsRefresh = false;\r\n    };\r\n\r\n    ZRender.prototype.refresh = function () {\r\n      this._needsRefresh = true;\r\n      this.animation.start();\r\n    };\r\n\r\n    ZRender.prototype.flush = function () {\r\n      this._flush(false);\r\n    };\r\n\r\n    ZRender.prototype._flush = function (fromInside) {\r\n      var triggerRendered;\r\n      var start = new Date().getTime();\r\n\r\n      if (this._needsRefresh) {\r\n        triggerRendered = true;\r\n        this.refreshImmediately(fromInside);\r\n      }\r\n\r\n      if (this._needsRefreshHover) {\r\n        triggerRendered = true;\r\n        this.refreshHoverImmediately();\r\n      }\r\n\r\n      var end = new Date().getTime();\r\n\r\n      if (triggerRendered) {\r\n        this._stillFrameAccum = 0;\r\n        this.trigger('rendered', {\r\n          elapsedTime: end - start\r\n        });\r\n      } else if (this._sleepAfterStill > 0) {\r\n        this._stillFrameAccum++;\r\n\r\n        if (this._stillFrameAccum > this._sleepAfterStill) {\r\n          this.animation.stop();\r\n        }\r\n      }\r\n    };\r\n\r\n    ZRender.prototype.setSleepAfterStill = function (stillFramesCount) {\r\n      this._sleepAfterStill = stillFramesCount;\r\n    };\r\n\r\n    ZRender.prototype.wakeUp = function () {\r\n      this.animation.start();\r\n      this._stillFrameAccum = 0;\r\n    };\r\n\r\n    ZRender.prototype.addHover = function (el) {};\r\n\r\n    ZRender.prototype.removeHover = function (el) {};\r\n\r\n    ZRender.prototype.clearHover = function () {};\r\n\r\n    ZRender.prototype.refreshHover = function () {\r\n      this._needsRefreshHover = true;\r\n    };\r\n\r\n    ZRender.prototype.refreshHoverImmediately = function () {\r\n      this._needsRefreshHover = false;\r\n\r\n      if (this.painter.refreshHover && this.painter.getType() === 'canvas') {\r\n        this.painter.refreshHover();\r\n      }\r\n    };\r\n\r\n    ZRender.prototype.resize = function (opts) {\r\n      opts = opts || {};\r\n      this.painter.resize(opts.width, opts.height);\r\n      this.handler.resize();\r\n    };\r\n\r\n    ZRender.prototype.clearAnimation = function () {\r\n      this.animation.clear();\r\n    };\r\n\r\n    ZRender.prototype.getWidth = function () {\r\n      return this.painter.getWidth();\r\n    };\r\n\r\n    ZRender.prototype.getHeight = function () {\r\n      return this.painter.getHeight();\r\n    };\r\n\r\n    ZRender.prototype.pathToImage = function (e, dpr) {\r\n      if (this.painter.pathToImage) {\r\n        return this.painter.pathToImage(e, dpr);\r\n      }\r\n    };\r\n\r\n    ZRender.prototype.setCursorStyle = function (cursorStyle) {\r\n      this.handler.setCursorStyle(cursorStyle);\r\n    };\r\n\r\n    ZRender.prototype.findHover = function (x, y) {\r\n      return this.handler.findHover(x, y);\r\n    };\r\n\r\n    ZRender.prototype.on = function (eventName, eventHandler, context) {\r\n      this.handler.on(eventName, eventHandler, context);\r\n      return this;\r\n    };\r\n\r\n    ZRender.prototype.off = function (eventName, eventHandler) {\r\n      this.handler.off(eventName, eventHandler);\r\n    };\r\n\r\n    ZRender.prototype.trigger = function (eventName, event) {\r\n      this.handler.trigger(eventName, event);\r\n    };\r\n\r\n    ZRender.prototype.clear = function () {\r\n      var roots = this.storage.getRoots();\r\n\r\n      for (var i = 0; i < roots.length; i++) {\r\n        if (roots[i] instanceof Group) {\r\n          roots[i].removeSelfFromZr(this);\r\n        }\r\n      }\r\n\r\n      this.storage.delAllRoots();\r\n      this.painter.clear();\r\n    };\r\n\r\n    ZRender.prototype.dispose = function () {\r\n      this.animation.stop();\r\n      this.clear();\r\n      this.storage.dispose();\r\n      this.painter.dispose();\r\n      this.handler.dispose();\r\n      this.animation = this.storage = this.painter = this.handler = null;\r\n      delInstance(this.id);\r\n    };\r\n\r\n    return ZRender;\r\n  }();\r\n\r\n  function init$1(dom, opts) {\r\n    var zr = new ZRender(guid(), dom, opts);\r\n    instances$1[zr.id] = zr;\r\n    return zr;\r\n  }\r\n\r\n  function dispose$1(zr) {\r\n    zr.dispose();\r\n  }\r\n\r\n  function disposeAll() {\r\n    for (var key in instances$1) {\r\n      if (instances$1.hasOwnProperty(key)) {\r\n        instances$1[key].dispose();\r\n      }\r\n    }\r\n\r\n    instances$1 = {};\r\n  }\r\n\r\n  function getInstance(id) {\r\n    return instances$1[id];\r\n  }\r\n\r\n  function registerPainter(name, Ctor) {\r\n    painterCtors[name] = Ctor;\r\n  }\r\n\r\n  var version$1 = '5.0.4';\r\n  var zrender = (Object.freeze || Object)({\r\n    init: init$1,\r\n    dispose: dispose$1,\r\n    disposeAll: disposeAll,\r\n    getInstance: getInstance,\r\n    registerPainter: registerPainter,\r\n    version: version$1\r\n  });\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /*\r\n  * A third-party license is embeded for some of the code in this file:\r\n  * The method \"quantile\" was copied from \"d3.js\".\r\n  * (See more details in the comment of the method below.)\r\n  * The use of the source code of this file is also subject to the terms\r\n  * and consitions of the license of \"d3.js\" (BSD-3Clause, see\r\n  * </licenses/LICENSE-d3>).\r\n  */\r\n\r\n  var RADIAN_EPSILON = 1e-4;\r\n\r\n  function _trim(str) {\r\n    return str.replace(/^\\s+|\\s+$/g, '');\r\n  }\r\n  /**\r\n   * Linear mapping a value from domain to range\r\n   * @param  val\r\n   * @param  domain Domain extent domain[0] can be bigger than domain[1]\r\n   * @param  range  Range extent range[0] can be bigger than range[1]\r\n   * @param  clamp Default to be false\r\n   */\r\n\r\n\r\n  function linearMap(val, domain, range, clamp) {\r\n    var subDomain = domain[1] - domain[0];\r\n    var subRange = range[1] - range[0];\r\n\r\n    if (subDomain === 0) {\r\n      return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\r\n    } // Avoid accuracy problem in edge, such as\r\n    // 146.39 - 62.83 === 83.55999999999999.\r\n    // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\r\n    // It is a little verbose for efficiency considering this method\r\n    // is a hotspot.\r\n\r\n\r\n    if (clamp) {\r\n      if (subDomain > 0) {\r\n        if (val <= domain[0]) {\r\n          return range[0];\r\n        } else if (val >= domain[1]) {\r\n          return range[1];\r\n        }\r\n      } else {\r\n        if (val >= domain[0]) {\r\n          return range[0];\r\n        } else if (val <= domain[1]) {\r\n          return range[1];\r\n        }\r\n      }\r\n    } else {\r\n      if (val === domain[0]) {\r\n        return range[0];\r\n      }\r\n\r\n      if (val === domain[1]) {\r\n        return range[1];\r\n      }\r\n    }\r\n\r\n    return (val - domain[0]) / subDomain * subRange + range[0];\r\n  }\r\n  /**\r\n   * Convert a percent string to absolute number.\r\n   * Returns NaN if percent is not a valid string or number\r\n   */\r\n\r\n\r\n  function parsePercent$1(percent, all) {\r\n    switch (percent) {\r\n      case 'center':\r\n      case 'middle':\r\n        percent = '50%';\r\n        break;\r\n\r\n      case 'left':\r\n      case 'top':\r\n        percent = '0%';\r\n        break;\r\n\r\n      case 'right':\r\n      case 'bottom':\r\n        percent = '100%';\r\n        break;\r\n    }\r\n\r\n    if (typeof percent === 'string') {\r\n      if (_trim(percent).match(/%$/)) {\r\n        return parseFloat(percent) / 100 * all;\r\n      }\r\n\r\n      return parseFloat(percent);\r\n    }\r\n\r\n    return percent == null ? NaN : +percent;\r\n  }\r\n\r\n  function round(x, precision, returnStr) {\r\n    if (precision == null) {\r\n      precision = 10;\r\n    } // Avoid range error\r\n\r\n\r\n    precision = Math.min(Math.max(0, precision), 20);\r\n    x = (+x).toFixed(precision);\r\n    return returnStr ? x : +x;\r\n  }\r\n  /**\r\n   * Inplacd asc sort arr.\r\n   * The input arr will be modified.\r\n   */\r\n\r\n\r\n  function asc(arr) {\r\n    arr.sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n    return arr;\r\n  }\r\n  /**\r\n   * Get precision\r\n   */\r\n\r\n\r\n  function getPrecision(val) {\r\n    val = +val;\r\n\r\n    if (isNaN(val)) {\r\n      return 0;\r\n    } // It is much faster than methods converting number to string as follows\r\n    //      let tmp = val.toString();\r\n    //      return tmp.length - 1 - tmp.indexOf('.');\r\n    // especially when precision is low\r\n\r\n\r\n    var e = 1;\r\n    var count = 0;\r\n\r\n    while (Math.round(val * e) / e !== val) {\r\n      e *= 10;\r\n      count++;\r\n    }\r\n\r\n    return count;\r\n  }\r\n  /**\r\n   * Get precision with slow but safe method\r\n   */\r\n\r\n\r\n  function getPrecisionSafe(val) {\r\n    var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\r\n\r\n    var eIndex = str.indexOf('e');\r\n\r\n    if (eIndex > 0) {\r\n      var precision = +str.slice(eIndex + 1);\r\n      return precision < 0 ? -precision : 0;\r\n    } else {\r\n      var dotIndex = str.indexOf('.');\r\n      return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\r\n    }\r\n  }\r\n  /**\r\n   * Minimal dicernible data precisioin according to a single pixel.\r\n   */\r\n\r\n\r\n  function getPixelPrecision(dataExtent, pixelExtent) {\r\n    var log = Math.log;\r\n    var LN10 = Math.LN10;\r\n    var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\r\n    var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\r\n\r\n    var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\r\n    return !isFinite(precision) ? 20 : precision;\r\n  }\r\n  /**\r\n   * Get a data of given precision, assuring the sum of percentages\r\n   * in valueList is 1.\r\n   * The largest remainer method is used.\r\n   * https://en.wikipedia.org/wiki/Largest_remainder_method\r\n   *\r\n   * @param valueList a list of all data\r\n   * @param idx index of the data to be processed in valueList\r\n   * @param precision integer number showing digits of precision\r\n   * @return percent ranging from 0 to 100\r\n   */\r\n\r\n\r\n  function getPercentWithPrecision(valueList, idx, precision) {\r\n    if (!valueList[idx]) {\r\n      return 0;\r\n    }\r\n\r\n    var sum = reduce(valueList, function (acc, val) {\r\n      return acc + (isNaN(val) ? 0 : val);\r\n    }, 0);\r\n\r\n    if (sum === 0) {\r\n      return 0;\r\n    }\r\n\r\n    var digits = Math.pow(10, precision);\r\n    var votesPerQuota = map(valueList, function (val) {\r\n      return (isNaN(val) ? 0 : val) / sum * digits * 100;\r\n    });\r\n    var targetSeats = digits * 100;\r\n    var seats = map(votesPerQuota, function (votes) {\r\n      // Assign automatic seats.\r\n      return Math.floor(votes);\r\n    });\r\n    var currentSum = reduce(seats, function (acc, val) {\r\n      return acc + val;\r\n    }, 0);\r\n    var remainder = map(votesPerQuota, function (votes, idx) {\r\n      return votes - seats[idx];\r\n    }); // Has remainding votes.\r\n\r\n    while (currentSum < targetSeats) {\r\n      // Find next largest remainder.\r\n      var max = Number.NEGATIVE_INFINITY;\r\n      var maxId = null;\r\n\r\n      for (var i = 0, len = remainder.length; i < len; ++i) {\r\n        if (remainder[i] > max) {\r\n          max = remainder[i];\r\n          maxId = i;\r\n        }\r\n      } // Add a vote to max remainder.\r\n\r\n\r\n      ++seats[maxId];\r\n      remainder[maxId] = 0;\r\n      ++currentSum;\r\n    }\r\n\r\n    return seats[idx] / digits;\r\n  } // Number.MAX_SAFE_INTEGER, ie do not support.\r\n\r\n\r\n  var MAX_SAFE_INTEGER = 9007199254740991;\r\n  /**\r\n   * To 0 - 2 * PI, considering negative radian.\r\n   */\r\n\r\n  function remRadian(radian) {\r\n    var pi2 = Math.PI * 2;\r\n    return (radian % pi2 + pi2) % pi2;\r\n  }\r\n  /**\r\n   * @param {type} radian\r\n   * @return {boolean}\r\n   */\r\n\r\n\r\n  function isRadianAroundZero(val) {\r\n    return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\r\n  } // eslint-disable-next-line\r\n\r\n\r\n  var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d{1,2})(?::(\\d{1,2})(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\r\n\r\n  /**\r\n   * @param value valid type: number | string | Date, otherwise return `new Date(NaN)`\r\n   *   These values can be accepted:\r\n   *   + An instance of Date, represent a time in its own time zone.\r\n   *   + Or string in a subset of ISO 8601, only including:\r\n   *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\r\n   *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\r\n   *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\r\n   *     all of which will be treated as local time if time zone is not specified\r\n   *     (see <https://momentjs.com/>).\r\n   *   + Or other string format, including (all of which will be treated as loacal time):\r\n   *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\r\n   *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\r\n   *   + a timestamp, which represent a time in UTC.\r\n   * @return date Never be null/undefined. If invalid, return `new Date(NaN)`.\r\n   */\r\n\r\n  function parseDate(value) {\r\n    if (value instanceof Date) {\r\n      return value;\r\n    } else if (typeof value === 'string') {\r\n      // Different browsers parse date in different way, so we parse it manually.\r\n      // Some other issues:\r\n      // new Date('1970-01-01') is UTC,\r\n      // new Date('1970/01/01') and new Date('1970-1-01') is local.\r\n      // See issue #3623\r\n      var match = TIME_REG.exec(value);\r\n\r\n      if (!match) {\r\n        // return Invalid Date.\r\n        return new Date(NaN);\r\n      } // Use local time when no timezone offset specifed.\r\n\r\n\r\n      if (!match[8]) {\r\n        // match[n] can only be string or undefined.\r\n        // But take care of '12' + 1 => '121'.\r\n        return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\r\n      } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\r\n      // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\r\n      // For example, system timezone is set as \"Time Zone: America/Toronto\",\r\n      // then these code will get different result:\r\n      // `new Date(1478411999999).getTimezoneOffset();  // get 240`\r\n      // `new Date(1478412000000).getTimezoneOffset();  // get 300`\r\n      // So we should not use `new Date`, but use `Date.UTC`.\r\n      else {\r\n          var hour = +match[4] || 0;\r\n\r\n          if (match[8].toUpperCase() !== 'Z') {\r\n            hour -= +match[8].slice(0, 3);\r\n          }\r\n\r\n          return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\r\n        }\r\n    } else if (value == null) {\r\n      return new Date(NaN);\r\n    }\r\n\r\n    return new Date(Math.round(value));\r\n  }\r\n  /**\r\n   * Quantity of a number. e.g. 0.1, 1, 10, 100\r\n   *\r\n   * @param val\r\n   * @return\r\n   */\r\n\r\n\r\n  function quantity(val) {\r\n    return Math.pow(10, quantityExponent(val));\r\n  }\r\n  /**\r\n   * Exponent of the quantity of a number\r\n   * e.g., 1234 equals to 1.234*10^3, so quantityExponent(1234) is 3\r\n   *\r\n   * @param val non-negative value\r\n   * @return\r\n   */\r\n\r\n\r\n  function quantityExponent(val) {\r\n    if (val === 0) {\r\n      return 0;\r\n    }\r\n\r\n    var exp = Math.floor(Math.log(val) / Math.LN10);\r\n    /**\r\n     * exp is expected to be the rounded-down result of the base-10 log of val.\r\n     * But due to the precision loss with Math.log(val), we need to restore it\r\n     * using 10^exp to make sure we can get val back from exp. #11249\r\n     */\r\n\r\n    if (val / Math.pow(10, exp) >= 10) {\r\n      exp++;\r\n    }\r\n\r\n    return exp;\r\n  }\r\n  /**\r\n   * find a “nice” number approximately equal to x. Round the number if round = true,\r\n   * take ceiling if round = false. The primary observation is that the “nicest”\r\n   * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\r\n   *\r\n   * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\r\n   *\r\n   * @param  val Non-negative value.\r\n   * @param  round\r\n   * @return Niced number\r\n   */\r\n\r\n\r\n  function nice(val, round) {\r\n    var exponent = quantityExponent(val);\r\n    var exp10 = Math.pow(10, exponent);\r\n    var f = val / exp10; // 1 <= f < 10\r\n\r\n    var nf;\r\n\r\n    if (round) {\r\n      if (f < 1.5) {\r\n        nf = 1;\r\n      } else if (f < 2.5) {\r\n        nf = 2;\r\n      } else if (f < 4) {\r\n        nf = 3;\r\n      } else if (f < 7) {\r\n        nf = 5;\r\n      } else {\r\n        nf = 10;\r\n      }\r\n    } else {\r\n      if (f < 1) {\r\n        nf = 1;\r\n      } else if (f < 2) {\r\n        nf = 2;\r\n      } else if (f < 3) {\r\n        nf = 3;\r\n      } else if (f < 5) {\r\n        nf = 5;\r\n      } else {\r\n        nf = 10;\r\n      }\r\n    }\r\n\r\n    val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\r\n    // 20 is the uppper bound of toFixed.\r\n\r\n    return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\r\n  }\r\n  /**\r\n   * This code was copied from \"d3.js\"\r\n   * <https://github.com/d3/d3/blob/9cc9a875e636a1dcf36cc1e07bdf77e1ad6e2c74/src/arrays/quantile.js>.\r\n   * See the license statement at the head of this file.\r\n   * @param ascArr\r\n   */\r\n\r\n\r\n  function quantile(ascArr, p) {\r\n    var H = (ascArr.length - 1) * p + 1;\r\n    var h = Math.floor(H);\r\n    var v = +ascArr[h - 1];\r\n    var e = H - h;\r\n    return e ? v + e * (ascArr[h] - v) : v;\r\n  }\r\n  /**\r\n   * Order intervals asc, and split them when overlap.\r\n   * expect(numberUtil.reformIntervals([\r\n   *     {interval: [18, 62], close: [1, 1]},\r\n   *     {interval: [-Infinity, -70], close: [0, 0]},\r\n   *     {interval: [-70, -26], close: [1, 1]},\r\n   *     {interval: [-26, 18], close: [1, 1]},\r\n   *     {interval: [62, 150], close: [1, 1]},\r\n   *     {interval: [106, 150], close: [1, 1]},\r\n   *     {interval: [150, Infinity], close: [0, 0]}\r\n   * ])).toEqual([\r\n   *     {interval: [-Infinity, -70], close: [0, 0]},\r\n   *     {interval: [-70, -26], close: [1, 1]},\r\n   *     {interval: [-26, 18], close: [0, 1]},\r\n   *     {interval: [18, 62], close: [0, 1]},\r\n   *     {interval: [62, 150], close: [0, 1]},\r\n   *     {interval: [150, Infinity], close: [0, 0]}\r\n   * ]);\r\n   * @param list, where `close` mean open or close\r\n   *        of the interval, and Infinity can be used.\r\n   * @return The origin list, which has been reformed.\r\n   */\r\n\r\n\r\n  function reformIntervals(list) {\r\n    list.sort(function (a, b) {\r\n      return littleThan(a, b, 0) ? -1 : 1;\r\n    });\r\n    var curr = -Infinity;\r\n    var currClose = 1;\r\n\r\n    for (var i = 0; i < list.length;) {\r\n      var interval = list[i].interval;\r\n      var close_1 = list[i].close;\r\n\r\n      for (var lg = 0; lg < 2; lg++) {\r\n        if (interval[lg] <= curr) {\r\n          interval[lg] = curr;\r\n          close_1[lg] = !lg ? 1 - currClose : 1;\r\n        }\r\n\r\n        curr = interval[lg];\r\n        currClose = close_1[lg];\r\n      }\r\n\r\n      if (interval[0] === interval[1] && close_1[0] * close_1[1] !== 1) {\r\n        list.splice(i, 1);\r\n      } else {\r\n        i++;\r\n      }\r\n    }\r\n\r\n    return list;\r\n\r\n    function littleThan(a, b, lg) {\r\n      return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\r\n    }\r\n  }\r\n  /**\r\n   * [Numberic is defined as]:\r\n   *     `parseFloat(val) == val`\r\n   * For example:\r\n   * numeric:\r\n   *     typeof number except NaN, '-123', '123', '2e3', '-2e3', '011', 'Infinity', Infinity,\r\n   *     and they rounded by white-spaces or line-terminal like ' -123 \\n ' (see es spec)\r\n   * not-numeric:\r\n   *     null, undefined, [], {}, true, false, 'NaN', NaN, '123ab',\r\n   *     empty string, string with only white-spaces or line-terminal (see es spec),\r\n   *     0x12, '0x12', '-0x12', 012, '012', '-012',\r\n   *     non-string, ...\r\n   *\r\n   * @test See full test cases in `test/ut/spec/util/number.js`.\r\n   * @return Must be a typeof number. If not numeric, return NaN.\r\n   */\r\n\r\n\r\n  function numericToNumber(val) {\r\n    var valFloat = parseFloat(val);\r\n    return valFloat == val // eslint-disable-line eqeqeq\r\n    && (valFloat !== 0 || typeof val !== 'string' || val.indexOf('x') <= 0) // For case ' 0x0 '.\r\n    ? valFloat : NaN;\r\n  }\r\n  /**\r\n   * Definition of \"numeric\": see `numericToNumber`.\r\n   */\r\n\r\n\r\n  function isNumeric(val) {\r\n    return !isNaN(numericToNumber(val));\r\n  }\r\n  /**\r\n   * Use random base to prevent users hard code depending on\r\n   * this auto generated marker id.\r\n   * @return An positive integer.\r\n   */\r\n\r\n\r\n  function getRandomIdBase() {\r\n    return Math.round(Math.random() * 9);\r\n  }\r\n  /**\r\n   * Get the greatest common dividor\r\n   *\r\n   * @param {number} a one number\r\n   * @param {number} b the other number\r\n   */\r\n\r\n\r\n  function getGreatestCommonDividor(a, b) {\r\n    if (b === 0) {\r\n      return a;\r\n    }\r\n\r\n    return getGreatestCommonDividor(b, a % b);\r\n  }\r\n  /**\r\n   * Get the least common multiple\r\n   *\r\n   * @param {number} a one number\r\n   * @param {number} b the other number\r\n   */\r\n\r\n\r\n  function getLeastCommonMultiple(a, b) {\r\n    if (a == null) {\r\n      return b;\r\n    }\r\n\r\n    if (b == null) {\r\n      return a;\r\n    }\r\n\r\n    return a * b / getGreatestCommonDividor(a, b);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var ECHARTS_PREFIX = '[ECharts] ';\r\n  var storedLogs = {};\r\n  var hasConsole = typeof console !== 'undefined' // eslint-disable-next-line\r\n  && console.warn && console.log;\r\n\r\n  function warn(str) {\r\n    if (hasConsole) {\r\n      console.warn(ECHARTS_PREFIX + str);\r\n    }\r\n  }\r\n\r\n  function error(str) {\r\n    if (hasConsole) {\r\n      console.error(ECHARTS_PREFIX + str);\r\n    }\r\n  }\r\n\r\n  function deprecateLog(str) {\r\n    {\r\n      if (storedLogs[str]) {\r\n        // Not display duplicate message.\r\n        return;\r\n      }\r\n\r\n      if (hasConsole) {\r\n        storedLogs[str] = true;\r\n        console.warn(ECHARTS_PREFIX + 'DEPRECATED: ' + str);\r\n      }\r\n    }\r\n  }\r\n\r\n  function deprecateReplaceLog(oldOpt, newOpt, scope) {\r\n    {\r\n      deprecateLog((scope ? \"[\" + scope + \"]\" : '') + (oldOpt + \" is deprecated, use \" + newOpt + \" instead.\"));\r\n    }\r\n  }\r\n\r\n  function consoleLog() {\r\n    var args = [];\r\n\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n      args[_i] = arguments[_i];\r\n    }\r\n\r\n    {\r\n      /* eslint-disable no-console */\r\n      if (typeof console !== 'undefined' && console.log) {\r\n        console.log.apply(console, args);\r\n      }\r\n      /* eslint-enable no-console */\r\n\r\n    }\r\n  }\r\n  /**\r\n   * If in __DEV__ environment, get console printable message for users hint.\r\n   * Parameters are separated by ' '.\r\n   * @usuage\r\n   * makePrintable('This is an error on', someVar, someObj);\r\n   *\r\n   * @param hintInfo anything about the current execution context to hint users.\r\n   * @throws Error\r\n   */\r\n\r\n\r\n  function makePrintable() {\r\n    var hintInfo = [];\r\n\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n      hintInfo[_i] = arguments[_i];\r\n    }\r\n\r\n    var msg = '';\r\n    {\r\n      // Fuzzy stringify for print.\r\n      // This code only exist in dev environment.\r\n      var makePrintableStringIfPossible_1 = function (val) {\r\n        return val === void 0 ? 'undefined' : val === Infinity ? 'Infinity' : val === -Infinity ? '-Infinity' : eqNaN(val) ? 'NaN' : val instanceof Date ? 'Date(' + val.toISOString() + ')' : isFunction$1(val) ? 'function () { ... }' : isRegExp(val) ? val + '' : null;\r\n      };\r\n\r\n      msg = map(hintInfo, function (arg) {\r\n        if (isString(arg)) {\r\n          // Print without quotation mark for some statement.\r\n          return arg;\r\n        } else {\r\n          var printableStr = makePrintableStringIfPossible_1(arg);\r\n\r\n          if (printableStr != null) {\r\n            return printableStr;\r\n          } else if (typeof JSON !== 'undefined' && JSON.stringify) {\r\n            try {\r\n              return JSON.stringify(arg, function (n, val) {\r\n                var printableStr = makePrintableStringIfPossible_1(val);\r\n                return printableStr == null ? val : printableStr;\r\n              }); // In most cases the info object is small, so do not line break.\r\n            } catch (err) {\r\n              return '?';\r\n            }\r\n          } else {\r\n            return '?';\r\n          }\r\n        }\r\n      }).join(' ');\r\n    }\r\n    return msg;\r\n  }\r\n  /**\r\n   * @throws Error\r\n   */\r\n\r\n\r\n  function throwError(msg) {\r\n    throw new Error(msg);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Make the name displayable. But we should\r\n   * make sure it is not duplicated with user\r\n   * specified name, so use '\\0';\r\n   */\r\n\r\n\r\n  var DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\r\n  var INTERNAL_COMPONENT_ID_PREFIX = '\\0_ec_\\0';\r\n  /**\r\n   * If value is not array, then translate it to array.\r\n   * @param  {*} value\r\n   * @return {Array} [value] or value\r\n   */\r\n\r\n  function normalizeToArray(value) {\r\n    return value instanceof Array ? value : value == null ? [] : [value];\r\n  }\r\n  /**\r\n   * Sync default option between normal and emphasis like `position` and `show`\r\n   * In case some one will write code like\r\n   *     label: {\r\n   *          show: false,\r\n   *          position: 'outside',\r\n   *          fontSize: 18\r\n   *     },\r\n   *     emphasis: {\r\n   *          label: { show: true }\r\n   *     }\r\n   */\r\n\r\n\r\n  function defaultEmphasis(opt, key, subOpts) {\r\n    // Caution: performance sensitive.\r\n    if (opt) {\r\n      opt[key] = opt[key] || {};\r\n      opt.emphasis = opt.emphasis || {};\r\n      opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\r\n\r\n      for (var i = 0, len = subOpts.length; i < len; i++) {\r\n        var subOptName = subOpts[i];\r\n\r\n        if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\r\n          opt.emphasis[key][subOptName] = opt[key][subOptName];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  var TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\r\n  //     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\r\n  //     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\r\n  //     // FIXME: deprecated, check and remove it.\r\n  //     'textStyle'\r\n  // ]);\r\n\r\n  /**\r\n   * The method do not ensure performance.\r\n   * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\r\n   * This helper method retieves value from data.\r\n   */\r\n\r\n  function getDataItemValue(dataItem) {\r\n    return isObject$1(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\r\n  }\r\n  /**\r\n   * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\r\n   * This helper method determine if dataItem has extra option besides value\r\n   */\r\n\r\n\r\n  function isDataItemOption(dataItem) {\r\n    return isObject$1(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\r\n    // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\r\n  }\r\n  /**\r\n   * Mapping to existings for merge.\r\n   *\r\n   * Mode \"normalMege\":\r\n   *     The mapping result (merge result) will keep the order of the existing\r\n   *     component, rather than the order of new option. Because we should ensure\r\n   *     some specified index reference (like xAxisIndex) keep work.\r\n   *     And in most cases, \"merge option\" is used to update partial option but not\r\n   *     be expected to change the order.\r\n   *\r\n   * Mode \"replaceMege\":\r\n   *     (1) Only the id mapped components will be merged.\r\n   *     (2) Other existing components (except internal compoonets) will be removed.\r\n   *     (3) Other new options will be used to create new component.\r\n   *     (4) The index of the existing compoents will not be modified.\r\n   *     That means their might be \"hole\" after the removal.\r\n   *     The new components are created first at those available index.\r\n   *\r\n   * Mode \"replaceAll\":\r\n   *     This mode try to support that reproduce an echarts instance from another\r\n   *     echarts instance (via `getOption`) in some simple cases.\r\n   *     In this senario, the `result` index are exactly the consistent with the `newCmptOptions`,\r\n   *     which ensures the compoennt index referring (like `xAxisIndex: ?`) corrent. That is,\r\n   *     the \"hole\" in `newCmptOptions` will also be kept.\r\n   *     On the contrary, other modes try best to eliminate holes.\r\n   *     PENDING: This is an experimental mode yet.\r\n   *\r\n   * @return See the comment of <MappingResult>.\r\n   */\r\n\r\n\r\n  function mappingToExists(existings, newCmptOptions, mode) {\r\n    var isNormalMergeMode = mode === 'normalMerge';\r\n    var isReplaceMergeMode = mode === 'replaceMerge';\r\n    var isReplaceAllMode = mode === 'replaceAll';\r\n    existings = existings || [];\r\n    newCmptOptions = (newCmptOptions || []).slice();\r\n    var existingIdIdxMap = createHashMap(); // Validate id and name on user input option.\r\n\r\n    each$1(newCmptOptions, function (cmptOption, index) {\r\n      if (!isObject$1(cmptOption)) {\r\n        newCmptOptions[index] = null;\r\n        return;\r\n      }\r\n\r\n      {\r\n        // There is some legacy case that name is set as `false`.\r\n        // But should work normally rather than throw error.\r\n        if (cmptOption.id != null && !isValidIdOrName(cmptOption.id)) {\r\n          warnInvalidateIdOrName(cmptOption.id);\r\n        }\r\n\r\n        if (cmptOption.name != null && !isValidIdOrName(cmptOption.name)) {\r\n          warnInvalidateIdOrName(cmptOption.name);\r\n        }\r\n      }\r\n    });\r\n    var result = prepareResult(existings, existingIdIdxMap, mode);\r\n\r\n    if (isNormalMergeMode || isReplaceMergeMode) {\r\n      mappingById(result, existings, existingIdIdxMap, newCmptOptions);\r\n    }\r\n\r\n    if (isNormalMergeMode) {\r\n      mappingByName(result, newCmptOptions);\r\n    }\r\n\r\n    if (isNormalMergeMode || isReplaceMergeMode) {\r\n      mappingByIndex(result, newCmptOptions, isReplaceMergeMode);\r\n    } else if (isReplaceAllMode) {\r\n      mappingInReplaceAllMode(result, newCmptOptions);\r\n    }\r\n\r\n    makeIdAndName(result); // The array `result` MUST NOT contain elided items, otherwise the\r\n    // forEach will ommit those items and result in incorrect result.\r\n\r\n    return result;\r\n  }\r\n\r\n  function prepareResult(existings, existingIdIdxMap, mode) {\r\n    var result = [];\r\n\r\n    if (mode === 'replaceAll') {\r\n      return result;\r\n    } // Do not use native `map` to in case that the array `existings`\r\n    // contains elided items, which will be ommited.\r\n\r\n\r\n    for (var index = 0; index < existings.length; index++) {\r\n      var existing = existings[index]; // Because of replaceMerge, `existing` may be null/undefined.\r\n\r\n      if (existing && existing.id != null) {\r\n        existingIdIdxMap.set(existing.id, index);\r\n      } // For non-internal-componnets:\r\n      //     Mode \"normalMerge\": all existings kept.\r\n      //     Mode \"replaceMerge\": all existing removed unless mapped by id.\r\n      // For internal-components:\r\n      //     go with \"replaceMerge\" approach in both mode.\r\n\r\n\r\n      result.push({\r\n        existing: mode === 'replaceMerge' || isComponentIdInternal(existing) ? null : existing,\r\n        newOption: null,\r\n        keyInfo: null,\r\n        brandNew: null\r\n      });\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  function mappingById(result, existings, existingIdIdxMap, newCmptOptions) {\r\n    // Mapping by id if specified.\r\n    each$1(newCmptOptions, function (cmptOption, index) {\r\n      if (!cmptOption || cmptOption.id == null) {\r\n        return;\r\n      }\r\n\r\n      var optionId = makeComparableKey(cmptOption.id);\r\n      var existingIdx = existingIdIdxMap.get(optionId);\r\n\r\n      if (existingIdx != null) {\r\n        var resultItem = result[existingIdx];\r\n        assert$1(!resultItem.newOption, 'Duplicated option on id \"' + optionId + '\".');\r\n        resultItem.newOption = cmptOption; // In both mode, if id matched, new option will be merged to\r\n        // the existings rather than creating new component model.\r\n\r\n        resultItem.existing = existings[existingIdx];\r\n        newCmptOptions[index] = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  function mappingByName(result, newCmptOptions) {\r\n    // Mapping by name if specified.\r\n    each$1(newCmptOptions, function (cmptOption, index) {\r\n      if (!cmptOption || cmptOption.name == null) {\r\n        return;\r\n      }\r\n\r\n      for (var i = 0; i < result.length; i++) {\r\n        var existing = result[i].existing;\r\n\r\n        if (!result[i].newOption // Consider name: two map to one.\r\n        // Can not match when both ids existing but different.\r\n        && existing && (existing.id == null || cmptOption.id == null) && !isComponentIdInternal(cmptOption) && !isComponentIdInternal(existing) && keyExistAndEqual('name', existing, cmptOption)) {\r\n          result[i].newOption = cmptOption;\r\n          newCmptOptions[index] = null;\r\n          return;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  function mappingByIndex(result, newCmptOptions, brandNew) {\r\n    each$1(newCmptOptions, function (cmptOption) {\r\n      if (!cmptOption) {\r\n        return;\r\n      } // Find the first place that not mapped by id and not internal component (consider the \"hole\").\r\n\r\n\r\n      var resultItem;\r\n      var nextIdx = 0;\r\n\r\n      while ( // Be `!resultItem` only when `nextIdx >= result.length`.\r\n      (resultItem = result[nextIdx]) && ( // (1) Existing models that already have id should be able to mapped to. Because\r\n      // after mapping performed, model will always be assigned with an id if user not given.\r\n      // After that all models have id.\r\n      // (2) If new option has id, it can only set to a hole or append to the last. It should\r\n      // not be merged to the existings with different id. Because id should not be overwritten.\r\n      // (3) Name can be overwritten, because axis use name as 'show label text'.\r\n      resultItem.newOption || isComponentIdInternal(resultItem.existing) || // In mode \"replaceMerge\", here no not-mapped-non-internal-existing.\r\n      resultItem.existing && cmptOption.id != null && !keyExistAndEqual('id', cmptOption, resultItem.existing))) {\r\n        nextIdx++;\r\n      }\r\n\r\n      if (resultItem) {\r\n        resultItem.newOption = cmptOption;\r\n        resultItem.brandNew = brandNew;\r\n      } else {\r\n        result.push({\r\n          newOption: cmptOption,\r\n          brandNew: brandNew,\r\n          existing: null,\r\n          keyInfo: null\r\n        });\r\n      }\r\n\r\n      nextIdx++;\r\n    });\r\n  }\r\n\r\n  function mappingInReplaceAllMode(result, newCmptOptions) {\r\n    each$1(newCmptOptions, function (cmptOption) {\r\n      // The feature \"reproduce\" requires \"hole\" will also reproduced\r\n      // in case that compoennt index referring are broken.\r\n      result.push({\r\n        newOption: cmptOption,\r\n        brandNew: true,\r\n        existing: null,\r\n        keyInfo: null\r\n      });\r\n    });\r\n  }\r\n  /**\r\n   * Make id and name for mapping result (result of mappingToExists)\r\n   * into `keyInfo` field.\r\n   */\r\n\r\n\r\n  function makeIdAndName(mapResult) {\r\n    // We use this id to hash component models and view instances\r\n    // in echarts. id can be specified by user, or auto generated.\r\n    // The id generation rule ensures new view instance are able\r\n    // to mapped to old instance when setOption are called in\r\n    // no-merge mode. So we generate model id by name and plus\r\n    // type in view id.\r\n    // name can be duplicated among components, which is convenient\r\n    // to specify multi components (like series) by one name.\r\n    // Ensure that each id is distinct.\r\n    var idMap = createHashMap();\r\n    each$1(mapResult, function (item) {\r\n      var existing = item.existing;\r\n      existing && idMap.set(existing.id, item);\r\n    });\r\n    each$1(mapResult, function (item) {\r\n      var opt = item.newOption; // Force ensure id not duplicated.\r\n\r\n      assert$1(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\r\n      opt && opt.id != null && idMap.set(opt.id, item);\r\n      !item.keyInfo && (item.keyInfo = {});\r\n    }); // Make name and id.\r\n\r\n    each$1(mapResult, function (item, index) {\r\n      var existing = item.existing;\r\n      var opt = item.newOption;\r\n      var keyInfo = item.keyInfo;\r\n\r\n      if (!isObject$1(opt)) {\r\n        return;\r\n      } // name can be overwitten. Consider case: axis.name = '20km'.\r\n      // But id generated by name will not be changed, which affect\r\n      // only in that case: setOption with 'not merge mode' and view\r\n      // instance will be recreated, which can be accepted.\r\n\r\n\r\n      keyInfo.name = opt.name != null ? makeComparableKey(opt.name) : existing ? existing.name // Avoid diffferent series has the same name,\r\n      // because name may be used like in color pallet.\r\n      : DUMMY_COMPONENT_NAME_PREFIX + index;\r\n\r\n      if (existing) {\r\n        keyInfo.id = makeComparableKey(existing.id);\r\n      } else if (opt.id != null) {\r\n        keyInfo.id = makeComparableKey(opt.id);\r\n      } else {\r\n        // Consider this situatoin:\r\n        //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\r\n        //  optionB [{..}, {name: 'a'}, {name: 'a'}]\r\n        // Series with the same name between optionA and optionB\r\n        // should be mapped.\r\n        var idNum = 0;\r\n\r\n        do {\r\n          keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\r\n        } while (idMap.get(keyInfo.id));\r\n      }\r\n\r\n      idMap.set(keyInfo.id, item);\r\n    });\r\n  }\r\n\r\n  function keyExistAndEqual(attr, obj1, obj2) {\r\n    var key1 = convertOptionIdName(obj1[attr], null);\r\n    var key2 = convertOptionIdName(obj2[attr], null); // See `MappingExistingItem`. `id` and `name` trade string equals to number.\r\n\r\n    return key1 != null && key2 != null && key1 === key2;\r\n  }\r\n  /**\r\n   * @return return null if not exist.\r\n   */\r\n\r\n\r\n  function makeComparableKey(val) {\r\n    {\r\n      if (val == null) {\r\n        throw new Error();\r\n      }\r\n    }\r\n    return convertOptionIdName(val, '');\r\n  }\r\n\r\n  function convertOptionIdName(idOrName, defaultValue) {\r\n    if (idOrName == null) {\r\n      return defaultValue;\r\n    }\r\n\r\n    var type = typeof idOrName;\r\n    return type === 'string' ? idOrName : type === 'number' || isStringSafe(idOrName) ? idOrName + '' : defaultValue;\r\n  }\r\n\r\n  function warnInvalidateIdOrName(idOrName) {\r\n    {\r\n      warn('`' + idOrName + '` is invalid id or name. Must be a string or number.');\r\n    }\r\n  }\r\n\r\n  function isValidIdOrName(idOrName) {\r\n    return isStringSafe(idOrName) || isNumeric(idOrName);\r\n  }\r\n\r\n  function isNameSpecified(componentModel) {\r\n    var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\r\n\r\n    return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\r\n  }\r\n  /**\r\n   * @public\r\n   * @param {Object} cmptOption\r\n   * @return {boolean}\r\n   */\r\n\r\n\r\n  function isComponentIdInternal(cmptOption) {\r\n    return cmptOption && cmptOption.id != null && makeComparableKey(cmptOption.id).indexOf(INTERNAL_COMPONENT_ID_PREFIX) === 0;\r\n  }\r\n\r\n  function makeInternalComponentId(idSuffix) {\r\n    return INTERNAL_COMPONENT_ID_PREFIX + idSuffix;\r\n  }\r\n\r\n  function setComponentTypeToKeyInfo(mappingResult, mainType, componentModelCtor) {\r\n    // Set mainType and complete subType.\r\n    each$1(mappingResult, function (item) {\r\n      var newOption = item.newOption;\r\n\r\n      if (isObject$1(newOption)) {\r\n        item.keyInfo.mainType = mainType;\r\n        item.keyInfo.subType = determineSubType(mainType, newOption, item.existing, componentModelCtor);\r\n      }\r\n    });\r\n  }\r\n\r\n  function determineSubType(mainType, newCmptOption, existComponent, componentModelCtor) {\r\n    var subType = newCmptOption.type ? newCmptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\r\n    : componentModelCtor.determineSubType(mainType, newCmptOption); // tooltip, markline, markpoint may always has no subType\r\n\r\n    return subType;\r\n  }\r\n  /**\r\n   * A helper for removing duplicate items between batchA and batchB,\r\n   * and in themselves, and categorize by series.\r\n   *\r\n   * @param batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\r\n   * @param batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\r\n   * @return result: [resultBatchA, resultBatchB]\r\n   */\r\n\r\n  /**\r\n   * @param payload Contains dataIndex (means rawIndex) / dataIndexInside / name\r\n   *                         each of which can be Array or primary type.\r\n   * @return dataIndex If not found, return undefined/null.\r\n   */\r\n\r\n\r\n  function queryDataIndex(data, payload) {\r\n    if (payload.dataIndexInside != null) {\r\n      return payload.dataIndexInside;\r\n    } else if (payload.dataIndex != null) {\r\n      return isArray(payload.dataIndex) ? map(payload.dataIndex, function (value) {\r\n        return data.indexOfRawIndex(value);\r\n      }) : data.indexOfRawIndex(payload.dataIndex);\r\n    } else if (payload.name != null) {\r\n      return isArray(payload.name) ? map(payload.name, function (value) {\r\n        return data.indexOfName(value);\r\n      }) : data.indexOfName(payload.name);\r\n    }\r\n  }\r\n  /**\r\n   * Enable property storage to any host object.\r\n   * Notice: Serialization is not supported.\r\n   *\r\n   * For example:\r\n   * let inner = zrUitl.makeInner();\r\n   *\r\n   * function some1(hostObj) {\r\n   *      inner(hostObj).someProperty = 1212;\r\n   *      ...\r\n   * }\r\n   * function some2() {\r\n   *      let fields = inner(this);\r\n   *      fields.someProperty1 = 1212;\r\n   *      fields.someProperty2 = 'xx';\r\n   *      ...\r\n   * }\r\n   *\r\n   * @return {Function}\r\n   */\r\n\r\n\r\n  function makeInner() {\r\n    var key = '__ec_inner_' + innerUniqueIndex++;\r\n    return function (hostObj) {\r\n      return hostObj[key] || (hostObj[key] = {});\r\n    };\r\n  }\r\n\r\n  var innerUniqueIndex = getRandomIdBase();\r\n  /**\r\n   * The same behavior as `component.getReferringComponents`.\r\n   */\r\n\r\n  function parseFinder(ecModel, finderInput, opt) {\r\n    var finder;\r\n\r\n    if (isString(finderInput)) {\r\n      var obj = {};\r\n      obj[finderInput + 'Index'] = 0;\r\n      finder = obj;\r\n    } else {\r\n      finder = finderInput;\r\n    }\r\n\r\n    var queryOptionMap = createHashMap();\r\n    var result = {};\r\n    var mainTypeSpecified = false;\r\n    each$1(finder, function (value, key) {\r\n      // Exclude 'dataIndex' and other illgal keys.\r\n      if (key === 'dataIndex' || key === 'dataIndexInside') {\r\n        result[key] = value;\r\n        return;\r\n      }\r\n\r\n      var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\r\n      var mainType = parsedKey[1];\r\n      var queryType = (parsedKey[2] || '').toLowerCase();\r\n\r\n      if (!mainType || !queryType || opt && opt.includeMainTypes && indexOf$1(opt.includeMainTypes, mainType) < 0) {\r\n        return;\r\n      }\r\n\r\n      mainTypeSpecified = mainTypeSpecified || !!mainType;\r\n      var queryOption = queryOptionMap.get(mainType) || queryOptionMap.set(mainType, {});\r\n      queryOption[queryType] = value;\r\n    });\r\n    var defaultMainType = opt ? opt.defaultMainType : null;\r\n\r\n    if (!mainTypeSpecified && defaultMainType) {\r\n      queryOptionMap.set(defaultMainType, {});\r\n    }\r\n\r\n    queryOptionMap.each(function (queryOption, mainType) {\r\n      var queryResult = queryReferringComponents(ecModel, mainType, queryOption, {\r\n        useDefault: defaultMainType === mainType,\r\n        enableAll: opt && opt.enableAll != null ? opt.enableAll : true,\r\n        enableNone: opt && opt.enableNone != null ? opt.enableNone : true\r\n      });\r\n      result[mainType + 'Models'] = queryResult.models;\r\n      result[mainType + 'Model'] = queryResult.models[0];\r\n    });\r\n    return result;\r\n  }\r\n\r\n  var SINGLE_REFERRING = {\r\n    useDefault: true,\r\n    enableAll: false,\r\n    enableNone: false\r\n  };\r\n  var MULTIPLE_REFERRING = {\r\n    useDefault: false,\r\n    enableAll: true,\r\n    enableNone: true\r\n  };\r\n\r\n  function queryReferringComponents(ecModel, mainType, userOption, opt) {\r\n    opt = opt || SINGLE_REFERRING;\r\n    var indexOption = userOption.index;\r\n    var idOption = userOption.id;\r\n    var nameOption = userOption.name;\r\n    var result = {\r\n      models: null,\r\n      specified: indexOption != null || idOption != null || nameOption != null\r\n    };\r\n\r\n    if (!result.specified) {\r\n      // Use the first as default if `useDefault`.\r\n      var firstCmpt = void 0;\r\n      result.models = opt.useDefault && (firstCmpt = ecModel.getComponent(mainType)) ? [firstCmpt] : [];\r\n      return result;\r\n    }\r\n\r\n    if (indexOption === 'none' || indexOption === false) {\r\n      assert$1(opt.enableNone, '`\"none\"` or `false` is not a valid value on index option.');\r\n      result.models = [];\r\n      return result;\r\n    } // `queryComponents` will return all components if\r\n    // both all of index/id/name are null/undefined.\r\n\r\n\r\n    if (indexOption === 'all') {\r\n      assert$1(opt.enableAll, '`\"all\"` is not a valid value on index option.');\r\n      indexOption = idOption = nameOption = null;\r\n    }\r\n\r\n    result.models = ecModel.queryComponents({\r\n      mainType: mainType,\r\n      index: indexOption,\r\n      id: idOption,\r\n      name: nameOption\r\n    });\r\n    return result;\r\n  }\r\n\r\n  function setAttribute(dom, key, value) {\r\n    dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\r\n  }\r\n\r\n  function getAttribute(dom, key) {\r\n    return dom.getAttribute ? dom.getAttribute(key) : dom[key];\r\n  }\r\n\r\n  function getTooltipRenderMode(renderModeOption) {\r\n    if (renderModeOption === 'auto') {\r\n      // Using html when `document` exists, use richText otherwise\r\n      return env.domSupported ? 'html' : 'richText';\r\n    } else {\r\n      return renderModeOption || 'html';\r\n    }\r\n  }\r\n  /**\r\n   * Group a list by key.\r\n   */\r\n\r\n  /**\r\n   * Interpolate raw values of a series with percent\r\n   *\r\n   * @param data         data\r\n   * @param labelModel   label model of the text element\r\n   * @param sourceValue  start value. May be null/undefined when init.\r\n   * @param targetValue  end value\r\n   * @param percent      0~1 percentage; 0 uses start value while 1 uses end value\r\n   * @return             interpolated values\r\n   *                     If `sourceValue` and `targetValue` are `number`, return `number`.\r\n   *                     If `sourceValue` and `targetValue` are `string`, return `string`.\r\n   *                     If `sourceValue` and `targetValue` are `(string | number)[]`, return `(string | number)[]`.\r\n   *                     Other cases do not supported.\r\n   */\r\n\r\n\r\n  function interpolateRawValues(data, precision, sourceValue, targetValue, percent) {\r\n    var isAutoPrecision = precision == null || precision === 'auto';\r\n\r\n    if (targetValue == null) {\r\n      return targetValue;\r\n    }\r\n\r\n    if (typeof targetValue === 'number') {\r\n      var value = interpolateNumber(sourceValue || 0, targetValue, percent);\r\n      return round(value, isAutoPrecision ? Math.max(getPrecisionSafe(sourceValue || 0), getPrecisionSafe(targetValue)) : precision);\r\n    } else if (typeof targetValue === 'string') {\r\n      return percent < 1 ? sourceValue : targetValue;\r\n    } else {\r\n      var interpolated = [];\r\n      var leftArr = sourceValue;\r\n      var rightArr = targetValue;\r\n      var length_1 = Math.max(leftArr ? leftArr.length : 0, rightArr.length);\r\n\r\n      for (var i = 0; i < length_1; ++i) {\r\n        var info = data.getDimensionInfo(i); // Don't interpolate ordinal dims\r\n\r\n        if (info.type === 'ordinal') {\r\n          // In init, there is no `sourceValue`, but should better not to get undefined result.\r\n          interpolated[i] = (percent < 1 && leftArr ? leftArr : rightArr)[i];\r\n        } else {\r\n          var leftVal = leftArr && leftArr[i] ? leftArr[i] : 0;\r\n          var rightVal = rightArr[i];\r\n          var value = interpolateNumber(leftVal, rightVal, percent);\r\n          interpolated[i] = round(value, isAutoPrecision ? Math.max(getPrecisionSafe(leftVal), getPrecisionSafe(rightVal)) : precision);\r\n        }\r\n      }\r\n\r\n      return interpolated;\r\n    }\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var TYPE_DELIMITER = '.';\r\n  var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\r\n  var IS_EXTENDED_CLASS = '___EC__EXTENDED_CLASS___';\r\n  /**\r\n   * Notice, parseClassType('') should returns {main: '', sub: ''}\r\n   * @public\r\n   */\r\n\r\n  function parseClassType(componentType) {\r\n    var ret = {\r\n      main: '',\r\n      sub: ''\r\n    };\r\n\r\n    if (componentType) {\r\n      var typeArr = componentType.split(TYPE_DELIMITER);\r\n      ret.main = typeArr[0] || '';\r\n      ret.sub = typeArr[1] || '';\r\n    }\r\n\r\n    return ret;\r\n  }\r\n  /**\r\n   * @public\r\n   */\r\n\r\n\r\n  function checkClassType(componentType) {\r\n    assert$1(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\r\n  }\r\n\r\n  function isExtendedClass(clz) {\r\n    return !!(clz && clz[IS_EXTENDED_CLASS]);\r\n  }\r\n  /**\r\n   * Implements `ExtendableConstructor` for `rootClz`.\r\n   *\r\n   * @usage\r\n   * ```ts\r\n   * class Xxx {}\r\n   * type XxxConstructor = typeof Xxx & ExtendableConstructor\r\n   * enableClassExtend(Xxx as XxxConstructor);\r\n   * ```\r\n   */\r\n\r\n\r\n  function enableClassExtend(rootClz, mandatoryMethods) {\r\n    rootClz.$constructor = rootClz; // FIXME: not necessary?\r\n\r\n    rootClz.extend = function (proto) {\r\n      {\r\n        each$1(mandatoryMethods, function (method) {\r\n          if (!proto[method]) {\r\n            console.warn('Method `' + method + '` should be implemented' + (proto.type ? ' in ' + proto.type : '') + '.');\r\n          }\r\n        });\r\n      }\r\n      var superClass = this; // For backward compat, we both support ts class inheritance and this\r\n      // \"extend\" approach.\r\n      // The constructor should keep the same behavior as ts class inheritance:\r\n      // If this constructor/$constructor is not declared, auto invoke the super\r\n      // constructor.\r\n      // If this constructor/$constructor is declared, it is responsible for\r\n      // calling the super constructor.\r\n\r\n      function ExtendedClass() {\r\n        var args = [];\r\n\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n          args[_i] = arguments[_i];\r\n        }\r\n\r\n        if (!proto.$constructor) {\r\n          if (!isESClass(superClass)) {\r\n            // Will throw error if superClass is an es6 native class.\r\n            superClass.apply(this, arguments);\r\n          } else {\r\n            var ins = createObject( // @ts-ignore\r\n            ExtendedClass.prototype, new (superClass.bind.apply(superClass, __spreadArrays([void 0], args)))());\r\n            return ins;\r\n          }\r\n        } else {\r\n          proto.$constructor.apply(this, arguments);\r\n        }\r\n      }\r\n\r\n      ExtendedClass[IS_EXTENDED_CLASS] = true;\r\n      extend(ExtendedClass.prototype, proto);\r\n      ExtendedClass.extend = this.extend;\r\n      ExtendedClass.superCall = superCall;\r\n      ExtendedClass.superApply = superApply;\r\n      inherits(ExtendedClass, this);\r\n      ExtendedClass.superClass = superClass;\r\n      return ExtendedClass;\r\n    };\r\n  }\r\n\r\n  function isESClass(fn) {\r\n    return typeof fn === 'function' && /^class\\s/.test(Function.prototype.toString.call(fn));\r\n  }\r\n  /**\r\n   * A work around to both support ts extend and this extend mechanism.\r\n   * on sub-class.\r\n   * @usage\r\n   * ```ts\r\n   * class Component { ... }\r\n   * classUtil.enableClassExtend(Component);\r\n   * classUtil.enableClassManagement(Component, {registerWhenExtend: true});\r\n   *\r\n   * class Series extends Component { ... }\r\n   * // Without calling `markExtend`, `registerWhenExtend` will not work.\r\n   * Component.markExtend(Series);\r\n   * ```\r\n   */\r\n\r\n\r\n  function mountExtend(SubClz, SupperClz) {\r\n    SubClz.extend = SupperClz.extend;\r\n  } // A random offset.\r\n\r\n\r\n  var classBase = Math.round(Math.random() * 10);\r\n  /**\r\n   * Implements `CheckableConstructor` for `target`.\r\n   * Can not use instanceof, consider different scope by\r\n   * cross domain or es module import in ec extensions.\r\n   * Mount a method \"isInstance()\" to Clz.\r\n   *\r\n   * @usage\r\n   * ```ts\r\n   * class Xxx {}\r\n   * type XxxConstructor = typeof Xxx & CheckableConstructor;\r\n   * enableClassCheck(Xxx as XxxConstructor)\r\n   * ```\r\n   */\r\n\r\n  function enableClassCheck(target) {\r\n    var classAttr = ['__\\0is_clz', classBase++].join('_');\r\n    target.prototype[classAttr] = true;\r\n    {\r\n      assert$1(!target.isInstance, 'The method \"is\" can not be defined.');\r\n    }\r\n\r\n    target.isInstance = function (obj) {\r\n      return !!(obj && obj[classAttr]);\r\n    };\r\n  } // superCall should have class info, which can not be fetch from 'this'.\r\n  // Consider this case:\r\n  // class A has method f,\r\n  // class B inherits class A, overrides method f, f call superApply('f'),\r\n  // class C inherits class B, do not overrides method f,\r\n  // then when method of class C is called, dead loop occured.\r\n\r\n\r\n  function superCall(context, methodName) {\r\n    var args = [];\r\n\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n      args[_i - 2] = arguments[_i];\r\n    }\r\n\r\n    return this.superClass.prototype[methodName].apply(context, args);\r\n  }\r\n\r\n  function superApply(context, methodName, args) {\r\n    return this.superClass.prototype[methodName].apply(context, args);\r\n  }\r\n  /**\r\n   * Implements `ClassManager` for `target`\r\n   *\r\n   * @usage\r\n   * ```ts\r\n   * class Xxx {}\r\n   * type XxxConstructor = typeof Xxx & ClassManager\r\n   * enableClassManagement(Xxx as XxxConstructor);\r\n   * ```\r\n   */\r\n\r\n\r\n  function enableClassManagement(target) {\r\n    /**\r\n     * Component model classes\r\n     * key: componentType,\r\n     * value:\r\n     *     componentClass, when componentType is 'xxx'\r\n     *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\r\n     */\r\n    var storage = {};\r\n\r\n    target.registerClass = function (clz) {\r\n      // `type` should not be a \"instance memeber\".\r\n      // If using TS class, should better declared as `static type = 'series.pie'`.\r\n      // otherwise users have to mount `type` on prototype manually.\r\n      // For backward compat and enable instance visit type via `this.type`,\r\n      // we stil support fetch `type` from prototype.\r\n      var componentFullType = clz.type || clz.prototype.type;\r\n\r\n      if (componentFullType) {\r\n        checkClassType(componentFullType); // If only static type declared, we assign it to prototype mandatorily.\r\n\r\n        clz.prototype.type = componentFullType;\r\n        var componentTypeInfo = parseClassType(componentFullType);\r\n\r\n        if (!componentTypeInfo.sub) {\r\n          {\r\n            if (storage[componentTypeInfo.main]) {\r\n              console.warn(componentTypeInfo.main + ' exists.');\r\n            }\r\n          }\r\n          storage[componentTypeInfo.main] = clz;\r\n        } else if (componentTypeInfo.sub !== IS_CONTAINER) {\r\n          var container = makeContainer(componentTypeInfo);\r\n          container[componentTypeInfo.sub] = clz;\r\n        }\r\n      }\r\n\r\n      return clz;\r\n    };\r\n\r\n    target.getClass = function (mainType, subType, throwWhenNotFound) {\r\n      var clz = storage[mainType];\r\n\r\n      if (clz && clz[IS_CONTAINER]) {\r\n        clz = subType ? clz[subType] : null;\r\n      }\r\n\r\n      if (throwWhenNotFound && !clz) {\r\n        throw new Error(!subType ? mainType + '.' + 'type should be specified.' : 'Component ' + mainType + '.' + (subType || '') + ' not exists. Load it first.');\r\n      }\r\n\r\n      return clz;\r\n    };\r\n\r\n    target.getClassesByMainType = function (componentType) {\r\n      var componentTypeInfo = parseClassType(componentType);\r\n      var result = [];\r\n      var obj = storage[componentTypeInfo.main];\r\n\r\n      if (obj && obj[IS_CONTAINER]) {\r\n        each$1(obj, function (o, type) {\r\n          type !== IS_CONTAINER && result.push(o);\r\n        });\r\n      } else {\r\n        result.push(obj);\r\n      }\r\n\r\n      return result;\r\n    };\r\n\r\n    target.hasClass = function (componentType) {\r\n      // Just consider componentType.main.\r\n      var componentTypeInfo = parseClassType(componentType);\r\n      return !!storage[componentTypeInfo.main];\r\n    };\r\n    /**\r\n     * @return Like ['aa', 'bb'], but can not be ['aa.xx']\r\n     */\r\n\r\n\r\n    target.getAllClassMainTypes = function () {\r\n      var types = [];\r\n      each$1(storage, function (obj, type) {\r\n        types.push(type);\r\n      });\r\n      return types;\r\n    };\r\n    /**\r\n     * If a main type is container and has sub types\r\n     */\r\n\r\n\r\n    target.hasSubTypes = function (componentType) {\r\n      var componentTypeInfo = parseClassType(componentType);\r\n      var obj = storage[componentTypeInfo.main];\r\n      return obj && obj[IS_CONTAINER];\r\n    };\r\n\r\n    function makeContainer(componentTypeInfo) {\r\n      var container = storage[componentTypeInfo.main];\r\n\r\n      if (!container || !container[IS_CONTAINER]) {\r\n        container = storage[componentTypeInfo.main] = {};\r\n        container[IS_CONTAINER] = true;\r\n      }\r\n\r\n      return container;\r\n    }\r\n  } // /**\r\n  //  * @param {string|Array.<string>} properties\r\n  //  */\r\n  // export function setReadOnly(obj, properties) {\r\n  // FIXME It seems broken in IE8 simulation of IE11\r\n  // if (!zrUtil.isArray(properties)) {\r\n  //     properties = properties != null ? [properties] : [];\r\n  // }\r\n  // zrUtil.each(properties, function (prop) {\r\n  //     let value = obj[prop];\r\n  //     Object.defineProperty\r\n  //         && Object.defineProperty(obj, prop, {\r\n  //             value: value, writable: false\r\n  //         });\r\n  //     zrUtil.isArray(obj[prop])\r\n  //         && Object.freeze\r\n  //         && Object.freeze(obj[prop]);\r\n  // });\r\n  // }\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n  // TODO Parse shadow style\r\n  // TODO Only shallow path support\r\n\r\n\r\n  function makeStyleMapper(properties, ignoreParent) {\r\n    // Normalize\r\n    for (var i = 0; i < properties.length; i++) {\r\n      if (!properties[i][1]) {\r\n        properties[i][1] = properties[i][0];\r\n      }\r\n    }\r\n\r\n    ignoreParent = ignoreParent || false;\r\n    return function (model, excludes, includes) {\r\n      var style = {};\r\n\r\n      for (var i = 0; i < properties.length; i++) {\r\n        var propName = properties[i][1];\r\n\r\n        if (excludes && indexOf$1(excludes, propName) >= 0 || includes && indexOf$1(includes, propName) < 0) {\r\n          continue;\r\n        }\r\n\r\n        var val = model.getShallow(propName, ignoreParent);\r\n\r\n        if (val != null) {\r\n          style[properties[i][0]] = val;\r\n        }\r\n      } // TODO Text or image?\r\n\r\n\r\n      return style;\r\n    };\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var AREA_STYLE_KEY_MAP = [['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor'] // Option decal is in `DecalObject` but style.decal is in `PatternObject`.\r\n  // So do not transfer decal directly.\r\n  ];\r\n  var getAreaStyle = makeStyleMapper(AREA_STYLE_KEY_MAP);\r\n\r\n  var AreaStyleMixin =\r\n  /** @class */\r\n  function () {\r\n    function AreaStyleMixin() {}\r\n\r\n    AreaStyleMixin.prototype.getAreaStyle = function (excludes, includes) {\r\n      return getAreaStyle(this, excludes, includes);\r\n    };\r\n\r\n    return AreaStyleMixin;\r\n  }();\r\n\r\n  var globalImageCache = new LRU(50);\r\n\r\n  function findExistImage(newImageOrSrc) {\r\n    if (typeof newImageOrSrc === 'string') {\r\n      var cachedImgObj = globalImageCache.get(newImageOrSrc);\r\n      return cachedImgObj && cachedImgObj.image;\r\n    } else {\r\n      return newImageOrSrc;\r\n    }\r\n  }\r\n\r\n  function createOrUpdateImage(newImageOrSrc, image, hostEl, onload, cbPayload) {\r\n    if (!newImageOrSrc) {\r\n      return image;\r\n    } else if (typeof newImageOrSrc === 'string') {\r\n      if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\r\n        return image;\r\n      }\r\n\r\n      var cachedImgObj = globalImageCache.get(newImageOrSrc);\r\n      var pendingWrap = {\r\n        hostEl: hostEl,\r\n        cb: onload,\r\n        cbPayload: cbPayload\r\n      };\r\n\r\n      if (cachedImgObj) {\r\n        image = cachedImgObj.image;\r\n        !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\r\n      } else {\r\n        image = new Image();\r\n        image.onload = image.onerror = imageOnLoad;\r\n        globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\r\n          image: image,\r\n          pending: [pendingWrap]\r\n        });\r\n        image.src = image.__zrImageSrc = newImageOrSrc;\r\n      }\r\n\r\n      return image;\r\n    } else {\r\n      return newImageOrSrc;\r\n    }\r\n  }\r\n\r\n  function imageOnLoad() {\r\n    var cachedImgObj = this.__cachedImgObj;\r\n    this.onload = this.onerror = this.__cachedImgObj = null;\r\n\r\n    for (var i = 0; i < cachedImgObj.pending.length; i++) {\r\n      var pendingWrap = cachedImgObj.pending[i];\r\n      var cb = pendingWrap.cb;\r\n      cb && cb(this, pendingWrap.cbPayload);\r\n      pendingWrap.hostEl.dirty();\r\n    }\r\n\r\n    cachedImgObj.pending.length = 0;\r\n  }\r\n\r\n  function isImageReady(image) {\r\n    return image && image.width && image.height;\r\n  }\r\n\r\n  var STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\r\n\r\n  function truncateText(text, containerWidth, font, ellipsis, options) {\r\n    if (!containerWidth) {\r\n      return '';\r\n    }\r\n\r\n    var textLines = (text + '').split('\\n');\r\n    options = prepareTruncateOptions(containerWidth, font, ellipsis, options);\r\n\r\n    for (var i = 0, len = textLines.length; i < len; i++) {\r\n      textLines[i] = truncateSingleLine(textLines[i], options);\r\n    }\r\n\r\n    return textLines.join('\\n');\r\n  }\r\n\r\n  function prepareTruncateOptions(containerWidth, font, ellipsis, options) {\r\n    options = options || {};\r\n    var preparedOpts = extend({}, options);\r\n    preparedOpts.font = font;\r\n    ellipsis = retrieve2(ellipsis, '...');\r\n    preparedOpts.maxIterations = retrieve2(options.maxIterations, 2);\r\n    var minChar = preparedOpts.minChar = retrieve2(options.minChar, 0);\r\n    preparedOpts.cnCharWidth = getWidth('国', font);\r\n    var ascCharWidth = preparedOpts.ascCharWidth = getWidth('a', font);\r\n    preparedOpts.placeholder = retrieve2(options.placeholder, '');\r\n    var contentWidth = containerWidth = Math.max(0, containerWidth - 1);\r\n\r\n    for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\r\n      contentWidth -= ascCharWidth;\r\n    }\r\n\r\n    var ellipsisWidth = getWidth(ellipsis, font);\r\n\r\n    if (ellipsisWidth > contentWidth) {\r\n      ellipsis = '';\r\n      ellipsisWidth = 0;\r\n    }\r\n\r\n    contentWidth = containerWidth - ellipsisWidth;\r\n    preparedOpts.ellipsis = ellipsis;\r\n    preparedOpts.ellipsisWidth = ellipsisWidth;\r\n    preparedOpts.contentWidth = contentWidth;\r\n    preparedOpts.containerWidth = containerWidth;\r\n    return preparedOpts;\r\n  }\r\n\r\n  function truncateSingleLine(textLine, options) {\r\n    var containerWidth = options.containerWidth;\r\n    var font = options.font;\r\n    var contentWidth = options.contentWidth;\r\n\r\n    if (!containerWidth) {\r\n      return '';\r\n    }\r\n\r\n    var lineWidth = getWidth(textLine, font);\r\n\r\n    if (lineWidth <= containerWidth) {\r\n      return textLine;\r\n    }\r\n\r\n    for (var j = 0;; j++) {\r\n      if (lineWidth <= contentWidth || j >= options.maxIterations) {\r\n        textLine += options.ellipsis;\r\n        break;\r\n      }\r\n\r\n      var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\r\n      textLine = textLine.substr(0, subLength);\r\n      lineWidth = getWidth(textLine, font);\r\n    }\r\n\r\n    if (textLine === '') {\r\n      textLine = options.placeholder;\r\n    }\r\n\r\n    return textLine;\r\n  }\r\n\r\n  function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\r\n    var width = 0;\r\n    var i = 0;\r\n\r\n    for (var len = text.length; i < len && width < contentWidth; i++) {\r\n      var charCode = text.charCodeAt(i);\r\n      width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\r\n    }\r\n\r\n    return i;\r\n  }\r\n\r\n  function parsePlainText(text, style) {\r\n    text != null && (text += '');\r\n    var overflow = style.overflow;\r\n    var padding = style.padding;\r\n    var font = style.font;\r\n    var truncate = overflow === 'truncate';\r\n    var calculatedLineHeight = getLineHeight(font);\r\n    var lineHeight = retrieve2(style.lineHeight, calculatedLineHeight);\r\n    var truncateLineOverflow = style.lineOverflow === 'truncate';\r\n    var width = style.width;\r\n    var lines;\r\n\r\n    if (width != null && overflow === 'break' || overflow === 'breakAll') {\r\n      lines = text ? wrapText(text, style.font, width, overflow === 'breakAll', 0).lines : [];\r\n    } else {\r\n      lines = text ? text.split('\\n') : [];\r\n    }\r\n\r\n    var contentHeight = lines.length * lineHeight;\r\n    var height = retrieve2(style.height, contentHeight);\r\n\r\n    if (contentHeight > height && truncateLineOverflow) {\r\n      var lineCount = Math.floor(height / lineHeight);\r\n      lines = lines.slice(0, lineCount);\r\n    }\r\n\r\n    var outerHeight = height;\r\n    var outerWidth = width;\r\n\r\n    if (padding) {\r\n      outerHeight += padding[0] + padding[2];\r\n\r\n      if (outerWidth != null) {\r\n        outerWidth += padding[1] + padding[3];\r\n      }\r\n    }\r\n\r\n    if (text && truncate && outerWidth != null) {\r\n      var options = prepareTruncateOptions(width, font, style.ellipsis, {\r\n        minChar: style.truncateMinChar,\r\n        placeholder: style.placeholder\r\n      });\r\n\r\n      for (var i = 0; i < lines.length; i++) {\r\n        lines[i] = truncateSingleLine(lines[i], options);\r\n      }\r\n    }\r\n\r\n    if (width == null) {\r\n      var maxWidth = 0;\r\n\r\n      for (var i = 0; i < lines.length; i++) {\r\n        maxWidth = Math.max(getWidth(lines[i], font), maxWidth);\r\n      }\r\n\r\n      width = maxWidth;\r\n    }\r\n\r\n    return {\r\n      lines: lines,\r\n      height: height,\r\n      outerHeight: outerHeight,\r\n      lineHeight: lineHeight,\r\n      calculatedLineHeight: calculatedLineHeight,\r\n      contentHeight: contentHeight,\r\n      width: width\r\n    };\r\n  }\r\n\r\n  var RichTextToken = function () {\r\n    function RichTextToken() {}\r\n\r\n    return RichTextToken;\r\n  }();\r\n\r\n  var RichTextLine = function () {\r\n    function RichTextLine(tokens) {\r\n      this.tokens = [];\r\n\r\n      if (tokens) {\r\n        this.tokens = tokens;\r\n      }\r\n    }\r\n\r\n    return RichTextLine;\r\n  }();\r\n\r\n  var RichTextContentBlock = function () {\r\n    function RichTextContentBlock() {\r\n      this.width = 0;\r\n      this.height = 0;\r\n      this.contentWidth = 0;\r\n      this.contentHeight = 0;\r\n      this.outerWidth = 0;\r\n      this.outerHeight = 0;\r\n      this.lines = [];\r\n    }\r\n\r\n    return RichTextContentBlock;\r\n  }();\r\n\r\n  function parseRichText(text, style) {\r\n    var contentBlock = new RichTextContentBlock();\r\n    text != null && (text += '');\r\n\r\n    if (!text) {\r\n      return contentBlock;\r\n    }\r\n\r\n    var topWidth = style.width;\r\n    var topHeight = style.height;\r\n    var overflow = style.overflow;\r\n    var wrapInfo = (overflow === 'break' || overflow === 'breakAll') && topWidth != null ? {\r\n      width: topWidth,\r\n      accumWidth: 0,\r\n      breakAll: overflow === 'breakAll'\r\n    } : null;\r\n    var lastIndex = STYLE_REG.lastIndex = 0;\r\n    var result;\r\n\r\n    while ((result = STYLE_REG.exec(text)) != null) {\r\n      var matchedIndex = result.index;\r\n\r\n      if (matchedIndex > lastIndex) {\r\n        pushTokens(contentBlock, text.substring(lastIndex, matchedIndex), style, wrapInfo);\r\n      }\r\n\r\n      pushTokens(contentBlock, result[2], style, wrapInfo, result[1]);\r\n      lastIndex = STYLE_REG.lastIndex;\r\n    }\r\n\r\n    if (lastIndex < text.length) {\r\n      pushTokens(contentBlock, text.substring(lastIndex, text.length), style, wrapInfo);\r\n    }\r\n\r\n    var pendingList = [];\r\n    var calculatedHeight = 0;\r\n    var calculatedWidth = 0;\r\n    var stlPadding = style.padding;\r\n    var truncate = overflow === 'truncate';\r\n    var truncateLine = style.lineOverflow === 'truncate';\r\n\r\n    function finishLine(line, lineWidth, lineHeight) {\r\n      line.width = lineWidth;\r\n      line.lineHeight = lineHeight;\r\n      calculatedHeight += lineHeight;\r\n      calculatedWidth = Math.max(calculatedWidth, lineWidth);\r\n    }\r\n\r\n    outer: for (var i = 0; i < contentBlock.lines.length; i++) {\r\n      var line = contentBlock.lines[i];\r\n      var lineHeight = 0;\r\n      var lineWidth = 0;\r\n\r\n      for (var j = 0; j < line.tokens.length; j++) {\r\n        var token = line.tokens[j];\r\n        var tokenStyle = token.styleName && style.rich[token.styleName] || {};\r\n        var textPadding = token.textPadding = tokenStyle.padding;\r\n        var paddingH = textPadding ? textPadding[1] + textPadding[3] : 0;\r\n        var font = token.font = tokenStyle.font || style.font;\r\n        token.contentHeight = getLineHeight(font);\r\n        var tokenHeight = retrieve2(tokenStyle.height, token.contentHeight);\r\n        token.innerHeight = tokenHeight;\r\n        textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\r\n        token.height = tokenHeight;\r\n        token.lineHeight = retrieve3(tokenStyle.lineHeight, style.lineHeight, tokenHeight);\r\n        token.align = tokenStyle && tokenStyle.align || style.align;\r\n        token.verticalAlign = tokenStyle && tokenStyle.verticalAlign || 'middle';\r\n\r\n        if (truncateLine && topHeight != null && calculatedHeight + token.lineHeight > topHeight) {\r\n          if (j > 0) {\r\n            line.tokens = line.tokens.slice(0, j);\r\n            finishLine(line, lineWidth, lineHeight);\r\n            contentBlock.lines = contentBlock.lines.slice(0, i + 1);\r\n          } else {\r\n            contentBlock.lines = contentBlock.lines.slice(0, i);\r\n          }\r\n\r\n          break outer;\r\n        }\r\n\r\n        var styleTokenWidth = tokenStyle.width;\r\n        var tokenWidthNotSpecified = styleTokenWidth == null || styleTokenWidth === 'auto';\r\n\r\n        if (typeof styleTokenWidth === 'string' && styleTokenWidth.charAt(styleTokenWidth.length - 1) === '%') {\r\n          token.percentWidth = styleTokenWidth;\r\n          pendingList.push(token);\r\n          token.contentWidth = getWidth(token.text, font);\r\n        } else {\r\n          if (tokenWidthNotSpecified) {\r\n            var textBackgroundColor = tokenStyle.backgroundColor;\r\n            var bgImg = textBackgroundColor && textBackgroundColor.image;\r\n\r\n            if (bgImg) {\r\n              bgImg = findExistImage(bgImg);\r\n\r\n              if (isImageReady(bgImg)) {\r\n                token.width = Math.max(token.width, bgImg.width * tokenHeight / bgImg.height);\r\n              }\r\n            }\r\n          }\r\n\r\n          var remainTruncWidth = truncate && topWidth != null ? topWidth - lineWidth : null;\r\n\r\n          if (remainTruncWidth != null && remainTruncWidth < token.width) {\r\n            if (!tokenWidthNotSpecified || remainTruncWidth < paddingH) {\r\n              token.text = '';\r\n              token.width = token.contentWidth = 0;\r\n            } else {\r\n              token.text = truncateText(token.text, remainTruncWidth - paddingH, font, style.ellipsis, {\r\n                minChar: style.truncateMinChar\r\n              });\r\n              token.width = token.contentWidth = getWidth(token.text, font);\r\n            }\r\n          } else {\r\n            token.contentWidth = getWidth(token.text, font);\r\n          }\r\n        }\r\n\r\n        token.width += paddingH;\r\n        lineWidth += token.width;\r\n        tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\r\n      }\r\n\r\n      finishLine(line, lineWidth, lineHeight);\r\n    }\r\n\r\n    contentBlock.outerWidth = contentBlock.width = retrieve2(topWidth, calculatedWidth);\r\n    contentBlock.outerHeight = contentBlock.height = retrieve2(topHeight, calculatedHeight);\r\n    contentBlock.contentHeight = calculatedHeight;\r\n    contentBlock.contentWidth = calculatedWidth;\r\n\r\n    if (stlPadding) {\r\n      contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\r\n      contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\r\n    }\r\n\r\n    for (var i = 0; i < pendingList.length; i++) {\r\n      var token = pendingList[i];\r\n      var percentWidth = token.percentWidth;\r\n      token.width = parseInt(percentWidth, 10) / 100 * contentBlock.width;\r\n    }\r\n\r\n    return contentBlock;\r\n  }\r\n\r\n  function pushTokens(block, str, style, wrapInfo, styleName) {\r\n    var isEmptyStr = str === '';\r\n    var tokenStyle = styleName && style.rich[styleName] || {};\r\n    var lines = block.lines;\r\n    var font = tokenStyle.font || style.font;\r\n    var newLine = false;\r\n    var strLines;\r\n    var linesWidths;\r\n\r\n    if (wrapInfo) {\r\n      var tokenPadding = tokenStyle.padding;\r\n      var tokenPaddingH = tokenPadding ? tokenPadding[1] + tokenPadding[3] : 0;\r\n\r\n      if (tokenStyle.width != null && tokenStyle.width !== 'auto') {\r\n        var outerWidth_1 = parsePercent$2(tokenStyle.width, wrapInfo.width) + tokenPaddingH;\r\n\r\n        if (lines.length > 0) {\r\n          if (outerWidth_1 + wrapInfo.accumWidth > wrapInfo.width) {\r\n            strLines = str.split('\\n');\r\n            newLine = true;\r\n          }\r\n        }\r\n\r\n        wrapInfo.accumWidth = outerWidth_1;\r\n      } else {\r\n        var res = wrapText(str, font, wrapInfo.width, wrapInfo.breakAll, wrapInfo.accumWidth);\r\n        wrapInfo.accumWidth = res.accumWidth + tokenPaddingH;\r\n        linesWidths = res.linesWidths;\r\n        strLines = res.lines;\r\n      }\r\n    } else {\r\n      strLines = str.split('\\n');\r\n    }\r\n\r\n    for (var i = 0; i < strLines.length; i++) {\r\n      var text = strLines[i];\r\n      var token = new RichTextToken();\r\n      token.styleName = styleName;\r\n      token.text = text;\r\n      token.isLineHolder = !text && !isEmptyStr;\r\n\r\n      if (typeof tokenStyle.width === 'number') {\r\n        token.width = tokenStyle.width;\r\n      } else {\r\n        token.width = linesWidths ? linesWidths[i] : getWidth(text, font);\r\n      }\r\n\r\n      if (!i && !newLine) {\r\n        var tokens = (lines[lines.length - 1] || (lines[0] = new RichTextLine())).tokens;\r\n        var tokensLen = tokens.length;\r\n        tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : (text || !tokensLen || isEmptyStr) && tokens.push(token);\r\n      } else {\r\n        lines.push(new RichTextLine([token]));\r\n      }\r\n    }\r\n  }\r\n\r\n  function isLatin(ch) {\r\n    var code = ch.charCodeAt(0);\r\n    return code >= 0x21 && code <= 0xFF;\r\n  }\r\n\r\n  var breakCharMap = reduce(',&?/;] '.split(''), function (obj, ch) {\r\n    obj[ch] = true;\r\n    return obj;\r\n  }, {});\r\n\r\n  function isWordBreakChar(ch) {\r\n    if (isLatin(ch)) {\r\n      if (breakCharMap[ch]) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function wrapText(text, font, lineWidth, isBreakAll, lastAccumWidth) {\r\n    var lines = [];\r\n    var linesWidths = [];\r\n    var line = '';\r\n    var currentWord = '';\r\n    var currentWordWidth = 0;\r\n    var accumWidth = 0;\r\n\r\n    for (var i = 0; i < text.length; i++) {\r\n      var ch = text.charAt(i);\r\n\r\n      if (ch === '\\n') {\r\n        if (currentWord) {\r\n          line += currentWord;\r\n          accumWidth += currentWordWidth;\r\n        }\r\n\r\n        lines.push(line);\r\n        linesWidths.push(accumWidth);\r\n        line = '';\r\n        currentWord = '';\r\n        currentWordWidth = 0;\r\n        accumWidth = 0;\r\n        continue;\r\n      }\r\n\r\n      var chWidth = getWidth(ch, font);\r\n      var inWord = isBreakAll ? false : !isWordBreakChar(ch);\r\n\r\n      if (!lines.length ? lastAccumWidth + accumWidth + chWidth > lineWidth : accumWidth + chWidth > lineWidth) {\r\n        if (!accumWidth) {\r\n          if (inWord) {\r\n            lines.push(currentWord);\r\n            linesWidths.push(currentWordWidth);\r\n            currentWord = ch;\r\n            currentWordWidth = chWidth;\r\n          } else {\r\n            lines.push(ch);\r\n            linesWidths.push(chWidth);\r\n          }\r\n        } else if (line || currentWord) {\r\n          if (inWord) {\r\n            if (!line) {\r\n              line = currentWord;\r\n              currentWord = '';\r\n              currentWordWidth = 0;\r\n              accumWidth = currentWordWidth;\r\n            }\r\n\r\n            lines.push(line);\r\n            linesWidths.push(accumWidth - currentWordWidth);\r\n            currentWord += ch;\r\n            currentWordWidth += chWidth;\r\n            line = '';\r\n            accumWidth = currentWordWidth;\r\n          } else {\r\n            if (currentWord) {\r\n              line += currentWord;\r\n              accumWidth += currentWordWidth;\r\n              currentWord = '';\r\n              currentWordWidth = 0;\r\n            }\r\n\r\n            lines.push(line);\r\n            linesWidths.push(accumWidth);\r\n            line = ch;\r\n            accumWidth = chWidth;\r\n          }\r\n        }\r\n\r\n        continue;\r\n      }\r\n\r\n      accumWidth += chWidth;\r\n\r\n      if (inWord) {\r\n        currentWord += ch;\r\n        currentWordWidth += chWidth;\r\n      } else {\r\n        if (currentWord) {\r\n          line += currentWord;\r\n          currentWord = '';\r\n          currentWordWidth = 0;\r\n        }\r\n\r\n        line += ch;\r\n      }\r\n    }\r\n\r\n    if (!lines.length && !line) {\r\n      line = text;\r\n      currentWord = '';\r\n      currentWordWidth = 0;\r\n    }\r\n\r\n    if (currentWord) {\r\n      line += currentWord;\r\n    }\r\n\r\n    if (line) {\r\n      lines.push(line);\r\n      linesWidths.push(accumWidth);\r\n    }\r\n\r\n    if (lines.length === 1) {\r\n      accumWidth += lastAccumWidth;\r\n    }\r\n\r\n    return {\r\n      accumWidth: accumWidth,\r\n      lines: lines,\r\n      linesWidths: linesWidths\r\n    };\r\n  }\r\n\r\n  function parsePercent$2(value, maxValue) {\r\n    if (typeof value === 'string') {\r\n      if (value.lastIndexOf('%') >= 0) {\r\n        return parseFloat(value) / 100 * maxValue;\r\n      }\r\n\r\n      return parseFloat(value);\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  var STYLE_MAGIC_KEY = '__zr_style_' + Math.round(Math.random() * 10);\r\n  var DEFAULT_COMMON_STYLE = {\r\n    shadowBlur: 0,\r\n    shadowOffsetX: 0,\r\n    shadowOffsetY: 0,\r\n    shadowColor: '#000',\r\n    opacity: 1,\r\n    blend: 'source-over'\r\n  };\r\n  var DEFAULT_COMMON_ANIMATION_PROPS = {\r\n    style: {\r\n      shadowBlur: true,\r\n      shadowOffsetX: true,\r\n      shadowOffsetY: true,\r\n      shadowColor: true,\r\n      opacity: true\r\n    }\r\n  };\r\n  DEFAULT_COMMON_STYLE[STYLE_MAGIC_KEY] = true;\r\n  var PRIMARY_STATES_KEYS$1 = ['z', 'z2', 'invisible'];\r\n\r\n  var Displayable = function (_super) {\r\n    __extends(Displayable, _super);\r\n\r\n    function Displayable(props) {\r\n      return _super.call(this, props) || this;\r\n    }\r\n\r\n    Displayable.prototype._init = function (props) {\r\n      var keysArr = keys(props);\r\n\r\n      for (var i = 0; i < keysArr.length; i++) {\r\n        var key = keysArr[i];\r\n\r\n        if (key === 'style') {\r\n          this.useStyle(props[key]);\r\n        } else {\r\n          _super.prototype.attrKV.call(this, key, props[key]);\r\n        }\r\n      }\r\n\r\n      if (!this.style) {\r\n        this.useStyle({});\r\n      }\r\n    };\r\n\r\n    Displayable.prototype.beforeBrush = function () {};\r\n\r\n    Displayable.prototype.afterBrush = function () {};\r\n\r\n    Displayable.prototype.innerBeforeBrush = function () {};\r\n\r\n    Displayable.prototype.innerAfterBrush = function () {};\r\n\r\n    Displayable.prototype.shouldBePainted = function (viewWidth, viewHeight, considerClipPath, considerAncestors) {\r\n      var m = this.transform;\r\n\r\n      if (this.ignore || this.invisible || this.style.opacity === 0 || this.culling && isDisplayableCulled(this, viewWidth, viewHeight) || m && !m[0] && !m[3]) {\r\n        return false;\r\n      }\r\n\r\n      if (considerClipPath && this.__clipPaths) {\r\n        for (var i = 0; i < this.__clipPaths.length; ++i) {\r\n          if (this.__clipPaths[i].isZeroArea()) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (considerAncestors && this.parent) {\r\n        var parent_1 = this.parent;\r\n\r\n        while (parent_1) {\r\n          if (parent_1.ignore) {\r\n            return false;\r\n          }\r\n\r\n          parent_1 = parent_1.parent;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    };\r\n\r\n    Displayable.prototype.contain = function (x, y) {\r\n      return this.rectContain(x, y);\r\n    };\r\n\r\n    Displayable.prototype.traverse = function (cb, context) {\r\n      cb.call(context, this);\r\n    };\r\n\r\n    Displayable.prototype.rectContain = function (x, y) {\r\n      var coord = this.transformCoordToLocal(x, y);\r\n      var rect = this.getBoundingRect();\r\n      return rect.contain(coord[0], coord[1]);\r\n    };\r\n\r\n    Displayable.prototype.getPaintRect = function () {\r\n      var rect = this._paintRect;\r\n\r\n      if (!this._paintRect || this.__dirty) {\r\n        var transform = this.transform;\r\n        var elRect = this.getBoundingRect();\r\n        var style = this.style;\r\n        var shadowSize = style.shadowBlur || 0;\r\n        var shadowOffsetX = style.shadowOffsetX || 0;\r\n        var shadowOffsetY = style.shadowOffsetY || 0;\r\n        rect = this._paintRect || (this._paintRect = new BoundingRect(0, 0, 0, 0));\r\n\r\n        if (transform) {\r\n          BoundingRect.applyTransform(rect, elRect, transform);\r\n        } else {\r\n          rect.copy(elRect);\r\n        }\r\n\r\n        if (shadowSize || shadowOffsetX || shadowOffsetY) {\r\n          rect.width += shadowSize * 2 + Math.abs(shadowOffsetX);\r\n          rect.height += shadowSize * 2 + Math.abs(shadowOffsetY);\r\n          rect.x = Math.min(rect.x, rect.x + shadowOffsetX - shadowSize);\r\n          rect.y = Math.min(rect.y, rect.y + shadowOffsetY - shadowSize);\r\n        }\r\n\r\n        var tolerance = this.dirtyRectTolerance;\r\n\r\n        if (!rect.isZero()) {\r\n          rect.x = Math.floor(rect.x - tolerance);\r\n          rect.y = Math.floor(rect.y - tolerance);\r\n          rect.width = Math.ceil(rect.width + 1 + tolerance * 2);\r\n          rect.height = Math.ceil(rect.height + 1 + tolerance * 2);\r\n        }\r\n      }\r\n\r\n      return rect;\r\n    };\r\n\r\n    Displayable.prototype.setPrevPaintRect = function (paintRect) {\r\n      if (paintRect) {\r\n        this._prevPaintRect = this._prevPaintRect || new BoundingRect(0, 0, 0, 0);\r\n\r\n        this._prevPaintRect.copy(paintRect);\r\n      } else {\r\n        this._prevPaintRect = null;\r\n      }\r\n    };\r\n\r\n    Displayable.prototype.getPrevPaintRect = function () {\r\n      return this._prevPaintRect;\r\n    };\r\n\r\n    Displayable.prototype.animateStyle = function (loop) {\r\n      return this.animate('style', loop);\r\n    };\r\n\r\n    Displayable.prototype.updateDuringAnimation = function (targetKey) {\r\n      if (targetKey === 'style') {\r\n        this.dirtyStyle();\r\n      } else {\r\n        this.markRedraw();\r\n      }\r\n    };\r\n\r\n    Displayable.prototype.attrKV = function (key, value) {\r\n      if (key !== 'style') {\r\n        _super.prototype.attrKV.call(this, key, value);\r\n      } else {\r\n        if (!this.style) {\r\n          this.useStyle(value);\r\n        } else {\r\n          this.setStyle(value);\r\n        }\r\n      }\r\n    };\r\n\r\n    Displayable.prototype.setStyle = function (keyOrObj, value) {\r\n      if (typeof keyOrObj === 'string') {\r\n        this.style[keyOrObj] = value;\r\n      } else {\r\n        extend(this.style, keyOrObj);\r\n      }\r\n\r\n      this.dirtyStyle();\r\n      return this;\r\n    };\r\n\r\n    Displayable.prototype.dirtyStyle = function () {\r\n      this.markRedraw();\r\n      this.__dirty |= Displayable.STYLE_CHANGED_BIT;\r\n\r\n      if (this._rect) {\r\n        this._rect = null;\r\n      }\r\n    };\r\n\r\n    Displayable.prototype.dirty = function () {\r\n      this.dirtyStyle();\r\n    };\r\n\r\n    Displayable.prototype.styleChanged = function () {\r\n      return !!(this.__dirty & Displayable.STYLE_CHANGED_BIT);\r\n    };\r\n\r\n    Displayable.prototype.styleUpdated = function () {\r\n      this.__dirty &= ~Displayable.STYLE_CHANGED_BIT;\r\n    };\r\n\r\n    Displayable.prototype.createStyle = function (obj) {\r\n      return createObject(DEFAULT_COMMON_STYLE, obj);\r\n    };\r\n\r\n    Displayable.prototype.useStyle = function (obj) {\r\n      if (!obj[STYLE_MAGIC_KEY]) {\r\n        obj = this.createStyle(obj);\r\n      }\r\n\r\n      if (this.__inHover) {\r\n        this.__hoverStyle = obj;\r\n      } else {\r\n        this.style = obj;\r\n      }\r\n\r\n      this.dirtyStyle();\r\n    };\r\n\r\n    Displayable.prototype.isStyleObject = function (obj) {\r\n      return obj[STYLE_MAGIC_KEY];\r\n    };\r\n\r\n    Displayable.prototype._innerSaveToNormal = function (toState) {\r\n      _super.prototype._innerSaveToNormal.call(this, toState);\r\n\r\n      var normalState = this._normalState;\r\n\r\n      if (toState.style && !normalState.style) {\r\n        normalState.style = this._mergeStyle(this.createStyle(), this.style);\r\n      }\r\n\r\n      this._savePrimaryToNormal(toState, normalState, PRIMARY_STATES_KEYS$1);\r\n    };\r\n\r\n    Displayable.prototype._applyStateObj = function (stateName, state, normalState, keepCurrentStates, transition, animationCfg) {\r\n      _super.prototype._applyStateObj.call(this, stateName, state, normalState, keepCurrentStates, transition, animationCfg);\r\n\r\n      var needsRestoreToNormal = !(state && keepCurrentStates);\r\n      var targetStyle;\r\n\r\n      if (state && state.style) {\r\n        if (transition) {\r\n          if (keepCurrentStates) {\r\n            targetStyle = state.style;\r\n          } else {\r\n            targetStyle = this._mergeStyle(this.createStyle(), normalState.style);\r\n\r\n            this._mergeStyle(targetStyle, state.style);\r\n          }\r\n        } else {\r\n          targetStyle = this._mergeStyle(this.createStyle(), keepCurrentStates ? this.style : normalState.style);\r\n\r\n          this._mergeStyle(targetStyle, state.style);\r\n        }\r\n      } else if (needsRestoreToNormal) {\r\n        targetStyle = normalState.style;\r\n      }\r\n\r\n      if (targetStyle) {\r\n        if (transition) {\r\n          var sourceStyle = this.style;\r\n          this.style = this.createStyle(needsRestoreToNormal ? {} : sourceStyle);\r\n\r\n          if (needsRestoreToNormal) {\r\n            var changedKeys = keys(sourceStyle);\r\n\r\n            for (var i = 0; i < changedKeys.length; i++) {\r\n              var key = changedKeys[i];\r\n\r\n              if (key in targetStyle) {\r\n                targetStyle[key] = targetStyle[key];\r\n                this.style[key] = sourceStyle[key];\r\n              }\r\n            }\r\n          }\r\n\r\n          var targetKeys = keys(targetStyle);\r\n\r\n          for (var i = 0; i < targetKeys.length; i++) {\r\n            var key = targetKeys[i];\r\n            this.style[key] = this.style[key];\r\n          }\r\n\r\n          this._transitionState(stateName, {\r\n            style: targetStyle\r\n          }, animationCfg, this.getAnimationStyleProps());\r\n        } else {\r\n          this.useStyle(targetStyle);\r\n        }\r\n      }\r\n\r\n      for (var i = 0; i < PRIMARY_STATES_KEYS$1.length; i++) {\r\n        var key = PRIMARY_STATES_KEYS$1[i];\r\n\r\n        if (state && state[key] != null) {\r\n          this[key] = state[key];\r\n        } else if (needsRestoreToNormal) {\r\n          if (normalState[key] != null) {\r\n            this[key] = normalState[key];\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    Displayable.prototype._mergeStates = function (states) {\r\n      var mergedState = _super.prototype._mergeStates.call(this, states);\r\n\r\n      var mergedStyle;\r\n\r\n      for (var i = 0; i < states.length; i++) {\r\n        var state = states[i];\r\n\r\n        if (state.style) {\r\n          mergedStyle = mergedStyle || {};\r\n\r\n          this._mergeStyle(mergedStyle, state.style);\r\n        }\r\n      }\r\n\r\n      if (mergedStyle) {\r\n        mergedState.style = mergedStyle;\r\n      }\r\n\r\n      return mergedState;\r\n    };\r\n\r\n    Displayable.prototype._mergeStyle = function (targetStyle, sourceStyle) {\r\n      extend(targetStyle, sourceStyle);\r\n      return targetStyle;\r\n    };\r\n\r\n    Displayable.prototype.getAnimationStyleProps = function () {\r\n      return DEFAULT_COMMON_ANIMATION_PROPS;\r\n    };\r\n\r\n    Displayable.STYLE_CHANGED_BIT = 2;\r\n\r\n    Displayable.initDefaultProps = function () {\r\n      var dispProto = Displayable.prototype;\r\n      dispProto.type = 'displayable';\r\n      dispProto.invisible = false;\r\n      dispProto.z = 0;\r\n      dispProto.z2 = 0;\r\n      dispProto.zlevel = 0;\r\n      dispProto.culling = false;\r\n      dispProto.cursor = 'pointer';\r\n      dispProto.rectHover = false;\r\n      dispProto.incremental = false;\r\n      dispProto._rect = null;\r\n      dispProto.dirtyRectTolerance = 0;\r\n      dispProto.__dirty = Element.REDARAW_BIT | Displayable.STYLE_CHANGED_BIT;\r\n    }();\r\n\r\n    return Displayable;\r\n  }(Element);\r\n\r\n  var tmpRect = new BoundingRect(0, 0, 0, 0);\r\n  var viewRect = new BoundingRect(0, 0, 0, 0);\r\n\r\n  function isDisplayableCulled(el, width, height) {\r\n    tmpRect.copy(el.getBoundingRect());\r\n\r\n    if (el.transform) {\r\n      tmpRect.applyTransform(el.transform);\r\n    }\r\n\r\n    viewRect.width = width;\r\n    viewRect.height = height;\r\n    return !tmpRect.intersect(viewRect);\r\n  }\r\n\r\n  var mathPow = Math.pow;\r\n  var mathSqrt$1 = Math.sqrt;\r\n  var EPSILON$1 = 1e-8;\r\n  var EPSILON_NUMERIC = 1e-4;\r\n  var THREE_SQRT = mathSqrt$1(3);\r\n  var ONE_THIRD = 1 / 3;\r\n\r\n  var _v0 = create();\r\n\r\n  var _v1 = create();\r\n\r\n  var _v2 = create();\r\n\r\n  function isAroundZero(val) {\r\n    return val > -EPSILON$1 && val < EPSILON$1;\r\n  }\r\n\r\n  function isNotAroundZero$1(val) {\r\n    return val > EPSILON$1 || val < -EPSILON$1;\r\n  }\r\n\r\n  function cubicAt(p0, p1, p2, p3, t) {\r\n    var onet = 1 - t;\r\n    return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\r\n  }\r\n\r\n  function cubicDerivativeAt(p0, p1, p2, p3, t) {\r\n    var onet = 1 - t;\r\n    return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\r\n  }\r\n\r\n  function cubicRootAt(p0, p1, p2, p3, val, roots) {\r\n    var a = p3 + 3 * (p1 - p2) - p0;\r\n    var b = 3 * (p2 - p1 * 2 + p0);\r\n    var c = 3 * (p1 - p0);\r\n    var d = p0 - val;\r\n    var A = b * b - 3 * a * c;\r\n    var B = b * c - 9 * a * d;\r\n    var C = c * c - 3 * b * d;\r\n    var n = 0;\r\n\r\n    if (isAroundZero(A) && isAroundZero(B)) {\r\n      if (isAroundZero(b)) {\r\n        roots[0] = 0;\r\n      } else {\r\n        var t1 = -c / b;\r\n\r\n        if (t1 >= 0 && t1 <= 1) {\r\n          roots[n++] = t1;\r\n        }\r\n      }\r\n    } else {\r\n      var disc = B * B - 4 * A * C;\r\n\r\n      if (isAroundZero(disc)) {\r\n        var K = B / A;\r\n        var t1 = -b / a + K;\r\n        var t2 = -K / 2;\r\n\r\n        if (t1 >= 0 && t1 <= 1) {\r\n          roots[n++] = t1;\r\n        }\r\n\r\n        if (t2 >= 0 && t2 <= 1) {\r\n          roots[n++] = t2;\r\n        }\r\n      } else if (disc > 0) {\r\n        var discSqrt = mathSqrt$1(disc);\r\n        var Y1 = A * b + 1.5 * a * (-B + discSqrt);\r\n        var Y2 = A * b + 1.5 * a * (-B - discSqrt);\r\n\r\n        if (Y1 < 0) {\r\n          Y1 = -mathPow(-Y1, ONE_THIRD);\r\n        } else {\r\n          Y1 = mathPow(Y1, ONE_THIRD);\r\n        }\r\n\r\n        if (Y2 < 0) {\r\n          Y2 = -mathPow(-Y2, ONE_THIRD);\r\n        } else {\r\n          Y2 = mathPow(Y2, ONE_THIRD);\r\n        }\r\n\r\n        var t1 = (-b - (Y1 + Y2)) / (3 * a);\r\n\r\n        if (t1 >= 0 && t1 <= 1) {\r\n          roots[n++] = t1;\r\n        }\r\n      } else {\r\n        var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt$1(A * A * A));\r\n        var theta = Math.acos(T) / 3;\r\n        var ASqrt = mathSqrt$1(A);\r\n        var tmp = Math.cos(theta);\r\n        var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\r\n        var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\r\n        var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\r\n\r\n        if (t1 >= 0 && t1 <= 1) {\r\n          roots[n++] = t1;\r\n        }\r\n\r\n        if (t2 >= 0 && t2 <= 1) {\r\n          roots[n++] = t2;\r\n        }\r\n\r\n        if (t3 >= 0 && t3 <= 1) {\r\n          roots[n++] = t3;\r\n        }\r\n      }\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n  function cubicExtrema(p0, p1, p2, p3, extrema) {\r\n    var b = 6 * p2 - 12 * p1 + 6 * p0;\r\n    var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\r\n    var c = 3 * p1 - 3 * p0;\r\n    var n = 0;\r\n\r\n    if (isAroundZero(a)) {\r\n      if (isNotAroundZero$1(b)) {\r\n        var t1 = -c / b;\r\n\r\n        if (t1 >= 0 && t1 <= 1) {\r\n          extrema[n++] = t1;\r\n        }\r\n      }\r\n    } else {\r\n      var disc = b * b - 4 * a * c;\r\n\r\n      if (isAroundZero(disc)) {\r\n        extrema[0] = -b / (2 * a);\r\n      } else if (disc > 0) {\r\n        var discSqrt = mathSqrt$1(disc);\r\n        var t1 = (-b + discSqrt) / (2 * a);\r\n        var t2 = (-b - discSqrt) / (2 * a);\r\n\r\n        if (t1 >= 0 && t1 <= 1) {\r\n          extrema[n++] = t1;\r\n        }\r\n\r\n        if (t2 >= 0 && t2 <= 1) {\r\n          extrema[n++] = t2;\r\n        }\r\n      }\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n  function cubicSubdivide(p0, p1, p2, p3, t, out) {\r\n    var p01 = (p1 - p0) * t + p0;\r\n    var p12 = (p2 - p1) * t + p1;\r\n    var p23 = (p3 - p2) * t + p2;\r\n    var p012 = (p12 - p01) * t + p01;\r\n    var p123 = (p23 - p12) * t + p12;\r\n    var p0123 = (p123 - p012) * t + p012;\r\n    out[0] = p0;\r\n    out[1] = p01;\r\n    out[2] = p012;\r\n    out[3] = p0123;\r\n    out[4] = p0123;\r\n    out[5] = p123;\r\n    out[6] = p23;\r\n    out[7] = p3;\r\n  }\r\n\r\n  function cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\r\n    var t;\r\n    var interval = 0.005;\r\n    var d = Infinity;\r\n    var prev;\r\n    var next;\r\n    var d1;\r\n    var d2;\r\n    _v0[0] = x;\r\n    _v0[1] = y;\r\n\r\n    for (var _t = 0; _t < 1; _t += 0.05) {\r\n      _v1[0] = cubicAt(x0, x1, x2, x3, _t);\r\n      _v1[1] = cubicAt(y0, y1, y2, y3, _t);\r\n      d1 = distSquare(_v0, _v1);\r\n\r\n      if (d1 < d) {\r\n        t = _t;\r\n        d = d1;\r\n      }\r\n    }\r\n\r\n    d = Infinity;\r\n\r\n    for (var i = 0; i < 32; i++) {\r\n      if (interval < EPSILON_NUMERIC) {\r\n        break;\r\n      }\r\n\r\n      prev = t - interval;\r\n      next = t + interval;\r\n      _v1[0] = cubicAt(x0, x1, x2, x3, prev);\r\n      _v1[1] = cubicAt(y0, y1, y2, y3, prev);\r\n      d1 = distSquare(_v1, _v0);\r\n\r\n      if (prev >= 0 && d1 < d) {\r\n        t = prev;\r\n        d = d1;\r\n      } else {\r\n        _v2[0] = cubicAt(x0, x1, x2, x3, next);\r\n        _v2[1] = cubicAt(y0, y1, y2, y3, next);\r\n        d2 = distSquare(_v2, _v0);\r\n\r\n        if (next <= 1 && d2 < d) {\r\n          t = next;\r\n          d = d2;\r\n        } else {\r\n          interval *= 0.5;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (out) {\r\n      out[0] = cubicAt(x0, x1, x2, x3, t);\r\n      out[1] = cubicAt(y0, y1, y2, y3, t);\r\n    }\r\n\r\n    return mathSqrt$1(d);\r\n  }\r\n\r\n  function cubicLength(x0, y0, x1, y1, x2, y2, x3, y3, iteration) {\r\n    var px = x0;\r\n    var py = y0;\r\n    var d = 0;\r\n    var step = 1 / iteration;\r\n\r\n    for (var i = 1; i <= iteration; i++) {\r\n      var t = i * step;\r\n      var x = cubicAt(x0, x1, x2, x3, t);\r\n      var y = cubicAt(y0, y1, y2, y3, t);\r\n      var dx = x - px;\r\n      var dy = y - py;\r\n      d += Math.sqrt(dx * dx + dy * dy);\r\n      px = x;\r\n      py = y;\r\n    }\r\n\r\n    return d;\r\n  }\r\n\r\n  function quadraticAt(p0, p1, p2, t) {\r\n    var onet = 1 - t;\r\n    return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\r\n  }\r\n\r\n  function quadraticDerivativeAt(p0, p1, p2, t) {\r\n    return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\r\n  }\r\n\r\n  function quadraticRootAt(p0, p1, p2, val, roots) {\r\n    var a = p0 - 2 * p1 + p2;\r\n    var b = 2 * (p1 - p0);\r\n    var c = p0 - val;\r\n    var n = 0;\r\n\r\n    if (isAroundZero(a)) {\r\n      if (isNotAroundZero$1(b)) {\r\n        var t1 = -c / b;\r\n\r\n        if (t1 >= 0 && t1 <= 1) {\r\n          roots[n++] = t1;\r\n        }\r\n      }\r\n    } else {\r\n      var disc = b * b - 4 * a * c;\r\n\r\n      if (isAroundZero(disc)) {\r\n        var t1 = -b / (2 * a);\r\n\r\n        if (t1 >= 0 && t1 <= 1) {\r\n          roots[n++] = t1;\r\n        }\r\n      } else if (disc > 0) {\r\n        var discSqrt = mathSqrt$1(disc);\r\n        var t1 = (-b + discSqrt) / (2 * a);\r\n        var t2 = (-b - discSqrt) / (2 * a);\r\n\r\n        if (t1 >= 0 && t1 <= 1) {\r\n          roots[n++] = t1;\r\n        }\r\n\r\n        if (t2 >= 0 && t2 <= 1) {\r\n          roots[n++] = t2;\r\n        }\r\n      }\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n  function quadraticExtremum(p0, p1, p2) {\r\n    var divider = p0 + p2 - 2 * p1;\r\n\r\n    if (divider === 0) {\r\n      return 0.5;\r\n    } else {\r\n      return (p0 - p1) / divider;\r\n    }\r\n  }\r\n\r\n  function quadraticSubdivide(p0, p1, p2, t, out) {\r\n    var p01 = (p1 - p0) * t + p0;\r\n    var p12 = (p2 - p1) * t + p1;\r\n    var p012 = (p12 - p01) * t + p01;\r\n    out[0] = p0;\r\n    out[1] = p01;\r\n    out[2] = p012;\r\n    out[3] = p012;\r\n    out[4] = p12;\r\n    out[5] = p2;\r\n  }\r\n\r\n  function quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\r\n    var t;\r\n    var interval = 0.005;\r\n    var d = Infinity;\r\n    _v0[0] = x;\r\n    _v0[1] = y;\r\n\r\n    for (var _t = 0; _t < 1; _t += 0.05) {\r\n      _v1[0] = quadraticAt(x0, x1, x2, _t);\r\n      _v1[1] = quadraticAt(y0, y1, y2, _t);\r\n      var d1 = distSquare(_v0, _v1);\r\n\r\n      if (d1 < d) {\r\n        t = _t;\r\n        d = d1;\r\n      }\r\n    }\r\n\r\n    d = Infinity;\r\n\r\n    for (var i = 0; i < 32; i++) {\r\n      if (interval < EPSILON_NUMERIC) {\r\n        break;\r\n      }\r\n\r\n      var prev = t - interval;\r\n      var next = t + interval;\r\n      _v1[0] = quadraticAt(x0, x1, x2, prev);\r\n      _v1[1] = quadraticAt(y0, y1, y2, prev);\r\n      var d1 = distSquare(_v1, _v0);\r\n\r\n      if (prev >= 0 && d1 < d) {\r\n        t = prev;\r\n        d = d1;\r\n      } else {\r\n        _v2[0] = quadraticAt(x0, x1, x2, next);\r\n        _v2[1] = quadraticAt(y0, y1, y2, next);\r\n        var d2 = distSquare(_v2, _v0);\r\n\r\n        if (next <= 1 && d2 < d) {\r\n          t = next;\r\n          d = d2;\r\n        } else {\r\n          interval *= 0.5;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (out) {\r\n      out[0] = quadraticAt(x0, x1, x2, t);\r\n      out[1] = quadraticAt(y0, y1, y2, t);\r\n    }\r\n\r\n    return mathSqrt$1(d);\r\n  }\r\n\r\n  function quadraticLength(x0, y0, x1, y1, x2, y2, iteration) {\r\n    var px = x0;\r\n    var py = y0;\r\n    var d = 0;\r\n    var step = 1 / iteration;\r\n\r\n    for (var i = 1; i <= iteration; i++) {\r\n      var t = i * step;\r\n      var x = quadraticAt(x0, x1, x2, t);\r\n      var y = quadraticAt(y0, y1, y2, t);\r\n      var dx = x - px;\r\n      var dy = y - py;\r\n      d += Math.sqrt(dx * dx + dy * dy);\r\n      px = x;\r\n      py = y;\r\n    }\r\n\r\n    return d;\r\n  }\r\n\r\n  var mathMin$2 = Math.min;\r\n  var mathMax$2 = Math.max;\r\n  var mathSin$1 = Math.sin;\r\n  var mathCos$1 = Math.cos;\r\n  var PI2$1 = Math.PI * 2;\r\n  var start = create();\r\n  var end = create();\r\n  var extremity = create();\r\n\r\n  function fromPoints(points, min$$1, max$$1) {\r\n    if (points.length === 0) {\r\n      return;\r\n    }\r\n\r\n    var p = points[0];\r\n    var left = p[0];\r\n    var right = p[0];\r\n    var top = p[1];\r\n    var bottom = p[1];\r\n\r\n    for (var i = 1; i < points.length; i++) {\r\n      p = points[i];\r\n      left = mathMin$2(left, p[0]);\r\n      right = mathMax$2(right, p[0]);\r\n      top = mathMin$2(top, p[1]);\r\n      bottom = mathMax$2(bottom, p[1]);\r\n    }\r\n\r\n    min$$1[0] = left;\r\n    min$$1[1] = top;\r\n    max$$1[0] = right;\r\n    max$$1[1] = bottom;\r\n  }\r\n\r\n  function fromLine(x0, y0, x1, y1, min$$1, max$$1) {\r\n    min$$1[0] = mathMin$2(x0, x1);\r\n    min$$1[1] = mathMin$2(y0, y1);\r\n    max$$1[0] = mathMax$2(x0, x1);\r\n    max$$1[1] = mathMax$2(y0, y1);\r\n  }\r\n\r\n  var xDim = [];\r\n  var yDim = [];\r\n\r\n  function fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min$$1, max$$1) {\r\n    var cubicExtrema$$1 = cubicExtrema;\r\n    var cubicAt$$1 = cubicAt;\r\n    var n = cubicExtrema$$1(x0, x1, x2, x3, xDim);\r\n    min$$1[0] = Infinity;\r\n    min$$1[1] = Infinity;\r\n    max$$1[0] = -Infinity;\r\n    max$$1[1] = -Infinity;\r\n\r\n    for (var i = 0; i < n; i++) {\r\n      var x = cubicAt$$1(x0, x1, x2, x3, xDim[i]);\r\n      min$$1[0] = mathMin$2(x, min$$1[0]);\r\n      max$$1[0] = mathMax$2(x, max$$1[0]);\r\n    }\r\n\r\n    n = cubicExtrema$$1(y0, y1, y2, y3, yDim);\r\n\r\n    for (var i = 0; i < n; i++) {\r\n      var y = cubicAt$$1(y0, y1, y2, y3, yDim[i]);\r\n      min$$1[1] = mathMin$2(y, min$$1[1]);\r\n      max$$1[1] = mathMax$2(y, max$$1[1]);\r\n    }\r\n\r\n    min$$1[0] = mathMin$2(x0, min$$1[0]);\r\n    max$$1[0] = mathMax$2(x0, max$$1[0]);\r\n    min$$1[0] = mathMin$2(x3, min$$1[0]);\r\n    max$$1[0] = mathMax$2(x3, max$$1[0]);\r\n    min$$1[1] = mathMin$2(y0, min$$1[1]);\r\n    max$$1[1] = mathMax$2(y0, max$$1[1]);\r\n    min$$1[1] = mathMin$2(y3, min$$1[1]);\r\n    max$$1[1] = mathMax$2(y3, max$$1[1]);\r\n  }\r\n\r\n  function fromQuadratic(x0, y0, x1, y1, x2, y2, min$$1, max$$1) {\r\n    var quadraticExtremum$$1 = quadraticExtremum;\r\n    var quadraticAt$$1 = quadraticAt;\r\n    var tx = mathMax$2(mathMin$2(quadraticExtremum$$1(x0, x1, x2), 1), 0);\r\n    var ty = mathMax$2(mathMin$2(quadraticExtremum$$1(y0, y1, y2), 1), 0);\r\n    var x = quadraticAt$$1(x0, x1, x2, tx);\r\n    var y = quadraticAt$$1(y0, y1, y2, ty);\r\n    min$$1[0] = mathMin$2(x0, x2, x);\r\n    min$$1[1] = mathMin$2(y0, y2, y);\r\n    max$$1[0] = mathMax$2(x0, x2, x);\r\n    max$$1[1] = mathMax$2(y0, y2, y);\r\n  }\r\n\r\n  function fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min$$1, max$$1) {\r\n    var vec2Min = min;\r\n    var vec2Max = max;\r\n    var diff = Math.abs(startAngle - endAngle);\r\n\r\n    if (diff % PI2$1 < 1e-4 && diff > 1e-4) {\r\n      min$$1[0] = x - rx;\r\n      min$$1[1] = y - ry;\r\n      max$$1[0] = x + rx;\r\n      max$$1[1] = y + ry;\r\n      return;\r\n    }\r\n\r\n    start[0] = mathCos$1(startAngle) * rx + x;\r\n    start[1] = mathSin$1(startAngle) * ry + y;\r\n    end[0] = mathCos$1(endAngle) * rx + x;\r\n    end[1] = mathSin$1(endAngle) * ry + y;\r\n    vec2Min(min$$1, start, end);\r\n    vec2Max(max$$1, start, end);\r\n    startAngle = startAngle % PI2$1;\r\n\r\n    if (startAngle < 0) {\r\n      startAngle = startAngle + PI2$1;\r\n    }\r\n\r\n    endAngle = endAngle % PI2$1;\r\n\r\n    if (endAngle < 0) {\r\n      endAngle = endAngle + PI2$1;\r\n    }\r\n\r\n    if (startAngle > endAngle && !anticlockwise) {\r\n      endAngle += PI2$1;\r\n    } else if (startAngle < endAngle && anticlockwise) {\r\n      startAngle += PI2$1;\r\n    }\r\n\r\n    if (anticlockwise) {\r\n      var tmp = endAngle;\r\n      endAngle = startAngle;\r\n      startAngle = tmp;\r\n    }\r\n\r\n    for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\r\n      if (angle > startAngle) {\r\n        extremity[0] = mathCos$1(angle) * rx + x;\r\n        extremity[1] = mathSin$1(angle) * ry + y;\r\n        vec2Min(min$$1, extremity, min$$1);\r\n        vec2Max(max$$1, extremity, max$$1);\r\n      }\r\n    }\r\n  }\r\n\r\n  var CMD = {\r\n    M: 1,\r\n    L: 2,\r\n    C: 3,\r\n    Q: 4,\r\n    A: 5,\r\n    Z: 6,\r\n    R: 7\r\n  };\r\n  var tmpOutX = [];\r\n  var tmpOutY = [];\r\n  var min$1 = [];\r\n  var max$1 = [];\r\n  var min2 = [];\r\n  var max2 = [];\r\n  var mathMin$1 = Math.min;\r\n  var mathMax$1 = Math.max;\r\n  var mathCos = Math.cos;\r\n  var mathSin = Math.sin;\r\n  var mathSqrt = Math.sqrt;\r\n  var mathAbs = Math.abs;\r\n  var PI = Math.PI;\r\n  var PI2 = PI * 2;\r\n  var hasTypedArray = typeof Float32Array !== 'undefined';\r\n  var tmpAngles = [];\r\n\r\n  function modPI2(radian) {\r\n    var n = Math.round(radian / PI * 1e8) / 1e8;\r\n    return n % 2 * PI;\r\n  }\r\n\r\n  function normalizeArcAngles(angles, anticlockwise) {\r\n    var newStartAngle = modPI2(angles[0]);\r\n\r\n    if (newStartAngle < 0) {\r\n      newStartAngle += PI2;\r\n    }\r\n\r\n    var delta = newStartAngle - angles[0];\r\n    var newEndAngle = angles[1];\r\n    newEndAngle += delta;\r\n\r\n    if (!anticlockwise && newEndAngle - newStartAngle >= PI2) {\r\n      newEndAngle = newStartAngle + PI2;\r\n    } else if (anticlockwise && newStartAngle - newEndAngle >= PI2) {\r\n      newEndAngle = newStartAngle - PI2;\r\n    } else if (!anticlockwise && newStartAngle > newEndAngle) {\r\n      newEndAngle = newStartAngle + (PI2 - modPI2(newStartAngle - newEndAngle));\r\n    } else if (anticlockwise && newStartAngle < newEndAngle) {\r\n      newEndAngle = newStartAngle - (PI2 - modPI2(newEndAngle - newStartAngle));\r\n    }\r\n\r\n    angles[0] = newStartAngle;\r\n    angles[1] = newEndAngle;\r\n  }\r\n\r\n  var PathProxy = function () {\r\n    function PathProxy(notSaveData) {\r\n      this.dpr = 1;\r\n      this._version = 0;\r\n      this._xi = 0;\r\n      this._yi = 0;\r\n      this._x0 = 0;\r\n      this._y0 = 0;\r\n      this._len = 0;\r\n\r\n      if (notSaveData) {\r\n        this._saveData = false;\r\n      }\r\n\r\n      if (this._saveData) {\r\n        this.data = [];\r\n      }\r\n    }\r\n\r\n    PathProxy.prototype.increaseVersion = function () {\r\n      this._version++;\r\n    };\r\n\r\n    PathProxy.prototype.getVersion = function () {\r\n      return this._version;\r\n    };\r\n\r\n    PathProxy.prototype.setScale = function (sx, sy, segmentIgnoreThreshold) {\r\n      segmentIgnoreThreshold = segmentIgnoreThreshold || 0;\r\n\r\n      if (segmentIgnoreThreshold > 0) {\r\n        this._ux = mathAbs(segmentIgnoreThreshold / devicePixelRatio / sx) || 0;\r\n        this._uy = mathAbs(segmentIgnoreThreshold / devicePixelRatio / sy) || 0;\r\n      }\r\n    };\r\n\r\n    PathProxy.prototype.setDPR = function (dpr) {\r\n      this.dpr = dpr;\r\n    };\r\n\r\n    PathProxy.prototype.setContext = function (ctx) {\r\n      this._ctx = ctx;\r\n    };\r\n\r\n    PathProxy.prototype.getContext = function () {\r\n      return this._ctx;\r\n    };\r\n\r\n    PathProxy.prototype.beginPath = function () {\r\n      this._ctx && this._ctx.beginPath();\r\n      this.reset();\r\n      return this;\r\n    };\r\n\r\n    PathProxy.prototype.reset = function () {\r\n      if (this._saveData) {\r\n        this._len = 0;\r\n      }\r\n\r\n      if (this._lineDash) {\r\n        this._lineDash = null;\r\n        this._dashOffset = 0;\r\n      }\r\n\r\n      if (this._pathSegLen) {\r\n        this._pathSegLen = null;\r\n        this._pathLen = 0;\r\n      }\r\n\r\n      this._version++;\r\n    };\r\n\r\n    PathProxy.prototype.moveTo = function (x, y) {\r\n      this.addData(CMD.M, x, y);\r\n      this._ctx && this._ctx.moveTo(x, y);\r\n      this._x0 = x;\r\n      this._y0 = y;\r\n      this._xi = x;\r\n      this._yi = y;\r\n      return this;\r\n    };\r\n\r\n    PathProxy.prototype.lineTo = function (x, y) {\r\n      var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy || this._len < 5;\r\n      this.addData(CMD.L, x, y);\r\n\r\n      if (this._ctx && exceedUnit) {\r\n        this._needsDash ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\r\n      }\r\n\r\n      if (exceedUnit) {\r\n        this._xi = x;\r\n        this._yi = y;\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    PathProxy.prototype.bezierCurveTo = function (x1, y1, x2, y2, x3, y3) {\r\n      this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\r\n\r\n      if (this._ctx) {\r\n        this._needsDash ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\r\n      }\r\n\r\n      this._xi = x3;\r\n      this._yi = y3;\r\n      return this;\r\n    };\r\n\r\n    PathProxy.prototype.quadraticCurveTo = function (x1, y1, x2, y2) {\r\n      this.addData(CMD.Q, x1, y1, x2, y2);\r\n\r\n      if (this._ctx) {\r\n        this._needsDash ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\r\n      }\r\n\r\n      this._xi = x2;\r\n      this._yi = y2;\r\n      return this;\r\n    };\r\n\r\n    PathProxy.prototype.arc = function (cx, cy, r, startAngle, endAngle, anticlockwise) {\r\n      tmpAngles[0] = startAngle;\r\n      tmpAngles[1] = endAngle;\r\n      normalizeArcAngles(tmpAngles, anticlockwise);\r\n      startAngle = tmpAngles[0];\r\n      endAngle = tmpAngles[1];\r\n      var delta = endAngle - startAngle;\r\n      this.addData(CMD.A, cx, cy, r, r, startAngle, delta, 0, anticlockwise ? 0 : 1);\r\n      this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\r\n      this._xi = mathCos(endAngle) * r + cx;\r\n      this._yi = mathSin(endAngle) * r + cy;\r\n      return this;\r\n    };\r\n\r\n    PathProxy.prototype.arcTo = function (x1, y1, x2, y2, radius) {\r\n      if (this._ctx) {\r\n        this._ctx.arcTo(x1, y1, x2, y2, radius);\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    PathProxy.prototype.rect = function (x, y, w, h) {\r\n      this._ctx && this._ctx.rect(x, y, w, h);\r\n      this.addData(CMD.R, x, y, w, h);\r\n      return this;\r\n    };\r\n\r\n    PathProxy.prototype.closePath = function () {\r\n      this.addData(CMD.Z);\r\n      var ctx = this._ctx;\r\n      var x0 = this._x0;\r\n      var y0 = this._y0;\r\n\r\n      if (ctx) {\r\n        this._needsDash && this._dashedLineTo(x0, y0);\r\n        ctx.closePath();\r\n      }\r\n\r\n      this._xi = x0;\r\n      this._yi = y0;\r\n      return this;\r\n    };\r\n\r\n    PathProxy.prototype.fill = function (ctx) {\r\n      ctx && ctx.fill();\r\n      this.toStatic();\r\n    };\r\n\r\n    PathProxy.prototype.stroke = function (ctx) {\r\n      ctx && ctx.stroke();\r\n      this.toStatic();\r\n    };\r\n\r\n    PathProxy.prototype.setLineDash = function (lineDash) {\r\n      if (lineDash instanceof Array) {\r\n        this._lineDash = lineDash;\r\n        this._dashIdx = 0;\r\n        var lineDashSum = 0;\r\n\r\n        for (var i = 0; i < lineDash.length; i++) {\r\n          lineDashSum += lineDash[i];\r\n        }\r\n\r\n        this._dashSum = lineDashSum;\r\n        this._needsDash = true;\r\n      } else {\r\n        this._lineDash = null;\r\n        this._needsDash = false;\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    PathProxy.prototype.setLineDashOffset = function (offset) {\r\n      this._dashOffset = offset;\r\n      return this;\r\n    };\r\n\r\n    PathProxy.prototype.len = function () {\r\n      return this._len;\r\n    };\r\n\r\n    PathProxy.prototype.setData = function (data) {\r\n      var len$$1 = data.length;\r\n\r\n      if (!(this.data && this.data.length === len$$1) && hasTypedArray) {\r\n        this.data = new Float32Array(len$$1);\r\n      }\r\n\r\n      for (var i = 0; i < len$$1; i++) {\r\n        this.data[i] = data[i];\r\n      }\r\n\r\n      this._len = len$$1;\r\n    };\r\n\r\n    PathProxy.prototype.appendPath = function (path) {\r\n      if (!(path instanceof Array)) {\r\n        path = [path];\r\n      }\r\n\r\n      var len$$1 = path.length;\r\n      var appendSize = 0;\r\n      var offset = this._len;\r\n\r\n      for (var i = 0; i < len$$1; i++) {\r\n        appendSize += path[i].len();\r\n      }\r\n\r\n      if (hasTypedArray && this.data instanceof Float32Array) {\r\n        this.data = new Float32Array(offset + appendSize);\r\n      }\r\n\r\n      for (var i = 0; i < len$$1; i++) {\r\n        var appendPathData = path[i].data;\r\n\r\n        for (var k = 0; k < appendPathData.length; k++) {\r\n          this.data[offset++] = appendPathData[k];\r\n        }\r\n      }\r\n\r\n      this._len = offset;\r\n    };\r\n\r\n    PathProxy.prototype.addData = function (cmd, a, b, c, d, e, f, g, h) {\r\n      if (!this._saveData) {\r\n        return;\r\n      }\r\n\r\n      var data = this.data;\r\n\r\n      if (this._len + arguments.length > data.length) {\r\n        this._expandData();\r\n\r\n        data = this.data;\r\n      }\r\n\r\n      for (var i = 0; i < arguments.length; i++) {\r\n        data[this._len++] = arguments[i];\r\n      }\r\n    };\r\n\r\n    PathProxy.prototype._expandData = function () {\r\n      if (!(this.data instanceof Array)) {\r\n        var newData = [];\r\n\r\n        for (var i = 0; i < this._len; i++) {\r\n          newData[i] = this.data[i];\r\n        }\r\n\r\n        this.data = newData;\r\n      }\r\n    };\r\n\r\n    PathProxy.prototype._dashedLineTo = function (x1, y1) {\r\n      var dashSum = this._dashSum;\r\n      var lineDash = this._lineDash;\r\n      var ctx = this._ctx;\r\n      var offset = this._dashOffset;\r\n      var x0 = this._xi;\r\n      var y0 = this._yi;\r\n      var dx = x1 - x0;\r\n      var dy = y1 - y0;\r\n      var dist$$1 = mathSqrt(dx * dx + dy * dy);\r\n      var x = x0;\r\n      var y = y0;\r\n      var nDash = lineDash.length;\r\n      var dash;\r\n      var idx;\r\n      dx /= dist$$1;\r\n      dy /= dist$$1;\r\n\r\n      if (offset < 0) {\r\n        offset = dashSum + offset;\r\n      }\r\n\r\n      offset %= dashSum;\r\n      x -= offset * dx;\r\n      y -= offset * dy;\r\n\r\n      while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx === 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\r\n        idx = this._dashIdx;\r\n        dash = lineDash[idx];\r\n        x += dx * dash;\r\n        y += dy * dash;\r\n        this._dashIdx = (idx + 1) % nDash;\r\n\r\n        if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\r\n          continue;\r\n        }\r\n\r\n        ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin$1(x, x1) : mathMax$1(x, x1), dy >= 0 ? mathMin$1(y, y1) : mathMax$1(y, y1));\r\n      }\r\n\r\n      dx = x - x1;\r\n      dy = y - y1;\r\n      this._dashOffset = -mathSqrt(dx * dx + dy * dy);\r\n    };\r\n\r\n    PathProxy.prototype._dashedBezierTo = function (x1, y1, x2, y2, x3, y3) {\r\n      var ctx = this._ctx;\r\n      var dashSum = this._dashSum;\r\n      var offset = this._dashOffset;\r\n      var lineDash = this._lineDash;\r\n      var x0 = this._xi;\r\n      var y0 = this._yi;\r\n      var bezierLen = 0;\r\n      var idx = this._dashIdx;\r\n      var nDash = lineDash.length;\r\n      var t;\r\n      var dx;\r\n      var dy;\r\n      var x;\r\n      var y;\r\n      var tmpLen = 0;\r\n\r\n      if (offset < 0) {\r\n        offset = dashSum + offset;\r\n      }\r\n\r\n      offset %= dashSum;\r\n\r\n      for (t = 0; t < 1; t += 0.1) {\r\n        dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\r\n        dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\r\n        bezierLen += mathSqrt(dx * dx + dy * dy);\r\n      }\r\n\r\n      for (; idx < nDash; idx++) {\r\n        tmpLen += lineDash[idx];\r\n\r\n        if (tmpLen > offset) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      t = (tmpLen - offset) / bezierLen;\r\n\r\n      while (t <= 1) {\r\n        x = cubicAt(x0, x1, x2, x3, t);\r\n        y = cubicAt(y0, y1, y2, y3, t);\r\n        idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\r\n        t += lineDash[idx] / bezierLen;\r\n        idx = (idx + 1) % nDash;\r\n      }\r\n\r\n      idx % 2 !== 0 && ctx.lineTo(x3, y3);\r\n      dx = x3 - x;\r\n      dy = y3 - y;\r\n      this._dashOffset = -mathSqrt(dx * dx + dy * dy);\r\n    };\r\n\r\n    PathProxy.prototype._dashedQuadraticTo = function (x1, y1, x2, y2) {\r\n      var x3 = x2;\r\n      var y3 = y2;\r\n      x2 = (x2 + 2 * x1) / 3;\r\n      y2 = (y2 + 2 * y1) / 3;\r\n      x1 = (this._xi + 2 * x1) / 3;\r\n      y1 = (this._yi + 2 * y1) / 3;\r\n\r\n      this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\r\n    };\r\n\r\n    PathProxy.prototype.toStatic = function () {\r\n      if (!this._saveData) {\r\n        return;\r\n      }\r\n\r\n      var data = this.data;\r\n\r\n      if (data instanceof Array) {\r\n        data.length = this._len;\r\n\r\n        if (hasTypedArray && this._len > 11) {\r\n          this.data = new Float32Array(data);\r\n        }\r\n      }\r\n    };\r\n\r\n    PathProxy.prototype.getBoundingRect = function () {\r\n      min$1[0] = min$1[1] = min2[0] = min2[1] = Number.MAX_VALUE;\r\n      max$1[0] = max$1[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\r\n      var data = this.data;\r\n      var xi = 0;\r\n      var yi = 0;\r\n      var x0 = 0;\r\n      var y0 = 0;\r\n      var i;\r\n\r\n      for (i = 0; i < this._len;) {\r\n        var cmd = data[i++];\r\n        var isFirst = i === 1;\r\n\r\n        if (isFirst) {\r\n          xi = data[i];\r\n          yi = data[i + 1];\r\n          x0 = xi;\r\n          y0 = yi;\r\n        }\r\n\r\n        switch (cmd) {\r\n          case CMD.M:\r\n            xi = x0 = data[i++];\r\n            yi = y0 = data[i++];\r\n            min2[0] = x0;\r\n            min2[1] = y0;\r\n            max2[0] = x0;\r\n            max2[1] = y0;\r\n            break;\r\n\r\n          case CMD.L:\r\n            fromLine(xi, yi, data[i], data[i + 1], min2, max2);\r\n            xi = data[i++];\r\n            yi = data[i++];\r\n            break;\r\n\r\n          case CMD.C:\r\n            fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\r\n            xi = data[i++];\r\n            yi = data[i++];\r\n            break;\r\n\r\n          case CMD.Q:\r\n            fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\r\n            xi = data[i++];\r\n            yi = data[i++];\r\n            break;\r\n\r\n          case CMD.A:\r\n            var cx = data[i++];\r\n            var cy = data[i++];\r\n            var rx = data[i++];\r\n            var ry = data[i++];\r\n            var startAngle = data[i++];\r\n            var endAngle = data[i++] + startAngle;\r\n            i += 1;\r\n            var anticlockwise = !data[i++];\r\n\r\n            if (isFirst) {\r\n              x0 = mathCos(startAngle) * rx + cx;\r\n              y0 = mathSin(startAngle) * ry + cy;\r\n            }\r\n\r\n            fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\r\n            xi = mathCos(endAngle) * rx + cx;\r\n            yi = mathSin(endAngle) * ry + cy;\r\n            break;\r\n\r\n          case CMD.R:\r\n            x0 = xi = data[i++];\r\n            y0 = yi = data[i++];\r\n            var width = data[i++];\r\n            var height = data[i++];\r\n            fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\r\n            break;\r\n\r\n          case CMD.Z:\r\n            xi = x0;\r\n            yi = y0;\r\n            break;\r\n        }\r\n\r\n        min(min$1, min$1, min2);\r\n        max(max$1, max$1, max2);\r\n      }\r\n\r\n      if (i === 0) {\r\n        min$1[0] = min$1[1] = max$1[0] = max$1[1] = 0;\r\n      }\r\n\r\n      return new BoundingRect(min$1[0], min$1[1], max$1[0] - min$1[0], max$1[1] - min$1[1]);\r\n    };\r\n\r\n    PathProxy.prototype._calculateLength = function () {\r\n      var data = this.data;\r\n      var len$$1 = this._len;\r\n      var ux = this._ux;\r\n      var uy = this._uy;\r\n      var xi = 0;\r\n      var yi = 0;\r\n      var x0 = 0;\r\n      var y0 = 0;\r\n\r\n      if (!this._pathSegLen) {\r\n        this._pathSegLen = [];\r\n      }\r\n\r\n      var pathSegLen = this._pathSegLen;\r\n      var pathTotalLen = 0;\r\n      var segCount = 0;\r\n\r\n      for (var i = 0; i < len$$1;) {\r\n        var cmd = data[i++];\r\n        var isFirst = i === 1;\r\n\r\n        if (isFirst) {\r\n          xi = data[i];\r\n          yi = data[i + 1];\r\n          x0 = xi;\r\n          y0 = yi;\r\n        }\r\n\r\n        var l = -1;\r\n\r\n        switch (cmd) {\r\n          case CMD.M:\r\n            xi = x0 = data[i++];\r\n            yi = y0 = data[i++];\r\n            break;\r\n\r\n          case CMD.L:\r\n            {\r\n              var x2 = data[i++];\r\n              var y2 = data[i++];\r\n              var dx = x2 - xi;\r\n              var dy = y2 - yi;\r\n\r\n              if (mathAbs(dx) > ux || mathAbs(dy) > uy || i === len$$1 - 1) {\r\n                l = Math.sqrt(dx * dx + dy * dy);\r\n                xi = x2;\r\n                yi = y2;\r\n              }\r\n\r\n              break;\r\n            }\r\n\r\n          case CMD.C:\r\n            {\r\n              var x1 = data[i++];\r\n              var y1 = data[i++];\r\n              var x2 = data[i++];\r\n              var y2 = data[i++];\r\n              var x3 = data[i++];\r\n              var y3 = data[i++];\r\n              l = cubicLength(xi, yi, x1, y1, x2, y2, x3, y3, 10);\r\n              xi = x3;\r\n              yi = y3;\r\n              break;\r\n            }\r\n\r\n          case CMD.Q:\r\n            {\r\n              var x1 = data[i++];\r\n              var y1 = data[i++];\r\n              var x2 = data[i++];\r\n              var y2 = data[i++];\r\n              l = quadraticLength(xi, yi, x1, y1, x2, y2, 10);\r\n              xi = x2;\r\n              yi = y2;\r\n              break;\r\n            }\r\n\r\n          case CMD.A:\r\n            var cx = data[i++];\r\n            var cy = data[i++];\r\n            var rx = data[i++];\r\n            var ry = data[i++];\r\n            var startAngle = data[i++];\r\n            var delta = data[i++];\r\n            var endAngle = delta + startAngle;\r\n            i += 1;\r\n            var anticlockwise = !data[i++];\r\n\r\n            if (isFirst) {\r\n              x0 = mathCos(startAngle) * rx + cx;\r\n              y0 = mathSin(startAngle) * ry + cy;\r\n            }\r\n\r\n            l = mathMax$1(rx, ry) * mathMin$1(PI2, Math.abs(delta));\r\n            xi = mathCos(endAngle) * rx + cx;\r\n            yi = mathSin(endAngle) * ry + cy;\r\n            break;\r\n\r\n          case CMD.R:\r\n            {\r\n              x0 = xi = data[i++];\r\n              y0 = yi = data[i++];\r\n              var width = data[i++];\r\n              var height = data[i++];\r\n              l = width * 2 + height * 2;\r\n              break;\r\n            }\r\n\r\n          case CMD.Z:\r\n            {\r\n              var dx = x0 - xi;\r\n              var dy = y0 - yi;\r\n              l = Math.sqrt(dx * dx + dy * dy);\r\n              xi = x0;\r\n              yi = y0;\r\n              break;\r\n            }\r\n        }\r\n\r\n        if (l >= 0) {\r\n          pathSegLen[segCount++] = l;\r\n          pathTotalLen += l;\r\n        }\r\n      }\r\n\r\n      this._pathLen = pathTotalLen;\r\n      return pathTotalLen;\r\n    };\r\n\r\n    PathProxy.prototype.rebuildPath = function (ctx, percent) {\r\n      var d = this.data;\r\n      var ux = this._ux;\r\n      var uy = this._uy;\r\n      var len$$1 = this._len;\r\n      var x0;\r\n      var y0;\r\n      var xi;\r\n      var yi;\r\n      var x;\r\n      var y;\r\n      var drawPart = percent < 1;\r\n      var pathSegLen;\r\n      var pathTotalLen;\r\n      var accumLength = 0;\r\n      var segCount = 0;\r\n      var displayedLength;\r\n\r\n      if (drawPart) {\r\n        if (!this._pathSegLen) {\r\n          this._calculateLength();\r\n        }\r\n\r\n        pathSegLen = this._pathSegLen;\r\n        pathTotalLen = this._pathLen;\r\n        displayedLength = percent * pathTotalLen;\r\n\r\n        if (!displayedLength) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      lo: for (var i = 0; i < len$$1;) {\r\n        var cmd = d[i++];\r\n        var isFirst = i === 1;\r\n\r\n        if (isFirst) {\r\n          xi = d[i];\r\n          yi = d[i + 1];\r\n          x0 = xi;\r\n          y0 = yi;\r\n        }\r\n\r\n        switch (cmd) {\r\n          case CMD.M:\r\n            x0 = xi = d[i++];\r\n            y0 = yi = d[i++];\r\n            ctx.moveTo(xi, yi);\r\n            break;\r\n\r\n          case CMD.L:\r\n            {\r\n              x = d[i++];\r\n              y = d[i++];\r\n\r\n              if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len$$1 - 1) {\r\n                if (drawPart) {\r\n                  var l = pathSegLen[segCount++];\r\n\r\n                  if (accumLength + l > displayedLength) {\r\n                    var t = (displayedLength - accumLength) / l;\r\n                    ctx.lineTo(xi * (1 - t) + x * t, yi * (1 - t) + y * t);\r\n                    break lo;\r\n                  }\r\n\r\n                  accumLength += l;\r\n                }\r\n\r\n                ctx.lineTo(x, y);\r\n                xi = x;\r\n                yi = y;\r\n              }\r\n\r\n              break;\r\n            }\r\n\r\n          case CMD.C:\r\n            {\r\n              var x1 = d[i++];\r\n              var y1 = d[i++];\r\n              var x2 = d[i++];\r\n              var y2 = d[i++];\r\n              var x3 = d[i++];\r\n              var y3 = d[i++];\r\n\r\n              if (drawPart) {\r\n                var l = pathSegLen[segCount++];\r\n\r\n                if (accumLength + l > displayedLength) {\r\n                  var t = (displayedLength - accumLength) / l;\r\n                  cubicSubdivide(xi, x1, x2, x3, t, tmpOutX);\r\n                  cubicSubdivide(yi, y1, y2, y3, t, tmpOutY);\r\n                  ctx.bezierCurveTo(tmpOutX[1], tmpOutY[1], tmpOutX[2], tmpOutY[2], tmpOutX[3], tmpOutY[3]);\r\n                  break lo;\r\n                }\r\n\r\n                accumLength += l;\r\n              }\r\n\r\n              ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\r\n              xi = x3;\r\n              yi = y3;\r\n              break;\r\n            }\r\n\r\n          case CMD.Q:\r\n            {\r\n              var x1 = d[i++];\r\n              var y1 = d[i++];\r\n              var x2 = d[i++];\r\n              var y2 = d[i++];\r\n\r\n              if (drawPart) {\r\n                var l = pathSegLen[segCount++];\r\n\r\n                if (accumLength + l > displayedLength) {\r\n                  var t = (displayedLength - accumLength) / l;\r\n                  quadraticSubdivide(xi, x1, x2, t, tmpOutX);\r\n                  quadraticSubdivide(yi, y1, y2, t, tmpOutY);\r\n                  ctx.quadraticCurveTo(tmpOutX[1], tmpOutY[1], tmpOutX[2], tmpOutY[2]);\r\n                  break lo;\r\n                }\r\n\r\n                accumLength += l;\r\n              }\r\n\r\n              ctx.quadraticCurveTo(x1, y1, x2, y2);\r\n              xi = x2;\r\n              yi = y2;\r\n              break;\r\n            }\r\n\r\n          case CMD.A:\r\n            var cx = d[i++];\r\n            var cy = d[i++];\r\n            var rx = d[i++];\r\n            var ry = d[i++];\r\n            var startAngle = d[i++];\r\n            var delta = d[i++];\r\n            var psi = d[i++];\r\n            var anticlockwise = !d[i++];\r\n            var r = rx > ry ? rx : ry;\r\n            var isEllipse = mathAbs(rx - ry) > 1e-3;\r\n            var endAngle = startAngle + delta;\r\n            var breakBuild = false;\r\n\r\n            if (drawPart) {\r\n              var l = pathSegLen[segCount++];\r\n\r\n              if (accumLength + l > displayedLength) {\r\n                endAngle = startAngle + delta * (displayedLength - accumLength) / l;\r\n                breakBuild = true;\r\n              }\r\n\r\n              accumLength += l;\r\n            }\r\n\r\n            if (isEllipse && ctx.ellipse) {\r\n              ctx.ellipse(cx, cy, rx, ry, psi, startAngle, endAngle, anticlockwise);\r\n            } else {\r\n              ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\r\n            }\r\n\r\n            if (breakBuild) {\r\n              break lo;\r\n            }\r\n\r\n            if (isFirst) {\r\n              x0 = mathCos(startAngle) * rx + cx;\r\n              y0 = mathSin(startAngle) * ry + cy;\r\n            }\r\n\r\n            xi = mathCos(endAngle) * rx + cx;\r\n            yi = mathSin(endAngle) * ry + cy;\r\n            break;\r\n\r\n          case CMD.R:\r\n            x0 = xi = d[i];\r\n            y0 = yi = d[i + 1];\r\n            x = d[i++];\r\n            y = d[i++];\r\n            var width = d[i++];\r\n            var height = d[i++];\r\n\r\n            if (drawPart) {\r\n              var l = pathSegLen[segCount++];\r\n\r\n              if (accumLength + l > displayedLength) {\r\n                var d_1 = displayedLength - accumLength;\r\n                ctx.moveTo(x, y);\r\n                ctx.lineTo(x + mathMin$1(d_1, width), y);\r\n                d_1 -= width;\r\n\r\n                if (d_1 > 0) {\r\n                  ctx.lineTo(x + width, y + mathMin$1(d_1, height));\r\n                }\r\n\r\n                d_1 -= height;\r\n\r\n                if (d_1 > 0) {\r\n                  ctx.lineTo(x + mathMax$1(width - d_1, 0), y + height);\r\n                }\r\n\r\n                d_1 -= width;\r\n\r\n                if (d_1 > 0) {\r\n                  ctx.lineTo(x, y + mathMax$1(height - d_1, 0));\r\n                }\r\n\r\n                break lo;\r\n              }\r\n\r\n              accumLength += l;\r\n            }\r\n\r\n            ctx.rect(x, y, width, height);\r\n            break;\r\n\r\n          case CMD.Z:\r\n            if (drawPart) {\r\n              var l = pathSegLen[segCount++];\r\n\r\n              if (accumLength + l > displayedLength) {\r\n                var t = (displayedLength - accumLength) / l;\r\n                ctx.lineTo(xi * (1 - t) + x0 * t, yi * (1 - t) + y0 * t);\r\n                break lo;\r\n              }\r\n\r\n              accumLength += l;\r\n            }\r\n\r\n            ctx.closePath();\r\n            xi = x0;\r\n            yi = y0;\r\n        }\r\n      }\r\n    };\r\n\r\n    PathProxy.CMD = CMD;\r\n\r\n    PathProxy.initDefaultProps = function () {\r\n      var proto = PathProxy.prototype;\r\n      proto._saveData = true;\r\n      proto._needsDash = false;\r\n      proto._dashOffset = 0;\r\n      proto._dashIdx = 0;\r\n      proto._dashSum = 0;\r\n      proto._ux = 0;\r\n      proto._uy = 0;\r\n    }();\r\n\r\n    return PathProxy;\r\n  }();\r\n\r\n  function containStroke$1(x0, y0, x1, y1, lineWidth, x, y) {\r\n    if (lineWidth === 0) {\r\n      return false;\r\n    }\r\n\r\n    var _l = lineWidth;\r\n    var _a = 0;\r\n    var _b = x0;\r\n\r\n    if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\r\n      return false;\r\n    }\r\n\r\n    if (x0 !== x1) {\r\n      _a = (y0 - y1) / (x0 - x1);\r\n      _b = (x0 * y1 - x1 * y0) / (x0 - x1);\r\n    } else {\r\n      return Math.abs(x - x0) <= _l / 2;\r\n    }\r\n\r\n    var tmp = _a * x - y + _b;\r\n\r\n    var _s = tmp * tmp / (_a * _a + 1);\r\n\r\n    return _s <= _l / 2 * _l / 2;\r\n  }\r\n\r\n  function containStroke$2(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\r\n    if (lineWidth === 0) {\r\n      return false;\r\n    }\r\n\r\n    var _l = lineWidth;\r\n\r\n    if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\r\n      return false;\r\n    }\r\n\r\n    var d = cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\r\n    return d <= _l / 2;\r\n  }\r\n\r\n  function containStroke$3(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\r\n    if (lineWidth === 0) {\r\n      return false;\r\n    }\r\n\r\n    var _l = lineWidth;\r\n\r\n    if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\r\n      return false;\r\n    }\r\n\r\n    var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\r\n    return d <= _l / 2;\r\n  }\r\n\r\n  var PI2$4 = Math.PI * 2;\r\n\r\n  function normalizeRadian(angle) {\r\n    angle %= PI2$4;\r\n\r\n    if (angle < 0) {\r\n      angle += PI2$4;\r\n    }\r\n\r\n    return angle;\r\n  }\r\n\r\n  var PI2$3 = Math.PI * 2;\r\n\r\n  function containStroke$4(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\r\n    if (lineWidth === 0) {\r\n      return false;\r\n    }\r\n\r\n    var _l = lineWidth;\r\n    x -= cx;\r\n    y -= cy;\r\n    var d = Math.sqrt(x * x + y * y);\r\n\r\n    if (d - _l > r || d + _l < r) {\r\n      return false;\r\n    }\r\n\r\n    if (Math.abs(startAngle - endAngle) % PI2$3 < 1e-4) {\r\n      return true;\r\n    }\r\n\r\n    if (anticlockwise) {\r\n      var tmp = startAngle;\r\n      startAngle = normalizeRadian(endAngle);\r\n      endAngle = normalizeRadian(tmp);\r\n    } else {\r\n      startAngle = normalizeRadian(startAngle);\r\n      endAngle = normalizeRadian(endAngle);\r\n    }\r\n\r\n    if (startAngle > endAngle) {\r\n      endAngle += PI2$3;\r\n    }\r\n\r\n    var angle = Math.atan2(y, x);\r\n\r\n    if (angle < 0) {\r\n      angle += PI2$3;\r\n    }\r\n\r\n    return angle >= startAngle && angle <= endAngle || angle + PI2$3 >= startAngle && angle + PI2$3 <= endAngle;\r\n  }\r\n\r\n  function windingLine(x0, y0, x1, y1, x, y) {\r\n    if (y > y0 && y > y1 || y < y0 && y < y1) {\r\n      return 0;\r\n    }\r\n\r\n    if (y1 === y0) {\r\n      return 0;\r\n    }\r\n\r\n    var t = (y - y0) / (y1 - y0);\r\n    var dir = y1 < y0 ? 1 : -1;\r\n\r\n    if (t === 1 || t === 0) {\r\n      dir = y1 < y0 ? 0.5 : -0.5;\r\n    }\r\n\r\n    var x_ = t * (x1 - x0) + x0;\r\n    return x_ === x ? Infinity : x_ > x ? dir : 0;\r\n  }\r\n\r\n  var CMD$1 = PathProxy.CMD;\r\n  var PI2$2 = Math.PI * 2;\r\n  var EPSILON$2 = 1e-4;\r\n\r\n  function isAroundEqual(a, b) {\r\n    return Math.abs(a - b) < EPSILON$2;\r\n  }\r\n\r\n  var roots = [-1, -1, -1];\r\n  var extrema = [-1, -1];\r\n\r\n  function swapExtrema() {\r\n    var tmp = extrema[0];\r\n    extrema[0] = extrema[1];\r\n    extrema[1] = tmp;\r\n  }\r\n\r\n  function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\r\n    if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\r\n      return 0;\r\n    }\r\n\r\n    var nRoots = cubicRootAt(y0, y1, y2, y3, y, roots);\r\n\r\n    if (nRoots === 0) {\r\n      return 0;\r\n    } else {\r\n      var w = 0;\r\n      var nExtrema = -1;\r\n      var y0_ = void 0;\r\n      var y1_ = void 0;\r\n\r\n      for (var i = 0; i < nRoots; i++) {\r\n        var t = roots[i];\r\n        var unit = t === 0 || t === 1 ? 0.5 : 1;\r\n        var x_ = cubicAt(x0, x1, x2, x3, t);\r\n\r\n        if (x_ < x) {\r\n          continue;\r\n        }\r\n\r\n        if (nExtrema < 0) {\r\n          nExtrema = cubicExtrema(y0, y1, y2, y3, extrema);\r\n\r\n          if (extrema[1] < extrema[0] && nExtrema > 1) {\r\n            swapExtrema();\r\n          }\r\n\r\n          y0_ = cubicAt(y0, y1, y2, y3, extrema[0]);\r\n\r\n          if (nExtrema > 1) {\r\n            y1_ = cubicAt(y0, y1, y2, y3, extrema[1]);\r\n          }\r\n        }\r\n\r\n        if (nExtrema === 2) {\r\n          if (t < extrema[0]) {\r\n            w += y0_ < y0 ? unit : -unit;\r\n          } else if (t < extrema[1]) {\r\n            w += y1_ < y0_ ? unit : -unit;\r\n          } else {\r\n            w += y3 < y1_ ? unit : -unit;\r\n          }\r\n        } else {\r\n          if (t < extrema[0]) {\r\n            w += y0_ < y0 ? unit : -unit;\r\n          } else {\r\n            w += y3 < y0_ ? unit : -unit;\r\n          }\r\n        }\r\n      }\r\n\r\n      return w;\r\n    }\r\n  }\r\n\r\n  function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\r\n    if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\r\n      return 0;\r\n    }\r\n\r\n    var nRoots = quadraticRootAt(y0, y1, y2, y, roots);\r\n\r\n    if (nRoots === 0) {\r\n      return 0;\r\n    } else {\r\n      var t = quadraticExtremum(y0, y1, y2);\r\n\r\n      if (t >= 0 && t <= 1) {\r\n        var w = 0;\r\n        var y_ = quadraticAt(y0, y1, y2, t);\r\n\r\n        for (var i = 0; i < nRoots; i++) {\r\n          var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\r\n          var x_ = quadraticAt(x0, x1, x2, roots[i]);\r\n\r\n          if (x_ < x) {\r\n            continue;\r\n          }\r\n\r\n          if (roots[i] < t) {\r\n            w += y_ < y0 ? unit : -unit;\r\n          } else {\r\n            w += y2 < y_ ? unit : -unit;\r\n          }\r\n        }\r\n\r\n        return w;\r\n      } else {\r\n        var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\r\n        var x_ = quadraticAt(x0, x1, x2, roots[0]);\r\n\r\n        if (x_ < x) {\r\n          return 0;\r\n        }\r\n\r\n        return y2 < y0 ? unit : -unit;\r\n      }\r\n    }\r\n  }\r\n\r\n  function windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\r\n    y -= cy;\r\n\r\n    if (y > r || y < -r) {\r\n      return 0;\r\n    }\r\n\r\n    var tmp = Math.sqrt(r * r - y * y);\r\n    roots[0] = -tmp;\r\n    roots[1] = tmp;\r\n    var dTheta = Math.abs(startAngle - endAngle);\r\n\r\n    if (dTheta < 1e-4) {\r\n      return 0;\r\n    }\r\n\r\n    if (dTheta >= PI2$2 - 1e-4) {\r\n      startAngle = 0;\r\n      endAngle = PI2$2;\r\n      var dir = anticlockwise ? 1 : -1;\r\n\r\n      if (x >= roots[0] + cx && x <= roots[1] + cx) {\r\n        return dir;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n\r\n    if (startAngle > endAngle) {\r\n      var tmp_1 = startAngle;\r\n      startAngle = endAngle;\r\n      endAngle = tmp_1;\r\n    }\r\n\r\n    if (startAngle < 0) {\r\n      startAngle += PI2$2;\r\n      endAngle += PI2$2;\r\n    }\r\n\r\n    var w = 0;\r\n\r\n    for (var i = 0; i < 2; i++) {\r\n      var x_ = roots[i];\r\n\r\n      if (x_ + cx > x) {\r\n        var angle = Math.atan2(y, x_);\r\n        var dir = anticlockwise ? 1 : -1;\r\n\r\n        if (angle < 0) {\r\n          angle = PI2$2 + angle;\r\n        }\r\n\r\n        if (angle >= startAngle && angle <= endAngle || angle + PI2$2 >= startAngle && angle + PI2$2 <= endAngle) {\r\n          if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\r\n            dir = -dir;\r\n          }\r\n\r\n          w += dir;\r\n        }\r\n      }\r\n    }\r\n\r\n    return w;\r\n  }\r\n\r\n  function containPath(path, lineWidth, isStroke, x, y) {\r\n    var data = path.data;\r\n    var len = path.len();\r\n    var w = 0;\r\n    var xi = 0;\r\n    var yi = 0;\r\n    var x0 = 0;\r\n    var y0 = 0;\r\n    var x1;\r\n    var y1;\r\n\r\n    for (var i = 0; i < len;) {\r\n      var cmd = data[i++];\r\n      var isFirst = i === 1;\r\n\r\n      if (cmd === CMD$1.M && i > 1) {\r\n        if (!isStroke) {\r\n          w += windingLine(xi, yi, x0, y0, x, y);\r\n        }\r\n      }\r\n\r\n      if (isFirst) {\r\n        xi = data[i];\r\n        yi = data[i + 1];\r\n        x0 = xi;\r\n        y0 = yi;\r\n      }\r\n\r\n      switch (cmd) {\r\n        case CMD$1.M:\r\n          x0 = data[i++];\r\n          y0 = data[i++];\r\n          xi = x0;\r\n          yi = y0;\r\n          break;\r\n\r\n        case CMD$1.L:\r\n          if (isStroke) {\r\n            if (containStroke$1(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\r\n              return true;\r\n            }\r\n          } else {\r\n            w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\r\n          }\r\n\r\n          xi = data[i++];\r\n          yi = data[i++];\r\n          break;\r\n\r\n        case CMD$1.C:\r\n          if (isStroke) {\r\n            if (containStroke$2(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\r\n              return true;\r\n            }\r\n          } else {\r\n            w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\r\n          }\r\n\r\n          xi = data[i++];\r\n          yi = data[i++];\r\n          break;\r\n\r\n        case CMD$1.Q:\r\n          if (isStroke) {\r\n            if (containStroke$3(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\r\n              return true;\r\n            }\r\n          } else {\r\n            w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\r\n          }\r\n\r\n          xi = data[i++];\r\n          yi = data[i++];\r\n          break;\r\n\r\n        case CMD$1.A:\r\n          var cx = data[i++];\r\n          var cy = data[i++];\r\n          var rx = data[i++];\r\n          var ry = data[i++];\r\n          var theta = data[i++];\r\n          var dTheta = data[i++];\r\n          i += 1;\r\n          var anticlockwise = !!(1 - data[i++]);\r\n          x1 = Math.cos(theta) * rx + cx;\r\n          y1 = Math.sin(theta) * ry + cy;\r\n\r\n          if (!isFirst) {\r\n            w += windingLine(xi, yi, x1, y1, x, y);\r\n          } else {\r\n            x0 = x1;\r\n            y0 = y1;\r\n          }\r\n\r\n          var _x = (x - cx) * ry / rx + cx;\r\n\r\n          if (isStroke) {\r\n            if (containStroke$4(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\r\n              return true;\r\n            }\r\n          } else {\r\n            w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\r\n          }\r\n\r\n          xi = Math.cos(theta + dTheta) * rx + cx;\r\n          yi = Math.sin(theta + dTheta) * ry + cy;\r\n          break;\r\n\r\n        case CMD$1.R:\r\n          x0 = xi = data[i++];\r\n          y0 = yi = data[i++];\r\n          var width = data[i++];\r\n          var height = data[i++];\r\n          x1 = x0 + width;\r\n          y1 = y0 + height;\r\n\r\n          if (isStroke) {\r\n            if (containStroke$1(x0, y0, x1, y0, lineWidth, x, y) || containStroke$1(x1, y0, x1, y1, lineWidth, x, y) || containStroke$1(x1, y1, x0, y1, lineWidth, x, y) || containStroke$1(x0, y1, x0, y0, lineWidth, x, y)) {\r\n              return true;\r\n            }\r\n          } else {\r\n            w += windingLine(x1, y0, x1, y1, x, y);\r\n            w += windingLine(x0, y1, x0, y0, x, y);\r\n          }\r\n\r\n          break;\r\n\r\n        case CMD$1.Z:\r\n          if (isStroke) {\r\n            if (containStroke$1(xi, yi, x0, y0, lineWidth, x, y)) {\r\n              return true;\r\n            }\r\n          } else {\r\n            w += windingLine(xi, yi, x0, y0, x, y);\r\n          }\r\n\r\n          xi = x0;\r\n          yi = y0;\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (!isStroke && !isAroundEqual(yi, y0)) {\r\n      w += windingLine(xi, yi, x0, y0, x, y) || 0;\r\n    }\r\n\r\n    return w !== 0;\r\n  }\r\n\r\n  function contain(pathProxy, x, y) {\r\n    return containPath(pathProxy, 0, false, x, y);\r\n  }\r\n\r\n  function containStroke(pathProxy, lineWidth, x, y) {\r\n    return containPath(pathProxy, lineWidth, true, x, y);\r\n  }\r\n\r\n  var DEFAULT_PATH_STYLE = defaults({\r\n    fill: '#000',\r\n    stroke: null,\r\n    strokePercent: 1,\r\n    fillOpacity: 1,\r\n    strokeOpacity: 1,\r\n    lineDashOffset: 0,\r\n    lineWidth: 1,\r\n    lineCap: 'butt',\r\n    miterLimit: 10,\r\n    strokeNoScale: false,\r\n    strokeFirst: false\r\n  }, DEFAULT_COMMON_STYLE);\r\n  var DEFAULT_PATH_ANIMATION_PROPS = {\r\n    style: defaults({\r\n      fill: true,\r\n      stroke: true,\r\n      strokePercent: true,\r\n      fillOpacity: true,\r\n      strokeOpacity: true,\r\n      lineDashOffset: true,\r\n      lineWidth: true,\r\n      miterLimit: true\r\n    }, DEFAULT_COMMON_ANIMATION_PROPS.style)\r\n  };\r\n  var pathCopyParams = ['x', 'y', 'rotation', 'scaleX', 'scaleY', 'originX', 'originY', 'invisible', 'culling', 'z', 'z2', 'zlevel', 'parent'];\r\n\r\n  var Path = function (_super) {\r\n    __extends(Path, _super);\r\n\r\n    function Path(opts) {\r\n      return _super.call(this, opts) || this;\r\n    }\r\n\r\n    Path.prototype.update = function () {\r\n      var _this = this;\r\n\r\n      _super.prototype.update.call(this);\r\n\r\n      var style = this.style;\r\n\r\n      if (style.decal) {\r\n        var decalEl = this._decalEl = this._decalEl || new Path();\r\n\r\n        if (decalEl.buildPath === Path.prototype.buildPath) {\r\n          decalEl.buildPath = function (ctx) {\r\n            _this.buildPath(ctx, _this.shape);\r\n          };\r\n        }\r\n\r\n        decalEl.silent = true;\r\n        var decalElStyle = decalEl.style;\r\n\r\n        for (var key in style) {\r\n          if (decalElStyle[key] !== style[key]) {\r\n            decalElStyle[key] = style[key];\r\n          }\r\n        }\r\n\r\n        decalElStyle.fill = style.fill ? style.decal : null;\r\n        decalElStyle.decal = null;\r\n        decalElStyle.shadowColor = null;\r\n        style.strokeFirst && (decalElStyle.stroke = null);\r\n\r\n        for (var i = 0; i < pathCopyParams.length; ++i) {\r\n          decalEl[pathCopyParams[i]] = this[pathCopyParams[i]];\r\n        }\r\n\r\n        decalEl.__dirty |= Element.REDARAW_BIT;\r\n      } else if (this._decalEl) {\r\n        this._decalEl = null;\r\n      }\r\n    };\r\n\r\n    Path.prototype.getDecalElement = function () {\r\n      return this._decalEl;\r\n    };\r\n\r\n    Path.prototype._init = function (props) {\r\n      var keysArr = keys(props);\r\n      this.shape = this.getDefaultShape();\r\n      var defaultStyle = this.getDefaultStyle();\r\n\r\n      if (defaultStyle) {\r\n        this.useStyle(defaultStyle);\r\n      }\r\n\r\n      for (var i = 0; i < keysArr.length; i++) {\r\n        var key = keysArr[i];\r\n        var value = props[key];\r\n\r\n        if (key === 'style') {\r\n          if (!this.style) {\r\n            this.useStyle(value);\r\n          } else {\r\n            extend(this.style, value);\r\n          }\r\n        } else if (key === 'shape') {\r\n          extend(this.shape, value);\r\n        } else {\r\n          _super.prototype.attrKV.call(this, key, value);\r\n        }\r\n      }\r\n\r\n      if (!this.style) {\r\n        this.useStyle({});\r\n      }\r\n    };\r\n\r\n    Path.prototype.getDefaultStyle = function () {\r\n      return null;\r\n    };\r\n\r\n    Path.prototype.getDefaultShape = function () {\r\n      return {};\r\n    };\r\n\r\n    Path.prototype.canBeInsideText = function () {\r\n      return this.hasFill();\r\n    };\r\n\r\n    Path.prototype.getInsideTextFill = function () {\r\n      var pathFill = this.style.fill;\r\n\r\n      if (pathFill !== 'none') {\r\n        if (isString(pathFill)) {\r\n          var fillLum = lum(pathFill, 0);\r\n\r\n          if (fillLum > 0.5) {\r\n            return DARK_LABEL_COLOR;\r\n          } else if (fillLum > 0.2) {\r\n            return LIGHTER_LABEL_COLOR;\r\n          }\r\n\r\n          return LIGHT_LABEL_COLOR;\r\n        } else if (pathFill) {\r\n          return LIGHT_LABEL_COLOR;\r\n        }\r\n      }\r\n\r\n      return DARK_LABEL_COLOR;\r\n    };\r\n\r\n    Path.prototype.getInsideTextStroke = function (textFill) {\r\n      var pathFill = this.style.fill;\r\n\r\n      if (isString(pathFill)) {\r\n        var zr = this.__zr;\r\n        var isDarkMode = !!(zr && zr.isDarkMode());\r\n        var isDarkLabel = lum(textFill, 0) < DARK_MODE_THRESHOLD;\r\n\r\n        if (isDarkMode === isDarkLabel) {\r\n          return pathFill;\r\n        }\r\n      }\r\n    };\r\n\r\n    Path.prototype.buildPath = function (ctx, shapeCfg, inBundle) {};\r\n\r\n    Path.prototype.pathUpdated = function () {\r\n      this.__dirty &= ~Path.SHAPE_CHANGED_BIT;\r\n    };\r\n\r\n    Path.prototype.createPathProxy = function () {\r\n      this.path = new PathProxy(false);\r\n    };\r\n\r\n    Path.prototype.hasStroke = function () {\r\n      var style = this.style;\r\n      var stroke = style.stroke;\r\n      return !(stroke == null || stroke === 'none' || !(style.lineWidth > 0));\r\n    };\r\n\r\n    Path.prototype.hasFill = function () {\r\n      var style = this.style;\r\n      var fill = style.fill;\r\n      return fill != null && fill !== 'none';\r\n    };\r\n\r\n    Path.prototype.getBoundingRect = function () {\r\n      var rect = this._rect;\r\n      var style = this.style;\r\n      var needsUpdateRect = !rect;\r\n\r\n      if (needsUpdateRect) {\r\n        var firstInvoke = false;\r\n\r\n        if (!this.path) {\r\n          firstInvoke = true;\r\n          this.createPathProxy();\r\n        }\r\n\r\n        var path = this.path;\r\n\r\n        if (firstInvoke || this.__dirty & Path.SHAPE_CHANGED_BIT) {\r\n          path.beginPath();\r\n          this.buildPath(path, this.shape, false);\r\n          this.pathUpdated();\r\n        }\r\n\r\n        rect = path.getBoundingRect();\r\n      }\r\n\r\n      this._rect = rect;\r\n\r\n      if (this.hasStroke() && this.path && this.path.len() > 0) {\r\n        var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\r\n\r\n        if (this.__dirty || needsUpdateRect) {\r\n          rectWithStroke.copy(rect);\r\n          var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\r\n          var w = style.lineWidth;\r\n\r\n          if (!this.hasFill()) {\r\n            var strokeContainThreshold = this.strokeContainThreshold;\r\n            w = Math.max(w, strokeContainThreshold == null ? 4 : strokeContainThreshold);\r\n          }\r\n\r\n          if (lineScale > 1e-10) {\r\n            rectWithStroke.width += w / lineScale;\r\n            rectWithStroke.height += w / lineScale;\r\n            rectWithStroke.x -= w / lineScale / 2;\r\n            rectWithStroke.y -= w / lineScale / 2;\r\n          }\r\n        }\r\n\r\n        return rectWithStroke;\r\n      }\r\n\r\n      return rect;\r\n    };\r\n\r\n    Path.prototype.contain = function (x, y) {\r\n      var localPos = this.transformCoordToLocal(x, y);\r\n      var rect = this.getBoundingRect();\r\n      var style = this.style;\r\n      x = localPos[0];\r\n      y = localPos[1];\r\n\r\n      if (rect.contain(x, y)) {\r\n        var pathProxy = this.path;\r\n\r\n        if (this.hasStroke()) {\r\n          var lineWidth = style.lineWidth;\r\n          var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\r\n\r\n          if (lineScale > 1e-10) {\r\n            if (!this.hasFill()) {\r\n              lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\r\n            }\r\n\r\n            if (containStroke(pathProxy, lineWidth / lineScale, x, y)) {\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (this.hasFill()) {\r\n          return contain(pathProxy, x, y);\r\n        }\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    Path.prototype.dirtyShape = function () {\r\n      this.__dirty |= Path.SHAPE_CHANGED_BIT;\r\n\r\n      if (this._rect) {\r\n        this._rect = null;\r\n      }\r\n\r\n      if (this._decalEl) {\r\n        this._decalEl.dirtyShape();\r\n      }\r\n\r\n      this.markRedraw();\r\n    };\r\n\r\n    Path.prototype.dirty = function () {\r\n      this.dirtyStyle();\r\n      this.dirtyShape();\r\n    };\r\n\r\n    Path.prototype.animateShape = function (loop) {\r\n      return this.animate('shape', loop);\r\n    };\r\n\r\n    Path.prototype.updateDuringAnimation = function (targetKey) {\r\n      if (targetKey === 'style') {\r\n        this.dirtyStyle();\r\n      } else if (targetKey === 'shape') {\r\n        this.dirtyShape();\r\n      } else {\r\n        this.markRedraw();\r\n      }\r\n    };\r\n\r\n    Path.prototype.attrKV = function (key, value) {\r\n      if (key === 'shape') {\r\n        this.setShape(value);\r\n      } else {\r\n        _super.prototype.attrKV.call(this, key, value);\r\n      }\r\n    };\r\n\r\n    Path.prototype.setShape = function (keyOrObj, value) {\r\n      var shape = this.shape;\r\n\r\n      if (!shape) {\r\n        shape = this.shape = {};\r\n      }\r\n\r\n      if (typeof keyOrObj === 'string') {\r\n        shape[keyOrObj] = value;\r\n      } else {\r\n        extend(shape, keyOrObj);\r\n      }\r\n\r\n      this.dirtyShape();\r\n      return this;\r\n    };\r\n\r\n    Path.prototype.shapeChanged = function () {\r\n      return !!(this.__dirty & Path.SHAPE_CHANGED_BIT);\r\n    };\r\n\r\n    Path.prototype.createStyle = function (obj) {\r\n      return createObject(DEFAULT_PATH_STYLE, obj);\r\n    };\r\n\r\n    Path.prototype._innerSaveToNormal = function (toState) {\r\n      _super.prototype._innerSaveToNormal.call(this, toState);\r\n\r\n      var normalState = this._normalState;\r\n\r\n      if (toState.shape && !normalState.shape) {\r\n        normalState.shape = extend({}, this.shape);\r\n      }\r\n    };\r\n\r\n    Path.prototype._applyStateObj = function (stateName, state, normalState, keepCurrentStates, transition, animationCfg) {\r\n      _super.prototype._applyStateObj.call(this, stateName, state, normalState, keepCurrentStates, transition, animationCfg);\r\n\r\n      var needsRestoreToNormal = !(state && keepCurrentStates);\r\n      var targetShape;\r\n\r\n      if (state && state.shape) {\r\n        if (transition) {\r\n          if (keepCurrentStates) {\r\n            targetShape = state.shape;\r\n          } else {\r\n            targetShape = extend({}, normalState.shape);\r\n            extend(targetShape, state.shape);\r\n          }\r\n        } else {\r\n          targetShape = extend({}, keepCurrentStates ? this.shape : normalState.shape);\r\n          extend(targetShape, state.shape);\r\n        }\r\n      } else if (needsRestoreToNormal) {\r\n        targetShape = normalState.shape;\r\n      }\r\n\r\n      if (targetShape) {\r\n        if (transition) {\r\n          this.shape = extend({}, this.shape);\r\n          var targetShapePrimaryProps = {};\r\n          var shapeKeys = keys(targetShape);\r\n\r\n          for (var i = 0; i < shapeKeys.length; i++) {\r\n            var key = shapeKeys[i];\r\n\r\n            if (typeof targetShape[key] === 'object') {\r\n              this.shape[key] = targetShape[key];\r\n            } else {\r\n              targetShapePrimaryProps[key] = targetShape[key];\r\n            }\r\n          }\r\n\r\n          this._transitionState(stateName, {\r\n            shape: targetShapePrimaryProps\r\n          }, animationCfg);\r\n        } else {\r\n          this.shape = targetShape;\r\n          this.dirtyShape();\r\n        }\r\n      }\r\n    };\r\n\r\n    Path.prototype._mergeStates = function (states) {\r\n      var mergedState = _super.prototype._mergeStates.call(this, states);\r\n\r\n      var mergedShape;\r\n\r\n      for (var i = 0; i < states.length; i++) {\r\n        var state = states[i];\r\n\r\n        if (state.shape) {\r\n          mergedShape = mergedShape || {};\r\n\r\n          this._mergeStyle(mergedShape, state.shape);\r\n        }\r\n      }\r\n\r\n      if (mergedShape) {\r\n        mergedState.shape = mergedShape;\r\n      }\r\n\r\n      return mergedState;\r\n    };\r\n\r\n    Path.prototype.getAnimationStyleProps = function () {\r\n      return DEFAULT_PATH_ANIMATION_PROPS;\r\n    };\r\n\r\n    Path.prototype.isZeroArea = function () {\r\n      return false;\r\n    };\r\n\r\n    Path.extend = function (defaultProps) {\r\n      var Sub = function (_super) {\r\n        __extends(Sub, _super);\r\n\r\n        function Sub(opts) {\r\n          var _this = _super.call(this, opts) || this;\r\n\r\n          defaultProps.init && defaultProps.init.call(_this, opts);\r\n          return _this;\r\n        }\r\n\r\n        Sub.prototype.getDefaultStyle = function () {\r\n          return clone(defaultProps.style);\r\n        };\r\n\r\n        Sub.prototype.getDefaultShape = function () {\r\n          return clone(defaultProps.shape);\r\n        };\r\n\r\n        return Sub;\r\n      }(Path);\r\n\r\n      for (var key in defaultProps) {\r\n        if (typeof defaultProps[key] === 'function') {\r\n          Sub.prototype[key] = defaultProps[key];\r\n        }\r\n      }\r\n\r\n      return Sub;\r\n    };\r\n\r\n    Path.SHAPE_CHANGED_BIT = 4;\r\n\r\n    Path.initDefaultProps = function () {\r\n      var pathProto = Path.prototype;\r\n      pathProto.type = 'path';\r\n      pathProto.strokeContainThreshold = 5;\r\n      pathProto.segmentIgnoreThreshold = 0;\r\n      pathProto.subPixelOptimize = false;\r\n      pathProto.autoBatch = false;\r\n      pathProto.__dirty = Element.REDARAW_BIT | Displayable.STYLE_CHANGED_BIT | Path.SHAPE_CHANGED_BIT;\r\n    }();\r\n\r\n    return Path;\r\n  }(Displayable);\r\n\r\n  var DEFAULT_TSPAN_STYLE = defaults({\r\n    strokeFirst: true,\r\n    font: DEFAULT_FONT,\r\n    x: 0,\r\n    y: 0,\r\n    textAlign: 'left',\r\n    textBaseline: 'top',\r\n    miterLimit: 2\r\n  }, DEFAULT_PATH_STYLE);\r\n\r\n  var TSpan = function (_super) {\r\n    __extends(TSpan, _super);\r\n\r\n    function TSpan() {\r\n      return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n\r\n    TSpan.prototype.hasStroke = function () {\r\n      var style = this.style;\r\n      var stroke = style.stroke;\r\n      return stroke != null && stroke !== 'none' && style.lineWidth > 0;\r\n    };\r\n\r\n    TSpan.prototype.hasFill = function () {\r\n      var style = this.style;\r\n      var fill = style.fill;\r\n      return fill != null && fill !== 'none';\r\n    };\r\n\r\n    TSpan.prototype.createStyle = function (obj) {\r\n      return createObject(DEFAULT_TSPAN_STYLE, obj);\r\n    };\r\n\r\n    TSpan.prototype.setBoundingRect = function (rect) {\r\n      this._rect = rect;\r\n    };\r\n\r\n    TSpan.prototype.getBoundingRect = function () {\r\n      var style = this.style;\r\n\r\n      if (!this._rect) {\r\n        var text = style.text;\r\n        text != null ? text += '' : text = '';\r\n        var rect = getBoundingRect(text, style.font, style.textAlign, style.textBaseline);\r\n        rect.x += style.x || 0;\r\n        rect.y += style.y || 0;\r\n\r\n        if (this.hasStroke()) {\r\n          var w = style.lineWidth;\r\n          rect.x -= w / 2;\r\n          rect.y -= w / 2;\r\n          rect.width += w;\r\n          rect.height += w;\r\n        }\r\n\r\n        this._rect = rect;\r\n      }\r\n\r\n      return this._rect;\r\n    };\r\n\r\n    TSpan.initDefaultProps = function () {\r\n      var tspanProto = TSpan.prototype;\r\n      tspanProto.dirtyRectTolerance = 10;\r\n    }();\r\n\r\n    return TSpan;\r\n  }(Displayable);\r\n\r\n  TSpan.prototype.type = 'tspan';\r\n  var DEFAULT_IMAGE_STYLE = defaults({\r\n    x: 0,\r\n    y: 0\r\n  }, DEFAULT_COMMON_STYLE);\r\n  var DEFAULT_IMAGE_ANIMATION_PROPS = {\r\n    style: defaults({\r\n      x: true,\r\n      y: true,\r\n      width: true,\r\n      height: true,\r\n      sx: true,\r\n      sy: true,\r\n      sWidth: true,\r\n      sHeight: true\r\n    }, DEFAULT_COMMON_ANIMATION_PROPS.style)\r\n  };\r\n\r\n  function isImageLike(source) {\r\n    return !!(source && typeof source !== 'string' && source.width && source.height);\r\n  }\r\n\r\n  var ZRImage = function (_super) {\r\n    __extends(ZRImage, _super);\r\n\r\n    function ZRImage() {\r\n      return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n\r\n    ZRImage.prototype.createStyle = function (obj) {\r\n      return createObject(DEFAULT_IMAGE_STYLE, obj);\r\n    };\r\n\r\n    ZRImage.prototype._getSize = function (dim) {\r\n      var style = this.style;\r\n      var size = style[dim];\r\n\r\n      if (size != null) {\r\n        return size;\r\n      }\r\n\r\n      var imageSource = isImageLike(style.image) ? style.image : this.__image;\r\n\r\n      if (!imageSource) {\r\n        return 0;\r\n      }\r\n\r\n      var otherDim = dim === 'width' ? 'height' : 'width';\r\n      var otherDimSize = style[otherDim];\r\n\r\n      if (otherDimSize == null) {\r\n        return imageSource[dim];\r\n      } else {\r\n        return imageSource[dim] / imageSource[otherDim] * otherDimSize;\r\n      }\r\n    };\r\n\r\n    ZRImage.prototype.getWidth = function () {\r\n      return this._getSize('width');\r\n    };\r\n\r\n    ZRImage.prototype.getHeight = function () {\r\n      return this._getSize('height');\r\n    };\r\n\r\n    ZRImage.prototype.getAnimationStyleProps = function () {\r\n      return DEFAULT_IMAGE_ANIMATION_PROPS;\r\n    };\r\n\r\n    ZRImage.prototype.getBoundingRect = function () {\r\n      var style = this.style;\r\n\r\n      if (!this._rect) {\r\n        this._rect = new BoundingRect(style.x || 0, style.y || 0, this.getWidth(), this.getHeight());\r\n      }\r\n\r\n      return this._rect;\r\n    };\r\n\r\n    return ZRImage;\r\n  }(Displayable);\r\n\r\n  ZRImage.prototype.type = 'image';\r\n\r\n  function buildPath(ctx, shape) {\r\n    var x = shape.x;\r\n    var y = shape.y;\r\n    var width = shape.width;\r\n    var height = shape.height;\r\n    var r = shape.r;\r\n    var r1;\r\n    var r2;\r\n    var r3;\r\n    var r4;\r\n\r\n    if (width < 0) {\r\n      x = x + width;\r\n      width = -width;\r\n    }\r\n\r\n    if (height < 0) {\r\n      y = y + height;\r\n      height = -height;\r\n    }\r\n\r\n    if (typeof r === 'number') {\r\n      r1 = r2 = r3 = r4 = r;\r\n    } else if (r instanceof Array) {\r\n      if (r.length === 1) {\r\n        r1 = r2 = r3 = r4 = r[0];\r\n      } else if (r.length === 2) {\r\n        r1 = r3 = r[0];\r\n        r2 = r4 = r[1];\r\n      } else if (r.length === 3) {\r\n        r1 = r[0];\r\n        r2 = r4 = r[1];\r\n        r3 = r[2];\r\n      } else {\r\n        r1 = r[0];\r\n        r2 = r[1];\r\n        r3 = r[2];\r\n        r4 = r[3];\r\n      }\r\n    } else {\r\n      r1 = r2 = r3 = r4 = 0;\r\n    }\r\n\r\n    var total;\r\n\r\n    if (r1 + r2 > width) {\r\n      total = r1 + r2;\r\n      r1 *= width / total;\r\n      r2 *= width / total;\r\n    }\r\n\r\n    if (r3 + r4 > width) {\r\n      total = r3 + r4;\r\n      r3 *= width / total;\r\n      r4 *= width / total;\r\n    }\r\n\r\n    if (r2 + r3 > height) {\r\n      total = r2 + r3;\r\n      r2 *= height / total;\r\n      r3 *= height / total;\r\n    }\r\n\r\n    if (r1 + r4 > height) {\r\n      total = r1 + r4;\r\n      r1 *= height / total;\r\n      r4 *= height / total;\r\n    }\r\n\r\n    ctx.moveTo(x + r1, y);\r\n    ctx.lineTo(x + width - r2, y);\r\n    r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\r\n    ctx.lineTo(x + width, y + height - r3);\r\n    r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\r\n    ctx.lineTo(x + r4, y + height);\r\n    r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\r\n    ctx.lineTo(x, y + r1);\r\n    r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\r\n  }\r\n\r\n  var round$1 = Math.round;\r\n\r\n  function subPixelOptimizeLine(outputShape, inputShape, style) {\r\n    if (!inputShape) {\r\n      return;\r\n    }\r\n\r\n    var x1 = inputShape.x1;\r\n    var x2 = inputShape.x2;\r\n    var y1 = inputShape.y1;\r\n    var y2 = inputShape.y2;\r\n    outputShape.x1 = x1;\r\n    outputShape.x2 = x2;\r\n    outputShape.y1 = y1;\r\n    outputShape.y2 = y2;\r\n    var lineWidth = style && style.lineWidth;\r\n\r\n    if (!lineWidth) {\r\n      return outputShape;\r\n    }\r\n\r\n    if (round$1(x1 * 2) === round$1(x2 * 2)) {\r\n      outputShape.x1 = outputShape.x2 = subPixelOptimize(x1, lineWidth, true);\r\n    }\r\n\r\n    if (round$1(y1 * 2) === round$1(y2 * 2)) {\r\n      outputShape.y1 = outputShape.y2 = subPixelOptimize(y1, lineWidth, true);\r\n    }\r\n\r\n    return outputShape;\r\n  }\r\n\r\n  function subPixelOptimizeRect(outputShape, inputShape, style) {\r\n    if (!inputShape) {\r\n      return;\r\n    }\r\n\r\n    var originX = inputShape.x;\r\n    var originY = inputShape.y;\r\n    var originWidth = inputShape.width;\r\n    var originHeight = inputShape.height;\r\n    outputShape.x = originX;\r\n    outputShape.y = originY;\r\n    outputShape.width = originWidth;\r\n    outputShape.height = originHeight;\r\n    var lineWidth = style && style.lineWidth;\r\n\r\n    if (!lineWidth) {\r\n      return outputShape;\r\n    }\r\n\r\n    outputShape.x = subPixelOptimize(originX, lineWidth, true);\r\n    outputShape.y = subPixelOptimize(originY, lineWidth, true);\r\n    outputShape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - outputShape.x, originWidth === 0 ? 0 : 1);\r\n    outputShape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - outputShape.y, originHeight === 0 ? 0 : 1);\r\n    return outputShape;\r\n  }\r\n\r\n  function subPixelOptimize(position, lineWidth, positiveOrNegative) {\r\n    if (!lineWidth) {\r\n      return position;\r\n    }\r\n\r\n    var doubledPosition = round$1(position * 2);\r\n    return (doubledPosition + round$1(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\r\n  }\r\n\r\n  var RectShape = function () {\r\n    function RectShape() {\r\n      this.x = 0;\r\n      this.y = 0;\r\n      this.width = 0;\r\n      this.height = 0;\r\n    }\r\n\r\n    return RectShape;\r\n  }();\r\n\r\n  var subPixelOptimizeOutputShape = {};\r\n\r\n  var Rect = function (_super) {\r\n    __extends(Rect, _super);\r\n\r\n    function Rect(opts) {\r\n      return _super.call(this, opts) || this;\r\n    }\r\n\r\n    Rect.prototype.getDefaultShape = function () {\r\n      return new RectShape();\r\n    };\r\n\r\n    Rect.prototype.buildPath = function (ctx, shape) {\r\n      var x;\r\n      var y;\r\n      var width;\r\n      var height;\r\n\r\n      if (this.subPixelOptimize) {\r\n        var optimizedShape = subPixelOptimizeRect(subPixelOptimizeOutputShape, shape, this.style);\r\n        x = optimizedShape.x;\r\n        y = optimizedShape.y;\r\n        width = optimizedShape.width;\r\n        height = optimizedShape.height;\r\n        optimizedShape.r = shape.r;\r\n        shape = optimizedShape;\r\n      } else {\r\n        x = shape.x;\r\n        y = shape.y;\r\n        width = shape.width;\r\n        height = shape.height;\r\n      }\r\n\r\n      if (!shape.r) {\r\n        ctx.rect(x, y, width, height);\r\n      } else {\r\n        buildPath(ctx, shape);\r\n      }\r\n    };\r\n\r\n    Rect.prototype.isZeroArea = function () {\r\n      return !this.shape.width || !this.shape.height;\r\n    };\r\n\r\n    return Rect;\r\n  }(Path);\r\n\r\n  Rect.prototype.type = 'rect';\r\n  var DEFAULT_RICH_TEXT_COLOR = {\r\n    fill: '#000'\r\n  };\r\n  var DEFAULT_STROKE_LINE_WIDTH = 2;\r\n  var DEFAULT_TEXT_ANIMATION_PROPS = {\r\n    style: defaults({\r\n      fill: true,\r\n      stroke: true,\r\n      fillOpacity: true,\r\n      strokeOpacity: true,\r\n      lineWidth: true,\r\n      fontSize: true,\r\n      lineHeight: true,\r\n      width: true,\r\n      height: true,\r\n      textShadowColor: true,\r\n      textShadowBlur: true,\r\n      textShadowOffsetX: true,\r\n      textShadowOffsetY: true,\r\n      backgroundColor: true,\r\n      padding: true,\r\n      borderColor: true,\r\n      borderWidth: true,\r\n      borderRadius: true\r\n    }, DEFAULT_COMMON_ANIMATION_PROPS.style)\r\n  };\r\n\r\n  var ZRText = function (_super) {\r\n    __extends(ZRText, _super);\r\n\r\n    function ZRText(opts) {\r\n      var _this = _super.call(this) || this;\r\n\r\n      _this.type = 'text';\r\n      _this._children = [];\r\n      _this._defaultStyle = DEFAULT_RICH_TEXT_COLOR;\r\n\r\n      _this.attr(opts);\r\n\r\n      return _this;\r\n    }\r\n\r\n    ZRText.prototype.childrenRef = function () {\r\n      return this._children;\r\n    };\r\n\r\n    ZRText.prototype.update = function () {\r\n      if (this.styleChanged()) {\r\n        this._updateSubTexts();\r\n      }\r\n\r\n      for (var i = 0; i < this._children.length; i++) {\r\n        var child = this._children[i];\r\n        child.zlevel = this.zlevel;\r\n        child.z = this.z;\r\n        child.z2 = this.z2;\r\n        child.culling = this.culling;\r\n        child.cursor = this.cursor;\r\n        child.invisible = this.invisible;\r\n      }\r\n\r\n      var attachedTransform = this.attachedTransform;\r\n\r\n      if (attachedTransform) {\r\n        attachedTransform.updateTransform();\r\n        var m = attachedTransform.transform;\r\n\r\n        if (m) {\r\n          this.transform = this.transform || [];\r\n          copy$1(this.transform, m);\r\n        } else {\r\n          this.transform = null;\r\n        }\r\n      } else {\r\n        _super.prototype.update.call(this);\r\n      }\r\n    };\r\n\r\n    ZRText.prototype.getComputedTransform = function () {\r\n      if (this.__hostTarget) {\r\n        this.__hostTarget.getComputedTransform();\r\n\r\n        this.__hostTarget.updateInnerText(true);\r\n      }\r\n\r\n      return this.attachedTransform ? this.attachedTransform.getComputedTransform() : _super.prototype.getComputedTransform.call(this);\r\n    };\r\n\r\n    ZRText.prototype._updateSubTexts = function () {\r\n      this._childCursor = 0;\r\n      normalizeTextStyle(this.style);\r\n      this.style.rich ? this._updateRichTexts() : this._updatePlainTexts();\r\n      this._children.length = this._childCursor;\r\n      this.styleUpdated();\r\n    };\r\n\r\n    ZRText.prototype.addSelfToZr = function (zr) {\r\n      _super.prototype.addSelfToZr.call(this, zr);\r\n\r\n      for (var i = 0; i < this._children.length; i++) {\r\n        this._children[i].__zr = zr;\r\n      }\r\n    };\r\n\r\n    ZRText.prototype.removeSelfFromZr = function (zr) {\r\n      _super.prototype.removeSelfFromZr.call(this, zr);\r\n\r\n      for (var i = 0; i < this._children.length; i++) {\r\n        this._children[i].__zr = null;\r\n      }\r\n    };\r\n\r\n    ZRText.prototype.getBoundingRect = function () {\r\n      if (this.styleChanged()) {\r\n        this._updateSubTexts();\r\n      }\r\n\r\n      if (!this._rect) {\r\n        var tmpRect = new BoundingRect(0, 0, 0, 0);\r\n        var children = this._children;\r\n        var tmpMat = [];\r\n        var rect = null;\r\n\r\n        for (var i = 0; i < children.length; i++) {\r\n          var child = children[i];\r\n          var childRect = child.getBoundingRect();\r\n          var transform = child.getLocalTransform(tmpMat);\r\n\r\n          if (transform) {\r\n            tmpRect.copy(childRect);\r\n            tmpRect.applyTransform(transform);\r\n            rect = rect || tmpRect.clone();\r\n            rect.union(tmpRect);\r\n          } else {\r\n            rect = rect || childRect.clone();\r\n            rect.union(childRect);\r\n          }\r\n        }\r\n\r\n        this._rect = rect || tmpRect;\r\n      }\r\n\r\n      return this._rect;\r\n    };\r\n\r\n    ZRText.prototype.setDefaultTextStyle = function (defaultTextStyle) {\r\n      this._defaultStyle = defaultTextStyle || DEFAULT_RICH_TEXT_COLOR;\r\n    };\r\n\r\n    ZRText.prototype.setTextContent = function (textContent) {\r\n      throw new Error('Can\\'t attach text on another text');\r\n    };\r\n\r\n    ZRText.prototype._mergeStyle = function (targetStyle, sourceStyle) {\r\n      if (!sourceStyle) {\r\n        return targetStyle;\r\n      }\r\n\r\n      var sourceRich = sourceStyle.rich;\r\n      var targetRich = targetStyle.rich || sourceRich && {};\r\n      extend(targetStyle, sourceStyle);\r\n\r\n      if (sourceRich && targetRich) {\r\n        this._mergeRich(targetRich, sourceRich);\r\n\r\n        targetStyle.rich = targetRich;\r\n      } else if (targetRich) {\r\n        targetStyle.rich = targetRich;\r\n      }\r\n\r\n      return targetStyle;\r\n    };\r\n\r\n    ZRText.prototype._mergeRich = function (targetRich, sourceRich) {\r\n      var richNames = keys(sourceRich);\r\n\r\n      for (var i = 0; i < richNames.length; i++) {\r\n        var richName = richNames[i];\r\n        targetRich[richName] = targetRich[richName] || {};\r\n        extend(targetRich[richName], sourceRich[richName]);\r\n      }\r\n    };\r\n\r\n    ZRText.prototype.getAnimationStyleProps = function () {\r\n      return DEFAULT_TEXT_ANIMATION_PROPS;\r\n    };\r\n\r\n    ZRText.prototype._getOrCreateChild = function (Ctor) {\r\n      var child = this._children[this._childCursor];\r\n\r\n      if (!child || !(child instanceof Ctor)) {\r\n        child = new Ctor();\r\n      }\r\n\r\n      this._children[this._childCursor++] = child;\r\n      child.__zr = this.__zr;\r\n      child.parent = this;\r\n      return child;\r\n    };\r\n\r\n    ZRText.prototype._updatePlainTexts = function () {\r\n      var style = this.style;\r\n      var textFont = style.font || DEFAULT_FONT;\r\n      var textPadding = style.padding;\r\n      var text = getStyleText(style);\r\n      var contentBlock = parsePlainText(text, style);\r\n      var needDrawBg = needDrawBackground(style);\r\n      var bgColorDrawn = !!style.backgroundColor;\r\n      var outerHeight = contentBlock.outerHeight;\r\n      var textLines = contentBlock.lines;\r\n      var lineHeight = contentBlock.lineHeight;\r\n      var defaultStyle = this._defaultStyle;\r\n      var baseX = style.x || 0;\r\n      var baseY = style.y || 0;\r\n      var textAlign = style.align || defaultStyle.align || 'left';\r\n      var verticalAlign = style.verticalAlign || defaultStyle.verticalAlign || 'top';\r\n      var textX = baseX;\r\n      var textY = adjustTextY(baseY, contentBlock.contentHeight, verticalAlign);\r\n\r\n      if (needDrawBg || textPadding) {\r\n        var outerWidth_1 = contentBlock.width;\r\n        textPadding && (outerWidth_1 += textPadding[1] + textPadding[3]);\r\n        var boxX = adjustTextX(baseX, outerWidth_1, textAlign);\r\n        var boxY = adjustTextY(baseY, outerHeight, verticalAlign);\r\n        needDrawBg && this._renderBackground(style, style, boxX, boxY, outerWidth_1, outerHeight);\r\n      }\r\n\r\n      textY += lineHeight / 2;\r\n\r\n      if (textPadding) {\r\n        textX = getTextXForPadding(baseX, textAlign, textPadding);\r\n\r\n        if (verticalAlign === 'top') {\r\n          textY += textPadding[0];\r\n        } else if (verticalAlign === 'bottom') {\r\n          textY -= textPadding[2];\r\n        }\r\n      }\r\n\r\n      var defaultLineWidth = 0;\r\n      var useDefaultFill = false;\r\n      var textFill = getFill('fill' in style ? style.fill : (useDefaultFill = true, defaultStyle.fill));\r\n      var textStroke = getStroke('stroke' in style ? style.stroke : !bgColorDrawn && (!defaultStyle.autoStroke || useDefaultFill) ? (defaultLineWidth = DEFAULT_STROKE_LINE_WIDTH, defaultStyle.stroke) : null);\r\n      var hasShadow = style.textShadowBlur > 0;\r\n      var fixedBoundingRect = style.width != null && (style.overflow === 'truncate' || style.overflow === 'break' || style.overflow === 'breakAll');\r\n      var calculatedLineHeight = contentBlock.calculatedLineHeight;\r\n\r\n      for (var i = 0; i < textLines.length; i++) {\r\n        var el = this._getOrCreateChild(TSpan);\r\n\r\n        var subElStyle = el.createStyle();\r\n        el.useStyle(subElStyle);\r\n        subElStyle.text = textLines[i];\r\n        subElStyle.x = textX;\r\n        subElStyle.y = textY;\r\n\r\n        if (textAlign) {\r\n          subElStyle.textAlign = textAlign;\r\n        }\r\n\r\n        subElStyle.textBaseline = 'middle';\r\n        subElStyle.opacity = style.opacity;\r\n        subElStyle.strokeFirst = true;\r\n\r\n        if (hasShadow) {\r\n          subElStyle.shadowBlur = style.textShadowBlur || 0;\r\n          subElStyle.shadowColor = style.textShadowColor || 'transparent';\r\n          subElStyle.shadowOffsetX = style.textShadowOffsetX || 0;\r\n          subElStyle.shadowOffsetY = style.textShadowOffsetY || 0;\r\n        }\r\n\r\n        if (textStroke) {\r\n          subElStyle.stroke = textStroke;\r\n          subElStyle.lineWidth = style.lineWidth || defaultLineWidth;\r\n          subElStyle.lineDash = style.lineDash;\r\n          subElStyle.lineDashOffset = style.lineDashOffset || 0;\r\n        }\r\n\r\n        if (textFill) {\r\n          subElStyle.fill = textFill;\r\n        }\r\n\r\n        subElStyle.font = textFont;\r\n        textY += lineHeight;\r\n\r\n        if (fixedBoundingRect) {\r\n          el.setBoundingRect(new BoundingRect(adjustTextX(subElStyle.x, style.width, subElStyle.textAlign), adjustTextY(subElStyle.y, calculatedLineHeight, subElStyle.textBaseline), style.width, calculatedLineHeight));\r\n        }\r\n      }\r\n    };\r\n\r\n    ZRText.prototype._updateRichTexts = function () {\r\n      var style = this.style;\r\n      var text = getStyleText(style);\r\n      var contentBlock = parseRichText(text, style);\r\n      var contentWidth = contentBlock.width;\r\n      var outerWidth = contentBlock.outerWidth;\r\n      var outerHeight = contentBlock.outerHeight;\r\n      var textPadding = style.padding;\r\n      var baseX = style.x || 0;\r\n      var baseY = style.y || 0;\r\n      var defaultStyle = this._defaultStyle;\r\n      var textAlign = style.align || defaultStyle.align;\r\n      var verticalAlign = style.verticalAlign || defaultStyle.verticalAlign;\r\n      var boxX = adjustTextX(baseX, outerWidth, textAlign);\r\n      var boxY = adjustTextY(baseY, outerHeight, verticalAlign);\r\n      var xLeft = boxX;\r\n      var lineTop = boxY;\r\n\r\n      if (textPadding) {\r\n        xLeft += textPadding[3];\r\n        lineTop += textPadding[0];\r\n      }\r\n\r\n      var xRight = xLeft + contentWidth;\r\n\r\n      if (needDrawBackground(style)) {\r\n        this._renderBackground(style, style, boxX, boxY, outerWidth, outerHeight);\r\n      }\r\n\r\n      var bgColorDrawn = !!style.backgroundColor;\r\n\r\n      for (var i = 0; i < contentBlock.lines.length; i++) {\r\n        var line = contentBlock.lines[i];\r\n        var tokens = line.tokens;\r\n        var tokenCount = tokens.length;\r\n        var lineHeight = line.lineHeight;\r\n        var remainedWidth = line.width;\r\n        var leftIndex = 0;\r\n        var lineXLeft = xLeft;\r\n        var lineXRight = xRight;\r\n        var rightIndex = tokenCount - 1;\r\n        var token = void 0;\r\n\r\n        while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.align || token.align === 'left')) {\r\n          this._placeToken(token, style, lineHeight, lineTop, lineXLeft, 'left', bgColorDrawn);\r\n\r\n          remainedWidth -= token.width;\r\n          lineXLeft += token.width;\r\n          leftIndex++;\r\n        }\r\n\r\n        while (rightIndex >= 0 && (token = tokens[rightIndex], token.align === 'right')) {\r\n          this._placeToken(token, style, lineHeight, lineTop, lineXRight, 'right', bgColorDrawn);\r\n\r\n          remainedWidth -= token.width;\r\n          lineXRight -= token.width;\r\n          rightIndex--;\r\n        }\r\n\r\n        lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - remainedWidth) / 2;\r\n\r\n        while (leftIndex <= rightIndex) {\r\n          token = tokens[leftIndex];\r\n\r\n          this._placeToken(token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center', bgColorDrawn);\r\n\r\n          lineXLeft += token.width;\r\n          leftIndex++;\r\n        }\r\n\r\n        lineTop += lineHeight;\r\n      }\r\n    };\r\n\r\n    ZRText.prototype._placeToken = function (token, style, lineHeight, lineTop, x, textAlign, parentBgColorDrawn) {\r\n      var tokenStyle = style.rich[token.styleName] || {};\r\n      tokenStyle.text = token.text;\r\n      var verticalAlign = token.verticalAlign;\r\n      var y = lineTop + lineHeight / 2;\r\n\r\n      if (verticalAlign === 'top') {\r\n        y = lineTop + token.height / 2;\r\n      } else if (verticalAlign === 'bottom') {\r\n        y = lineTop + lineHeight - token.height / 2;\r\n      }\r\n\r\n      var needDrawBg = !token.isLineHolder && needDrawBackground(tokenStyle);\r\n      needDrawBg && this._renderBackground(tokenStyle, style, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\r\n      var bgColorDrawn = !!tokenStyle.backgroundColor;\r\n      var textPadding = token.textPadding;\r\n\r\n      if (textPadding) {\r\n        x = getTextXForPadding(x, textAlign, textPadding);\r\n        y -= token.height / 2 - textPadding[0] - token.innerHeight / 2;\r\n      }\r\n\r\n      var el = this._getOrCreateChild(TSpan);\r\n\r\n      var subElStyle = el.createStyle();\r\n      el.useStyle(subElStyle);\r\n      var defaultStyle = this._defaultStyle;\r\n      var useDefaultFill = false;\r\n      var defaultLineWidth = 0;\r\n      var textFill = getStroke('fill' in tokenStyle ? tokenStyle.fill : 'fill' in style ? style.fill : (useDefaultFill = true, defaultStyle.fill));\r\n      var textStroke = getStroke('stroke' in tokenStyle ? tokenStyle.stroke : 'stroke' in style ? style.stroke : !bgColorDrawn && !parentBgColorDrawn && (!defaultStyle.autoStroke || useDefaultFill) ? (defaultLineWidth = DEFAULT_STROKE_LINE_WIDTH, defaultStyle.stroke) : null);\r\n      var hasShadow = tokenStyle.textShadowBlur > 0 || style.textShadowBlur > 0;\r\n      subElStyle.text = token.text;\r\n      subElStyle.x = x;\r\n      subElStyle.y = y;\r\n\r\n      if (hasShadow) {\r\n        subElStyle.shadowBlur = tokenStyle.textShadowBlur || style.textShadowBlur || 0;\r\n        subElStyle.shadowColor = tokenStyle.textShadowColor || style.textShadowColor || 'transparent';\r\n        subElStyle.shadowOffsetX = tokenStyle.textShadowOffsetX || style.textShadowOffsetX || 0;\r\n        subElStyle.shadowOffsetY = tokenStyle.textShadowOffsetY || style.textShadowOffsetY || 0;\r\n      }\r\n\r\n      subElStyle.textAlign = textAlign;\r\n      subElStyle.textBaseline = 'middle';\r\n      subElStyle.font = token.font || DEFAULT_FONT;\r\n      subElStyle.opacity = retrieve3(tokenStyle.opacity, style.opacity, 1);\r\n\r\n      if (textStroke) {\r\n        subElStyle.lineWidth = retrieve3(tokenStyle.lineWidth, style.lineWidth, defaultLineWidth);\r\n        subElStyle.lineDash = retrieve2(tokenStyle.lineDash, style.lineDash);\r\n        subElStyle.lineDashOffset = style.lineDashOffset || 0;\r\n        subElStyle.stroke = textStroke;\r\n      }\r\n\r\n      if (textFill) {\r\n        subElStyle.fill = textFill;\r\n      }\r\n\r\n      var textWidth = token.contentWidth;\r\n      var textHeight = token.contentHeight;\r\n      el.setBoundingRect(new BoundingRect(adjustTextX(subElStyle.x, textWidth, subElStyle.textAlign), adjustTextY(subElStyle.y, textHeight, subElStyle.textBaseline), textWidth, textHeight));\r\n    };\r\n\r\n    ZRText.prototype._renderBackground = function (style, topStyle, x, y, width, height) {\r\n      var textBackgroundColor = style.backgroundColor;\r\n      var textBorderWidth = style.borderWidth;\r\n      var textBorderColor = style.borderColor;\r\n      var isPlainBg = isString(textBackgroundColor);\r\n      var textBorderRadius = style.borderRadius;\r\n      var self = this;\r\n      var rectEl;\r\n      var imgEl;\r\n\r\n      if (isPlainBg || textBorderWidth && textBorderColor) {\r\n        rectEl = this._getOrCreateChild(Rect);\r\n        rectEl.useStyle(rectEl.createStyle());\r\n        rectEl.style.fill = null;\r\n        var rectShape = rectEl.shape;\r\n        rectShape.x = x;\r\n        rectShape.y = y;\r\n        rectShape.width = width;\r\n        rectShape.height = height;\r\n        rectShape.r = textBorderRadius;\r\n        rectEl.dirtyShape();\r\n      }\r\n\r\n      if (isPlainBg) {\r\n        var rectStyle = rectEl.style;\r\n        rectStyle.fill = textBackgroundColor || null;\r\n        rectStyle.fillOpacity = retrieve2(style.fillOpacity, 1);\r\n      } else if (textBackgroundColor && textBackgroundColor.image) {\r\n        imgEl = this._getOrCreateChild(ZRImage);\r\n\r\n        imgEl.onload = function () {\r\n          self.dirtyStyle();\r\n        };\r\n\r\n        var imgStyle = imgEl.style;\r\n        imgStyle.image = textBackgroundColor.image;\r\n        imgStyle.x = x;\r\n        imgStyle.y = y;\r\n        imgStyle.width = width;\r\n        imgStyle.height = height;\r\n      }\r\n\r\n      if (textBorderWidth && textBorderColor) {\r\n        var rectStyle = rectEl.style;\r\n        rectStyle.lineWidth = textBorderWidth;\r\n        rectStyle.stroke = textBorderColor;\r\n        rectStyle.strokeOpacity = retrieve2(style.strokeOpacity, 1);\r\n        rectStyle.lineDash = style.borderDash;\r\n        rectStyle.lineDashOffset = style.borderDashOffset || 0;\r\n        rectEl.strokeContainThreshold = 0;\r\n\r\n        if (rectEl.hasFill() && rectEl.hasStroke()) {\r\n          rectStyle.strokeFirst = true;\r\n          rectStyle.lineWidth *= 2;\r\n        }\r\n      }\r\n\r\n      var commonStyle = (rectEl || imgEl).style;\r\n      commonStyle.shadowBlur = style.shadowBlur || 0;\r\n      commonStyle.shadowColor = style.shadowColor || 'transparent';\r\n      commonStyle.shadowOffsetX = style.shadowOffsetX || 0;\r\n      commonStyle.shadowOffsetY = style.shadowOffsetY || 0;\r\n      commonStyle.opacity = retrieve3(style.opacity, topStyle.opacity, 1);\r\n    };\r\n\r\n    ZRText.makeFont = function (style) {\r\n      var font = '';\r\n\r\n      if (style.fontSize || style.fontFamily || style.fontWeight) {\r\n        var fontSize = '';\r\n\r\n        if (typeof style.fontSize === 'string' && (style.fontSize.indexOf('px') !== -1 || style.fontSize.indexOf('rem') !== -1 || style.fontSize.indexOf('em') !== -1)) {\r\n          fontSize = style.fontSize;\r\n        } else if (!isNaN(+style.fontSize)) {\r\n          fontSize = style.fontSize + 'px';\r\n        } else {\r\n          fontSize = '12px';\r\n        }\r\n\r\n        font = [style.fontStyle, style.fontWeight, fontSize, style.fontFamily || 'sans-serif'].join(' ');\r\n      }\r\n\r\n      return font && trim(font) || style.textFont || style.font;\r\n    };\r\n\r\n    return ZRText;\r\n  }(Displayable);\r\n\r\n  var VALID_TEXT_ALIGN = {\r\n    left: true,\r\n    right: 1,\r\n    center: 1\r\n  };\r\n  var VALID_TEXT_VERTICAL_ALIGN = {\r\n    top: 1,\r\n    bottom: 1,\r\n    middle: 1\r\n  };\r\n\r\n  function normalizeTextStyle(style) {\r\n    normalizeStyle(style);\r\n    each$1(style.rich, normalizeStyle);\r\n    return style;\r\n  }\r\n\r\n  function normalizeStyle(style) {\r\n    if (style) {\r\n      style.font = ZRText.makeFont(style);\r\n      var textAlign = style.align;\r\n      textAlign === 'middle' && (textAlign = 'center');\r\n      style.align = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left';\r\n      var verticalAlign = style.verticalAlign;\r\n      verticalAlign === 'center' && (verticalAlign = 'middle');\r\n      style.verticalAlign = verticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[verticalAlign] ? verticalAlign : 'top';\r\n      var textPadding = style.padding;\r\n\r\n      if (textPadding) {\r\n        style.padding = normalizeCssArray(style.padding);\r\n      }\r\n    }\r\n  }\r\n\r\n  function getStroke(stroke, lineWidth) {\r\n    return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null : stroke.image || stroke.colorStops ? '#000' : stroke;\r\n  }\r\n\r\n  function getFill(fill) {\r\n    return fill == null || fill === 'none' ? null : fill.image || fill.colorStops ? '#000' : fill;\r\n  }\r\n\r\n  function getTextXForPadding(x, textAlign, textPadding) {\r\n    return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\r\n  }\r\n\r\n  function getStyleText(style) {\r\n    var text = style.text;\r\n    text != null && (text += '');\r\n    return text;\r\n  }\r\n\r\n  function needDrawBackground(style) {\r\n    return !!(style.backgroundColor || style.borderWidth && style.borderColor);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var getECData = makeInner();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var _highlightNextDigit = 1;\r\n  var _highlightKeyMap = {};\r\n  var getSavedStates = makeInner();\r\n  var HOVER_STATE_NORMAL = 0;\r\n  var HOVER_STATE_BLUR = 1;\r\n  var HOVER_STATE_EMPHASIS = 2;\r\n  var SPECIAL_STATES = ['emphasis', 'blur', 'select'];\r\n  var DISPLAY_STATES = ['normal', 'emphasis', 'blur', 'select'];\r\n  var Z2_EMPHASIS_LIFT = 10;\r\n  var Z2_SELECT_LIFT = 9;\r\n  var HIGHLIGHT_ACTION_TYPE = 'highlight';\r\n  var DOWNPLAY_ACTION_TYPE = 'downplay';\r\n  var SELECT_ACTION_TYPE = 'select';\r\n  var UNSELECT_ACTION_TYPE = 'unselect';\r\n  var TOGGLE_SELECT_ACTION_TYPE = 'toggleSelect';\r\n\r\n  function hasFillOrStroke(fillOrStroke) {\r\n    return fillOrStroke != null && fillOrStroke !== 'none';\r\n  } // Most lifted color are duplicated.\r\n\r\n\r\n  var liftedColorCache = new LRU(100);\r\n\r\n  function liftColor(color) {\r\n    if (typeof color !== 'string') {\r\n      return color;\r\n    }\r\n\r\n    var liftedColor = liftedColorCache.get(color);\r\n\r\n    if (!liftedColor) {\r\n      liftedColor = lift(color, -0.1);\r\n      liftedColorCache.put(color, liftedColor);\r\n    }\r\n\r\n    return liftedColor;\r\n  }\r\n\r\n  function doChangeHoverState(el, stateName, hoverStateEnum) {\r\n    if (el.onHoverStateChange && (el.hoverState || 0) !== hoverStateEnum) {\r\n      el.onHoverStateChange(stateName);\r\n    }\r\n\r\n    el.hoverState = hoverStateEnum;\r\n  }\r\n\r\n  function singleEnterEmphasis(el) {\r\n    // Only mark the flag.\r\n    // States will be applied in the echarts.ts in next frame.\r\n    doChangeHoverState(el, 'emphasis', HOVER_STATE_EMPHASIS);\r\n  }\r\n\r\n  function singleLeaveEmphasis(el) {\r\n    // Only mark the flag.\r\n    // States will be applied in the echarts.ts in next frame.\r\n    if (el.hoverState === HOVER_STATE_EMPHASIS) {\r\n      doChangeHoverState(el, 'normal', HOVER_STATE_NORMAL);\r\n    }\r\n  }\r\n\r\n  function singleEnterBlur(el) {\r\n    doChangeHoverState(el, 'blur', HOVER_STATE_BLUR);\r\n  }\r\n\r\n  function singleLeaveBlur(el) {\r\n    if (el.hoverState === HOVER_STATE_BLUR) {\r\n      doChangeHoverState(el, 'normal', HOVER_STATE_NORMAL);\r\n    }\r\n  }\r\n\r\n  function singleEnterSelect(el) {\r\n    el.selected = true;\r\n  }\r\n\r\n  function singleLeaveSelect(el) {\r\n    el.selected = false;\r\n  }\r\n\r\n  function updateElementState(el, updater, commonParam) {\r\n    updater(el, commonParam);\r\n  }\r\n\r\n  function traverseUpdateState(el, updater, commonParam) {\r\n    updateElementState(el, updater, commonParam);\r\n    el.isGroup && el.traverse(function (child) {\r\n      updateElementState(child, updater, commonParam);\r\n    });\r\n  }\r\n  /**\r\n   * If we reuse elements when rerender.\r\n   * DONT forget to clearStates before we update the style and shape.\r\n   * Or we may update on the wrong state instead of normal state.\r\n   */\r\n\r\n\r\n  function getFromStateStyle(el, props, toStateName, defaultValue) {\r\n    var style = el.style;\r\n    var fromState = {};\r\n\r\n    for (var i = 0; i < props.length; i++) {\r\n      var propName = props[i];\r\n      var val = style[propName];\r\n      fromState[propName] = val == null ? defaultValue && defaultValue[propName] : val;\r\n    }\r\n\r\n    for (var i = 0; i < el.animators.length; i++) {\r\n      var animator = el.animators[i];\r\n\r\n      if (animator.__fromStateTransition // Dont consider the animation to emphasis state.\r\n      && animator.__fromStateTransition.indexOf(toStateName) < 0 && animator.targetName === 'style') {\r\n        animator.saveFinalToTarget(fromState, props);\r\n      }\r\n    }\r\n\r\n    return fromState;\r\n  }\r\n\r\n  function createEmphasisDefaultState(el, stateName, targetStates, state) {\r\n    var hasSelect = targetStates && indexOf$1(targetStates, 'select') >= 0;\r\n    var cloned = false;\r\n\r\n    if (el instanceof Path) {\r\n      var store = getSavedStates(el);\r\n      var fromFill = hasSelect ? store.selectFill || store.normalFill : store.normalFill;\r\n      var fromStroke = hasSelect ? store.selectStroke || store.normalStroke : store.normalStroke;\r\n\r\n      if (hasFillOrStroke(fromFill) || hasFillOrStroke(fromStroke)) {\r\n        state = state || {}; // Apply default color lift\r\n\r\n        var emphasisStyle = state.style || {};\r\n\r\n        if (!hasFillOrStroke(emphasisStyle.fill) && hasFillOrStroke(fromFill)) {\r\n          cloned = true; // Not modify the original value.\r\n\r\n          state = extend({}, state);\r\n          emphasisStyle = extend({}, emphasisStyle); // Already being applied 'emphasis'. DON'T lift color multiple times.\r\n\r\n          emphasisStyle.fill = liftColor(fromFill);\r\n        } // Not highlight stroke if fill has been highlighted.\r\n        else if (!hasFillOrStroke(emphasisStyle.stroke) && hasFillOrStroke(fromStroke)) {\r\n            if (!cloned) {\r\n              state = extend({}, state);\r\n              emphasisStyle = extend({}, emphasisStyle);\r\n            }\r\n\r\n            emphasisStyle.stroke = liftColor(fromStroke);\r\n          }\r\n\r\n        state.style = emphasisStyle;\r\n      }\r\n    }\r\n\r\n    if (state) {\r\n      // TODO Share with textContent?\r\n      if (state.z2 == null) {\r\n        if (!cloned) {\r\n          state = extend({}, state);\r\n        }\r\n\r\n        var z2EmphasisLift = el.z2EmphasisLift;\r\n        state.z2 = el.z2 + (z2EmphasisLift != null ? z2EmphasisLift : Z2_EMPHASIS_LIFT);\r\n      }\r\n    }\r\n\r\n    return state;\r\n  }\r\n\r\n  function createSelectDefaultState(el, stateName, state) {\r\n    // const hasSelect = indexOf(el.currentStates, stateName) >= 0;\r\n    if (state) {\r\n      // TODO Share with textContent?\r\n      if (state.z2 == null) {\r\n        state = extend({}, state);\r\n        var z2SelectLift = el.z2SelectLift;\r\n        state.z2 = el.z2 + (z2SelectLift != null ? z2SelectLift : Z2_SELECT_LIFT);\r\n      }\r\n    }\r\n\r\n    return state;\r\n  }\r\n\r\n  function createBlurDefaultState(el, stateName, state) {\r\n    var hasBlur = indexOf$1(el.currentStates, stateName) >= 0;\r\n    var currentOpacity = el.style.opacity;\r\n    var fromState = !hasBlur ? getFromStateStyle(el, ['opacity'], stateName, {\r\n      opacity: 1\r\n    }) : null;\r\n    state = state || {};\r\n    var blurStyle = state.style || {};\r\n\r\n    if (blurStyle.opacity == null) {\r\n      // clone state\r\n      state = extend({}, state);\r\n      blurStyle = extend({\r\n        // Already being applied 'emphasis'. DON'T mul opacity multiple times.\r\n        opacity: hasBlur ? currentOpacity : fromState.opacity * 0.1\r\n      }, blurStyle);\r\n      state.style = blurStyle;\r\n    }\r\n\r\n    return state;\r\n  }\r\n\r\n  function elementStateProxy(stateName, targetStates) {\r\n    var state = this.states[stateName];\r\n\r\n    if (this.style) {\r\n      if (stateName === 'emphasis') {\r\n        return createEmphasisDefaultState(this, stateName, targetStates, state);\r\n      } else if (stateName === 'blur') {\r\n        return createBlurDefaultState(this, stateName, state);\r\n      } else if (stateName === 'select') {\r\n        return createSelectDefaultState(this, stateName, state);\r\n      }\r\n    }\r\n\r\n    return state;\r\n  }\r\n  /**FI\r\n   * Set hover style (namely \"emphasis style\") of element.\r\n   * @param el Should not be `zrender/graphic/Group`.\r\n   * @param focus 'self' | 'selfInSeries' | 'series'\r\n   */\r\n\r\n\r\n  function setDefaultStateProxy(el) {\r\n    el.stateProxy = elementStateProxy;\r\n    var textContent = el.getTextContent();\r\n    var textGuide = el.getTextGuideLine();\r\n\r\n    if (textContent) {\r\n      textContent.stateProxy = elementStateProxy;\r\n    }\r\n\r\n    if (textGuide) {\r\n      textGuide.stateProxy = elementStateProxy;\r\n    }\r\n  }\r\n\r\n  function enterEmphasisWhenMouseOver(el, e) {\r\n    !shouldSilent(el, e) // \"emphasis\" event highlight has higher priority than mouse highlight.\r\n    && !el.__highByOuter && traverseUpdateState(el, singleEnterEmphasis);\r\n  }\r\n\r\n  function leaveEmphasisWhenMouseOut(el, e) {\r\n    !shouldSilent(el, e) // \"emphasis\" event highlight has higher priority than mouse highlight.\r\n    && !el.__highByOuter && traverseUpdateState(el, singleLeaveEmphasis);\r\n  }\r\n\r\n  function enterEmphasis(el, highlightDigit) {\r\n    el.__highByOuter |= 1 << (highlightDigit || 0);\r\n    traverseUpdateState(el, singleEnterEmphasis);\r\n  }\r\n\r\n  function leaveEmphasis(el, highlightDigit) {\r\n    !(el.__highByOuter &= ~(1 << (highlightDigit || 0))) && traverseUpdateState(el, singleLeaveEmphasis);\r\n  }\r\n\r\n  function enterBlur(el) {\r\n    traverseUpdateState(el, singleEnterBlur);\r\n  }\r\n\r\n  function leaveBlur(el) {\r\n    traverseUpdateState(el, singleLeaveBlur);\r\n  }\r\n\r\n  function enterSelect(el) {\r\n    traverseUpdateState(el, singleEnterSelect);\r\n  }\r\n\r\n  function leaveSelect(el) {\r\n    traverseUpdateState(el, singleLeaveSelect);\r\n  }\r\n\r\n  function shouldSilent(el, e) {\r\n    return el.__highDownSilentOnTouch && e.zrByTouch;\r\n  }\r\n\r\n  function allLeaveBlur(api) {\r\n    var model = api.getModel();\r\n    model.eachComponent(function (componentType, componentModel) {\r\n      var view = componentType === 'series' ? api.getViewOfSeriesModel(componentModel) : api.getViewOfComponentModel(componentModel); // Leave blur anyway\r\n\r\n      view.group.traverse(function (child) {\r\n        singleLeaveBlur(child);\r\n      });\r\n    });\r\n  }\r\n\r\n  function toggleSeriesBlurState(targetSeriesIndex, focus, blurScope, api, isBlur) {\r\n    var ecModel = api.getModel();\r\n    blurScope = blurScope || 'coordinateSystem';\r\n\r\n    function leaveBlurOfIndices(data, dataIndices) {\r\n      for (var i = 0; i < dataIndices.length; i++) {\r\n        var itemEl = data.getItemGraphicEl(dataIndices[i]);\r\n        itemEl && leaveBlur(itemEl);\r\n      }\r\n    }\r\n\r\n    if (!isBlur) {\r\n      allLeaveBlur(api);\r\n      return;\r\n    }\r\n\r\n    if (targetSeriesIndex == null) {\r\n      return;\r\n    }\r\n\r\n    if (!focus || focus === 'none') {\r\n      return;\r\n    }\r\n\r\n    var targetSeriesModel = ecModel.getSeriesByIndex(targetSeriesIndex);\r\n    var targetCoordSys = targetSeriesModel.coordinateSystem;\r\n\r\n    if (targetCoordSys && targetCoordSys.master) {\r\n      targetCoordSys = targetCoordSys.master;\r\n    }\r\n\r\n    var blurredSeries = [];\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      var sameSeries = targetSeriesModel === seriesModel;\r\n      var coordSys = seriesModel.coordinateSystem;\r\n\r\n      if (coordSys && coordSys.master) {\r\n        coordSys = coordSys.master;\r\n      }\r\n\r\n      var sameCoordSys = coordSys && targetCoordSys ? coordSys === targetCoordSys : sameSeries; // If there is no coordinate system. use sameSeries instead.\r\n\r\n      if (!( // Not blur other series if blurScope series\r\n      blurScope === 'series' && !sameSeries // Not blur other coordinate system if blurScope is coordinateSystem\r\n      || blurScope === 'coordinateSystem' && !sameCoordSys // Not blur self series if focus is series.\r\n      || focus === 'series' && sameSeries // TODO blurScope: coordinate system\r\n      )) {\r\n        var view = api.getViewOfSeriesModel(seriesModel);\r\n        view.group.traverse(function (child) {\r\n          singleEnterBlur(child);\r\n        });\r\n\r\n        if (isArrayLike(focus)) {\r\n          leaveBlurOfIndices(seriesModel.getData(), focus);\r\n        } else if (isObject$1(focus)) {\r\n          var dataTypes = keys(focus);\r\n\r\n          for (var d = 0; d < dataTypes.length; d++) {\r\n            leaveBlurOfIndices(seriesModel.getData(dataTypes[d]), focus[dataTypes[d]]);\r\n          }\r\n        }\r\n\r\n        blurredSeries.push(seriesModel);\r\n      }\r\n    });\r\n    ecModel.eachComponent(function (componentType, componentModel) {\r\n      if (componentType === 'series') {\r\n        return;\r\n      }\r\n\r\n      var view = api.getViewOfComponentModel(componentModel);\r\n\r\n      if (view && view.blurSeries) {\r\n        view.blurSeries(blurredSeries, ecModel);\r\n      }\r\n    });\r\n  }\r\n\r\n  function toggleSeriesBlurStateFromPayload(seriesModel, payload, api) {\r\n    if (!isHighDownPayload(payload)) {\r\n      return;\r\n    }\r\n\r\n    var isHighlight = payload.type === HIGHLIGHT_ACTION_TYPE;\r\n    var seriesIndex = seriesModel.seriesIndex;\r\n    var data = seriesModel.getData(payload.dataType);\r\n    var dataIndex = queryDataIndex(data, payload); // Pick the first one if there is multiple/none exists.\r\n\r\n    dataIndex = (isArray(dataIndex) ? dataIndex[0] : dataIndex) || 0;\r\n    var el = data.getItemGraphicEl(dataIndex);\r\n\r\n    if (!el) {\r\n      var count = data.count();\r\n      var current = 0; // If data on dataIndex is NaN.\r\n\r\n      while (!el && current < count) {\r\n        el = data.getItemGraphicEl(current++);\r\n      }\r\n    }\r\n\r\n    if (el) {\r\n      var ecData = getECData(el);\r\n      toggleSeriesBlurState(seriesIndex, ecData.focus, ecData.blurScope, api, isHighlight);\r\n    } else {\r\n      // If there is no element put on the data. Try getting it from raw option\r\n      // TODO Should put it on seriesModel?\r\n      var focus_1 = seriesModel.get(['emphasis', 'focus']);\r\n      var blurScope = seriesModel.get(['emphasis', 'blurScope']);\r\n\r\n      if (focus_1 != null) {\r\n        toggleSeriesBlurState(seriesIndex, focus_1, blurScope, api, isHighlight);\r\n      }\r\n    }\r\n  }\r\n\r\n  function toggleSelectionFromPayload(seriesModel, payload, api) {\r\n    if (!isSelectChangePayload(payload)) {\r\n      return;\r\n    }\r\n\r\n    var dataType = payload.dataType;\r\n    var data = seriesModel.getData(dataType);\r\n    var dataIndex = queryDataIndex(data, payload);\r\n\r\n    if (!isArray(dataIndex)) {\r\n      dataIndex = [dataIndex];\r\n    }\r\n\r\n    seriesModel[payload.type === TOGGLE_SELECT_ACTION_TYPE ? 'toggleSelect' : payload.type === SELECT_ACTION_TYPE ? 'select' : 'unselect'](dataIndex, dataType);\r\n  }\r\n\r\n  function updateSeriesElementSelection(seriesModel) {\r\n    var allData = seriesModel.getAllData();\r\n    each$1(allData, function (_a) {\r\n      var data = _a.data,\r\n          type = _a.type;\r\n      data.eachItemGraphicEl(function (el, idx) {\r\n        seriesModel.isSelected(idx, type) ? enterSelect(el) : leaveSelect(el);\r\n      });\r\n    });\r\n  }\r\n\r\n  function getAllSelectedIndices(ecModel) {\r\n    var ret = [];\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      var allData = seriesModel.getAllData();\r\n      each$1(allData, function (_a) {\r\n        var data = _a.data,\r\n            type = _a.type;\r\n        var dataIndices = seriesModel.getSelectedDataIndices();\r\n\r\n        if (dataIndices.length > 0) {\r\n          var item = {\r\n            dataIndex: dataIndices,\r\n            seriesIndex: seriesModel.seriesIndex\r\n          };\r\n\r\n          if (type != null) {\r\n            item.dataType = type;\r\n          }\r\n\r\n          ret.push(item);\r\n        }\r\n      });\r\n    });\r\n    return ret;\r\n  }\r\n  /**\r\n   * Enable the function that mouseover will trigger the emphasis state.\r\n   *\r\n   * NOTE:\r\n   * This function should be used on the element with dataIndex, seriesIndex.\r\n   *\r\n   */\r\n\r\n\r\n  function enableHoverEmphasis(el, focus, blurScope) {\r\n    setAsHighDownDispatcher(el, true);\r\n    traverseUpdateState(el, setDefaultStateProxy);\r\n    enableHoverFocus(el, focus, blurScope);\r\n  }\r\n\r\n  function enableHoverFocus(el, focus, blurScope) {\r\n    var ecData = getECData(el);\r\n\r\n    if (focus != null) {\r\n      // TODO dataIndex may be set after this function. This check is not useful.\r\n      // if (ecData.dataIndex == null) {\r\n      //     if (__DEV__) {\r\n      //         console.warn('focus can only been set on element with dataIndex');\r\n      //     }\r\n      // }\r\n      // else {\r\n      ecData.focus = focus;\r\n      ecData.blurScope = blurScope; // }\r\n    } else if (ecData.focus) {\r\n      ecData.focus = null;\r\n    }\r\n  }\r\n  /**\r\n   * Set emphasis/blur/selected states of element.\r\n   */\r\n\r\n  /**\r\n   * @parame el\r\n   * @param el.highDownSilentOnTouch\r\n   *        In touch device, mouseover event will be trigger on touchstart event\r\n   *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\r\n   *        conveniently use hoverStyle when tap on touch screen without additional\r\n   *        code for compatibility.\r\n   *        But if the chart/component has select feature, which usually also use\r\n   *        hoverStyle, there might be conflict between 'select-highlight' and\r\n   *        'hover-highlight' especially when roam is enabled (see geo for example).\r\n   *        In this case, `highDownSilentOnTouch` should be used to disable\r\n   *        hover-highlight on touch device.\r\n   * @param asDispatcher If `false`, do not set as \"highDownDispatcher\".\r\n   */\r\n\r\n\r\n  function setAsHighDownDispatcher(el, asDispatcher) {\r\n    var disable = asDispatcher === false;\r\n    var extendedEl = el; // Make `highDownSilentOnTouch` and `onStateChange` only work after\r\n    // `setAsHighDownDispatcher` called. Avoid it is modified by user unexpectedly.\r\n\r\n    if (el.highDownSilentOnTouch) {\r\n      extendedEl.__highDownSilentOnTouch = el.highDownSilentOnTouch;\r\n    } // Simple optimize, since this method might be\r\n    // called for each elements of a group in some cases.\r\n\r\n\r\n    if (!disable || extendedEl.__highDownDispatcher) {\r\n      // Emphasis, normal can be triggered manually by API or other components like hover link.\r\n      // el[method]('emphasis', onElementEmphasisEvent)[method]('normal', onElementNormalEvent);\r\n      // Also keep previous record.\r\n      extendedEl.__highByOuter = extendedEl.__highByOuter || 0;\r\n      extendedEl.__highDownDispatcher = !disable;\r\n    }\r\n  }\r\n\r\n  function isHighDownDispatcher(el) {\r\n    return !!(el && el.__highDownDispatcher);\r\n  }\r\n  /**\r\n   * Support hightlight/downplay record on each elements.\r\n   * For the case: hover highlight/downplay (legend, visualMap, ...) and\r\n   * user triggerred hightlight/downplay should not conflict.\r\n   * Only all of the highlightDigit cleared, return to normal.\r\n   * @param {string} highlightKey\r\n   * @return {number} highlightDigit\r\n   */\r\n\r\n\r\n  function getHighlightDigit(highlightKey) {\r\n    var highlightDigit = _highlightKeyMap[highlightKey];\r\n\r\n    if (highlightDigit == null && _highlightNextDigit <= 32) {\r\n      highlightDigit = _highlightKeyMap[highlightKey] = _highlightNextDigit++;\r\n    }\r\n\r\n    return highlightDigit;\r\n  }\r\n\r\n  function isSelectChangePayload(payload) {\r\n    var payloadType = payload.type;\r\n    return payloadType === SELECT_ACTION_TYPE || payloadType === UNSELECT_ACTION_TYPE || payloadType === TOGGLE_SELECT_ACTION_TYPE;\r\n  }\r\n\r\n  function isHighDownPayload(payload) {\r\n    var payloadType = payload.type;\r\n    return payloadType === HIGHLIGHT_ACTION_TYPE || payloadType === DOWNPLAY_ACTION_TYPE;\r\n  }\r\n\r\n  function savePathStates(el) {\r\n    var store = getSavedStates(el);\r\n    store.normalFill = el.style.fill;\r\n    store.normalStroke = el.style.stroke;\r\n    var selectState = el.states.select || {};\r\n    store.selectFill = selectState.style && selectState.style.fill || null;\r\n    store.selectStroke = selectState.style && selectState.style.stroke || null;\r\n  }\r\n\r\n  var CMD$2 = PathProxy.CMD;\r\n  var points = [[], [], []];\r\n  var mathSqrt$3 = Math.sqrt;\r\n  var mathAtan2 = Math.atan2;\r\n\r\n  function transformPath(path, m) {\r\n    var data = path.data;\r\n    var len$$1 = path.len();\r\n    var cmd;\r\n    var nPoint;\r\n    var i;\r\n    var j;\r\n    var k;\r\n    var p;\r\n    var M = CMD$2.M;\r\n    var C = CMD$2.C;\r\n    var L = CMD$2.L;\r\n    var R = CMD$2.R;\r\n    var A = CMD$2.A;\r\n    var Q = CMD$2.Q;\r\n\r\n    for (i = 0, j = 0; i < len$$1;) {\r\n      cmd = data[i++];\r\n      j = i;\r\n      nPoint = 0;\r\n\r\n      switch (cmd) {\r\n        case M:\r\n          nPoint = 1;\r\n          break;\r\n\r\n        case L:\r\n          nPoint = 1;\r\n          break;\r\n\r\n        case C:\r\n          nPoint = 3;\r\n          break;\r\n\r\n        case Q:\r\n          nPoint = 2;\r\n          break;\r\n\r\n        case A:\r\n          var x = m[4];\r\n          var y = m[5];\r\n          var sx = mathSqrt$3(m[0] * m[0] + m[1] * m[1]);\r\n          var sy = mathSqrt$3(m[2] * m[2] + m[3] * m[3]);\r\n          var angle = mathAtan2(-m[1] / sy, m[0] / sx);\r\n          data[i] *= sx;\r\n          data[i++] += x;\r\n          data[i] *= sy;\r\n          data[i++] += y;\r\n          data[i++] *= sx;\r\n          data[i++] *= sy;\r\n          data[i++] += angle;\r\n          data[i++] += angle;\r\n          i += 2;\r\n          j = i;\r\n          break;\r\n\r\n        case R:\r\n          p[0] = data[i++];\r\n          p[1] = data[i++];\r\n          applyTransform(p, p, m);\r\n          data[j++] = p[0];\r\n          data[j++] = p[1];\r\n          p[0] += data[i++];\r\n          p[1] += data[i++];\r\n          applyTransform(p, p, m);\r\n          data[j++] = p[0];\r\n          data[j++] = p[1];\r\n      }\r\n\r\n      for (k = 0; k < nPoint; k++) {\r\n        var p_1 = points[k];\r\n        p_1[0] = data[i++];\r\n        p_1[1] = data[i++];\r\n        applyTransform(p_1, p_1, m);\r\n        data[j++] = p_1[0];\r\n        data[j++] = p_1[1];\r\n      }\r\n    }\r\n\r\n    path.increaseVersion();\r\n  }\r\n\r\n  var mathSqrt$2 = Math.sqrt;\r\n  var mathSin$2 = Math.sin;\r\n  var mathCos$2 = Math.cos;\r\n  var PI$1 = Math.PI;\r\n\r\n  function vMag(v) {\r\n    return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n  }\r\n\r\n  function vRatio(u, v) {\r\n    return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\r\n  }\r\n\r\n  function vAngle(u, v) {\r\n    return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\r\n  }\r\n\r\n  function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\r\n    var psi = psiDeg * (PI$1 / 180.0);\r\n    var xp = mathCos$2(psi) * (x1 - x2) / 2.0 + mathSin$2(psi) * (y1 - y2) / 2.0;\r\n    var yp = -1 * mathSin$2(psi) * (x1 - x2) / 2.0 + mathCos$2(psi) * (y1 - y2) / 2.0;\r\n    var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\r\n\r\n    if (lambda > 1) {\r\n      rx *= mathSqrt$2(lambda);\r\n      ry *= mathSqrt$2(lambda);\r\n    }\r\n\r\n    var f = (fa === fs ? -1 : 1) * mathSqrt$2((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\r\n    var cxp = f * rx * yp / ry;\r\n    var cyp = f * -ry * xp / rx;\r\n    var cx = (x1 + x2) / 2.0 + mathCos$2(psi) * cxp - mathSin$2(psi) * cyp;\r\n    var cy = (y1 + y2) / 2.0 + mathSin$2(psi) * cxp + mathCos$2(psi) * cyp;\r\n    var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\r\n    var u = [(xp - cxp) / rx, (yp - cyp) / ry];\r\n    var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\r\n    var dTheta = vAngle(u, v);\r\n\r\n    if (vRatio(u, v) <= -1) {\r\n      dTheta = PI$1;\r\n    }\r\n\r\n    if (vRatio(u, v) >= 1) {\r\n      dTheta = 0;\r\n    }\r\n\r\n    if (dTheta < 0) {\r\n      var n = Math.round(dTheta / PI$1 * 1e6) / 1e6;\r\n      dTheta = PI$1 * 2 + n % 2 * PI$1;\r\n    }\r\n\r\n    path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\r\n  }\r\n\r\n  var commandReg = /([mlvhzcqtsa])([^mlvhzcqtsa]*)/ig;\r\n  var numberReg = /-?([0-9]*\\.)?[0-9]+([eE]-?[0-9]+)?/g;\r\n\r\n  function createPathProxyFromString(data) {\r\n    var path = new PathProxy();\r\n\r\n    if (!data) {\r\n      return path;\r\n    }\r\n\r\n    var cpx = 0;\r\n    var cpy = 0;\r\n    var subpathX = cpx;\r\n    var subpathY = cpy;\r\n    var prevCmd;\r\n    var CMD = PathProxy.CMD;\r\n    var cmdList = data.match(commandReg);\r\n\r\n    if (!cmdList) {\r\n      return path;\r\n    }\r\n\r\n    for (var l = 0; l < cmdList.length; l++) {\r\n      var cmdText = cmdList[l];\r\n      var cmdStr = cmdText.charAt(0);\r\n      var cmd = void 0;\r\n      var p = cmdText.match(numberReg) || [];\r\n      var pLen = p.length;\r\n\r\n      for (var i = 0; i < pLen; i++) {\r\n        p[i] = parseFloat(p[i]);\r\n      }\r\n\r\n      var off = 0;\r\n\r\n      while (off < pLen) {\r\n        var ctlPtx = void 0;\r\n        var ctlPty = void 0;\r\n        var rx = void 0;\r\n        var ry = void 0;\r\n        var psi = void 0;\r\n        var fa = void 0;\r\n        var fs = void 0;\r\n        var x1 = cpx;\r\n        var y1 = cpy;\r\n        var len = void 0;\r\n        var pathData = void 0;\r\n\r\n        switch (cmdStr) {\r\n          case 'l':\r\n            cpx += p[off++];\r\n            cpy += p[off++];\r\n            cmd = CMD.L;\r\n            path.addData(cmd, cpx, cpy);\r\n            break;\r\n\r\n          case 'L':\r\n            cpx = p[off++];\r\n            cpy = p[off++];\r\n            cmd = CMD.L;\r\n            path.addData(cmd, cpx, cpy);\r\n            break;\r\n\r\n          case 'm':\r\n            cpx += p[off++];\r\n            cpy += p[off++];\r\n            cmd = CMD.M;\r\n            path.addData(cmd, cpx, cpy);\r\n            subpathX = cpx;\r\n            subpathY = cpy;\r\n            cmdStr = 'l';\r\n            break;\r\n\r\n          case 'M':\r\n            cpx = p[off++];\r\n            cpy = p[off++];\r\n            cmd = CMD.M;\r\n            path.addData(cmd, cpx, cpy);\r\n            subpathX = cpx;\r\n            subpathY = cpy;\r\n            cmdStr = 'L';\r\n            break;\r\n\r\n          case 'h':\r\n            cpx += p[off++];\r\n            cmd = CMD.L;\r\n            path.addData(cmd, cpx, cpy);\r\n            break;\r\n\r\n          case 'H':\r\n            cpx = p[off++];\r\n            cmd = CMD.L;\r\n            path.addData(cmd, cpx, cpy);\r\n            break;\r\n\r\n          case 'v':\r\n            cpy += p[off++];\r\n            cmd = CMD.L;\r\n            path.addData(cmd, cpx, cpy);\r\n            break;\r\n\r\n          case 'V':\r\n            cpy = p[off++];\r\n            cmd = CMD.L;\r\n            path.addData(cmd, cpx, cpy);\r\n            break;\r\n\r\n          case 'C':\r\n            cmd = CMD.C;\r\n            path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\r\n            cpx = p[off - 2];\r\n            cpy = p[off - 1];\r\n            break;\r\n\r\n          case 'c':\r\n            cmd = CMD.C;\r\n            path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\r\n            cpx += p[off - 2];\r\n            cpy += p[off - 1];\r\n            break;\r\n\r\n          case 'S':\r\n            ctlPtx = cpx;\r\n            ctlPty = cpy;\r\n            len = path.len();\r\n            pathData = path.data;\r\n\r\n            if (prevCmd === CMD.C) {\r\n              ctlPtx += cpx - pathData[len - 4];\r\n              ctlPty += cpy - pathData[len - 3];\r\n            }\r\n\r\n            cmd = CMD.C;\r\n            x1 = p[off++];\r\n            y1 = p[off++];\r\n            cpx = p[off++];\r\n            cpy = p[off++];\r\n            path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\r\n            break;\r\n\r\n          case 's':\r\n            ctlPtx = cpx;\r\n            ctlPty = cpy;\r\n            len = path.len();\r\n            pathData = path.data;\r\n\r\n            if (prevCmd === CMD.C) {\r\n              ctlPtx += cpx - pathData[len - 4];\r\n              ctlPty += cpy - pathData[len - 3];\r\n            }\r\n\r\n            cmd = CMD.C;\r\n            x1 = cpx + p[off++];\r\n            y1 = cpy + p[off++];\r\n            cpx += p[off++];\r\n            cpy += p[off++];\r\n            path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\r\n            break;\r\n\r\n          case 'Q':\r\n            x1 = p[off++];\r\n            y1 = p[off++];\r\n            cpx = p[off++];\r\n            cpy = p[off++];\r\n            cmd = CMD.Q;\r\n            path.addData(cmd, x1, y1, cpx, cpy);\r\n            break;\r\n\r\n          case 'q':\r\n            x1 = p[off++] + cpx;\r\n            y1 = p[off++] + cpy;\r\n            cpx += p[off++];\r\n            cpy += p[off++];\r\n            cmd = CMD.Q;\r\n            path.addData(cmd, x1, y1, cpx, cpy);\r\n            break;\r\n\r\n          case 'T':\r\n            ctlPtx = cpx;\r\n            ctlPty = cpy;\r\n            len = path.len();\r\n            pathData = path.data;\r\n\r\n            if (prevCmd === CMD.Q) {\r\n              ctlPtx += cpx - pathData[len - 4];\r\n              ctlPty += cpy - pathData[len - 3];\r\n            }\r\n\r\n            cpx = p[off++];\r\n            cpy = p[off++];\r\n            cmd = CMD.Q;\r\n            path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\r\n            break;\r\n\r\n          case 't':\r\n            ctlPtx = cpx;\r\n            ctlPty = cpy;\r\n            len = path.len();\r\n            pathData = path.data;\r\n\r\n            if (prevCmd === CMD.Q) {\r\n              ctlPtx += cpx - pathData[len - 4];\r\n              ctlPty += cpy - pathData[len - 3];\r\n            }\r\n\r\n            cpx += p[off++];\r\n            cpy += p[off++];\r\n            cmd = CMD.Q;\r\n            path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\r\n            break;\r\n\r\n          case 'A':\r\n            rx = p[off++];\r\n            ry = p[off++];\r\n            psi = p[off++];\r\n            fa = p[off++];\r\n            fs = p[off++];\r\n            x1 = cpx, y1 = cpy;\r\n            cpx = p[off++];\r\n            cpy = p[off++];\r\n            cmd = CMD.A;\r\n            processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\r\n            break;\r\n\r\n          case 'a':\r\n            rx = p[off++];\r\n            ry = p[off++];\r\n            psi = p[off++];\r\n            fa = p[off++];\r\n            fs = p[off++];\r\n            x1 = cpx, y1 = cpy;\r\n            cpx += p[off++];\r\n            cpy += p[off++];\r\n            cmd = CMD.A;\r\n            processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\r\n            break;\r\n        }\r\n      }\r\n\r\n      if (cmdStr === 'z' || cmdStr === 'Z') {\r\n        cmd = CMD.Z;\r\n        path.addData(cmd);\r\n        cpx = subpathX;\r\n        cpy = subpathY;\r\n      }\r\n\r\n      prevCmd = cmd;\r\n    }\r\n\r\n    path.toStatic();\r\n    return path;\r\n  }\r\n\r\n  var SVGPath = function (_super) {\r\n    __extends(SVGPath, _super);\r\n\r\n    function SVGPath() {\r\n      return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n\r\n    SVGPath.prototype.applyTransform = function (m) {};\r\n\r\n    return SVGPath;\r\n  }(Path);\r\n\r\n  function isPathProxy(path) {\r\n    return path.setData != null;\r\n  }\r\n\r\n  function createPathOptions(str, opts) {\r\n    var pathProxy = createPathProxyFromString(str);\r\n    var innerOpts = extend({}, opts);\r\n\r\n    innerOpts.buildPath = function (path) {\r\n      if (isPathProxy(path)) {\r\n        path.setData(pathProxy.data);\r\n        var ctx = path.getContext();\r\n\r\n        if (ctx) {\r\n          path.rebuildPath(ctx, 1);\r\n        }\r\n      } else {\r\n        var ctx = path;\r\n        pathProxy.rebuildPath(ctx, 1);\r\n      }\r\n    };\r\n\r\n    innerOpts.applyTransform = function (m) {\r\n      transformPath(pathProxy, m);\r\n      this.dirtyShape();\r\n    };\r\n\r\n    return innerOpts;\r\n  }\r\n\r\n  function createFromString(str, opts) {\r\n    return new SVGPath(createPathOptions(str, opts));\r\n  }\r\n\r\n  function extendFromString(str, defaultOpts) {\r\n    var innerOpts = createPathOptions(str, defaultOpts);\r\n\r\n    var Sub = function (_super) {\r\n      __extends(Sub, _super);\r\n\r\n      function Sub(opts) {\r\n        var _this = _super.call(this, opts) || this;\r\n\r\n        _this.applyTransform = innerOpts.applyTransform;\r\n        _this.buildPath = innerOpts.buildPath;\r\n        return _this;\r\n      }\r\n\r\n      return Sub;\r\n    }(SVGPath);\r\n\r\n    return Sub;\r\n  }\r\n\r\n  function mergePath$1(pathEls, opts) {\r\n    var pathList = [];\r\n    var len = pathEls.length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      var pathEl = pathEls[i];\r\n\r\n      if (!pathEl.path) {\r\n        pathEl.createPathProxy();\r\n      }\r\n\r\n      if (pathEl.shapeChanged()) {\r\n        pathEl.buildPath(pathEl.path, pathEl.shape, true);\r\n      }\r\n\r\n      pathList.push(pathEl.path);\r\n    }\r\n\r\n    var pathBundle = new Path(opts);\r\n    pathBundle.createPathProxy();\r\n\r\n    pathBundle.buildPath = function (path) {\r\n      if (isPathProxy(path)) {\r\n        path.appendPath(pathList);\r\n        var ctx = path.getContext();\r\n\r\n        if (ctx) {\r\n          path.rebuildPath(ctx, 1);\r\n        }\r\n      }\r\n    };\r\n\r\n    return pathBundle;\r\n  }\r\n\r\n  var CircleShape = function () {\r\n    function CircleShape() {\r\n      this.cx = 0;\r\n      this.cy = 0;\r\n      this.r = 0;\r\n    }\r\n\r\n    return CircleShape;\r\n  }();\r\n\r\n  var Circle = function (_super) {\r\n    __extends(Circle, _super);\r\n\r\n    function Circle(opts) {\r\n      return _super.call(this, opts) || this;\r\n    }\r\n\r\n    Circle.prototype.getDefaultShape = function () {\r\n      return new CircleShape();\r\n    };\r\n\r\n    Circle.prototype.buildPath = function (ctx, shape, inBundle) {\r\n      if (inBundle) {\r\n        ctx.moveTo(shape.cx + shape.r, shape.cy);\r\n      }\r\n\r\n      ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2);\r\n    };\r\n\r\n    return Circle;\r\n  }(Path);\r\n\r\n  Circle.prototype.type = 'circle';\r\n\r\n  var EllipseShape = function () {\r\n    function EllipseShape() {\r\n      this.cx = 0;\r\n      this.cy = 0;\r\n      this.rx = 0;\r\n      this.ry = 0;\r\n    }\r\n\r\n    return EllipseShape;\r\n  }();\r\n\r\n  var Ellipse = function (_super) {\r\n    __extends(Ellipse, _super);\r\n\r\n    function Ellipse(opts) {\r\n      return _super.call(this, opts) || this;\r\n    }\r\n\r\n    Ellipse.prototype.getDefaultShape = function () {\r\n      return new EllipseShape();\r\n    };\r\n\r\n    Ellipse.prototype.buildPath = function (ctx, shape) {\r\n      var k = 0.5522848;\r\n      var x = shape.cx;\r\n      var y = shape.cy;\r\n      var a = shape.rx;\r\n      var b = shape.ry;\r\n      var ox = a * k;\r\n      var oy = b * k;\r\n      ctx.moveTo(x - a, y);\r\n      ctx.bezierCurveTo(x - a, y - oy, x - ox, y - b, x, y - b);\r\n      ctx.bezierCurveTo(x + ox, y - b, x + a, y - oy, x + a, y);\r\n      ctx.bezierCurveTo(x + a, y + oy, x + ox, y + b, x, y + b);\r\n      ctx.bezierCurveTo(x - ox, y + b, x - a, y + oy, x - a, y);\r\n      ctx.closePath();\r\n    };\r\n\r\n    return Ellipse;\r\n  }(Path);\r\n\r\n  Ellipse.prototype.type = 'ellipse';\r\n  var PI$2 = Math.PI;\r\n  var PI2$5 = PI$2 * 2;\r\n  var mathSin$3 = Math.sin;\r\n  var mathCos$3 = Math.cos;\r\n  var mathACos = Math.acos;\r\n  var mathATan2 = Math.atan2;\r\n  var mathAbs$1 = Math.abs;\r\n  var mathSqrt$4 = Math.sqrt;\r\n  var mathMax$4 = Math.max;\r\n  var mathMin$4 = Math.min;\r\n  var e = 1e-4;\r\n\r\n  function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\r\n    var x10 = x1 - x0;\r\n    var y10 = y1 - y0;\r\n    var x32 = x3 - x2;\r\n    var y32 = y3 - y2;\r\n    var t = y32 * x10 - x32 * y10;\r\n\r\n    if (t * t < e) {\r\n      return;\r\n    }\r\n\r\n    t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\r\n    return [x0 + t * x10, y0 + t * y10];\r\n  }\r\n\r\n  function computeCornerTangents(x0, y0, x1, y1, radius, cr, clockwise) {\r\n    var x01 = x0 - x1;\r\n    var y01 = y0 - y1;\r\n    var lo = (clockwise ? cr : -cr) / mathSqrt$4(x01 * x01 + y01 * y01);\r\n    var ox = lo * y01;\r\n    var oy = -lo * x01;\r\n    var x11 = x0 + ox;\r\n    var y11 = y0 + oy;\r\n    var x10 = x1 + ox;\r\n    var y10 = y1 + oy;\r\n    var x00 = (x11 + x10) / 2;\r\n    var y00 = (y11 + y10) / 2;\r\n    var dx = x10 - x11;\r\n    var dy = y10 - y11;\r\n    var d2 = dx * dx + dy * dy;\r\n    var r = radius - cr;\r\n    var s = x11 * y10 - x10 * y11;\r\n    var d = (dy < 0 ? -1 : 1) * mathSqrt$4(mathMax$4(0, r * r * d2 - s * s));\r\n    var cx0 = (s * dy - dx * d) / d2;\r\n    var cy0 = (-s * dx - dy * d) / d2;\r\n    var cx1 = (s * dy + dx * d) / d2;\r\n    var cy1 = (-s * dx + dy * d) / d2;\r\n    var dx0 = cx0 - x00;\r\n    var dy0 = cy0 - y00;\r\n    var dx1 = cx1 - x00;\r\n    var dy1 = cy1 - y00;\r\n\r\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) {\r\n      cx0 = cx1;\r\n      cy0 = cy1;\r\n    }\r\n\r\n    return {\r\n      cx: cx0,\r\n      cy: cy0,\r\n      x01: -ox,\r\n      y01: -oy,\r\n      x11: cx0 * (radius / r - 1),\r\n      y11: cy0 * (radius / r - 1)\r\n    };\r\n  }\r\n\r\n  function buildPath$1(ctx, shape) {\r\n    var radius = mathMax$4(shape.r, 0);\r\n    var innerRadius = mathMax$4(shape.r0 || 0, 0);\r\n    var hasRadius = radius > 0;\r\n    var hasInnerRadius = innerRadius > 0;\r\n\r\n    if (!hasRadius && !hasInnerRadius) {\r\n      return;\r\n    }\r\n\r\n    if (!hasRadius) {\r\n      radius = innerRadius;\r\n      innerRadius = 0;\r\n    }\r\n\r\n    if (innerRadius > radius) {\r\n      var tmp = radius;\r\n      radius = innerRadius;\r\n      innerRadius = tmp;\r\n    }\r\n\r\n    var clockwise = !!shape.clockwise;\r\n    var startAngle = shape.startAngle;\r\n    var endAngle = shape.endAngle;\r\n    var arc;\r\n\r\n    if (startAngle === endAngle) {\r\n      arc = 0;\r\n    } else {\r\n      var tmpAngles = [startAngle, endAngle];\r\n      normalizeArcAngles(tmpAngles, !clockwise);\r\n      arc = mathAbs$1(tmpAngles[0] - tmpAngles[1]);\r\n    }\r\n\r\n    var x = shape.cx;\r\n    var y = shape.cy;\r\n    var cornerRadius = shape.cornerRadius || 0;\r\n    var innerCornerRadius = shape.innerCornerRadius || 0;\r\n\r\n    if (!(radius > e)) {\r\n      ctx.moveTo(x, y);\r\n    } else if (arc > PI2$5 - e) {\r\n      ctx.moveTo(x + radius * mathCos$3(startAngle), y + radius * mathSin$3(startAngle));\r\n      ctx.arc(x, y, radius, startAngle, endAngle, !clockwise);\r\n\r\n      if (innerRadius > e) {\r\n        ctx.moveTo(x + innerRadius * mathCos$3(endAngle), y + innerRadius * mathSin$3(endAngle));\r\n        ctx.arc(x, y, innerRadius, endAngle, startAngle, clockwise);\r\n      }\r\n    } else {\r\n      var halfRd = mathAbs$1(radius - innerRadius) / 2;\r\n      var cr = mathMin$4(halfRd, cornerRadius);\r\n      var icr = mathMin$4(halfRd, innerCornerRadius);\r\n      var cr0 = icr;\r\n      var cr1 = cr;\r\n      var xrs = radius * mathCos$3(startAngle);\r\n      var yrs = radius * mathSin$3(startAngle);\r\n      var xire = innerRadius * mathCos$3(endAngle);\r\n      var yire = innerRadius * mathSin$3(endAngle);\r\n      var xre = void 0;\r\n      var yre = void 0;\r\n      var xirs = void 0;\r\n      var yirs = void 0;\r\n\r\n      if (cr > e || icr > e) {\r\n        xre = radius * mathCos$3(endAngle);\r\n        yre = radius * mathSin$3(endAngle);\r\n        xirs = innerRadius * mathCos$3(startAngle);\r\n        yirs = innerRadius * mathSin$3(startAngle);\r\n\r\n        if (arc < PI$2) {\r\n          var it_1 = intersect(xrs, yrs, xirs, yirs, xre, yre, xire, yire);\r\n\r\n          if (it_1) {\r\n            var x0 = xrs - it_1[0];\r\n            var y0 = yrs - it_1[1];\r\n            var x1 = xre - it_1[0];\r\n            var y1 = yre - it_1[1];\r\n            var a = 1 / mathSin$3(mathACos((x0 * x1 + y0 * y1) / (mathSqrt$4(x0 * x0 + y0 * y0) * mathSqrt$4(x1 * x1 + y1 * y1))) / 2);\r\n            var b = mathSqrt$4(it_1[0] * it_1[0] + it_1[1] * it_1[1]);\r\n            cr0 = mathMin$4(icr, (innerRadius - b) / (a - 1));\r\n            cr1 = mathMin$4(cr, (radius - b) / (a + 1));\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!(arc > e)) {\r\n        ctx.moveTo(x + xrs, y + yrs);\r\n      } else if (cr1 > e) {\r\n        var ct0 = computeCornerTangents(xirs, yirs, xrs, yrs, radius, cr1, clockwise);\r\n        var ct1 = computeCornerTangents(xre, yre, xire, yire, radius, cr1, clockwise);\r\n        ctx.moveTo(x + ct0.cx + ct0.x01, y + ct0.cy + ct0.y01);\r\n\r\n        if (cr1 < cr) {\r\n          ctx.arc(x + ct0.cx, y + ct0.cy, cr1, mathATan2(ct0.y01, ct0.x01), mathATan2(ct1.y01, ct1.x01), !clockwise);\r\n        } else {\r\n          ctx.arc(x + ct0.cx, y + ct0.cy, cr1, mathATan2(ct0.y01, ct0.x01), mathATan2(ct0.y11, ct0.x11), !clockwise);\r\n          ctx.arc(x, y, radius, mathATan2(ct0.cy + ct0.y11, ct0.cx + ct0.x11), mathATan2(ct1.cy + ct1.y11, ct1.cx + ct1.x11), !clockwise);\r\n          ctx.arc(x + ct1.cx, y + ct1.cy, cr1, mathATan2(ct1.y11, ct1.x11), mathATan2(ct1.y01, ct1.x01), !clockwise);\r\n        }\r\n      } else {\r\n        ctx.moveTo(x + xrs, y + yrs);\r\n        ctx.arc(x, y, radius, startAngle, endAngle, !clockwise);\r\n      }\r\n\r\n      if (!(innerRadius > e) || !(arc > e)) {\r\n        ctx.lineTo(x + xire, y + yire);\r\n      } else if (cr0 > e) {\r\n        var ct0 = computeCornerTangents(xire, yire, xre, yre, innerRadius, -cr0, clockwise);\r\n        var ct1 = computeCornerTangents(xrs, yrs, xirs, yirs, innerRadius, -cr0, clockwise);\r\n        ctx.lineTo(x + ct0.cx + ct0.x01, y + ct0.cy + ct0.y01);\r\n\r\n        if (cr0 < icr) {\r\n          ctx.arc(x + ct0.cx, y + ct0.cy, cr0, mathATan2(ct0.y01, ct0.x01), mathATan2(ct1.y01, ct1.x01), !clockwise);\r\n        } else {\r\n          ctx.arc(x + ct0.cx, y + ct0.cy, cr0, mathATan2(ct0.y01, ct0.x01), mathATan2(ct0.y11, ct0.x11), !clockwise);\r\n          ctx.arc(x, y, innerRadius, mathATan2(ct0.cy + ct0.y11, ct0.cx + ct0.x11), mathATan2(ct1.cy + ct1.y11, ct1.cx + ct1.x11), clockwise);\r\n          ctx.arc(x + ct1.cx, y + ct1.cy, cr0, mathATan2(ct1.y11, ct1.x11), mathATan2(ct1.y01, ct1.x01), !clockwise);\r\n        }\r\n      } else {\r\n        ctx.lineTo(x + xire, y + yire);\r\n        ctx.arc(x, y, innerRadius, endAngle, startAngle, clockwise);\r\n      }\r\n    }\r\n\r\n    ctx.closePath();\r\n  }\r\n\r\n  var SectorShape = function () {\r\n    function SectorShape() {\r\n      this.cx = 0;\r\n      this.cy = 0;\r\n      this.r0 = 0;\r\n      this.r = 0;\r\n      this.startAngle = 0;\r\n      this.endAngle = Math.PI * 2;\r\n      this.clockwise = true;\r\n      this.cornerRadius = 0;\r\n      this.innerCornerRadius = 0;\r\n    }\r\n\r\n    return SectorShape;\r\n  }();\r\n\r\n  var Sector = function (_super) {\r\n    __extends(Sector, _super);\r\n\r\n    function Sector(opts) {\r\n      return _super.call(this, opts) || this;\r\n    }\r\n\r\n    Sector.prototype.getDefaultShape = function () {\r\n      return new SectorShape();\r\n    };\r\n\r\n    Sector.prototype.buildPath = function (ctx, shape) {\r\n      buildPath$1(ctx, shape);\r\n    };\r\n\r\n    Sector.prototype.isZeroArea = function () {\r\n      return this.shape.startAngle === this.shape.endAngle || this.shape.r === this.shape.r0;\r\n    };\r\n\r\n    return Sector;\r\n  }(Path);\r\n\r\n  Sector.prototype.type = 'sector';\r\n\r\n  var RingShape = function () {\r\n    function RingShape() {\r\n      this.cx = 0;\r\n      this.cy = 0;\r\n      this.r = 0;\r\n      this.r0 = 0;\r\n    }\r\n\r\n    return RingShape;\r\n  }();\r\n\r\n  var Ring = function (_super) {\r\n    __extends(Ring, _super);\r\n\r\n    function Ring(opts) {\r\n      return _super.call(this, opts) || this;\r\n    }\r\n\r\n    Ring.prototype.getDefaultShape = function () {\r\n      return new RingShape();\r\n    };\r\n\r\n    Ring.prototype.buildPath = function (ctx, shape) {\r\n      var x = shape.cx;\r\n      var y = shape.cy;\r\n      var PI2 = Math.PI * 2;\r\n      ctx.moveTo(x + shape.r, y);\r\n      ctx.arc(x, y, shape.r, 0, PI2, false);\r\n      ctx.moveTo(x + shape.r0, y);\r\n      ctx.arc(x, y, shape.r0, 0, PI2, true);\r\n    };\r\n\r\n    return Ring;\r\n  }(Path);\r\n\r\n  Ring.prototype.type = 'ring';\r\n\r\n  function interpolate(p0, p1, p2, p3, t, t2, t3) {\r\n    var v0 = (p2 - p0) * 0.5;\r\n    var v1 = (p3 - p1) * 0.5;\r\n    return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\r\n  }\r\n\r\n  function smoothSpline(points, isLoop) {\r\n    var len$$1 = points.length;\r\n    var ret = [];\r\n    var distance$$1 = 0;\r\n\r\n    for (var i = 1; i < len$$1; i++) {\r\n      distance$$1 += distance(points[i - 1], points[i]);\r\n    }\r\n\r\n    var segs = distance$$1 / 2;\r\n    segs = segs < len$$1 ? len$$1 : segs;\r\n\r\n    for (var i = 0; i < segs; i++) {\r\n      var pos = i / (segs - 1) * (isLoop ? len$$1 : len$$1 - 1);\r\n      var idx = Math.floor(pos);\r\n      var w = pos - idx;\r\n      var p0 = void 0;\r\n      var p1 = points[idx % len$$1];\r\n      var p2 = void 0;\r\n      var p3 = void 0;\r\n\r\n      if (!isLoop) {\r\n        p0 = points[idx === 0 ? idx : idx - 1];\r\n        p2 = points[idx > len$$1 - 2 ? len$$1 - 1 : idx + 1];\r\n        p3 = points[idx > len$$1 - 3 ? len$$1 - 1 : idx + 2];\r\n      } else {\r\n        p0 = points[(idx - 1 + len$$1) % len$$1];\r\n        p2 = points[(idx + 1) % len$$1];\r\n        p3 = points[(idx + 2) % len$$1];\r\n      }\r\n\r\n      var w2 = w * w;\r\n      var w3 = w * w2;\r\n      ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  function smoothBezier(points, smooth, isLoop, constraint) {\r\n    var cps = [];\r\n    var v = [];\r\n    var v1 = [];\r\n    var v2 = [];\r\n    var prevPoint;\r\n    var nextPoint;\r\n    var min$$1;\r\n    var max$$1;\r\n\r\n    if (constraint) {\r\n      min$$1 = [Infinity, Infinity];\r\n      max$$1 = [-Infinity, -Infinity];\r\n\r\n      for (var i = 0, len$$1 = points.length; i < len$$1; i++) {\r\n        min(min$$1, min$$1, points[i]);\r\n        max(max$$1, max$$1, points[i]);\r\n      }\r\n\r\n      min(min$$1, min$$1, constraint[0]);\r\n      max(max$$1, max$$1, constraint[1]);\r\n    }\r\n\r\n    for (var i = 0, len$$1 = points.length; i < len$$1; i++) {\r\n      var point = points[i];\r\n\r\n      if (isLoop) {\r\n        prevPoint = points[i ? i - 1 : len$$1 - 1];\r\n        nextPoint = points[(i + 1) % len$$1];\r\n      } else {\r\n        if (i === 0 || i === len$$1 - 1) {\r\n          cps.push(clone$1(points[i]));\r\n          continue;\r\n        } else {\r\n          prevPoint = points[i - 1];\r\n          nextPoint = points[i + 1];\r\n        }\r\n      }\r\n\r\n      sub(v, nextPoint, prevPoint);\r\n      scale(v, v, smooth);\r\n      var d0 = distance(point, prevPoint);\r\n      var d1 = distance(point, nextPoint);\r\n      var sum = d0 + d1;\r\n\r\n      if (sum !== 0) {\r\n        d0 /= sum;\r\n        d1 /= sum;\r\n      }\r\n\r\n      scale(v1, v, -d0);\r\n      scale(v2, v, d1);\r\n      var cp0 = add([], point, v1);\r\n      var cp1 = add([], point, v2);\r\n\r\n      if (constraint) {\r\n        max(cp0, cp0, min$$1);\r\n        min(cp0, cp0, max$$1);\r\n        max(cp1, cp1, min$$1);\r\n        min(cp1, cp1, max$$1);\r\n      }\r\n\r\n      cps.push(cp0);\r\n      cps.push(cp1);\r\n    }\r\n\r\n    if (isLoop) {\r\n      cps.push(cps.shift());\r\n    }\r\n\r\n    return cps;\r\n  }\r\n\r\n  function buildPath$2(ctx, shape, closePath) {\r\n    var smooth = shape.smooth;\r\n    var points = shape.points;\r\n\r\n    if (points && points.length >= 2) {\r\n      if (smooth && smooth !== 'spline') {\r\n        var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\r\n        ctx.moveTo(points[0][0], points[0][1]);\r\n        var len = points.length;\r\n\r\n        for (var i = 0; i < (closePath ? len : len - 1); i++) {\r\n          var cp1 = controlPoints[i * 2];\r\n          var cp2 = controlPoints[i * 2 + 1];\r\n          var p = points[(i + 1) % len];\r\n          ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\r\n        }\r\n      } else {\r\n        if (smooth === 'spline') {\r\n          points = smoothSpline(points, closePath);\r\n        }\r\n\r\n        ctx.moveTo(points[0][0], points[0][1]);\r\n\r\n        for (var i = 1, l = points.length; i < l; i++) {\r\n          ctx.lineTo(points[i][0], points[i][1]);\r\n        }\r\n      }\r\n\r\n      closePath && ctx.closePath();\r\n    }\r\n  }\r\n\r\n  var PolygonShape = function () {\r\n    function PolygonShape() {\r\n      this.points = null;\r\n      this.smooth = 0;\r\n      this.smoothConstraint = null;\r\n    }\r\n\r\n    return PolygonShape;\r\n  }();\r\n\r\n  var Polygon = function (_super) {\r\n    __extends(Polygon, _super);\r\n\r\n    function Polygon(opts) {\r\n      return _super.call(this, opts) || this;\r\n    }\r\n\r\n    Polygon.prototype.getDefaultShape = function () {\r\n      return new PolygonShape();\r\n    };\r\n\r\n    Polygon.prototype.buildPath = function (ctx, shape) {\r\n      buildPath$2(ctx, shape, true);\r\n    };\r\n\r\n    return Polygon;\r\n  }(Path);\r\n\r\n  Polygon.prototype.type = 'polygon';\r\n\r\n  var PolylineShape = function () {\r\n    function PolylineShape() {\r\n      this.points = null;\r\n      this.percent = 1;\r\n      this.smooth = 0;\r\n      this.smoothConstraint = null;\r\n    }\r\n\r\n    return PolylineShape;\r\n  }();\r\n\r\n  var Polyline = function (_super) {\r\n    __extends(Polyline, _super);\r\n\r\n    function Polyline(opts) {\r\n      return _super.call(this, opts) || this;\r\n    }\r\n\r\n    Polyline.prototype.getDefaultStyle = function () {\r\n      return {\r\n        stroke: '#000',\r\n        fill: null\r\n      };\r\n    };\r\n\r\n    Polyline.prototype.getDefaultShape = function () {\r\n      return new PolylineShape();\r\n    };\r\n\r\n    Polyline.prototype.buildPath = function (ctx, shape) {\r\n      buildPath$2(ctx, shape, false);\r\n    };\r\n\r\n    return Polyline;\r\n  }(Path);\r\n\r\n  Polyline.prototype.type = 'polyline';\r\n  var subPixelOptimizeOutputShape$1 = {};\r\n\r\n  var LineShape = function () {\r\n    function LineShape() {\r\n      this.x1 = 0;\r\n      this.y1 = 0;\r\n      this.x2 = 0;\r\n      this.y2 = 0;\r\n      this.percent = 1;\r\n    }\r\n\r\n    return LineShape;\r\n  }();\r\n\r\n  var Line = function (_super) {\r\n    __extends(Line, _super);\r\n\r\n    function Line(opts) {\r\n      return _super.call(this, opts) || this;\r\n    }\r\n\r\n    Line.prototype.getDefaultStyle = function () {\r\n      return {\r\n        stroke: '#000',\r\n        fill: null\r\n      };\r\n    };\r\n\r\n    Line.prototype.getDefaultShape = function () {\r\n      return new LineShape();\r\n    };\r\n\r\n    Line.prototype.buildPath = function (ctx, shape) {\r\n      var x1;\r\n      var y1;\r\n      var x2;\r\n      var y2;\r\n\r\n      if (this.subPixelOptimize) {\r\n        var optimizedShape = subPixelOptimizeLine(subPixelOptimizeOutputShape$1, shape, this.style);\r\n        x1 = optimizedShape.x1;\r\n        y1 = optimizedShape.y1;\r\n        x2 = optimizedShape.x2;\r\n        y2 = optimizedShape.y2;\r\n      } else {\r\n        x1 = shape.x1;\r\n        y1 = shape.y1;\r\n        x2 = shape.x2;\r\n        y2 = shape.y2;\r\n      }\r\n\r\n      var percent = shape.percent;\r\n\r\n      if (percent === 0) {\r\n        return;\r\n      }\r\n\r\n      ctx.moveTo(x1, y1);\r\n\r\n      if (percent < 1) {\r\n        x2 = x1 * (1 - percent) + x2 * percent;\r\n        y2 = y1 * (1 - percent) + y2 * percent;\r\n      }\r\n\r\n      ctx.lineTo(x2, y2);\r\n    };\r\n\r\n    Line.prototype.pointAt = function (p) {\r\n      var shape = this.shape;\r\n      return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\r\n    };\r\n\r\n    return Line;\r\n  }(Path);\r\n\r\n  Line.prototype.type = 'line';\r\n  var out = [];\r\n\r\n  var BezierCurveShape = function () {\r\n    function BezierCurveShape() {\r\n      this.x1 = 0;\r\n      this.y1 = 0;\r\n      this.x2 = 0;\r\n      this.y2 = 0;\r\n      this.cpx1 = 0;\r\n      this.cpy1 = 0;\r\n      this.percent = 1;\r\n    }\r\n\r\n    return BezierCurveShape;\r\n  }();\r\n\r\n  function someVectorAt(shape, t, isTangent) {\r\n    var cpx2 = shape.cpx2;\r\n    var cpy2 = shape.cpy2;\r\n\r\n    if (cpx2 === null || cpy2 === null) {\r\n      return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\r\n    } else {\r\n      return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\r\n    }\r\n  }\r\n\r\n  var BezierCurve = function (_super) {\r\n    __extends(BezierCurve, _super);\r\n\r\n    function BezierCurve(opts) {\r\n      return _super.call(this, opts) || this;\r\n    }\r\n\r\n    BezierCurve.prototype.getDefaultStyle = function () {\r\n      return {\r\n        stroke: '#000',\r\n        fill: null\r\n      };\r\n    };\r\n\r\n    BezierCurve.prototype.getDefaultShape = function () {\r\n      return new BezierCurveShape();\r\n    };\r\n\r\n    BezierCurve.prototype.buildPath = function (ctx, shape) {\r\n      var x1 = shape.x1;\r\n      var y1 = shape.y1;\r\n      var x2 = shape.x2;\r\n      var y2 = shape.y2;\r\n      var cpx1 = shape.cpx1;\r\n      var cpy1 = shape.cpy1;\r\n      var cpx2 = shape.cpx2;\r\n      var cpy2 = shape.cpy2;\r\n      var percent = shape.percent;\r\n\r\n      if (percent === 0) {\r\n        return;\r\n      }\r\n\r\n      ctx.moveTo(x1, y1);\r\n\r\n      if (cpx2 == null || cpy2 == null) {\r\n        if (percent < 1) {\r\n          quadraticSubdivide(x1, cpx1, x2, percent, out);\r\n          cpx1 = out[1];\r\n          x2 = out[2];\r\n          quadraticSubdivide(y1, cpy1, y2, percent, out);\r\n          cpy1 = out[1];\r\n          y2 = out[2];\r\n        }\r\n\r\n        ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\r\n      } else {\r\n        if (percent < 1) {\r\n          cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\r\n          cpx1 = out[1];\r\n          cpx2 = out[2];\r\n          x2 = out[3];\r\n          cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\r\n          cpy1 = out[1];\r\n          cpy2 = out[2];\r\n          y2 = out[3];\r\n        }\r\n\r\n        ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\r\n      }\r\n    };\r\n\r\n    BezierCurve.prototype.pointAt = function (t) {\r\n      return someVectorAt(this.shape, t, false);\r\n    };\r\n\r\n    BezierCurve.prototype.tangentAt = function (t) {\r\n      var p = someVectorAt(this.shape, t, true);\r\n      return normalize(p, p);\r\n    };\r\n\r\n    return BezierCurve;\r\n  }(Path);\r\n\r\n  BezierCurve.prototype.type = 'bezier-curve';\r\n\r\n  var ArcShape = function () {\r\n    function ArcShape() {\r\n      this.cx = 0;\r\n      this.cy = 0;\r\n      this.r = 0;\r\n      this.startAngle = 0;\r\n      this.endAngle = Math.PI * 2;\r\n      this.clockwise = true;\r\n    }\r\n\r\n    return ArcShape;\r\n  }();\r\n\r\n  var Arc = function (_super) {\r\n    __extends(Arc, _super);\r\n\r\n    function Arc(opts) {\r\n      return _super.call(this, opts) || this;\r\n    }\r\n\r\n    Arc.prototype.getDefaultStyle = function () {\r\n      return {\r\n        stroke: '#000',\r\n        fill: null\r\n      };\r\n    };\r\n\r\n    Arc.prototype.getDefaultShape = function () {\r\n      return new ArcShape();\r\n    };\r\n\r\n    Arc.prototype.buildPath = function (ctx, shape) {\r\n      var x = shape.cx;\r\n      var y = shape.cy;\r\n      var r = Math.max(shape.r, 0);\r\n      var startAngle = shape.startAngle;\r\n      var endAngle = shape.endAngle;\r\n      var clockwise = shape.clockwise;\r\n      var unitX = Math.cos(startAngle);\r\n      var unitY = Math.sin(startAngle);\r\n      ctx.moveTo(unitX * r + x, unitY * r + y);\r\n      ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\r\n    };\r\n\r\n    return Arc;\r\n  }(Path);\r\n\r\n  Arc.prototype.type = 'arc';\r\n\r\n  var CompoundPath = function (_super) {\r\n    __extends(CompoundPath, _super);\r\n\r\n    function CompoundPath() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = 'compound';\r\n      return _this;\r\n    }\r\n\r\n    CompoundPath.prototype._updatePathDirty = function () {\r\n      var paths = this.shape.paths;\r\n      var dirtyPath = this.shapeChanged();\r\n\r\n      for (var i = 0; i < paths.length; i++) {\r\n        dirtyPath = dirtyPath || paths[i].shapeChanged();\r\n      }\r\n\r\n      if (dirtyPath) {\r\n        this.dirtyShape();\r\n      }\r\n    };\r\n\r\n    CompoundPath.prototype.beforeBrush = function () {\r\n      this._updatePathDirty();\r\n\r\n      var paths = this.shape.paths || [];\r\n      var scale = this.getGlobalScale();\r\n\r\n      for (var i = 0; i < paths.length; i++) {\r\n        if (!paths[i].path) {\r\n          paths[i].createPathProxy();\r\n        }\r\n\r\n        paths[i].path.setScale(scale[0], scale[1], paths[i].segmentIgnoreThreshold);\r\n      }\r\n    };\r\n\r\n    CompoundPath.prototype.buildPath = function (ctx, shape) {\r\n      var paths = shape.paths || [];\r\n\r\n      for (var i = 0; i < paths.length; i++) {\r\n        paths[i].buildPath(ctx, paths[i].shape, true);\r\n      }\r\n    };\r\n\r\n    CompoundPath.prototype.afterBrush = function () {\r\n      var paths = this.shape.paths || [];\r\n\r\n      for (var i = 0; i < paths.length; i++) {\r\n        paths[i].pathUpdated();\r\n      }\r\n    };\r\n\r\n    CompoundPath.prototype.getBoundingRect = function () {\r\n      this._updatePathDirty.call(this);\r\n\r\n      return Path.prototype.getBoundingRect.call(this);\r\n    };\r\n\r\n    return CompoundPath;\r\n  }(Path);\r\n\r\n  var Gradient = function () {\r\n    function Gradient(colorStops) {\r\n      this.colorStops = colorStops || [];\r\n    }\r\n\r\n    Gradient.prototype.addColorStop = function (offset, color) {\r\n      this.colorStops.push({\r\n        offset: offset,\r\n        color: color\r\n      });\r\n    };\r\n\r\n    return Gradient;\r\n  }();\r\n\r\n  var LinearGradient = function (_super) {\r\n    __extends(LinearGradient, _super);\r\n\r\n    function LinearGradient(x, y, x2, y2, colorStops, globalCoord) {\r\n      var _this = _super.call(this, colorStops) || this;\r\n\r\n      _this.x = x == null ? 0 : x;\r\n      _this.y = y == null ? 0 : y;\r\n      _this.x2 = x2 == null ? 1 : x2;\r\n      _this.y2 = y2 == null ? 0 : y2;\r\n      _this.type = 'linear';\r\n      _this.global = globalCoord || false;\r\n      return _this;\r\n    }\r\n\r\n    return LinearGradient;\r\n  }(Gradient);\r\n\r\n  var RadialGradient = function (_super) {\r\n    __extends(RadialGradient, _super);\r\n\r\n    function RadialGradient(x, y, r, colorStops, globalCoord) {\r\n      var _this = _super.call(this, colorStops) || this;\r\n\r\n      _this.x = x == null ? 0.5 : x;\r\n      _this.y = y == null ? 0.5 : y;\r\n      _this.r = r == null ? 0.5 : r;\r\n      _this.type = 'radial';\r\n      _this.global = globalCoord || false;\r\n      return _this;\r\n    }\r\n\r\n    return RadialGradient;\r\n  }(Gradient);\r\n\r\n  var extent = [0, 0];\r\n  var extent2 = [0, 0];\r\n  var minTv$1 = new Point();\r\n  var maxTv$1 = new Point();\r\n\r\n  var OrientedBoundingRect = function () {\r\n    function OrientedBoundingRect(rect, transform) {\r\n      this._corners = [];\r\n      this._axes = [];\r\n      this._origin = [0, 0];\r\n\r\n      for (var i = 0; i < 4; i++) {\r\n        this._corners[i] = new Point();\r\n      }\r\n\r\n      for (var i = 0; i < 2; i++) {\r\n        this._axes[i] = new Point();\r\n      }\r\n\r\n      if (rect) {\r\n        this.fromBoundingRect(rect, transform);\r\n      }\r\n    }\r\n\r\n    OrientedBoundingRect.prototype.fromBoundingRect = function (rect, transform) {\r\n      var corners = this._corners;\r\n      var axes = this._axes;\r\n      var x = rect.x;\r\n      var y = rect.y;\r\n      var x2 = x + rect.width;\r\n      var y2 = y + rect.height;\r\n      corners[0].set(x, y);\r\n      corners[1].set(x2, y);\r\n      corners[2].set(x2, y2);\r\n      corners[3].set(x, y2);\r\n\r\n      if (transform) {\r\n        for (var i = 0; i < 4; i++) {\r\n          corners[i].transform(transform);\r\n        }\r\n      }\r\n\r\n      Point.sub(axes[0], corners[1], corners[0]);\r\n      Point.sub(axes[1], corners[3], corners[0]);\r\n      axes[0].normalize();\r\n      axes[1].normalize();\r\n\r\n      for (var i = 0; i < 2; i++) {\r\n        this._origin[i] = axes[i].dot(corners[0]);\r\n      }\r\n    };\r\n\r\n    OrientedBoundingRect.prototype.intersect = function (other, mtv) {\r\n      var overlapped = true;\r\n      var noMtv = !mtv;\r\n      minTv$1.set(Infinity, Infinity);\r\n      maxTv$1.set(0, 0);\r\n\r\n      if (!this._intersectCheckOneSide(this, other, minTv$1, maxTv$1, noMtv, 1)) {\r\n        overlapped = false;\r\n\r\n        if (noMtv) {\r\n          return overlapped;\r\n        }\r\n      }\r\n\r\n      if (!this._intersectCheckOneSide(other, this, minTv$1, maxTv$1, noMtv, -1)) {\r\n        overlapped = false;\r\n\r\n        if (noMtv) {\r\n          return overlapped;\r\n        }\r\n      }\r\n\r\n      if (!noMtv) {\r\n        Point.copy(mtv, overlapped ? minTv$1 : maxTv$1);\r\n      }\r\n\r\n      return overlapped;\r\n    };\r\n\r\n    OrientedBoundingRect.prototype._intersectCheckOneSide = function (self, other, minTv, maxTv, noMtv, inverse) {\r\n      var overlapped = true;\r\n\r\n      for (var i = 0; i < 2; i++) {\r\n        var axis = this._axes[i];\r\n\r\n        this._getProjMinMaxOnAxis(i, self._corners, extent);\r\n\r\n        this._getProjMinMaxOnAxis(i, other._corners, extent2);\r\n\r\n        if (extent[1] < extent2[0] || extent[0] > extent2[1]) {\r\n          overlapped = false;\r\n\r\n          if (noMtv) {\r\n            return overlapped;\r\n          }\r\n\r\n          var dist0 = Math.abs(extent2[0] - extent[1]);\r\n          var dist1 = Math.abs(extent[0] - extent2[1]);\r\n\r\n          if (Math.min(dist0, dist1) > maxTv.len()) {\r\n            if (dist0 < dist1) {\r\n              Point.scale(maxTv, axis, -dist0 * inverse);\r\n            } else {\r\n              Point.scale(maxTv, axis, dist1 * inverse);\r\n            }\r\n          }\r\n        } else if (minTv) {\r\n          var dist0 = Math.abs(extent2[0] - extent[1]);\r\n          var dist1 = Math.abs(extent[0] - extent2[1]);\r\n\r\n          if (Math.min(dist0, dist1) < minTv.len()) {\r\n            if (dist0 < dist1) {\r\n              Point.scale(minTv, axis, dist0 * inverse);\r\n            } else {\r\n              Point.scale(minTv, axis, -dist1 * inverse);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return overlapped;\r\n    };\r\n\r\n    OrientedBoundingRect.prototype._getProjMinMaxOnAxis = function (dim, corners, out) {\r\n      var axis = this._axes[dim];\r\n      var origin = this._origin;\r\n      var proj = corners[0].dot(axis) + origin[dim];\r\n      var min = proj;\r\n      var max = proj;\r\n\r\n      for (var i = 1; i < corners.length; i++) {\r\n        var proj_1 = corners[i].dot(axis) + origin[dim];\r\n        min = Math.min(proj_1, min);\r\n        max = Math.max(proj_1, max);\r\n      }\r\n\r\n      out[0] = min;\r\n      out[1] = max;\r\n    };\r\n\r\n    return OrientedBoundingRect;\r\n  }();\r\n\r\n  var m = [];\r\n\r\n  var IncrementalDisplayable = function (_super) {\r\n    __extends(IncrementalDisplayable, _super);\r\n\r\n    function IncrementalDisplayable() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.notClear = true;\r\n      _this.incremental = true;\r\n      _this._displayables = [];\r\n      _this._temporaryDisplayables = [];\r\n      _this._cursor = 0;\r\n      return _this;\r\n    }\r\n\r\n    IncrementalDisplayable.prototype.traverse = function (cb, context) {\r\n      cb.call(context, this);\r\n    };\r\n\r\n    IncrementalDisplayable.prototype.useStyle = function () {\r\n      this.style = {};\r\n    };\r\n\r\n    IncrementalDisplayable.prototype.getCursor = function () {\r\n      return this._cursor;\r\n    };\r\n\r\n    IncrementalDisplayable.prototype.innerAfterBrush = function () {\r\n      this._cursor = this._displayables.length;\r\n    };\r\n\r\n    IncrementalDisplayable.prototype.clearDisplaybles = function () {\r\n      this._displayables = [];\r\n      this._temporaryDisplayables = [];\r\n      this._cursor = 0;\r\n      this.markRedraw();\r\n      this.notClear = false;\r\n    };\r\n\r\n    IncrementalDisplayable.prototype.clearTemporalDisplayables = function () {\r\n      this._temporaryDisplayables = [];\r\n    };\r\n\r\n    IncrementalDisplayable.prototype.addDisplayable = function (displayable, notPersistent) {\r\n      if (notPersistent) {\r\n        this._temporaryDisplayables.push(displayable);\r\n      } else {\r\n        this._displayables.push(displayable);\r\n      }\r\n\r\n      this.markRedraw();\r\n    };\r\n\r\n    IncrementalDisplayable.prototype.addDisplayables = function (displayables, notPersistent) {\r\n      notPersistent = notPersistent || false;\r\n\r\n      for (var i = 0; i < displayables.length; i++) {\r\n        this.addDisplayable(displayables[i], notPersistent);\r\n      }\r\n    };\r\n\r\n    IncrementalDisplayable.prototype.getDisplayables = function () {\r\n      return this._displayables;\r\n    };\r\n\r\n    IncrementalDisplayable.prototype.getTemporalDisplayables = function () {\r\n      return this._temporaryDisplayables;\r\n    };\r\n\r\n    IncrementalDisplayable.prototype.eachPendingDisplayable = function (cb) {\r\n      for (var i = this._cursor; i < this._displayables.length; i++) {\r\n        cb && cb(this._displayables[i]);\r\n      }\r\n\r\n      for (var i = 0; i < this._temporaryDisplayables.length; i++) {\r\n        cb && cb(this._temporaryDisplayables[i]);\r\n      }\r\n    };\r\n\r\n    IncrementalDisplayable.prototype.update = function () {\r\n      this.updateTransform();\r\n\r\n      for (var i = this._cursor; i < this._displayables.length; i++) {\r\n        var displayable = this._displayables[i];\r\n        displayable.parent = this;\r\n        displayable.update();\r\n        displayable.parent = null;\r\n      }\r\n\r\n      for (var i = 0; i < this._temporaryDisplayables.length; i++) {\r\n        var displayable = this._temporaryDisplayables[i];\r\n        displayable.parent = this;\r\n        displayable.update();\r\n        displayable.parent = null;\r\n      }\r\n    };\r\n\r\n    IncrementalDisplayable.prototype.getBoundingRect = function () {\r\n      if (!this._rect) {\r\n        var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\r\n\r\n        for (var i = 0; i < this._displayables.length; i++) {\r\n          var displayable = this._displayables[i];\r\n          var childRect = displayable.getBoundingRect().clone();\r\n\r\n          if (displayable.needLocalTransform()) {\r\n            childRect.applyTransform(displayable.getLocalTransform(m));\r\n          }\r\n\r\n          rect.union(childRect);\r\n        }\r\n\r\n        this._rect = rect;\r\n      }\r\n\r\n      return this._rect;\r\n    };\r\n\r\n    IncrementalDisplayable.prototype.contain = function (x, y) {\r\n      var localPos = this.transformCoordToLocal(x, y);\r\n      var rect = this.getBoundingRect();\r\n\r\n      if (rect.contain(localPos[0], localPos[1])) {\r\n        for (var i = 0; i < this._displayables.length; i++) {\r\n          var displayable = this._displayables[i];\r\n\r\n          if (displayable.contain(x, y)) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    return IncrementalDisplayable;\r\n  }(Displayable);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var mathMax$3 = Math.max;\r\n  var mathMin$3 = Math.min;\r\n  var _customShapeMap = {};\r\n  /**\r\n   * Extend shape with parameters\r\n   */\r\n\r\n  function extendShape(opts) {\r\n    return Path.extend(opts);\r\n  }\r\n\r\n  var extendPathFromString = extendFromString;\r\n  /**\r\n   * Extend path\r\n   */\r\n\r\n  function extendPath(pathData, opts) {\r\n    return extendPathFromString(pathData, opts);\r\n  }\r\n  /**\r\n   * Register a user defined shape.\r\n   * The shape class can be fetched by `getShapeClass`\r\n   * This method will overwrite the registered shapes, including\r\n   * the registered built-in shapes, if using the same `name`.\r\n   * The shape can be used in `custom series` and\r\n   * `graphic component` by declaring `{type: name}`.\r\n   *\r\n   * @param name\r\n   * @param ShapeClass Can be generated by `extendShape`.\r\n   */\r\n\r\n\r\n  function registerShape(name, ShapeClass) {\r\n    _customShapeMap[name] = ShapeClass;\r\n  }\r\n  /**\r\n   * Find shape class registered by `registerShape`. Usually used in\r\n   * fetching user defined shape.\r\n   *\r\n   * [Caution]:\r\n   * (1) This method **MUST NOT be used inside echarts !!!**, unless it is prepared\r\n   * to use user registered shapes.\r\n   * Because the built-in shape (see `getBuiltInShape`) will be registered by\r\n   * `registerShape` by default. That enables users to get both built-in\r\n   * shapes as well as the shapes belonging to themsleves. But users can overwrite\r\n   * the built-in shapes by using names like 'circle', 'rect' via calling\r\n   * `registerShape`. So the echarts inner featrues should not fetch shapes from here\r\n   * in case that it is overwritten by users, except that some features, like\r\n   * `custom series`, `graphic component`, do it deliberately.\r\n   *\r\n   * (2) In the features like `custom series`, `graphic component`, the user input\r\n   * `{tpye: 'xxx'}` does not only specify shapes but also specify other graphic\r\n   * elements like `'group'`, `'text'`, `'image'` or event `'path'`. Those names\r\n   * are reserved names, that is, if some user register a shape named `'image'`,\r\n   * the shape will not be used. If we intending to add some more reserved names\r\n   * in feature, that might bring break changes (disable some existing user shape\r\n   * names). But that case probably rearly happen. So we dont make more mechanism\r\n   * to resolve this issue here.\r\n   *\r\n   * @param name\r\n   * @return The shape class. If not found, return nothing.\r\n   */\r\n\r\n\r\n  function getShapeClass(name) {\r\n    if (_customShapeMap.hasOwnProperty(name)) {\r\n      return _customShapeMap[name];\r\n    }\r\n  }\r\n  /**\r\n   * Create a path element from path data string\r\n   * @param pathData\r\n   * @param opts\r\n   * @param rect\r\n   * @param layout 'center' or 'cover' default to be cover\r\n   */\r\n\r\n\r\n  function makePath(pathData, opts, rect, layout) {\r\n    var path = createFromString(pathData, opts);\r\n\r\n    if (rect) {\r\n      if (layout === 'center') {\r\n        rect = centerGraphic(rect, path.getBoundingRect());\r\n      }\r\n\r\n      resizePath(path, rect);\r\n    }\r\n\r\n    return path;\r\n  }\r\n  /**\r\n   * Create a image element from image url\r\n   * @param imageUrl image url\r\n   * @param opts options\r\n   * @param rect constrain rect\r\n   * @param layout 'center' or 'cover'. Default to be 'cover'\r\n   */\r\n\r\n\r\n  function makeImage(imageUrl, rect, layout) {\r\n    var zrImg = new ZRImage({\r\n      style: {\r\n        image: imageUrl,\r\n        x: rect.x,\r\n        y: rect.y,\r\n        width: rect.width,\r\n        height: rect.height\r\n      },\r\n      onload: function (img) {\r\n        if (layout === 'center') {\r\n          var boundingRect = {\r\n            width: img.width,\r\n            height: img.height\r\n          };\r\n          zrImg.setStyle(centerGraphic(rect, boundingRect));\r\n        }\r\n      }\r\n    });\r\n    return zrImg;\r\n  }\r\n  /**\r\n   * Get position of centered element in bounding box.\r\n   *\r\n   * @param  rect         element local bounding box\r\n   * @param  boundingRect constraint bounding box\r\n   * @return element position containing x, y, width, and height\r\n   */\r\n\r\n\r\n  function centerGraphic(rect, boundingRect) {\r\n    // Set rect to center, keep width / height ratio.\r\n    var aspect = boundingRect.width / boundingRect.height;\r\n    var width = rect.height * aspect;\r\n    var height;\r\n\r\n    if (width <= rect.width) {\r\n      height = rect.height;\r\n    } else {\r\n      width = rect.width;\r\n      height = width / aspect;\r\n    }\r\n\r\n    var cx = rect.x + rect.width / 2;\r\n    var cy = rect.y + rect.height / 2;\r\n    return {\r\n      x: cx - width / 2,\r\n      y: cy - height / 2,\r\n      width: width,\r\n      height: height\r\n    };\r\n  }\r\n\r\n  var mergePath = mergePath$1;\r\n  /**\r\n   * Resize a path to fit the rect\r\n   * @param path\r\n   * @param rect\r\n   */\r\n\r\n  function resizePath(path, rect) {\r\n    if (!path.applyTransform) {\r\n      return;\r\n    }\r\n\r\n    var pathRect = path.getBoundingRect();\r\n    var m = pathRect.calculateTransform(rect);\r\n    path.applyTransform(m);\r\n  }\r\n  /**\r\n   * Sub pixel optimize line for canvas\r\n   */\r\n\r\n\r\n  function subPixelOptimizeLine$1(param) {\r\n    subPixelOptimizeLine(param.shape, param.shape, param.style);\r\n    return param;\r\n  }\r\n  /**\r\n   * Sub pixel optimize rect for canvas\r\n   */\r\n\r\n\r\n  function subPixelOptimizeRect$1(param) {\r\n    subPixelOptimizeRect(param.shape, param.shape, param.style);\r\n    return param;\r\n  }\r\n  /**\r\n   * Sub pixel optimize for canvas\r\n   *\r\n   * @param position Coordinate, such as x, y\r\n   * @param lineWidth Should be nonnegative integer.\r\n   * @param positiveOrNegative Default false (negative).\r\n   * @return Optimized position.\r\n   */\r\n\r\n\r\n  var subPixelOptimize$1 = subPixelOptimize;\r\n\r\n  function animateOrSetProps(animationType, el, props, animatableModel, dataIndex, cb, during) {\r\n    var isFrom = false;\r\n    var removeOpt;\r\n\r\n    if (typeof dataIndex === 'function') {\r\n      during = cb;\r\n      cb = dataIndex;\r\n      dataIndex = null;\r\n    } else if (isObject$1(dataIndex)) {\r\n      cb = dataIndex.cb;\r\n      during = dataIndex.during;\r\n      isFrom = dataIndex.isFrom;\r\n      removeOpt = dataIndex.removeOpt;\r\n      dataIndex = dataIndex.dataIndex;\r\n    }\r\n\r\n    var isUpdate = animationType === 'update';\r\n    var isRemove = animationType === 'remove';\r\n    var animationPayload; // Check if there is global animation configuration from dataZoom/resize can override the config in option.\r\n    // If animation is enabled. Will use this animation config in payload.\r\n    // If animation is disabled. Just ignore it.\r\n\r\n    if (animatableModel && animatableModel.ecModel) {\r\n      var updatePayload = animatableModel.ecModel.getUpdatePayload();\r\n      animationPayload = updatePayload && updatePayload.animation;\r\n    }\r\n\r\n    var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\r\n\r\n    if (!isRemove) {\r\n      // Must stop the remove animation.\r\n      el.stopAnimation('remove');\r\n    }\r\n\r\n    if (animationEnabled) {\r\n      var duration = void 0;\r\n      var animationEasing = void 0;\r\n      var animationDelay = void 0;\r\n\r\n      if (animationPayload) {\r\n        duration = animationPayload.duration || 0;\r\n        animationEasing = animationPayload.easing || 'cubicOut';\r\n        animationDelay = animationPayload.delay || 0;\r\n      } else if (isRemove) {\r\n        removeOpt = removeOpt || {};\r\n        duration = retrieve2(removeOpt.duration, 200);\r\n        animationEasing = retrieve2(removeOpt.easing, 'cubicOut');\r\n        animationDelay = 0;\r\n      } else {\r\n        duration = animatableModel.getShallow(isUpdate ? 'animationDurationUpdate' : 'animationDuration');\r\n        animationEasing = animatableModel.getShallow(isUpdate ? 'animationEasingUpdate' : 'animationEasing');\r\n        animationDelay = animatableModel.getShallow(isUpdate ? 'animationDelayUpdate' : 'animationDelay');\r\n      }\r\n\r\n      if (typeof animationDelay === 'function') {\r\n        animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\r\n      }\r\n\r\n      if (typeof duration === 'function') {\r\n        duration = duration(dataIndex);\r\n      }\r\n\r\n      duration > 0 ? isFrom ? el.animateFrom(props, {\r\n        duration: duration,\r\n        delay: animationDelay || 0,\r\n        easing: animationEasing,\r\n        done: cb,\r\n        force: !!cb || !!during,\r\n        scope: animationType,\r\n        during: during\r\n      }) : el.animateTo(props, {\r\n        duration: duration,\r\n        delay: animationDelay || 0,\r\n        easing: animationEasing,\r\n        done: cb,\r\n        force: !!cb || !!during,\r\n        setToFinal: true,\r\n        scope: animationType,\r\n        during: during\r\n      }) : ( // FIXME:\r\n      // If `duration` is 0, only the animation on props\r\n      // can be stoped, other animation should be continued?\r\n      // But at present using duration 0 in `animateTo`, `animateFrom`\r\n      // might cause unexpected behavior.\r\n      el.stopAnimation(), // If `isFrom`, the props is the \"from\" props.\r\n      !isFrom && el.attr(props), cb && cb());\r\n    } else {\r\n      el.stopAnimation();\r\n      !isFrom && el.attr(props); // Call during once.\r\n\r\n      during && during(1);\r\n      cb && cb();\r\n    }\r\n  }\r\n  /**\r\n   * Update graphic element properties with or without animation according to the\r\n   * configuration in series.\r\n   *\r\n   * Caution: this method will stop previous animation.\r\n   * So do not use this method to one element twice before\r\n   * animation starts, unless you know what you are doing.\r\n   * @example\r\n   *     graphic.updateProps(el, {\r\n   *         position: [100, 100]\r\n   *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\r\n   *     // Or\r\n   *     graphic.updateProps(el, {\r\n   *         position: [100, 100]\r\n   *     }, seriesModel, function () { console.log('Animation done!'); });\r\n   */\r\n\r\n\r\n  function updateProps(el, props, // TODO: TYPE AnimatableModel\r\n  animatableModel, dataIndex, cb, during) {\r\n    animateOrSetProps('update', el, props, animatableModel, dataIndex, cb, during);\r\n  }\r\n  /**\r\n   * Init graphic element properties with or without animation according to the\r\n   * configuration in series.\r\n   *\r\n   * Caution: this method will stop previous animation.\r\n   * So do not use this method to one element twice before\r\n   * animation starts, unless you know what you are doing.\r\n   */\r\n\r\n\r\n  function initProps(el, props, animatableModel, dataIndex, cb, during) {\r\n    animateOrSetProps('init', el, props, animatableModel, dataIndex, cb, during);\r\n  }\r\n  /**\r\n   * Remove graphic element\r\n   */\r\n\r\n\r\n  function removeElement(el, props, animatableModel, dataIndex, cb, during) {\r\n    // Don't do remove animation twice.\r\n    if (isElementRemoved(el)) {\r\n      return;\r\n    }\r\n\r\n    animateOrSetProps('remove', el, props, animatableModel, dataIndex, cb, during);\r\n  }\r\n\r\n  function fadeOutDisplayable(el, animatableModel, dataIndex, done) {\r\n    el.removeTextContent();\r\n    el.removeTextGuideLine();\r\n    removeElement(el, {\r\n      style: {\r\n        opacity: 0\r\n      }\r\n    }, animatableModel, dataIndex, done);\r\n  }\r\n\r\n  function removeElementWithFadeOut(el, animatableModel, dataIndex) {\r\n    function doRemove() {\r\n      el.parent && el.parent.remove(el);\r\n    } // Hide label and labelLine first\r\n    // TODO Also use fade out animation?\r\n\r\n\r\n    if (!el.isGroup) {\r\n      fadeOutDisplayable(el, animatableModel, dataIndex, doRemove);\r\n    } else {\r\n      el.traverse(function (disp) {\r\n        if (!disp.isGroup) {\r\n          // Can invoke doRemove multiple times.\r\n          fadeOutDisplayable(disp, animatableModel, dataIndex, doRemove);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * If element is removed.\r\n   * It can determine if element is having remove animation.\r\n   */\r\n\r\n\r\n  function isElementRemoved(el) {\r\n    if (!el.__zr) {\r\n      return true;\r\n    }\r\n\r\n    for (var i = 0; i < el.animators.length; i++) {\r\n      var animator = el.animators[i];\r\n\r\n      if (animator.scope === 'remove') {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n  /**\r\n   * Get transform matrix of target (param target),\r\n   * in coordinate of its ancestor (param ancestor)\r\n   *\r\n   * @param target\r\n   * @param [ancestor]\r\n   */\r\n\r\n\r\n  function getTransform(target, ancestor) {\r\n    var mat = identity([]);\r\n\r\n    while (target && target !== ancestor) {\r\n      mul$1(mat, target.getLocalTransform(), mat);\r\n      target = target.parent;\r\n    }\r\n\r\n    return mat;\r\n  }\r\n  /**\r\n   * Apply transform to an vertex.\r\n   * @param target [x, y]\r\n   * @param transform Can be:\r\n   *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\r\n   *      + {position, rotation, scale}, the same as `zrender/Transformable`.\r\n   * @param invert Whether use invert matrix.\r\n   * @return [x, y]\r\n   */\r\n\r\n\r\n  function applyTransform$1(target, transform, invert$$1) {\r\n    if (transform && !isArrayLike(transform)) {\r\n      transform = Transformable.getLocalTransform(transform);\r\n    }\r\n\r\n    if (invert$$1) {\r\n      transform = invert([], transform);\r\n    }\r\n\r\n    return applyTransform([], target, transform);\r\n  }\r\n  /**\r\n   * @param direction 'left' 'right' 'top' 'bottom'\r\n   * @param transform Transform matrix: like [1, 0, 0, 1, 0, 0]\r\n   * @param invert Whether use invert matrix.\r\n   * @return Transformed direction. 'left' 'right' 'top' 'bottom'\r\n   */\r\n\r\n\r\n  function transformDirection(direction, transform, invert$$1) {\r\n    // Pick a base, ensure that transform result will not be (0, 0).\r\n    var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\r\n    var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\r\n    var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\r\n    vertex = applyTransform$1(vertex, transform, invert$$1);\r\n    return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\r\n  }\r\n\r\n  function isNotGroup(el) {\r\n    return !el.isGroup;\r\n  }\r\n\r\n  function isPath(el) {\r\n    return el.shape != null;\r\n  }\r\n  /**\r\n   * Apply group transition animation from g1 to g2.\r\n   * If no animatableModel, no animation.\r\n   */\r\n\r\n\r\n  function groupTransition(g1, g2, animatableModel) {\r\n    if (!g1 || !g2) {\r\n      return;\r\n    }\r\n\r\n    function getElMap(g) {\r\n      var elMap = {};\r\n      g.traverse(function (el) {\r\n        if (isNotGroup(el) && el.anid) {\r\n          elMap[el.anid] = el;\r\n        }\r\n      });\r\n      return elMap;\r\n    }\r\n\r\n    function getAnimatableProps(el) {\r\n      var obj = {\r\n        x: el.x,\r\n        y: el.y,\r\n        rotation: el.rotation\r\n      };\r\n\r\n      if (isPath(el)) {\r\n        obj.shape = extend({}, el.shape);\r\n      }\r\n\r\n      return obj;\r\n    }\r\n\r\n    var elMap1 = getElMap(g1);\r\n    g2.traverse(function (el) {\r\n      if (isNotGroup(el) && el.anid) {\r\n        var oldEl = elMap1[el.anid];\r\n\r\n        if (oldEl) {\r\n          var newProp = getAnimatableProps(el);\r\n          el.attr(getAnimatableProps(oldEl));\r\n          updateProps(el, newProp, animatableModel, getECData(el).dataIndex);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  function clipPointsByRect(points, rect) {\r\n    // FIXME: this way migth be incorrect when grpahic clipped by a corner.\r\n    // and when element have border.\r\n    return map(points, function (point) {\r\n      var x = point[0];\r\n      x = mathMax$3(x, rect.x);\r\n      x = mathMin$3(x, rect.x + rect.width);\r\n      var y = point[1];\r\n      y = mathMax$3(y, rect.y);\r\n      y = mathMin$3(y, rect.y + rect.height);\r\n      return [x, y];\r\n    });\r\n  }\r\n  /**\r\n   * Return a new clipped rect. If rect size are negative, return undefined.\r\n   */\r\n\r\n\r\n  function clipRectByRect(targetRect, rect) {\r\n    var x = mathMax$3(targetRect.x, rect.x);\r\n    var x2 = mathMin$3(targetRect.x + targetRect.width, rect.x + rect.width);\r\n    var y = mathMax$3(targetRect.y, rect.y);\r\n    var y2 = mathMin$3(targetRect.y + targetRect.height, rect.y + rect.height); // If the total rect is cliped, nothing, including the border,\r\n    // should be painted. So return undefined.\r\n\r\n    if (x2 >= x && y2 >= y) {\r\n      return {\r\n        x: x,\r\n        y: y,\r\n        width: x2 - x,\r\n        height: y2 - y\r\n      };\r\n    }\r\n  }\r\n\r\n  function createIcon(iconStr, // Support 'image://' or 'path://' or direct svg path.\r\n  opt, rect) {\r\n    var innerOpts = extend({\r\n      rectHover: true\r\n    }, opt);\r\n    var style = innerOpts.style = {\r\n      strokeNoScale: true\r\n    };\r\n    rect = rect || {\r\n      x: -1,\r\n      y: -1,\r\n      width: 2,\r\n      height: 2\r\n    };\r\n\r\n    if (iconStr) {\r\n      return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), defaults(style, rect), new ZRImage(innerOpts)) : makePath(iconStr.replace('path://', ''), innerOpts, rect, 'center');\r\n    }\r\n  }\r\n  /**\r\n   * Return `true` if the given line (line `a`) and the given polygon\r\n   * are intersect.\r\n   * Note that we do not count colinear as intersect here because no\r\n   * requirement for that. We could do that if required in future.\r\n   */\r\n\r\n\r\n  function linePolygonIntersect(a1x, a1y, a2x, a2y, points) {\r\n    for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\r\n      var p = points[i];\r\n\r\n      if (lineLineIntersect(a1x, a1y, a2x, a2y, p[0], p[1], p2[0], p2[1])) {\r\n        return true;\r\n      }\r\n\r\n      p2 = p;\r\n    }\r\n  }\r\n  /**\r\n   * Return `true` if the given two lines (line `a` and line `b`)\r\n   * are intersect.\r\n   * Note that we do not count colinear as intersect here because no\r\n   * requirement for that. We could do that if required in future.\r\n   */\r\n\r\n\r\n  function lineLineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\r\n    // let `vec_m` to be `vec_a2 - vec_a1` and `vec_n` to be `vec_b2 - vec_b1`.\r\n    var mx = a2x - a1x;\r\n    var my = a2y - a1y;\r\n    var nx = b2x - b1x;\r\n    var ny = b2y - b1y; // `vec_m` and `vec_n` are parallel iff\r\n    //     exising `k` such that `vec_m = k · vec_n`, equivalent to `vec_m X vec_n = 0`.\r\n\r\n    var nmCrossProduct = crossProduct2d(nx, ny, mx, my);\r\n\r\n    if (nearZero(nmCrossProduct)) {\r\n      return false;\r\n    } // `vec_m` and `vec_n` are intersect iff\r\n    //     existing `p` and `q` in [0, 1] such that `vec_a1 + p * vec_m = vec_b1 + q * vec_n`,\r\n    //     such that `q = ((vec_a1 - vec_b1) X vec_m) / (vec_n X vec_m)`\r\n    //           and `p = ((vec_a1 - vec_b1) X vec_n) / (vec_n X vec_m)`.\r\n\r\n\r\n    var b1a1x = a1x - b1x;\r\n    var b1a1y = a1y - b1y;\r\n    var q = crossProduct2d(b1a1x, b1a1y, mx, my) / nmCrossProduct;\r\n\r\n    if (q < 0 || q > 1) {\r\n      return false;\r\n    }\r\n\r\n    var p = crossProduct2d(b1a1x, b1a1y, nx, ny) / nmCrossProduct;\r\n\r\n    if (p < 0 || p > 1) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n  /**\r\n   * Cross product of 2-dimension vector.\r\n   */\r\n\r\n\r\n  function crossProduct2d(x1, y1, x2, y2) {\r\n    return x1 * y2 - x2 * y1;\r\n  }\r\n\r\n  function nearZero(val) {\r\n    return val <= 1e-6 && val >= -1e-6;\r\n  } // Register built-in shapes. These shapes might be overwirtten\r\n  // by users, although we do not recommend that.\r\n\r\n\r\n  registerShape('circle', Circle);\r\n  registerShape('ellipse', Ellipse);\r\n  registerShape('sector', Sector);\r\n  registerShape('ring', Ring);\r\n  registerShape('polygon', Polygon);\r\n  registerShape('polyline', Polyline);\r\n  registerShape('rect', Rect);\r\n  registerShape('line', Line);\r\n  registerShape('bezierCurve', BezierCurve);\r\n  registerShape('arc', Arc);\r\n  var graphic = (Object.freeze || Object)({\r\n    extendShape: extendShape,\r\n    extendPath: extendPath,\r\n    registerShape: registerShape,\r\n    getShapeClass: getShapeClass,\r\n    makePath: makePath,\r\n    makeImage: makeImage,\r\n    mergePath: mergePath,\r\n    resizePath: resizePath,\r\n    subPixelOptimizeLine: subPixelOptimizeLine$1,\r\n    subPixelOptimizeRect: subPixelOptimizeRect$1,\r\n    subPixelOptimize: subPixelOptimize$1,\r\n    updateProps: updateProps,\r\n    initProps: initProps,\r\n    removeElement: removeElement,\r\n    removeElementWithFadeOut: removeElementWithFadeOut,\r\n    isElementRemoved: isElementRemoved,\r\n    getTransform: getTransform,\r\n    applyTransform: applyTransform$1,\r\n    transformDirection: transformDirection,\r\n    groupTransition: groupTransition,\r\n    clipPointsByRect: clipPointsByRect,\r\n    clipRectByRect: clipRectByRect,\r\n    createIcon: createIcon,\r\n    linePolygonIntersect: linePolygonIntersect,\r\n    lineLineIntersect: lineLineIntersect,\r\n    Group: Group,\r\n    Image: ZRImage,\r\n    Text: ZRText,\r\n    Circle: Circle,\r\n    Ellipse: Ellipse,\r\n    Sector: Sector,\r\n    Ring: Ring,\r\n    Polygon: Polygon,\r\n    Polyline: Polyline,\r\n    Rect: Rect,\r\n    Line: Line,\r\n    BezierCurve: BezierCurve,\r\n    Arc: Arc,\r\n    IncrementalDisplayable: IncrementalDisplayable,\r\n    CompoundPath: CompoundPath,\r\n    LinearGradient: LinearGradient,\r\n    RadialGradient: RadialGradient,\r\n    BoundingRect: BoundingRect,\r\n    OrientedBoundingRect: OrientedBoundingRect,\r\n    Point: Point,\r\n    Path: Path\r\n  });\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var EMPTY_OBJ = {};\r\n\r\n  function setLabelText(label, labelTexts) {\r\n    for (var i = 0; i < SPECIAL_STATES.length; i++) {\r\n      var stateName = SPECIAL_STATES[i];\r\n      var text = labelTexts[stateName];\r\n      var state = label.ensureState(stateName);\r\n      state.style = state.style || {};\r\n      state.style.text = text;\r\n    }\r\n\r\n    var oldStates = label.currentStates.slice();\r\n    label.clearStates(true);\r\n    label.setStyle({\r\n      text: labelTexts.normal\r\n    });\r\n    label.useStates(oldStates, true);\r\n  }\r\n\r\n  function getLabelText(opt, stateModels, interpolatedValue) {\r\n    var labelFetcher = opt.labelFetcher;\r\n    var labelDataIndex = opt.labelDataIndex;\r\n    var labelDimIndex = opt.labelDimIndex;\r\n    var normalModel = stateModels.normal;\r\n    var baseText;\r\n\r\n    if (labelFetcher) {\r\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex, normalModel && normalModel.get('formatter'), interpolatedValue != null ? {\r\n        interpolatedValue: interpolatedValue\r\n      } : null);\r\n    }\r\n\r\n    if (baseText == null) {\r\n      baseText = isFunction$1(opt.defaultText) ? opt.defaultText(labelDataIndex, opt, interpolatedValue) : opt.defaultText;\r\n    }\r\n\r\n    var statesText = {\r\n      normal: baseText\r\n    };\r\n\r\n    for (var i = 0; i < SPECIAL_STATES.length; i++) {\r\n      var stateName = SPECIAL_STATES[i];\r\n      var stateModel = stateModels[stateName];\r\n      statesText[stateName] = retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, stateName, null, labelDimIndex, stateModel && stateModel.get('formatter')) : null, baseText);\r\n    }\r\n\r\n    return statesText;\r\n  }\r\n\r\n  function setLabelStyle(targetEl, labelStatesModels, opt, stateSpecified // TODO specified position?\r\n  ) {\r\n    opt = opt || EMPTY_OBJ;\r\n    var isSetOnText = targetEl instanceof ZRText;\r\n    var needsCreateText = false;\r\n\r\n    for (var i = 0; i < DISPLAY_STATES.length; i++) {\r\n      var stateModel = labelStatesModels[DISPLAY_STATES[i]];\r\n\r\n      if (stateModel && stateModel.getShallow('show')) {\r\n        needsCreateText = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    var textContent = isSetOnText ? targetEl : targetEl.getTextContent();\r\n\r\n    if (needsCreateText) {\r\n      if (!isSetOnText) {\r\n        // Reuse the previous\r\n        if (!textContent) {\r\n          textContent = new ZRText();\r\n          targetEl.setTextContent(textContent);\r\n        } // Use same state proxy\r\n\r\n\r\n        if (targetEl.stateProxy) {\r\n          textContent.stateProxy = targetEl.stateProxy;\r\n        }\r\n      }\r\n\r\n      var labelStatesTexts = getLabelText(opt, labelStatesModels);\r\n      var normalModel = labelStatesModels.normal;\r\n      var showNormal = !!normalModel.getShallow('show');\r\n      var normalStyle = createTextStyle(normalModel, stateSpecified && stateSpecified.normal, opt, false, !isSetOnText);\r\n      normalStyle.text = labelStatesTexts.normal;\r\n\r\n      if (!isSetOnText) {\r\n        // Always create new\r\n        targetEl.setTextConfig(createTextConfig(normalModel, opt, false));\r\n      }\r\n\r\n      for (var i = 0; i < SPECIAL_STATES.length; i++) {\r\n        var stateName = SPECIAL_STATES[i];\r\n        var stateModel = labelStatesModels[stateName];\r\n\r\n        if (stateModel) {\r\n          var stateObj = textContent.ensureState(stateName);\r\n          var stateShow = !!retrieve2(stateModel.getShallow('show'), showNormal);\r\n\r\n          if (stateShow !== showNormal) {\r\n            stateObj.ignore = !stateShow;\r\n          }\r\n\r\n          stateObj.style = createTextStyle(stateModel, stateSpecified && stateSpecified[stateName], opt, true, !isSetOnText);\r\n          stateObj.style.text = labelStatesTexts[stateName];\r\n\r\n          if (!isSetOnText) {\r\n            var targetElEmphasisState = targetEl.ensureState(stateName);\r\n            targetElEmphasisState.textConfig = createTextConfig(stateModel, opt, true);\r\n          }\r\n        }\r\n      } // PENDING: if there is many requirements that emphasis position\r\n      // need to be different from normal position, we might consider\r\n      // auto slient is those cases.\r\n\r\n\r\n      textContent.silent = !!normalModel.getShallow('silent'); // Keep x and y\r\n\r\n      if (textContent.style.x != null) {\r\n        normalStyle.x = textContent.style.x;\r\n      }\r\n\r\n      if (textContent.style.y != null) {\r\n        normalStyle.y = textContent.style.y;\r\n      }\r\n\r\n      textContent.ignore = !showNormal; // Always create new style.\r\n\r\n      textContent.useStyle(normalStyle);\r\n      textContent.dirty();\r\n\r\n      if (opt.enableTextSetter) {\r\n        labelInner(textContent).setLabelText = function (interpolatedValue) {\r\n          var labelStatesTexts = getLabelText(opt, labelStatesModels, interpolatedValue);\r\n          setLabelText(textContent, labelStatesTexts);\r\n        };\r\n      }\r\n    } else if (textContent) {\r\n      // Not display rich text.\r\n      textContent.ignore = true;\r\n    }\r\n\r\n    targetEl.dirty();\r\n  }\r\n\r\n  function getLabelStatesModels(itemModel, labelName) {\r\n    labelName = labelName || 'label';\r\n    var statesModels = {\r\n      normal: itemModel.getModel(labelName)\r\n    };\r\n\r\n    for (var i = 0; i < SPECIAL_STATES.length; i++) {\r\n      var stateName = SPECIAL_STATES[i];\r\n      statesModels[stateName] = itemModel.getModel([stateName, labelName]);\r\n    }\r\n\r\n    return statesModels;\r\n  }\r\n  /**\r\n   * Set basic textStyle properties.\r\n   */\r\n\r\n\r\n  function createTextStyle(textStyleModel, specifiedTextStyle, // Fixed style in the code. Can't be set by model.\r\n  opt, isNotNormal, isAttached // If text is attached on an element. If so, auto color will handling in zrender.\r\n  ) {\r\n    var textStyle = {};\r\n    setTextStyleCommon(textStyle, textStyleModel, opt, isNotNormal, isAttached);\r\n    specifiedTextStyle && extend(textStyle, specifiedTextStyle); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\r\n\r\n    return textStyle;\r\n  }\r\n\r\n  function createTextConfig(textStyleModel, opt, isNotNormal) {\r\n    opt = opt || {};\r\n    var textConfig = {};\r\n    var labelPosition;\r\n    var labelRotate = textStyleModel.getShallow('rotate');\r\n    var labelDistance = retrieve2(textStyleModel.getShallow('distance'), isNotNormal ? null : 5);\r\n    var labelOffset = textStyleModel.getShallow('offset');\r\n    labelPosition = textStyleModel.getShallow('position') || (isNotNormal ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\r\n    // in bar series, and magric type should be considered.\r\n\r\n    labelPosition === 'outside' && (labelPosition = opt.defaultOutsidePosition || 'top');\r\n\r\n    if (labelPosition != null) {\r\n      textConfig.position = labelPosition;\r\n    }\r\n\r\n    if (labelOffset != null) {\r\n      textConfig.offset = labelOffset;\r\n    }\r\n\r\n    if (labelRotate != null) {\r\n      labelRotate *= Math.PI / 180;\r\n      textConfig.rotation = labelRotate;\r\n    }\r\n\r\n    if (labelDistance != null) {\r\n      textConfig.distance = labelDistance;\r\n    } // fill and auto is determined by the color of path fill if it's not specified by developers.\r\n\r\n\r\n    textConfig.outsideFill = textStyleModel.get('color') === 'inherit' ? opt.inheritColor || null : 'auto';\r\n    return textConfig;\r\n  }\r\n  /**\r\n   * The uniform entry of set text style, that is, retrieve style definitions\r\n   * from `model` and set to `textStyle` object.\r\n   *\r\n   * Never in merge mode, but in overwrite mode, that is, all of the text style\r\n   * properties will be set. (Consider the states of normal and emphasis and\r\n   * default value can be adopted, merge would make the logic too complicated\r\n   * to manage.)\r\n   */\r\n\r\n\r\n  function setTextStyleCommon(textStyle, textStyleModel, opt, isNotNormal, isAttached) {\r\n    // Consider there will be abnormal when merge hover style to normal style if given default value.\r\n    opt = opt || EMPTY_OBJ;\r\n    var ecModel = textStyleModel.ecModel;\r\n    var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\r\n    // {\r\n    //     data: [{\r\n    //         value: 12,\r\n    //         label: {\r\n    //             rich: {\r\n    //                 // no 'a' here but using parent 'a'.\r\n    //             }\r\n    //         }\r\n    //     }],\r\n    //     rich: {\r\n    //         a: { ... }\r\n    //     }\r\n    // }\r\n\r\n    var richItemNames = getRichItemNames(textStyleModel);\r\n    var richResult;\r\n\r\n    if (richItemNames) {\r\n      richResult = {};\r\n\r\n      for (var name_1 in richItemNames) {\r\n        if (richItemNames.hasOwnProperty(name_1)) {\r\n          // Cascade is supported in rich.\r\n          var richTextStyle = textStyleModel.getModel(['rich', name_1]); // In rich, never `disableBox`.\r\n          // FIXME: consider `label: {formatter: '{a|xx}', color: 'blue', rich: {a: {}}}`,\r\n          // the default color `'blue'` will not be adopted if no color declared in `rich`.\r\n          // That might confuses users. So probably we should put `textStyleModel` as the\r\n          // root ancestor of the `richTextStyle`. But that would be a break change.\r\n\r\n          setTokenTextStyle(richResult[name_1] = {}, richTextStyle, globalTextStyle, opt, isNotNormal, isAttached, false, true);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (richResult) {\r\n      textStyle.rich = richResult;\r\n    }\r\n\r\n    var overflow = textStyleModel.get('overflow');\r\n\r\n    if (overflow) {\r\n      textStyle.overflow = overflow;\r\n    }\r\n\r\n    var margin = textStyleModel.get('minMargin');\r\n\r\n    if (margin != null) {\r\n      textStyle.margin = margin;\r\n    }\r\n\r\n    setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isNotNormal, isAttached, true, false);\r\n  } // Consider case:\r\n  // {\r\n  //     data: [{\r\n  //         value: 12,\r\n  //         label: {\r\n  //             rich: {\r\n  //                 // no 'a' here but using parent 'a'.\r\n  //             }\r\n  //         }\r\n  //     }],\r\n  //     rich: {\r\n  //         a: { ... }\r\n  //     }\r\n  // }\r\n  // TODO TextStyleModel\r\n\r\n\r\n  function getRichItemNames(textStyleModel) {\r\n    // Use object to remove duplicated names.\r\n    var richItemNameMap;\r\n\r\n    while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\r\n      var rich = (textStyleModel.option || EMPTY_OBJ).rich;\r\n\r\n      if (rich) {\r\n        richItemNameMap = richItemNameMap || {};\r\n        var richKeys = keys(rich);\r\n\r\n        for (var i = 0; i < richKeys.length; i++) {\r\n          var richKey = richKeys[i];\r\n          richItemNameMap[richKey] = 1;\r\n        }\r\n      }\r\n\r\n      textStyleModel = textStyleModel.parentModel;\r\n    }\r\n\r\n    return richItemNameMap;\r\n  }\r\n\r\n  var TEXT_PROPS_WITH_GLOBAL = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY'];\r\n  var TEXT_PROPS_SELF = ['align', 'lineHeight', 'width', 'height', 'tag', 'verticalAlign'];\r\n  var TEXT_PROPS_BOX = ['padding', 'borderWidth', 'borderRadius', 'borderDashOffset', 'backgroundColor', 'borderColor', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\r\n\r\n  function setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isNotNormal, isAttached, isBlock, inRich) {\r\n    // In merge mode, default value should not be given.\r\n    globalTextStyle = !isNotNormal && globalTextStyle || EMPTY_OBJ;\r\n    var inheritColor = opt && opt.inheritColor;\r\n    var fillColor = textStyleModel.getShallow('color');\r\n    var strokeColor = textStyleModel.getShallow('textBorderColor');\r\n    var opacity = retrieve2(textStyleModel.getShallow('opacity'), globalTextStyle.opacity);\r\n\r\n    if (fillColor === 'inherit' || fillColor === 'auto') {\r\n      {\r\n        if (fillColor === 'auto') {\r\n          deprecateReplaceLog('color: \\'auto\\'', 'color: \\'inherit\\'');\r\n        }\r\n      }\r\n\r\n      if (inheritColor) {\r\n        fillColor = inheritColor;\r\n      } else {\r\n        fillColor = null;\r\n      }\r\n    }\r\n\r\n    if (strokeColor === 'inherit' || strokeColor === 'auto') {\r\n      {\r\n        if (strokeColor === 'auto') {\r\n          deprecateReplaceLog('color: \\'auto\\'', 'color: \\'inherit\\'');\r\n        }\r\n      }\r\n\r\n      if (inheritColor) {\r\n        strokeColor = inheritColor;\r\n      } else {\r\n        strokeColor = null;\r\n      }\r\n    }\r\n\r\n    if (!isAttached) {\r\n      // Only use default global textStyle.color if text is individual.\r\n      // Otherwise it will use the strategy of attached text color because text may be on a path.\r\n      fillColor = fillColor || globalTextStyle.color;\r\n      strokeColor = strokeColor || globalTextStyle.textBorderColor;\r\n    }\r\n\r\n    if (fillColor != null) {\r\n      textStyle.fill = fillColor;\r\n    }\r\n\r\n    if (strokeColor != null) {\r\n      textStyle.stroke = strokeColor;\r\n    }\r\n\r\n    var textBorderWidth = retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\r\n\r\n    if (textBorderWidth != null) {\r\n      textStyle.lineWidth = textBorderWidth;\r\n    }\r\n\r\n    var textBorderType = retrieve2(textStyleModel.getShallow('textBorderType'), globalTextStyle.textBorderType);\r\n\r\n    if (textBorderType != null) {\r\n      textStyle.lineDash = textBorderType;\r\n    }\r\n\r\n    var textBorderDashOffset = retrieve2(textStyleModel.getShallow('textBorderDashOffset'), globalTextStyle.textBorderDashOffset);\r\n\r\n    if (textBorderDashOffset != null) {\r\n      textStyle.lineDashOffset = textBorderDashOffset;\r\n    }\r\n\r\n    if (!isNotNormal && opacity == null && !inRich) {\r\n      opacity = opt && opt.defaultOpacity;\r\n    }\r\n\r\n    if (opacity != null) {\r\n      textStyle.opacity = opacity;\r\n    } // TODO\r\n\r\n\r\n    if (!isNotNormal && !isAttached) {\r\n      // Set default finally.\r\n      if (textStyle.fill == null && opt.inheritColor) {\r\n        textStyle.fill = opt.inheritColor;\r\n      }\r\n    } // Do not use `getFont` here, because merge should be supported, where\r\n    // part of these properties may be changed in emphasis style, and the\r\n    // others should remain their original value got from normal style.\r\n\r\n\r\n    for (var i = 0; i < TEXT_PROPS_WITH_GLOBAL.length; i++) {\r\n      var key = TEXT_PROPS_WITH_GLOBAL[i];\r\n      var val = retrieve2(textStyleModel.getShallow(key), globalTextStyle[key]);\r\n\r\n      if (val != null) {\r\n        textStyle[key] = val;\r\n      }\r\n    }\r\n\r\n    for (var i = 0; i < TEXT_PROPS_SELF.length; i++) {\r\n      var key = TEXT_PROPS_SELF[i];\r\n      var val = textStyleModel.getShallow(key);\r\n\r\n      if (val != null) {\r\n        textStyle[key] = val;\r\n      }\r\n    }\r\n\r\n    if (textStyle.verticalAlign == null) {\r\n      var baseline = textStyleModel.getShallow('baseline');\r\n\r\n      if (baseline != null) {\r\n        textStyle.verticalAlign = baseline;\r\n      }\r\n    }\r\n\r\n    if (!isBlock || !opt.disableBox) {\r\n      for (var i = 0; i < TEXT_PROPS_BOX.length; i++) {\r\n        var key = TEXT_PROPS_BOX[i];\r\n        var val = textStyleModel.getShallow(key);\r\n\r\n        if (val != null) {\r\n          textStyle[key] = val;\r\n        }\r\n      }\r\n\r\n      var borderType = textStyleModel.getShallow('borderType');\r\n\r\n      if (borderType != null) {\r\n        textStyle.borderDash = borderType;\r\n      }\r\n\r\n      if ((textStyle.backgroundColor === 'auto' || textStyle.backgroundColor === 'inherit') && inheritColor) {\r\n        {\r\n          if (textStyle.backgroundColor === 'auto') {\r\n            deprecateReplaceLog('backgroundColor: \\'auto\\'', 'backgroundColor: \\'inherit\\'');\r\n          }\r\n        }\r\n        textStyle.backgroundColor = inheritColor;\r\n      }\r\n\r\n      if ((textStyle.borderColor === 'auto' || textStyle.borderColor === 'inherit') && inheritColor) {\r\n        {\r\n          if (textStyle.borderColor === 'auto') {\r\n            deprecateReplaceLog('borderColor: \\'auto\\'', 'borderColor: \\'inherit\\'');\r\n          }\r\n        }\r\n        textStyle.borderColor = inheritColor;\r\n      }\r\n    }\r\n  }\r\n\r\n  function getFont(opt, ecModel) {\r\n    var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\r\n    return trim([// FIXME in node-canvas fontWeight is before fontStyle\r\n    opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\r\n  }\r\n\r\n  var labelInner = makeInner();\r\n\r\n  function animateLabelValue(textEl, dataIndex, data, animatableModel, labelFetcher) {\r\n    var labelInnerStore = labelInner(textEl);\r\n\r\n    if (!labelInnerStore.valueAnimation) {\r\n      return;\r\n    }\r\n\r\n    var defaultInterpolatedText = labelInnerStore.defaultInterpolatedText; // Consider the case that being animating, do not use the `obj.value`,\r\n    // Otherwise it will jump to the `obj.value` when this new animation started.\r\n\r\n    var currValue = retrieve2(labelInnerStore.interpolatedValue, labelInnerStore.prevValue);\r\n    var targetValue = labelInnerStore.value;\r\n\r\n    function during(percent) {\r\n      var interpolated = interpolateRawValues(data, labelInnerStore.precision, currValue, targetValue, percent);\r\n      labelInnerStore.interpolatedValue = percent === 1 ? null : interpolated;\r\n      var labelText = getLabelText({\r\n        labelDataIndex: dataIndex,\r\n        labelFetcher: labelFetcher,\r\n        defaultText: defaultInterpolatedText ? defaultInterpolatedText(interpolated) : interpolated + ''\r\n      }, labelInnerStore.statesModels, interpolated);\r\n      setLabelText(textEl, labelText);\r\n    }\r\n\r\n    (currValue == null ? initProps : updateProps)(textEl, {}, animatableModel, dataIndex, null, during);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var PATH_COLOR = ['textStyle', 'color']; // TODO Performance improvement?\r\n\r\n  var tmpRichText = new ZRText();\r\n\r\n  var TextStyleMixin =\r\n  /** @class */\r\n  function () {\r\n    function TextStyleMixin() {}\r\n    /**\r\n     * Get color property or get color from option.textStyle.color\r\n     */\r\n    // TODO Callback\r\n\r\n\r\n    TextStyleMixin.prototype.getTextColor = function (isEmphasis) {\r\n      var ecModel = this.ecModel;\r\n      return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\r\n    };\r\n    /**\r\n     * Create font string from fontStyle, fontWeight, fontSize, fontFamily\r\n     * @return {string}\r\n     */\r\n\r\n\r\n    TextStyleMixin.prototype.getFont = function () {\r\n      return getFont({\r\n        fontStyle: this.getShallow('fontStyle'),\r\n        fontWeight: this.getShallow('fontWeight'),\r\n        fontSize: this.getShallow('fontSize'),\r\n        fontFamily: this.getShallow('fontFamily')\r\n      }, this.ecModel);\r\n    };\r\n\r\n    TextStyleMixin.prototype.getTextRect = function (text) {\r\n      tmpRichText.useStyle({\r\n        text: text,\r\n        fontStyle: this.getShallow('fontStyle'),\r\n        fontWeight: this.getShallow('fontWeight'),\r\n        fontSize: this.getShallow('fontSize'),\r\n        fontFamily: this.getShallow('fontFamily'),\r\n        verticalAlign: this.getShallow('verticalAlign') || this.getShallow('baseline'),\r\n        padding: this.getShallow('padding'),\r\n        lineHeight: this.getShallow('lineHeight'),\r\n        rich: this.getShallow('rich')\r\n      });\r\n      tmpRichText.update();\r\n      return tmpRichText.getBoundingRect();\r\n    };\r\n\r\n    return TextStyleMixin;\r\n  }();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var LINE_STYLE_KEY_MAP = [['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['lineDash', 'type'], ['lineDashOffset', 'dashOffset'], ['lineCap', 'cap'], ['lineJoin', 'join'], ['miterLimit'] // Option decal is in `DecalObject` but style.decal is in `PatternObject`.\r\n  // So do not transfer decal directly.\r\n  ];\r\n  var getLineStyle = makeStyleMapper(LINE_STYLE_KEY_MAP);\r\n\r\n  var LineStyleMixin =\r\n  /** @class */\r\n  function () {\r\n    function LineStyleMixin() {}\r\n\r\n    LineStyleMixin.prototype.getLineStyle = function (excludes) {\r\n      return getLineStyle(this, excludes);\r\n    };\r\n\r\n    return LineStyleMixin;\r\n  }();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var ITEM_STYLE_KEY_MAP = [['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['lineDash', 'borderType'], ['lineDashOffset', 'borderDashOffset'], ['lineCap', 'borderCap'], ['lineJoin', 'borderJoin'], ['miterLimit', 'borderMiterLimit'] // Option decal is in `DecalObject` but style.decal is in `PatternObject`.\r\n  // So do not transfer decal directly.\r\n  ];\r\n  var getItemStyle = makeStyleMapper(ITEM_STYLE_KEY_MAP);\r\n\r\n  var ItemStyleMixin =\r\n  /** @class */\r\n  function () {\r\n    function ItemStyleMixin() {}\r\n\r\n    ItemStyleMixin.prototype.getItemStyle = function (excludes, includes) {\r\n      return getItemStyle(this, excludes, includes);\r\n    };\r\n\r\n    return ItemStyleMixin;\r\n  }();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var Model =\r\n  /** @class */\r\n  function () {\r\n    function Model(option, parentModel, ecModel) {\r\n      this.parentModel = parentModel;\r\n      this.ecModel = ecModel;\r\n      this.option = option; // Simple optimization\r\n      // if (this.init) {\r\n      //     if (arguments.length <= 4) {\r\n      //         this.init(option, parentModel, ecModel, extraOpt);\r\n      //     }\r\n      //     else {\r\n      //         this.init.apply(this, arguments);\r\n      //     }\r\n      // }\r\n    }\r\n\r\n    Model.prototype.init = function (option, parentModel, ecModel) {\r\n      var rest = [];\r\n\r\n      for (var _i = 3; _i < arguments.length; _i++) {\r\n        rest[_i - 3] = arguments[_i];\r\n      }\r\n    };\r\n    /**\r\n     * Merge the input option to me.\r\n     */\r\n\r\n\r\n    Model.prototype.mergeOption = function (option, ecModel) {\r\n      merge(this.option, option, true);\r\n    }; // `path` can be 'xxx.yyy.zzz', so the return value type have to be `ModelOption`\r\n    // TODO: TYPE strict key check?\r\n    // get(path: string | string[], ignoreParent?: boolean): ModelOption;\r\n\r\n\r\n    Model.prototype.get = function (path, ignoreParent) {\r\n      if (path == null) {\r\n        return this.option;\r\n      }\r\n\r\n      return this._doGet(this.parsePath(path), !ignoreParent && this.parentModel);\r\n    };\r\n\r\n    Model.prototype.getShallow = function (key, ignoreParent) {\r\n      var option = this.option;\r\n      var val = option == null ? option : option[key];\r\n\r\n      if (val == null && !ignoreParent) {\r\n        var parentModel = this.parentModel;\r\n\r\n        if (parentModel) {\r\n          // FIXME:TS do not know how to make it works\r\n          val = parentModel.getShallow(key);\r\n        }\r\n      }\r\n\r\n      return val;\r\n    }; // `path` can be 'xxx.yyy.zzz', so the return value type have to be `Model<ModelOption>`\r\n    // getModel(path: string | string[], parentModel?: Model): Model;\r\n    // TODO 'xxx.yyy.zzz' is deprecated\r\n\r\n\r\n    Model.prototype.getModel = function (path, parentModel) {\r\n      var hasPath = path != null;\r\n      var pathFinal = hasPath ? this.parsePath(path) : null;\r\n      var obj = hasPath ? this._doGet(pathFinal) : this.option;\r\n      parentModel = parentModel || this.parentModel && this.parentModel.getModel(this.resolveParentPath(pathFinal));\r\n      return new Model(obj, parentModel, this.ecModel);\r\n    };\r\n    /**\r\n     * Squash option stack into one.\r\n     * parentModel will be removed after squashed.\r\n     *\r\n     * NOTE: resolveParentPath will not be applied here for simplicity. DON'T use this function\r\n     * if resolveParentPath is modified.\r\n     *\r\n     * @param deepMerge If do deep merge. Default to be false.\r\n     */\r\n    // squash(\r\n    //     deepMerge?: boolean,\r\n    //     handleCallback?: (func: () => object) => object\r\n    // ) {\r\n    //     const optionStack = [];\r\n    //     let model: Model = this;\r\n    //     while (model) {\r\n    //         if (model.option) {\r\n    //             optionStack.push(model.option);\r\n    //         }\r\n    //         model = model.parentModel;\r\n    //     }\r\n    //     const newOption = {} as Opt;\r\n    //     let option;\r\n    //     while (option = optionStack.pop()) {    // Top down merge\r\n    //         if (isFunction(option) && handleCallback) {\r\n    //             option = handleCallback(option);\r\n    //         }\r\n    //         if (deepMerge) {\r\n    //             merge(newOption, option);\r\n    //         }\r\n    //         else {\r\n    //             extend(newOption, option);\r\n    //         }\r\n    //     }\r\n    //     // Remove parentModel\r\n    //     this.option = newOption;\r\n    //     this.parentModel = null;\r\n    // }\r\n\r\n    /**\r\n     * If model has option\r\n     */\r\n\r\n\r\n    Model.prototype.isEmpty = function () {\r\n      return this.option == null;\r\n    };\r\n\r\n    Model.prototype.restoreData = function () {}; // Pending\r\n\r\n\r\n    Model.prototype.clone = function () {\r\n      var Ctor = this.constructor;\r\n      return new Ctor(clone(this.option));\r\n    }; // setReadOnly(properties): void {\r\n    // clazzUtil.setReadOnly(this, properties);\r\n    // }\r\n    // If path is null/undefined, return null/undefined.\r\n\r\n\r\n    Model.prototype.parsePath = function (path) {\r\n      if (typeof path === 'string') {\r\n        return path.split('.');\r\n      }\r\n\r\n      return path;\r\n    }; // Resolve path for parent. Perhaps useful when parent use a different property.\r\n    // Default to be a identity resolver.\r\n    // Can be modified to a different resolver.\r\n\r\n\r\n    Model.prototype.resolveParentPath = function (path) {\r\n      return path;\r\n    }; // FIXME:TS check whether put this method here\r\n\r\n\r\n    Model.prototype.isAnimationEnabled = function () {\r\n      if (!env.node && this.option) {\r\n        if (this.option.animation != null) {\r\n          return !!this.option.animation;\r\n        } else if (this.parentModel) {\r\n          return this.parentModel.isAnimationEnabled();\r\n        }\r\n      }\r\n    };\r\n\r\n    Model.prototype._doGet = function (pathArr, parentModel) {\r\n      var obj = this.option;\r\n\r\n      if (!pathArr) {\r\n        return obj;\r\n      }\r\n\r\n      for (var i = 0; i < pathArr.length; i++) {\r\n        // Ignore empty\r\n        if (!pathArr[i]) {\r\n          continue;\r\n        } // obj could be number/string/... (like 0)\r\n\r\n\r\n        obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\r\n\r\n        if (obj == null) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (obj == null && parentModel) {\r\n        obj = parentModel._doGet(this.resolveParentPath(pathArr), parentModel.parentModel);\r\n      }\r\n\r\n      return obj;\r\n    };\r\n\r\n    return Model;\r\n  }(); // Enable Model.extend.\r\n\r\n\r\n  enableClassExtend(Model);\r\n  enableClassCheck(Model);\r\n  mixin(Model, LineStyleMixin);\r\n  mixin(Model, ItemStyleMixin);\r\n  mixin(Model, AreaStyleMixin);\r\n  mixin(Model, TextStyleMixin);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var base = Math.round(Math.random() * 10);\r\n  /**\r\n   * @public\r\n   * @param {string} type\r\n   * @return {string}\r\n   */\r\n\r\n  function getUID(type) {\r\n    // Considering the case of crossing js context,\r\n    // use Math.random to make id as unique as possible.\r\n    return [type || '', base++].join('_');\r\n  }\r\n  /**\r\n   * Implements `SubTypeDefaulterManager` for `target`.\r\n   */\r\n\r\n\r\n  function enableSubTypeDefaulter(target) {\r\n    var subTypeDefaulters = {};\r\n\r\n    target.registerSubTypeDefaulter = function (componentType, defaulter) {\r\n      var componentTypeInfo = parseClassType(componentType);\r\n      subTypeDefaulters[componentTypeInfo.main] = defaulter;\r\n    };\r\n\r\n    target.determineSubType = function (componentType, option) {\r\n      var type = option.type;\r\n\r\n      if (!type) {\r\n        var componentTypeMain = parseClassType(componentType).main;\r\n\r\n        if (target.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\r\n          type = subTypeDefaulters[componentTypeMain](option);\r\n        }\r\n      }\r\n\r\n      return type;\r\n    };\r\n  }\r\n  /**\r\n   * Implements `TopologicalTravelable<any>` for `entity`.\r\n   *\r\n   * Topological travel on Activity Network (Activity On Vertices).\r\n   * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\r\n   * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\r\n   * If there is circle dependencey, Error will be thrown.\r\n   */\r\n\r\n\r\n  function enableTopologicalTravel(entity, dependencyGetter) {\r\n    /**\r\n     * @param targetNameList Target Component type list.\r\n     *                       Can be ['aa', 'bb', 'aa.xx']\r\n     * @param fullNameList By which we can build dependency graph.\r\n     * @param callback Params: componentType, dependencies.\r\n     * @param context Scope of callback.\r\n     */\r\n    entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\r\n      if (!targetNameList.length) {\r\n        return;\r\n      }\r\n\r\n      var result = makeDepndencyGraph(fullNameList);\r\n      var graph = result.graph;\r\n      var noEntryList = result.noEntryList;\r\n      var targetNameSet = {};\r\n      each$1(targetNameList, function (name) {\r\n        targetNameSet[name] = true;\r\n      });\r\n\r\n      while (noEntryList.length) {\r\n        var currComponentType = noEntryList.pop();\r\n        var currVertex = graph[currComponentType];\r\n        var isInTargetNameSet = !!targetNameSet[currComponentType];\r\n\r\n        if (isInTargetNameSet) {\r\n          callback.call(context, currComponentType, currVertex.originalDeps.slice());\r\n          delete targetNameSet[currComponentType];\r\n        }\r\n\r\n        each$1(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\r\n      }\r\n\r\n      each$1(targetNameSet, function () {\r\n        var errMsg = '';\r\n        {\r\n          errMsg = makePrintable('Circle dependency may exists: ', targetNameSet, targetNameList, fullNameList);\r\n        }\r\n        throw new Error(errMsg);\r\n      });\r\n\r\n      function removeEdge(succComponentType) {\r\n        graph[succComponentType].entryCount--;\r\n\r\n        if (graph[succComponentType].entryCount === 0) {\r\n          noEntryList.push(succComponentType);\r\n        }\r\n      } // Consider this case: legend depends on series, and we call\r\n      // chart.setOption({series: [...]}), where only series is in option.\r\n      // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\r\n      // not be called, but only sereis.mergeOption is called. Thus legend\r\n      // have no chance to update its local record about series (like which\r\n      // name of series is available in legend).\r\n\r\n\r\n      function removeEdgeAndAdd(succComponentType) {\r\n        targetNameSet[succComponentType] = true;\r\n        removeEdge(succComponentType);\r\n      }\r\n    };\r\n\r\n    function makeDepndencyGraph(fullNameList) {\r\n      var graph = {};\r\n      var noEntryList = [];\r\n      each$1(fullNameList, function (name) {\r\n        var thisItem = createDependencyGraphItem(graph, name);\r\n        var originalDeps = thisItem.originalDeps = dependencyGetter(name);\r\n        var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\r\n        thisItem.entryCount = availableDeps.length;\r\n\r\n        if (thisItem.entryCount === 0) {\r\n          noEntryList.push(name);\r\n        }\r\n\r\n        each$1(availableDeps, function (dependentName) {\r\n          if (indexOf$1(thisItem.predecessor, dependentName) < 0) {\r\n            thisItem.predecessor.push(dependentName);\r\n          }\r\n\r\n          var thatItem = createDependencyGraphItem(graph, dependentName);\r\n\r\n          if (indexOf$1(thatItem.successor, dependentName) < 0) {\r\n            thatItem.successor.push(name);\r\n          }\r\n        });\r\n      });\r\n      return {\r\n        graph: graph,\r\n        noEntryList: noEntryList\r\n      };\r\n    }\r\n\r\n    function createDependencyGraphItem(graph, name) {\r\n      if (!graph[name]) {\r\n        graph[name] = {\r\n          predecessor: [],\r\n          successor: []\r\n        };\r\n      }\r\n\r\n      return graph[name];\r\n    }\r\n\r\n    function getAvailableDependencies(originalDeps, fullNameList) {\r\n      var availableDeps = [];\r\n      each$1(originalDeps, function (dep) {\r\n        indexOf$1(fullNameList, dep) >= 0 && availableDeps.push(dep);\r\n      });\r\n      return availableDeps;\r\n    }\r\n  }\r\n\r\n  function inheritDefaultOption(superOption, subOption) {\r\n    // See also `model/Component.ts#getDefaultOption`\r\n    return merge(merge({}, superOption, true), subOption, true);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Language: English.\r\n   */\r\n\r\n\r\n  var langEN = {\r\n    time: {\r\n      month: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n      monthAbbr: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n      dayOfWeek: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n      dayOfWeekAbbr: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\n    },\r\n    legend: {\r\n      selector: {\r\n        all: 'All',\r\n        inverse: 'Inv'\r\n      }\r\n    },\r\n    toolbox: {\r\n      brush: {\r\n        title: {\r\n          rect: 'Box Select',\r\n          polygon: 'Lasso Select',\r\n          lineX: 'Horizontally Select',\r\n          lineY: 'Vertically Select',\r\n          keep: 'Keep Selections',\r\n          clear: 'Clear Selections'\r\n        }\r\n      },\r\n      dataView: {\r\n        title: 'Data View',\r\n        lang: ['Data View', 'Close', 'Refresh']\r\n      },\r\n      dataZoom: {\r\n        title: {\r\n          zoom: 'Zoom',\r\n          back: 'Zoom Reset'\r\n        }\r\n      },\r\n      magicType: {\r\n        title: {\r\n          line: 'Switch to Line Chart',\r\n          bar: 'Switch to Bar Chart',\r\n          stack: 'Stack',\r\n          tiled: 'Tile'\r\n        }\r\n      },\r\n      restore: {\r\n        title: 'Restore'\r\n      },\r\n      saveAsImage: {\r\n        title: 'Save as Image',\r\n        lang: ['Right Click to Save Image']\r\n      }\r\n    },\r\n    series: {\r\n      typeNames: {\r\n        pie: 'Pie chart',\r\n        bar: 'Bar chart',\r\n        line: 'Line chart',\r\n        scatter: 'Scatter plot',\r\n        effectScatter: 'Ripple scatter plot',\r\n        radar: 'Radar chart',\r\n        tree: 'Tree',\r\n        treemap: 'Treemap',\r\n        boxplot: 'Boxplot',\r\n        candlestick: 'Candlestick',\r\n        k: 'K line chart',\r\n        heatmap: 'Heat map',\r\n        map: 'Map',\r\n        parallel: 'Parallel coordinate map',\r\n        lines: 'Line graph',\r\n        graph: 'Relationship graph',\r\n        sankey: 'Sankey diagram',\r\n        funnel: 'Funnel chart',\r\n        gauge: 'Guage',\r\n        pictorialBar: 'Pictorial bar',\r\n        themeRiver: 'Theme River Map',\r\n        sunburst: 'Sunburst'\r\n      }\r\n    },\r\n    aria: {\r\n      general: {\r\n        withTitle: 'This is a chart about \"{title}\"',\r\n        withoutTitle: 'This is a chart'\r\n      },\r\n      series: {\r\n        single: {\r\n          prefix: '',\r\n          withName: ' with type {seriesType} named {seriesName}.',\r\n          withoutName: ' with type {seriesType}.'\r\n        },\r\n        multiple: {\r\n          prefix: '. It consists of {seriesCount} series count.',\r\n          withName: ' The {seriesId} series is a {seriesType} representing {seriesName}.',\r\n          withoutName: ' The {seriesId} series is a {seriesType}.',\r\n          separator: {\r\n            middle: '',\r\n            end: ''\r\n          }\r\n        }\r\n      },\r\n      data: {\r\n        allData: 'The data is as follows: ',\r\n        partialData: 'The first {displayCnt} items are: ',\r\n        withName: 'the data for {name} is {value}',\r\n        withoutName: '{value}',\r\n        separator: {\r\n          middle: ', ',\r\n          end: '. '\r\n        }\r\n      }\r\n    }\r\n  };\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n   * Licensed to the Apache Software Foundation (ASF) under one\r\n   * or more contributor license agreements.  See the NOTICE file\r\n   * distributed with this work for additional information\r\n   * regarding copyright ownership.  The ASF licenses this file\r\n   * to you under the Apache License, Version 2.0 (the\r\n   * \"License\"); you may not use this file except in compliance\r\n   * with the License.  You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing,\r\n   * software distributed under the License is distributed on an\r\n   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n   * KIND, either express or implied.  See the License for the\r\n   * specific language governing permissions and limitations\r\n   * under the License.\r\n   */\r\n\r\n  var langZH = {\r\n    time: {\r\n      month: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\r\n      monthAbbr: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\r\n      dayOfWeek: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\r\n      dayOfWeekAbbr: ['日', '一', '二', '三', '四', '五', '六']\r\n    },\r\n    legend: {\r\n      selector: {\r\n        all: '全选',\r\n        inverse: '反选'\r\n      }\r\n    },\r\n    toolbox: {\r\n      brush: {\r\n        title: {\r\n          rect: '矩形选择',\r\n          polygon: '圈选',\r\n          lineX: '横向选择',\r\n          lineY: '纵向选择',\r\n          keep: '保持选择',\r\n          clear: '清除选择'\r\n        }\r\n      },\r\n      dataView: {\r\n        title: '数据视图',\r\n        lang: ['数据视图', '关闭', '刷新']\r\n      },\r\n      dataZoom: {\r\n        title: {\r\n          zoom: '区域缩放',\r\n          back: '区域缩放还原'\r\n        }\r\n      },\r\n      magicType: {\r\n        title: {\r\n          line: '切换为折线图',\r\n          bar: '切换为柱状图',\r\n          stack: '切换为堆叠',\r\n          tiled: '切换为平铺'\r\n        }\r\n      },\r\n      restore: {\r\n        title: '还原'\r\n      },\r\n      saveAsImage: {\r\n        title: '保存为图片',\r\n        lang: ['右键另存为图片']\r\n      }\r\n    },\r\n    series: {\r\n      typeNames: {\r\n        pie: '饼图',\r\n        bar: '柱状图',\r\n        line: '折线图',\r\n        scatter: '散点图',\r\n        effectScatter: '涟漪散点图',\r\n        radar: '雷达图',\r\n        tree: '树图',\r\n        treemap: '矩形树图',\r\n        boxplot: '箱型图',\r\n        candlestick: 'K线图',\r\n        k: 'K线图',\r\n        heatmap: '热力图',\r\n        map: '地图',\r\n        parallel: '平行坐标图',\r\n        lines: '线图',\r\n        graph: '关系图',\r\n        sankey: '桑基图',\r\n        funnel: '漏斗图',\r\n        gauge: '仪表盘图',\r\n        pictorialBar: '象形柱图',\r\n        themeRiver: '主题河流图',\r\n        sunburst: '旭日图'\r\n      }\r\n    },\r\n    aria: {\r\n      general: {\r\n        withTitle: '这是一个关于“{title}”的图表。',\r\n        withoutTitle: '这是一个图表，'\r\n      },\r\n      series: {\r\n        single: {\r\n          prefix: '',\r\n          withName: '图表类型是{seriesType}，表示{seriesName}。',\r\n          withoutName: '图表类型是{seriesType}。'\r\n        },\r\n        multiple: {\r\n          prefix: '它由{seriesCount}个图表系列组成。',\r\n          withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\r\n          withoutName: '第{seriesId}个系列是一个{seriesType}，',\r\n          separator: {\r\n            middle: '；',\r\n            end: '。'\r\n          }\r\n        }\r\n      },\r\n      data: {\r\n        allData: '其数据是——',\r\n        partialData: '其中，前{displayCnt}项是——',\r\n        withName: '{name}的数据是{value}',\r\n        withoutName: '{value}',\r\n        separator: {\r\n          middle: '，',\r\n          end: ''\r\n        }\r\n      }\r\n    }\r\n  };\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var LOCALE_ZH = 'ZH';\r\n  var LOCALE_EN = 'EN';\r\n  var DEFAULT_LOCALE = LOCALE_EN;\r\n  var localeStorage = {};\r\n  var localeModels = {};\r\n  var SYSTEM_LANG = !env.domSupported ? DEFAULT_LOCALE : function () {\r\n    var langStr = (\r\n    /* eslint-disable-next-line */\r\n    document.documentElement.lang || navigator.language || navigator.browserLanguage).toUpperCase();\r\n    return langStr.indexOf(LOCALE_ZH) > -1 ? LOCALE_ZH : DEFAULT_LOCALE;\r\n  }();\r\n\r\n  function registerLocale(locale, localeObj) {\r\n    locale = locale.toUpperCase();\r\n    localeModels[locale] = new Model(localeObj);\r\n    localeStorage[locale] = localeObj;\r\n  } // export function getLocale(locale: string) {\r\n  //     return localeStorage[locale];\r\n  // }\r\n\r\n\r\n  function createLocaleObject(locale) {\r\n    if (isString(locale)) {\r\n      var localeObj = localeStorage[locale.toUpperCase()] || {};\r\n\r\n      if (locale === LOCALE_ZH || locale === LOCALE_EN) {\r\n        return clone(localeObj);\r\n      } else {\r\n        return merge(clone(localeObj), clone(localeStorage[DEFAULT_LOCALE]), false);\r\n      }\r\n    } else {\r\n      return merge(clone(locale), clone(localeStorage[DEFAULT_LOCALE]), false);\r\n    }\r\n  }\r\n\r\n  function getLocaleModel(lang) {\r\n    return localeModels[lang];\r\n  }\r\n\r\n  function getDefaultLocaleModel() {\r\n    return localeModels[DEFAULT_LOCALE];\r\n  } // Default locale\r\n\r\n\r\n  registerLocale(LOCALE_EN, langEN);\r\n  registerLocale(LOCALE_ZH, langZH);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var ONE_SECOND = 1000;\r\n  var ONE_MINUTE = ONE_SECOND * 60;\r\n  var ONE_HOUR = ONE_MINUTE * 60;\r\n  var ONE_DAY = ONE_HOUR * 24;\r\n  var ONE_YEAR = ONE_DAY * 365;\r\n  var defaultLeveledFormatter = {\r\n    year: '{yyyy}',\r\n    month: '{MMM}',\r\n    day: '{d}',\r\n    hour: '{HH}:{mm}',\r\n    minute: '{HH}:{mm}',\r\n    second: '{HH}:{mm}:{ss}',\r\n    millisecond: '{hh}:{mm}:{ss} {SSS}',\r\n    none: '{yyyy}-{MM}-{dd} {hh}:{mm}:{ss} {SSS}'\r\n  };\r\n  var fullDayFormatter = '{yyyy}-{MM}-{dd}';\r\n  var fullLeveledFormatter = {\r\n    year: '{yyyy}',\r\n    month: '{yyyy}-{MM}',\r\n    day: fullDayFormatter,\r\n    hour: fullDayFormatter + ' ' + defaultLeveledFormatter.hour,\r\n    minute: fullDayFormatter + ' ' + defaultLeveledFormatter.minute,\r\n    second: fullDayFormatter + ' ' + defaultLeveledFormatter.second,\r\n    millisecond: defaultLeveledFormatter.none\r\n  };\r\n  var primaryTimeUnits = ['year', 'month', 'day', 'hour', 'minute', 'second', 'millisecond'];\r\n  var timeUnits = ['year', 'half-year', 'quarter', 'month', 'week', 'half-week', 'day', 'half-day', 'quarter-day', 'hour', 'minute', 'second', 'millisecond'];\r\n\r\n  function pad(str, len) {\r\n    str += '';\r\n    return '0000'.substr(0, len - str.length) + str;\r\n  }\r\n\r\n  function getPrimaryTimeUnit(timeUnit) {\r\n    switch (timeUnit) {\r\n      case 'half-year':\r\n      case 'quarter':\r\n        return 'month';\r\n\r\n      case 'week':\r\n      case 'half-week':\r\n        return 'day';\r\n\r\n      case 'half-day':\r\n      case 'quarter-day':\r\n        return 'hour';\r\n\r\n      default:\r\n        // year, minutes, second, milliseconds\r\n        return timeUnit;\r\n    }\r\n  }\r\n\r\n  function isPrimaryTimeUnit(timeUnit) {\r\n    return timeUnit === getPrimaryTimeUnit(timeUnit);\r\n  }\r\n\r\n  function getDefaultFormatPrecisionOfInterval(timeUnit) {\r\n    switch (timeUnit) {\r\n      case 'year':\r\n      case 'month':\r\n        return 'day';\r\n\r\n      case 'millisecond':\r\n        return 'millisecond';\r\n\r\n      default:\r\n        // Also for day, hour, minute, second\r\n        return 'second';\r\n    }\r\n  }\r\n\r\n  function format( // Note: The result based on `isUTC` are totally different, which can not be just simply\r\n  // substituted by the result without `isUTC`. So we make the param `isUTC` mandatory.\r\n  time, template, isUTC, lang) {\r\n    var date = parseDate(time);\r\n    var y = date[fullYearGetterName(isUTC)]();\r\n    var M = date[monthGetterName(isUTC)]() + 1;\r\n    var q = Math.floor((M - 1) / 4) + 1;\r\n    var d = date[dateGetterName(isUTC)]();\r\n    var e = date['get' + (isUTC ? 'UTC' : '') + 'Day']();\r\n    var H = date[hoursGetterName(isUTC)]();\r\n    var h = (H - 1) % 12 + 1;\r\n    var m = date[minutesGetterName(isUTC)]();\r\n    var s = date[secondsGetterName(isUTC)]();\r\n    var S = date[millisecondsGetterName(isUTC)]();\r\n    var localeModel = lang instanceof Model ? lang : getLocaleModel(lang || SYSTEM_LANG) || getDefaultLocaleModel();\r\n    var timeModel = localeModel.getModel('time');\r\n    var month = timeModel.get('month');\r\n    var monthAbbr = timeModel.get('monthAbbr');\r\n    var dayOfWeek = timeModel.get('dayOfWeek');\r\n    var dayOfWeekAbbr = timeModel.get('dayOfWeekAbbr');\r\n    return (template || '').replace(/{yyyy}/g, y + '').replace(/{yy}/g, y % 100 + '').replace(/{Q}/g, q + '').replace(/{MMMM}/g, month[M - 1]).replace(/{MMM}/g, monthAbbr[M - 1]).replace(/{MM}/g, pad(M, 2)).replace(/{M}/g, M + '').replace(/{dd}/g, pad(d, 2)).replace(/{d}/g, d + '').replace(/{eeee}/g, dayOfWeek[e]).replace(/{ee}/g, dayOfWeekAbbr[e]).replace(/{e}/g, e + '').replace(/{HH}/g, pad(H, 2)).replace(/{H}/g, H + '').replace(/{hh}/g, pad(h + '', 2)).replace(/{h}/g, h + '').replace(/{mm}/g, pad(m, 2)).replace(/{m}/g, m + '').replace(/{ss}/g, pad(s, 2)).replace(/{s}/g, s + '').replace(/{SSS}/g, pad(S, 3)).replace(/{S}/g, S + '');\r\n  }\r\n\r\n  function leveledFormat(tick, idx, formatter, lang, isUTC) {\r\n    var template = null;\r\n\r\n    if (typeof formatter === 'string') {\r\n      // Single formatter for all units at all levels\r\n      template = formatter;\r\n    } else if (typeof formatter === 'function') {\r\n      // Callback formatter\r\n      template = formatter(tick.value, idx, {\r\n        level: tick.level\r\n      });\r\n    } else {\r\n      var defaults$$1 = extend({}, defaultLeveledFormatter);\r\n\r\n      if (tick.level > 0) {\r\n        for (var i = 0; i < primaryTimeUnits.length; ++i) {\r\n          defaults$$1[primaryTimeUnits[i]] = \"{primary|\" + defaults$$1[primaryTimeUnits[i]] + \"}\";\r\n        }\r\n      }\r\n\r\n      var mergedFormatter = formatter ? formatter.inherit === false ? formatter // Use formatter with bigger units\r\n      : defaults(formatter, defaults$$1) : defaults$$1;\r\n      var unit = getUnitFromValue(tick.value, isUTC);\r\n\r\n      if (mergedFormatter[unit]) {\r\n        template = mergedFormatter[unit];\r\n      } else if (mergedFormatter.inherit) {\r\n        // Unit formatter is not defined and should inherit from bigger units\r\n        var targetId = timeUnits.indexOf(unit);\r\n\r\n        for (var i = targetId - 1; i >= 0; --i) {\r\n          if (mergedFormatter[unit]) {\r\n            template = mergedFormatter[unit];\r\n            break;\r\n          }\r\n        }\r\n\r\n        template = template || defaults$$1.none;\r\n      }\r\n\r\n      if (isArray(template)) {\r\n        var levelId = tick.level == null ? 0 : tick.level >= 0 ? tick.level : template.length + tick.level;\r\n        levelId = Math.min(levelId, template.length - 1);\r\n        template = template[levelId];\r\n      }\r\n    }\r\n\r\n    return format(new Date(tick.value), template, isUTC, lang);\r\n  }\r\n\r\n  function getUnitFromValue(value, isUTC) {\r\n    var date = parseDate(value);\r\n    var M = date[monthGetterName(isUTC)]() + 1;\r\n    var d = date[dateGetterName(isUTC)]();\r\n    var h = date[hoursGetterName(isUTC)]();\r\n    var m = date[minutesGetterName(isUTC)]();\r\n    var s = date[secondsGetterName(isUTC)]();\r\n    var S = date[millisecondsGetterName(isUTC)]();\r\n    var isSecond = S === 0;\r\n    var isMinute = isSecond && s === 0;\r\n    var isHour = isMinute && m === 0;\r\n    var isDay = isHour && h === 0;\r\n    var isMonth = isDay && d === 1;\r\n    var isYear = isMonth && M === 1;\r\n\r\n    if (isYear) {\r\n      return 'year';\r\n    } else if (isMonth) {\r\n      return 'month';\r\n    } else if (isDay) {\r\n      return 'day';\r\n    } else if (isHour) {\r\n      return 'hour';\r\n    } else if (isMinute) {\r\n      return 'minute';\r\n    } else if (isSecond) {\r\n      return 'second';\r\n    } else {\r\n      return 'millisecond';\r\n    }\r\n  }\r\n\r\n  function getUnitValue(value, unit, isUTC) {\r\n    var date = typeof value === 'number' ? parseDate(value) : value;\r\n    unit = unit || getUnitFromValue(value, isUTC);\r\n\r\n    switch (unit) {\r\n      case 'year':\r\n        return date[fullYearGetterName(isUTC)]();\r\n\r\n      case 'half-year':\r\n        return date[monthGetterName(isUTC)]() >= 6 ? 1 : 0;\r\n\r\n      case 'quarter':\r\n        return Math.floor((date[monthGetterName(isUTC)]() + 1) / 4);\r\n\r\n      case 'month':\r\n        return date[monthGetterName(isUTC)]();\r\n\r\n      case 'day':\r\n        return date[dateGetterName(isUTC)]();\r\n\r\n      case 'half-day':\r\n        return date[hoursGetterName(isUTC)]() / 24;\r\n\r\n      case 'hour':\r\n        return date[hoursGetterName(isUTC)]();\r\n\r\n      case 'minute':\r\n        return date[minutesGetterName(isUTC)]();\r\n\r\n      case 'second':\r\n        return date[secondsGetterName(isUTC)]();\r\n\r\n      case 'millisecond':\r\n        return date[millisecondsGetterName(isUTC)]();\r\n    }\r\n  }\r\n\r\n  function fullYearGetterName(isUTC) {\r\n    return isUTC ? 'getUTCFullYear' : 'getFullYear';\r\n  }\r\n\r\n  function monthGetterName(isUTC) {\r\n    return isUTC ? 'getUTCMonth' : 'getMonth';\r\n  }\r\n\r\n  function dateGetterName(isUTC) {\r\n    return isUTC ? 'getUTCDate' : 'getDate';\r\n  }\r\n\r\n  function hoursGetterName(isUTC) {\r\n    return isUTC ? 'getUTCHours' : 'getHours';\r\n  }\r\n\r\n  function minutesGetterName(isUTC) {\r\n    return isUTC ? 'getUTCMinutes' : 'getMinutes';\r\n  }\r\n\r\n  function secondsGetterName(isUTC) {\r\n    return isUTC ? 'getUTCSeconds' : 'getSeconds';\r\n  }\r\n\r\n  function millisecondsGetterName(isUTC) {\r\n    return isUTC ? 'getUTCSeconds' : 'getSeconds';\r\n  }\r\n\r\n  function fullYearSetterName(isUTC) {\r\n    return isUTC ? 'setUTCFullYear' : 'setFullYear';\r\n  }\r\n\r\n  function monthSetterName(isUTC) {\r\n    return isUTC ? 'setUTCMonth' : 'setMonth';\r\n  }\r\n\r\n  function dateSetterName(isUTC) {\r\n    return isUTC ? 'setUTCDate' : 'setDate';\r\n  }\r\n\r\n  function hoursSetterName(isUTC) {\r\n    return isUTC ? 'setUTCHours' : 'setHours';\r\n  }\r\n\r\n  function minutesSetterName(isUTC) {\r\n    return isUTC ? 'setUTCMinutes' : 'setMinutes';\r\n  }\r\n\r\n  function secondsSetterName(isUTC) {\r\n    return isUTC ? 'setUTCSeconds' : 'setSeconds';\r\n  }\r\n\r\n  function millisecondsSetterName(isUTC) {\r\n    return isUTC ? 'setUTCSeconds' : 'setSeconds';\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function getTextRect(text, font, align, verticalAlign, padding, rich, truncate, lineHeight) {\r\n    deprecateLog('getTextRect is deprecated.');\r\n    var textEl = new ZRText({\r\n      style: {\r\n        text: text,\r\n        font: font,\r\n        align: align,\r\n        verticalAlign: verticalAlign,\r\n        padding: padding,\r\n        rich: rich,\r\n        overflow: truncate ? 'truncate' : null,\r\n        lineHeight: lineHeight\r\n      }\r\n    });\r\n    return textEl.getBoundingRect();\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Add a comma each three digit.\r\n   */\r\n\r\n\r\n  function addCommas(x) {\r\n    if (!isNumeric(x)) {\r\n      return isString(x) ? x : '-';\r\n    }\r\n\r\n    var parts = (x + '').split('.');\r\n    return parts[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (parts.length > 1 ? '.' + parts[1] : '');\r\n  }\r\n\r\n  function toCamelCase(str, upperCaseFirst) {\r\n    str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\r\n      return group1.toUpperCase();\r\n    });\r\n\r\n    if (upperCaseFirst && str) {\r\n      str = str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n  var normalizeCssArray$1 = normalizeCssArray;\r\n  var replaceReg = /([&<>\"'])/g;\r\n  var replaceMap = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    '\"': '&quot;',\r\n    '\\'': '&#39;'\r\n  };\r\n\r\n  function encodeHTML(source) {\r\n    return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\r\n      return replaceMap[c];\r\n    });\r\n  }\r\n  /**\r\n   * Make value user readable for tooltip and label.\r\n   * \"User readable\":\r\n   *     Try to not print programmer-specific text like NaN, Infinity, null, undefined.\r\n   *     Avoid to display an empty string, which users can not recognize there is\r\n   *     a value and it might look like a bug.\r\n   */\r\n\r\n\r\n  function makeValueReadable(value, valueType, useUTC) {\r\n    var USER_READABLE_DEFUALT_TIME_PATTERN = 'yyyy-MM-dd hh:mm:ss';\r\n\r\n    function stringToUserReadable(str) {\r\n      return str && trim(str) ? str : '-';\r\n    }\r\n\r\n    function isNumberUserReadable(num) {\r\n      return !!(num != null && !isNaN(num) && isFinite(num));\r\n    }\r\n\r\n    var isTypeTime = valueType === 'time';\r\n    var isValueDate = value instanceof Date;\r\n\r\n    if (isTypeTime || isValueDate) {\r\n      var date = isTypeTime ? parseDate(value) : value;\r\n\r\n      if (!isNaN(+date)) {\r\n        return format(date, USER_READABLE_DEFUALT_TIME_PATTERN, useUTC);\r\n      } else if (isValueDate) {\r\n        return '-';\r\n      } // In other cases, continue to try to display the value in the following code.\r\n\r\n    }\r\n\r\n    if (valueType === 'ordinal') {\r\n      return isStringSafe(value) ? stringToUserReadable(value) : isNumber(value) ? isNumberUserReadable(value) ? value + '' : '-' : '-';\r\n    } // By default.\r\n\r\n\r\n    var numericResult = numericToNumber(value);\r\n    return isNumberUserReadable(numericResult) ? addCommas(numericResult) : isStringSafe(value) ? stringToUserReadable(value) : '-';\r\n  }\r\n\r\n  var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\r\n\r\n  var wrapVar = function (varName, seriesIdx) {\r\n    return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\r\n  };\r\n  /**\r\n   * Template formatter\r\n   * @param {Array.<Object>|Object} paramsList\r\n   */\r\n\r\n\r\n  function formatTpl(tpl, paramsList, encode) {\r\n    if (!isArray(paramsList)) {\r\n      paramsList = [paramsList];\r\n    }\r\n\r\n    var seriesLen = paramsList.length;\r\n\r\n    if (!seriesLen) {\r\n      return '';\r\n    }\r\n\r\n    var $vars = paramsList[0].$vars || [];\r\n\r\n    for (var i = 0; i < $vars.length; i++) {\r\n      var alias = TPL_VAR_ALIAS[i];\r\n      tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\r\n    }\r\n\r\n    for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\r\n      for (var k = 0; k < $vars.length; k++) {\r\n        var val = paramsList[seriesIdx][$vars[k]];\r\n        tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\r\n      }\r\n    }\r\n\r\n    return tpl;\r\n  }\r\n  /**\r\n   * simple Template formatter\r\n   */\r\n\r\n\r\n  function getTooltipMarker(inOpt, extraCssText) {\r\n    var opt = isString(inOpt) ? {\r\n      color: inOpt,\r\n      extraCssText: extraCssText\r\n    } : inOpt || {};\r\n    var color = opt.color;\r\n    var type = opt.type;\r\n    extraCssText = opt.extraCssText;\r\n    var renderMode = opt.renderMode || 'html';\r\n\r\n    if (!color) {\r\n      return '';\r\n    }\r\n\r\n    if (renderMode === 'html') {\r\n      return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' // Only support string\r\n      + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:4px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\r\n    } else {\r\n      // Should better not to auto generate style name by auto-increment number here.\r\n      // Because this util is usually called in tooltip formatter, which is probably\r\n      // called repeatly when mouse move and the auto-increment number increases fast.\r\n      // Users can make their own style name by theirselves, make it unique and readable.\r\n      var markerId = opt.markerId || 'markerX';\r\n      return {\r\n        renderMode: renderMode,\r\n        content: '{' + markerId + '|}  ',\r\n        style: type === 'subItem' ? {\r\n          width: 4,\r\n          height: 4,\r\n          borderRadius: 2,\r\n          backgroundColor: color\r\n        } : {\r\n          width: 10,\r\n          height: 10,\r\n          borderRadius: 5,\r\n          backgroundColor: color\r\n        }\r\n      };\r\n    }\r\n  }\r\n  /**\r\n   * @deprecated Use `time/format` instead.\r\n   * ISO Date format\r\n   * @param {string} tpl\r\n   * @param {number} value\r\n   * @param {boolean} [isUTC=false] Default in local time.\r\n   *           see `module:echarts/scale/Time`\r\n   *           and `module:echarts/util/number#parseDate`.\r\n   * @inner\r\n   */\r\n\r\n\r\n  function formatTime(tpl, value, isUTC) {\r\n    {\r\n      deprecateReplaceLog('echarts.format.formatTime', 'echarts.time.format');\r\n    }\r\n\r\n    if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\r\n      tpl = 'MM-dd\\nyyyy';\r\n    }\r\n\r\n    var date = parseDate(value);\r\n    var utc = isUTC ? 'UTC' : '';\r\n    var y = date['get' + utc + 'FullYear']();\r\n    var M = date['get' + utc + 'Month']() + 1;\r\n    var d = date['get' + utc + 'Date']();\r\n    var h = date['get' + utc + 'Hours']();\r\n    var m = date['get' + utc + 'Minutes']();\r\n    var s = date['get' + utc + 'Seconds']();\r\n    var S = date['get' + utc + 'Milliseconds']();\r\n    tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100 + '').replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\r\n    return tpl;\r\n  }\r\n  /**\r\n   * Capital first\r\n   * @param {string} str\r\n   * @return {string}\r\n   */\r\n\r\n\r\n  function capitalFirst(str) {\r\n    return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\r\n  }\r\n  /**\r\n   * @return Never be null/undefined.\r\n   */\r\n\r\n\r\n  function convertToColorString(color, defaultColor) {\r\n    defaultColor = defaultColor || 'transparent';\r\n    return isString(color) ? color : isObject$1(color) ? color.colorStops && (color.colorStops[0] || {}).color || defaultColor : defaultColor;\r\n  }\r\n  /**\r\n   * open new tab\r\n   * @param link url\r\n   * @param target blank or self\r\n   */\r\n\r\n\r\n  function windowOpen(link, target) {\r\n    /* global window */\r\n    if (target === '_blank' || target === 'blank') {\r\n      var blank = window.open();\r\n      blank.opener = null;\r\n      blank.location.href = link;\r\n    } else {\r\n      window.open(link, target);\r\n    }\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n  // Layout helpers for each component positioning\r\n\r\n\r\n  var each$2 = each$1;\r\n  /**\r\n   * @public\r\n   */\r\n\r\n  var LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\r\n  /**\r\n   * @public\r\n   */\r\n\r\n  var HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\r\n\r\n  function boxLayout(orient, group, gap, maxWidth, maxHeight) {\r\n    var x = 0;\r\n    var y = 0;\r\n\r\n    if (maxWidth == null) {\r\n      maxWidth = Infinity;\r\n    }\r\n\r\n    if (maxHeight == null) {\r\n      maxHeight = Infinity;\r\n    }\r\n\r\n    var currentLineMaxSize = 0;\r\n    group.eachChild(function (child, idx) {\r\n      var rect = child.getBoundingRect();\r\n      var nextChild = group.childAt(idx + 1);\r\n      var nextChildRect = nextChild && nextChild.getBoundingRect();\r\n      var nextX;\r\n      var nextY;\r\n\r\n      if (orient === 'horizontal') {\r\n        var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\r\n        nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\r\n        // FIXME compare before adding gap?\r\n\r\n        if (nextX > maxWidth || child.newline) {\r\n          x = 0;\r\n          nextX = moveX;\r\n          y += currentLineMaxSize + gap;\r\n          currentLineMaxSize = rect.height;\r\n        } else {\r\n          // FIXME: consider rect.y is not `0`?\r\n          currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\r\n        }\r\n      } else {\r\n        var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\r\n        nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\r\n\r\n        if (nextY > maxHeight || child.newline) {\r\n          x += currentLineMaxSize + gap;\r\n          y = 0;\r\n          nextY = moveY;\r\n          currentLineMaxSize = rect.width;\r\n        } else {\r\n          currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\r\n        }\r\n      }\r\n\r\n      if (child.newline) {\r\n        return;\r\n      }\r\n\r\n      child.x = x;\r\n      child.y = y;\r\n      child.markRedraw();\r\n      orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\r\n    });\r\n  }\r\n  /**\r\n   * VBox or HBox layouting\r\n   * @param {string} orient\r\n   * @param {module:zrender/graphic/Group} group\r\n   * @param {number} gap\r\n   * @param {number} [width=Infinity]\r\n   * @param {number} [height=Infinity]\r\n   */\r\n\r\n\r\n  var box = boxLayout;\r\n  /**\r\n   * VBox layouting\r\n   * @param {module:zrender/graphic/Group} group\r\n   * @param {number} gap\r\n   * @param {number} [width=Infinity]\r\n   * @param {number} [height=Infinity]\r\n   */\r\n\r\n  var vbox = curry(boxLayout, 'vertical');\r\n  /**\r\n   * HBox layouting\r\n   * @param {module:zrender/graphic/Group} group\r\n   * @param {number} gap\r\n   * @param {number} [width=Infinity]\r\n   * @param {number} [height=Infinity]\r\n   */\r\n\r\n  var hbox = curry(boxLayout, 'horizontal');\r\n  /**\r\n   * If x or x2 is not specified or 'center' 'left' 'right',\r\n   * the width would be as long as possible.\r\n   * If y or y2 is not specified or 'middle' 'top' 'bottom',\r\n   * the height would be as long as possible.\r\n   */\r\n\r\n  /**\r\n   * Parse position info.\r\n   */\r\n\r\n  function getLayoutRect(positionInfo, containerRect, margin) {\r\n    margin = normalizeCssArray$1(margin || 0);\r\n    var containerWidth = containerRect.width;\r\n    var containerHeight = containerRect.height;\r\n    var left = parsePercent$1(positionInfo.left, containerWidth);\r\n    var top = parsePercent$1(positionInfo.top, containerHeight);\r\n    var right = parsePercent$1(positionInfo.right, containerWidth);\r\n    var bottom = parsePercent$1(positionInfo.bottom, containerHeight);\r\n    var width = parsePercent$1(positionInfo.width, containerWidth);\r\n    var height = parsePercent$1(positionInfo.height, containerHeight);\r\n    var verticalMargin = margin[2] + margin[0];\r\n    var horizontalMargin = margin[1] + margin[3];\r\n    var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\r\n\r\n    if (isNaN(width)) {\r\n      width = containerWidth - right - horizontalMargin - left;\r\n    }\r\n\r\n    if (isNaN(height)) {\r\n      height = containerHeight - bottom - verticalMargin - top;\r\n    }\r\n\r\n    if (aspect != null) {\r\n      // If width and height are not given\r\n      // 1. Graph should not exceeds the container\r\n      // 2. Aspect must be keeped\r\n      // 3. Graph should take the space as more as possible\r\n      // FIXME\r\n      // Margin is not considered, because there is no case that both\r\n      // using margin and aspect so far.\r\n      if (isNaN(width) && isNaN(height)) {\r\n        if (aspect > containerWidth / containerHeight) {\r\n          width = containerWidth * 0.8;\r\n        } else {\r\n          height = containerHeight * 0.8;\r\n        }\r\n      } // Calculate width or height with given aspect\r\n\r\n\r\n      if (isNaN(width)) {\r\n        width = aspect * height;\r\n      }\r\n\r\n      if (isNaN(height)) {\r\n        height = width / aspect;\r\n      }\r\n    } // If left is not specified, calculate left from right and width\r\n\r\n\r\n    if (isNaN(left)) {\r\n      left = containerWidth - right - width - horizontalMargin;\r\n    }\r\n\r\n    if (isNaN(top)) {\r\n      top = containerHeight - bottom - height - verticalMargin;\r\n    } // Align left and top\r\n\r\n\r\n    switch (positionInfo.left || positionInfo.right) {\r\n      case 'center':\r\n        left = containerWidth / 2 - width / 2 - margin[3];\r\n        break;\r\n\r\n      case 'right':\r\n        left = containerWidth - width - horizontalMargin;\r\n        break;\r\n    }\r\n\r\n    switch (positionInfo.top || positionInfo.bottom) {\r\n      case 'middle':\r\n      case 'center':\r\n        top = containerHeight / 2 - height / 2 - margin[0];\r\n        break;\r\n\r\n      case 'bottom':\r\n        top = containerHeight - height - verticalMargin;\r\n        break;\r\n    } // If something is wrong and left, top, width, height are calculated as NaN\r\n\r\n\r\n    left = left || 0;\r\n    top = top || 0;\r\n\r\n    if (isNaN(width)) {\r\n      // Width may be NaN if only one value is given except width\r\n      width = containerWidth - horizontalMargin - left - (right || 0);\r\n    }\r\n\r\n    if (isNaN(height)) {\r\n      // Height may be NaN if only one value is given except height\r\n      height = containerHeight - verticalMargin - top - (bottom || 0);\r\n    }\r\n\r\n    var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\r\n    rect.margin = margin;\r\n    return rect;\r\n  }\r\n  /**\r\n   * Position a zr element in viewport\r\n   *  Group position is specified by either\r\n   *  {left, top}, {right, bottom}\r\n   *  If all properties exists, right and bottom will be igonred.\r\n   *\r\n   * Logic:\r\n   *     1. Scale (against origin point in parent coord)\r\n   *     2. Rotate (against origin point in parent coord)\r\n   *     3. Traslate (with el.position by this method)\r\n   * So this method only fixes the last step 'Traslate', which does not affect\r\n   * scaling and rotating.\r\n   *\r\n   * If be called repeatly with the same input el, the same result will be gotten.\r\n   *\r\n   * @param el Should have `getBoundingRect` method.\r\n   * @param positionInfo\r\n   * @param positionInfo.left\r\n   * @param positionInfo.top\r\n   * @param positionInfo.right\r\n   * @param positionInfo.bottom\r\n   * @param positionInfo.width Only for opt.boundingModel: 'raw'\r\n   * @param positionInfo.height Only for opt.boundingModel: 'raw'\r\n   * @param containerRect\r\n   * @param margin\r\n   * @param opt\r\n   * @param opt.hv Only horizontal or only vertical. Default to be [1, 1]\r\n   * @param opt.boundingMode\r\n   *        Specify how to calculate boundingRect when locating.\r\n   *        'all': Position the boundingRect that is transformed and uioned\r\n   *               both itself and its descendants.\r\n   *               This mode simplies confine the elements in the bounding\r\n   *               of their container (e.g., using 'right: 0').\r\n   *        'raw': Position the boundingRect that is not transformed and only itself.\r\n   *               This mode is useful when you want a element can overflow its\r\n   *               container. (Consider a rotated circle needs to be located in a corner.)\r\n   *               In this mode positionInfo.width/height can only be number.\r\n   */\r\n\r\n\r\n  function positionElement(el, positionInfo, containerRect, margin, opt) {\r\n    var h = !opt || !opt.hv || opt.hv[0];\r\n    var v = !opt || !opt.hv || opt.hv[1];\r\n    var boundingMode = opt && opt.boundingMode || 'all';\r\n\r\n    if (!h && !v) {\r\n      return;\r\n    }\r\n\r\n    var rect;\r\n\r\n    if (boundingMode === 'raw') {\r\n      rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\r\n    } else {\r\n      rect = el.getBoundingRect();\r\n\r\n      if (el.needLocalTransform()) {\r\n        var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\r\n        // which should not be modified.\r\n\r\n        rect = rect.clone();\r\n        rect.applyTransform(transform);\r\n      }\r\n    } // The real width and height can not be specified but calculated by the given el.\r\n\r\n\r\n    var layoutRect = getLayoutRect(defaults({\r\n      width: rect.width,\r\n      height: rect.height\r\n    }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\r\n    // (see zrender/core/Transformable#getLocalTransform),\r\n    // we can just only modify el.position to get final result.\r\n\r\n    var dx = h ? layoutRect.x - rect.x : 0;\r\n    var dy = v ? layoutRect.y - rect.y : 0;\r\n\r\n    if (boundingMode === 'raw') {\r\n      el.x = dx;\r\n      el.y = dy;\r\n    } else {\r\n      el.x += dx;\r\n      el.y += dy;\r\n    }\r\n\r\n    el.markRedraw();\r\n  }\r\n  /**\r\n   * @param option Contains some of the properties in HV_NAMES.\r\n   * @param hvIdx 0: horizontal; 1: vertical.\r\n   */\r\n\r\n\r\n  function fetchLayoutMode(ins) {\r\n    var layoutMode = ins.layoutMode || ins.constructor.layoutMode;\r\n    return isObject$1(layoutMode) ? layoutMode : layoutMode ? {\r\n      type: layoutMode\r\n    } : null;\r\n  }\r\n  /**\r\n   * Consider Case:\r\n   * When default option has {left: 0, width: 100}, and we set {right: 0}\r\n   * through setOption or media query, using normal zrUtil.merge will cause\r\n   * {right: 0} does not take effect.\r\n   *\r\n   * @example\r\n   * ComponentModel.extend({\r\n   *     init: function () {\r\n   *         ...\r\n   *         let inputPositionParams = layout.getLayoutParams(option);\r\n   *         this.mergeOption(inputPositionParams);\r\n   *     },\r\n   *     mergeOption: function (newOption) {\r\n   *         newOption && zrUtil.merge(thisOption, newOption, true);\r\n   *         layout.mergeLayoutParam(thisOption, newOption);\r\n   *     }\r\n   * });\r\n   *\r\n   * @param targetOption\r\n   * @param newOption\r\n   * @param opt\r\n   */\r\n\r\n\r\n  function mergeLayoutParam(targetOption, newOption, opt) {\r\n    var ignoreSize = opt && opt.ignoreSize;\r\n    !isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\r\n    var hResult = merge$$1(HV_NAMES[0], 0);\r\n    var vResult = merge$$1(HV_NAMES[1], 1);\r\n    copy(HV_NAMES[0], targetOption, hResult);\r\n    copy(HV_NAMES[1], targetOption, vResult);\r\n\r\n    function merge$$1(names, hvIdx) {\r\n      var newParams = {};\r\n      var newValueCount = 0;\r\n      var merged = {};\r\n      var mergedValueCount = 0;\r\n      var enoughParamNumber = 2;\r\n      each$2(names, function (name) {\r\n        merged[name] = targetOption[name];\r\n      });\r\n      each$2(names, function (name) {\r\n        // Consider case: newOption.width is null, which is\r\n        // set by user for removing width setting.\r\n        hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\r\n        hasValue(newParams, name) && newValueCount++;\r\n        hasValue(merged, name) && mergedValueCount++;\r\n      });\r\n\r\n      if (ignoreSize[hvIdx]) {\r\n        // Only one of left/right is premitted to exist.\r\n        if (hasValue(newOption, names[1])) {\r\n          merged[names[2]] = null;\r\n        } else if (hasValue(newOption, names[2])) {\r\n          merged[names[1]] = null;\r\n        }\r\n\r\n        return merged;\r\n      } // Case: newOption: {width: ..., right: ...},\r\n      // or targetOption: {right: ...} and newOption: {width: ...},\r\n      // There is no conflict when merged only has params count\r\n      // little than enoughParamNumber.\r\n\r\n\r\n      if (mergedValueCount === enoughParamNumber || !newValueCount) {\r\n        return merged;\r\n      } // Case: newOption: {width: ..., right: ...},\r\n      // Than we can make sure user only want those two, and ignore\r\n      // all origin params in targetOption.\r\n      else if (newValueCount >= enoughParamNumber) {\r\n          return newParams;\r\n        } else {\r\n          // Chose another param from targetOption by priority.\r\n          for (var i = 0; i < names.length; i++) {\r\n            var name_1 = names[i];\r\n\r\n            if (!hasProp(newParams, name_1) && hasProp(targetOption, name_1)) {\r\n              newParams[name_1] = targetOption[name_1];\r\n              break;\r\n            }\r\n          }\r\n\r\n          return newParams;\r\n        }\r\n    }\r\n\r\n    function hasProp(obj, name) {\r\n      return obj.hasOwnProperty(name);\r\n    }\r\n\r\n    function hasValue(obj, name) {\r\n      return obj[name] != null && obj[name] !== 'auto';\r\n    }\r\n\r\n    function copy(names, target, source) {\r\n      each$2(names, function (name) {\r\n        target[name] = source[name];\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\r\n   */\r\n\r\n\r\n  function getLayoutParams(source) {\r\n    return copyLayoutParams({}, source);\r\n  }\r\n  /**\r\n   * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\r\n   * @param {Object} source\r\n   * @return {Object} Result contains those props.\r\n   */\r\n\r\n\r\n  function copyLayoutParams(target, source) {\r\n    source && target && each$2(LOCATION_PARAMS, function (name) {\r\n      source.hasOwnProperty(name) && (target[name] = source[name]);\r\n    });\r\n    return target;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var inner = makeInner();\r\n\r\n  var ComponentModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(ComponentModel, _super);\r\n\r\n    function ComponentModel(option, parentModel, ecModel) {\r\n      var _this = _super.call(this, option, parentModel, ecModel) || this;\r\n\r\n      _this.uid = getUID('ec_cpt_model');\r\n      return _this;\r\n    }\r\n\r\n    ComponentModel.prototype.init = function (option, parentModel, ecModel) {\r\n      this.mergeDefaultAndTheme(option, ecModel);\r\n    };\r\n\r\n    ComponentModel.prototype.mergeDefaultAndTheme = function (option, ecModel) {\r\n      var layoutMode = fetchLayoutMode(this);\r\n      var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\r\n      var themeModel = ecModel.getTheme();\r\n      merge(option, themeModel.get(this.mainType));\r\n      merge(option, this.getDefaultOption());\r\n\r\n      if (layoutMode) {\r\n        mergeLayoutParam(option, inputPositionParams, layoutMode);\r\n      }\r\n    };\r\n\r\n    ComponentModel.prototype.mergeOption = function (option, ecModel) {\r\n      merge(this.option, option, true);\r\n      var layoutMode = fetchLayoutMode(this);\r\n\r\n      if (layoutMode) {\r\n        mergeLayoutParam(this.option, option, layoutMode);\r\n      }\r\n    };\r\n    /**\r\n     * Called immediately after `init` or `mergeOption` of this instance called.\r\n     */\r\n\r\n\r\n    ComponentModel.prototype.optionUpdated = function (newCptOption, isInit) {};\r\n    /**\r\n     * [How to declare defaultOption]:\r\n     *\r\n     * (A) If using class declaration in typescript (since echarts 5):\r\n     * ```ts\r\n     * import {ComponentOption} from '../model/option';\r\n     * export interface XxxOption extends ComponentOption {\r\n     *     aaa: number\r\n     * }\r\n     * export class XxxModel extends Component {\r\n     *     static type = 'xxx';\r\n     *     static defaultOption: XxxOption = {\r\n     *         aaa: 123\r\n     *     }\r\n     * }\r\n     * Component.registerClass(XxxModel);\r\n     * ```\r\n     * ```ts\r\n     * import {inheritDefaultOption} from '../util/component';\r\n     * import {XxxModel, XxxOption} from './XxxModel';\r\n     * export interface XxxSubOption extends XxxOption {\r\n     *     bbb: number\r\n     * }\r\n     * class XxxSubModel extends XxxModel {\r\n     *     static defaultOption: XxxSubOption = inheritDefaultOption(XxxModel.defaultOption, {\r\n     *         bbb: 456\r\n     *     })\r\n     *     fn() {\r\n     *         let opt = this.getDefaultOption();\r\n     *         // opt is {aaa: 123, bbb: 456}\r\n     *     }\r\n     * }\r\n     * ```\r\n     *\r\n     * (B) If using class extend (previous approach in echarts 3 & 4):\r\n     * ```js\r\n     * let XxxComponent = Component.extend({\r\n     *     defaultOption: {\r\n     *         xx: 123\r\n     *     }\r\n     * })\r\n     * ```\r\n     * ```js\r\n     * let XxxSubComponent = XxxComponent.extend({\r\n     *     defaultOption: {\r\n     *         yy: 456\r\n     *     },\r\n     *     fn: function () {\r\n     *         let opt = this.getDefaultOption();\r\n     *         // opt is {xx: 123, yy: 456}\r\n     *     }\r\n     * })\r\n     * ```\r\n     */\r\n\r\n\r\n    ComponentModel.prototype.getDefaultOption = function () {\r\n      var ctor = this.constructor; // If using class declaration, it is different to travel super class\r\n      // in legacy env and auto merge defaultOption. So if using class\r\n      // declaration, defaultOption should be merged manually.\r\n\r\n      if (!isExtendedClass(ctor)) {\r\n        // When using ts class, defaultOption must be declared as static.\r\n        return ctor.defaultOption;\r\n      } // FIXME: remove this approach?\r\n\r\n\r\n      var fields = inner(this);\r\n\r\n      if (!fields.defaultOption) {\r\n        var optList = [];\r\n        var clz = ctor;\r\n\r\n        while (clz) {\r\n          var opt = clz.prototype.defaultOption;\r\n          opt && optList.push(opt);\r\n          clz = clz.superClass;\r\n        }\r\n\r\n        var defaultOption = {};\r\n\r\n        for (var i = optList.length - 1; i >= 0; i--) {\r\n          defaultOption = merge(defaultOption, optList[i], true);\r\n        }\r\n\r\n        fields.defaultOption = defaultOption;\r\n      }\r\n\r\n      return fields.defaultOption;\r\n    };\r\n    /**\r\n     * Notice: always force to input param `useDefault` in case that forget to consider it.\r\n     * The same behavior as `modelUtil.parseFinder`.\r\n     *\r\n     * @param useDefault In many cases like series refer axis and axis refer grid,\r\n     *        If axis index / axis id not specified, use the first target as default.\r\n     *        In other cases like dataZoom refer axis, if not specified, measn no refer.\r\n     */\r\n\r\n\r\n    ComponentModel.prototype.getReferringComponents = function (mainType, opt) {\r\n      var indexKey = mainType + 'Index';\r\n      var idKey = mainType + 'Id';\r\n      return queryReferringComponents(this.ecModel, mainType, {\r\n        index: this.get(indexKey, true),\r\n        id: this.get(idKey, true)\r\n      }, opt);\r\n    };\r\n\r\n    ComponentModel.prototype.getBoxLayoutParams = function () {\r\n      // Consider itself having box layout configs.\r\n      var boxLayoutModel = this;\r\n      return {\r\n        left: boxLayoutModel.get('left'),\r\n        top: boxLayoutModel.get('top'),\r\n        right: boxLayoutModel.get('right'),\r\n        bottom: boxLayoutModel.get('bottom'),\r\n        width: boxLayoutModel.get('width'),\r\n        height: boxLayoutModel.get('height')\r\n      };\r\n    };\r\n\r\n    ComponentModel.protoInitialize = function () {\r\n      var proto = ComponentModel.prototype;\r\n      proto.type = 'component';\r\n      proto.id = '';\r\n      proto.name = '';\r\n      proto.mainType = '';\r\n      proto.subType = '';\r\n      proto.componentIndex = 0;\r\n    }();\r\n\r\n    return ComponentModel;\r\n  }(Model);\r\n\r\n  mountExtend(ComponentModel, Model);\r\n  enableClassManagement(ComponentModel);\r\n  enableSubTypeDefaulter(ComponentModel);\r\n  enableTopologicalTravel(ComponentModel, getDependencies);\r\n\r\n  function getDependencies(componentType) {\r\n    var deps = [];\r\n    each$1(ComponentModel.getClassesByMainType(componentType), function (clz) {\r\n      deps = deps.concat(clz.dependencies || clz.prototype.dependencies || []);\r\n    }); // Ensure main type.\r\n\r\n    deps = map(deps, function (type) {\r\n      return parseClassType(type).main;\r\n    }); // Hack dataset for convenience.\r\n\r\n    if (componentType !== 'dataset' && indexOf$1(deps, 'dataset') <= 0) {\r\n      deps.unshift('dataset');\r\n    }\r\n\r\n    return deps;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var platform = ''; // Navigator not exists in node\r\n\r\n  if (typeof navigator !== 'undefined') {\r\n    /* global navigator */\r\n    platform = navigator.platform || '';\r\n  }\r\n\r\n  var decalColor = 'rgba(0, 0, 0, 0.2)';\r\n  var globalDefault = {\r\n    darkMode: 'auto',\r\n    // backgroundColor: 'rgba(0,0,0,0)',\r\n    // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\r\n    // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\r\n    // Light colors:\r\n    // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\r\n    // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\r\n    // Dark colors:\r\n    // color: [\r\n    //     '#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83',\r\n    //     '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'\r\n    // ],\r\n    color: [// '#51689b', '#ce5c5c', '#fbc357', '#8fbf8f', '#659d84', '#fb8e6a', '#c77288', '#786090', '#91c4c5', '#6890ba'\r\n    '#5470c6', '#91cc75', '#fac858', '#ee6666', '#73c0de', '#3ba272', '#fc8452', '#9a60b4', '#ea7ccc'],\r\n    gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\r\n    aria: {\r\n      decal: {\r\n        decals: [{\r\n          color: decalColor,\r\n          dashArrayX: [1, 0],\r\n          dashArrayY: [2, 5],\r\n          symbolSize: 1,\r\n          rotation: Math.PI / 6\r\n        }, {\r\n          color: decalColor,\r\n          symbol: 'circle',\r\n          dashArrayX: [[8, 8], [0, 8, 8, 0]],\r\n          dashArrayY: [6, 0],\r\n          symbolSize: 0.8\r\n        }, {\r\n          color: decalColor,\r\n          dashArrayX: [1, 0],\r\n          dashArrayY: [4, 3],\r\n          rotation: -Math.PI / 4\r\n        }, {\r\n          color: decalColor,\r\n          dashArrayX: [[6, 6], [0, 6, 6, 0]],\r\n          dashArrayY: [6, 0]\r\n        }, {\r\n          color: decalColor,\r\n          dashArrayX: [[1, 0], [1, 6]],\r\n          dashArrayY: [1, 0, 6, 0],\r\n          rotation: Math.PI / 4\r\n        }, {\r\n          color: decalColor,\r\n          symbol: 'triangle',\r\n          dashArrayX: [[9, 9], [0, 9, 9, 0]],\r\n          dashArrayY: [7, 2],\r\n          symbolSize: 0.75\r\n        }]\r\n      }\r\n    },\r\n    // If xAxis and yAxis declared, grid is created by default.\r\n    // grid: {},\r\n    textStyle: {\r\n      // color: '#000',\r\n      // decoration: 'none',\r\n      // PENDING\r\n      fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\r\n      // fontFamily: 'Arial, Verdana, sans-serif',\r\n      fontSize: 12,\r\n      fontStyle: 'normal',\r\n      fontWeight: 'normal'\r\n    },\r\n    // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\r\n    // Default is source-over\r\n    blendMode: null,\r\n    stateAnimation: {\r\n      duration: 300,\r\n      easing: 'cubicOut'\r\n    },\r\n    animation: 'auto',\r\n    animationDuration: 1000,\r\n    animationDurationUpdate: 500,\r\n    animationEasing: 'cubicInOut',\r\n    animationEasingUpdate: 'cubicInOut',\r\n    animationThreshold: 2000,\r\n    // Configuration for progressive/incremental rendering\r\n    progressiveThreshold: 3000,\r\n    progressive: 400,\r\n    // Threshold of if use single hover layer to optimize.\r\n    // It is recommended that `hoverLayerThreshold` is equivalent to or less than\r\n    // `progressiveThreshold`, otherwise hover will cause restart of progressive,\r\n    // which is unexpected.\r\n    // see example <echarts/test/heatmap-large.html>.\r\n    hoverLayerThreshold: 3000,\r\n    // See: module:echarts/scale/Time\r\n    useUTC: false\r\n  };\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var VISUAL_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\r\n  var SOURCE_FORMAT_ORIGINAL = 'original';\r\n  var SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\r\n  var SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\r\n  var SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\r\n  var SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\r\n  var SOURCE_FORMAT_UNKNOWN = 'unknown';\r\n  var SERIES_LAYOUT_BY_COLUMN = 'column';\r\n  var SERIES_LAYOUT_BY_ROW = 'row';\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var BE_ORDINAL = {\r\n    Must: 1,\r\n    Might: 2,\r\n    Not: 3 // Other cases\r\n\r\n  };\r\n  var innerGlobalModel = makeInner();\r\n  /**\r\n   * MUST be called before mergeOption of all series.\r\n   */\r\n\r\n  function resetSourceDefaulter(ecModel) {\r\n    // `datasetMap` is used to make default encode.\r\n    innerGlobalModel(ecModel).datasetMap = createHashMap();\r\n  }\r\n  /**\r\n   * [The strategy of the arrengment of data dimensions for dataset]:\r\n   * \"value way\": all axes are non-category axes. So series one by one take\r\n   *     several (the number is coordSysDims.length) dimensions from dataset.\r\n   *     The result of data arrengment of data dimensions like:\r\n   *     | ser0_x | ser0_y | ser1_x | ser1_y | ser2_x | ser2_y |\r\n   * \"category way\": at least one axis is category axis. So the the first data\r\n   *     dimension is always mapped to the first category axis and shared by\r\n   *     all of the series. The other data dimensions are taken by series like\r\n   *     \"value way\" does.\r\n   *     The result of data arrengment of data dimensions like:\r\n   *     | ser_shared_x | ser0_y | ser1_y | ser2_y |\r\n   *\r\n   * @return encode Never be `null/undefined`.\r\n   */\r\n\r\n\r\n  function makeSeriesEncodeForAxisCoordSys(coordDimensions, seriesModel, source) {\r\n    var encode = {};\r\n    var datasetModel = querySeriesUpstreamDatasetModel(seriesModel); // Currently only make default when using dataset, util more reqirements occur.\r\n\r\n    if (!datasetModel || !coordDimensions) {\r\n      return encode;\r\n    }\r\n\r\n    var encodeItemName = [];\r\n    var encodeSeriesName = [];\r\n    var ecModel = seriesModel.ecModel;\r\n    var datasetMap = innerGlobalModel(ecModel).datasetMap;\r\n    var key = datasetModel.uid + '_' + source.seriesLayoutBy;\r\n    var baseCategoryDimIndex;\r\n    var categoryWayValueDimStart;\r\n    coordDimensions = coordDimensions.slice();\r\n    each$1(coordDimensions, function (coordDimInfoLoose, coordDimIdx) {\r\n      var coordDimInfo = isObject$1(coordDimInfoLoose) ? coordDimInfoLoose : coordDimensions[coordDimIdx] = {\r\n        name: coordDimInfoLoose\r\n      };\r\n\r\n      if (coordDimInfo.type === 'ordinal' && baseCategoryDimIndex == null) {\r\n        baseCategoryDimIndex = coordDimIdx;\r\n        categoryWayValueDimStart = getDataDimCountOnCoordDim(coordDimInfo);\r\n      }\r\n\r\n      encode[coordDimInfo.name] = [];\r\n    });\r\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\r\n      categoryWayDim: categoryWayValueDimStart,\r\n      valueWayDim: 0\r\n    }); // TODO\r\n    // Auto detect first time axis and do arrangement.\r\n\r\n    each$1(coordDimensions, function (coordDimInfo, coordDimIdx) {\r\n      var coordDimName = coordDimInfo.name;\r\n      var count = getDataDimCountOnCoordDim(coordDimInfo); // In value way.\r\n\r\n      if (baseCategoryDimIndex == null) {\r\n        var start = datasetRecord.valueWayDim;\r\n        pushDim(encode[coordDimName], start, count);\r\n        pushDim(encodeSeriesName, start, count);\r\n        datasetRecord.valueWayDim += count; // ??? TODO give a better default series name rule?\r\n        // especially when encode x y specified.\r\n        // consider: when mutiple series share one dimension\r\n        // category axis, series name should better use\r\n        // the other dimsion name. On the other hand, use\r\n        // both dimensions name.\r\n      } // In category way, the first category axis.\r\n      else if (baseCategoryDimIndex === coordDimIdx) {\r\n          pushDim(encode[coordDimName], 0, count);\r\n          pushDim(encodeItemName, 0, count);\r\n        } // In category way, the other axis.\r\n        else {\r\n            var start = datasetRecord.categoryWayDim;\r\n            pushDim(encode[coordDimName], start, count);\r\n            pushDim(encodeSeriesName, start, count);\r\n            datasetRecord.categoryWayDim += count;\r\n          }\r\n    });\r\n\r\n    function pushDim(dimIdxArr, idxFrom, idxCount) {\r\n      for (var i = 0; i < idxCount; i++) {\r\n        dimIdxArr.push(idxFrom + i);\r\n      }\r\n    }\r\n\r\n    function getDataDimCountOnCoordDim(coordDimInfo) {\r\n      var dimsDef = coordDimInfo.dimsDef;\r\n      return dimsDef ? dimsDef.length : 1;\r\n    }\r\n\r\n    encodeItemName.length && (encode.itemName = encodeItemName);\r\n    encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\r\n    return encode;\r\n  }\r\n  /**\r\n   * Work for data like [{name: ..., value: ...}, ...].\r\n   *\r\n   * @return encode Never be `null/undefined`.\r\n   */\r\n\r\n  /**\r\n   * @return If return null/undefined, indicate that should not use datasetModel.\r\n   */\r\n\r\n\r\n  function querySeriesUpstreamDatasetModel(seriesModel) {\r\n    // Caution: consider the scenario:\r\n    // A dataset is declared and a series is not expected to use the dataset,\r\n    // and at the beginning `setOption({series: { noData })` (just prepare other\r\n    // option but no data), then `setOption({series: {data: [...]}); In this case,\r\n    // the user should set an empty array to avoid that dataset is used by default.\r\n    var thisData = seriesModel.get('data', true);\r\n\r\n    if (!thisData) {\r\n      return queryReferringComponents(seriesModel.ecModel, 'dataset', {\r\n        index: seriesModel.get('datasetIndex', true),\r\n        id: seriesModel.get('datasetId', true)\r\n      }, SINGLE_REFERRING).models[0];\r\n    }\r\n  }\r\n  /**\r\n   * @return Always return an array event empty.\r\n   */\r\n\r\n\r\n  function queryDatasetUpstreamDatasetModels(datasetModel) {\r\n    // Only these attributes declared, we by defualt reference to `datasetIndex: 0`.\r\n    // Otherwise, no reference.\r\n    if (!datasetModel.get('transform', true) && !datasetModel.get('fromTransformResult', true)) {\r\n      return [];\r\n    }\r\n\r\n    return queryReferringComponents(datasetModel.ecModel, 'dataset', {\r\n      index: datasetModel.get('fromDatasetIndex', true),\r\n      id: datasetModel.get('fromDatasetId', true)\r\n    }, SINGLE_REFERRING).models;\r\n  }\r\n  /**\r\n   * The rule should not be complex, otherwise user might not\r\n   * be able to known where the data is wrong.\r\n   * The code is ugly, but how to make it neat?\r\n   */\r\n\r\n\r\n  function guessOrdinal(source, dimIndex) {\r\n    return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\r\n  } // dimIndex may be overflow source data.\r\n  // return {BE_ORDINAL}\r\n\r\n\r\n  function doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\r\n    var result; // Experience value.\r\n\r\n    var maxLoop = 5;\r\n\r\n    if (isTypedArray(data)) {\r\n      return BE_ORDINAL.Not;\r\n    } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\r\n    // always exists in source.\r\n\r\n\r\n    var dimName;\r\n    var dimType;\r\n\r\n    if (dimensionsDefine) {\r\n      var dimDefItem = dimensionsDefine[dimIndex];\r\n\r\n      if (isObject$1(dimDefItem)) {\r\n        dimName = dimDefItem.name;\r\n        dimType = dimDefItem.type;\r\n      } else if (isString(dimDefItem)) {\r\n        dimName = dimDefItem;\r\n      }\r\n    }\r\n\r\n    if (dimType != null) {\r\n      return dimType === 'ordinal' ? BE_ORDINAL.Must : BE_ORDINAL.Not;\r\n    }\r\n\r\n    if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\r\n      var dataArrayRows = data;\r\n\r\n      if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\r\n        var sample = dataArrayRows[dimIndex];\r\n\r\n        for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\r\n          if ((result = detectValue(sample[startIndex + i])) != null) {\r\n            return result;\r\n          }\r\n        }\r\n      } else {\r\n        for (var i = 0; i < dataArrayRows.length && i < maxLoop; i++) {\r\n          var row = dataArrayRows[startIndex + i];\r\n\r\n          if (row && (result = detectValue(row[dimIndex])) != null) {\r\n            return result;\r\n          }\r\n        }\r\n      }\r\n    } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\r\n      var dataObjectRows = data;\r\n\r\n      if (!dimName) {\r\n        return BE_ORDINAL.Not;\r\n      }\r\n\r\n      for (var i = 0; i < dataObjectRows.length && i < maxLoop; i++) {\r\n        var item = dataObjectRows[i];\r\n\r\n        if (item && (result = detectValue(item[dimName])) != null) {\r\n          return result;\r\n        }\r\n      }\r\n    } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\r\n      var dataKeyedColumns = data;\r\n\r\n      if (!dimName) {\r\n        return BE_ORDINAL.Not;\r\n      }\r\n\r\n      var sample = dataKeyedColumns[dimName];\r\n\r\n      if (!sample || isTypedArray(sample)) {\r\n        return BE_ORDINAL.Not;\r\n      }\r\n\r\n      for (var i = 0; i < sample.length && i < maxLoop; i++) {\r\n        if ((result = detectValue(sample[i])) != null) {\r\n          return result;\r\n        }\r\n      }\r\n    } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\r\n      var dataOriginal = data;\r\n\r\n      for (var i = 0; i < dataOriginal.length && i < maxLoop; i++) {\r\n        var item = dataOriginal[i];\r\n        var val = getDataItemValue(item);\r\n\r\n        if (!isArray(val)) {\r\n          return BE_ORDINAL.Not;\r\n        }\r\n\r\n        if ((result = detectValue(val[dimIndex])) != null) {\r\n          return result;\r\n        }\r\n      }\r\n    }\r\n\r\n    function detectValue(val) {\r\n      var beStr = isString(val); // Consider usage convenience, '1', '2' will be treated as \"number\".\r\n      // `isFinit('')` get `true`.\r\n\r\n      if (val != null && isFinite(val) && val !== '') {\r\n        return beStr ? BE_ORDINAL.Might : BE_ORDINAL.Not;\r\n      } else if (beStr && val !== '-') {\r\n        return BE_ORDINAL.Must;\r\n      }\r\n    }\r\n\r\n    return BE_ORDINAL.Not;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var internalOptionCreatorMap = createHashMap();\r\n\r\n  function registerInternalOptionCreator(mainType, creator) {\r\n    assert$1(internalOptionCreatorMap.get(mainType) == null && creator);\r\n    internalOptionCreatorMap.set(mainType, creator);\r\n  }\r\n\r\n  function concatInternalOptions(ecModel, mainType, newCmptOptionList) {\r\n    var internalOptionCreator = internalOptionCreatorMap.get(mainType);\r\n\r\n    if (!internalOptionCreator) {\r\n      return newCmptOptionList;\r\n    }\r\n\r\n    var internalOptions = internalOptionCreator(ecModel);\r\n\r\n    if (!internalOptions) {\r\n      return newCmptOptionList;\r\n    }\r\n\r\n    {\r\n      for (var i = 0; i < internalOptions.length; i++) {\r\n        assert$1(isComponentIdInternal(internalOptions[i]));\r\n      }\r\n    }\r\n    return newCmptOptionList.concat(internalOptions);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var innerColor = makeInner();\r\n  var innerDecal = makeInner();\r\n\r\n  var PaletteMixin =\r\n  /** @class */\r\n  function () {\r\n    function PaletteMixin() {}\r\n\r\n    PaletteMixin.prototype.getColorFromPalette = function (name, scope, requestNum) {\r\n      var defaultPalette = normalizeToArray(this.get('color', true));\r\n      var layeredPalette = this.get('colorLayer', true);\r\n      return getFromPalette(this, innerColor, defaultPalette, layeredPalette, name, scope, requestNum);\r\n    };\r\n\r\n    PaletteMixin.prototype.clearColorPalette = function () {\r\n      clearPalette(this, innerColor);\r\n    };\r\n\r\n    return PaletteMixin;\r\n  }();\r\n\r\n  function getNearestPalette(palettes, requestColorNum) {\r\n    var paletteNum = palettes.length; // TODO palettes must be in order\r\n\r\n    for (var i = 0; i < paletteNum; i++) {\r\n      if (palettes[i].length > requestColorNum) {\r\n        return palettes[i];\r\n      }\r\n    }\r\n\r\n    return palettes[paletteNum - 1];\r\n  }\r\n  /**\r\n   * @param name MUST NOT be null/undefined. Otherwise call this function\r\n   *             twise with the same parameters will get different result.\r\n   * @param scope default this.\r\n   * @return Can be null/undefined\r\n   */\r\n\r\n\r\n  function getFromPalette(that, inner, defaultPalette, layeredPalette, name, scope, requestNum) {\r\n    scope = scope || that;\r\n    var scopeFields = inner(scope);\r\n    var paletteIdx = scopeFields.paletteIdx || 0;\r\n    var paletteNameMap = scopeFields.paletteNameMap = scopeFields.paletteNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\r\n\r\n    if (paletteNameMap.hasOwnProperty(name)) {\r\n      return paletteNameMap[name];\r\n    }\r\n\r\n    var palette = requestNum == null || !layeredPalette ? defaultPalette : getNearestPalette(layeredPalette, requestNum); // In case can't find in layered color palette.\r\n\r\n    palette = palette || defaultPalette;\r\n\r\n    if (!palette || !palette.length) {\r\n      return;\r\n    }\r\n\r\n    var pickedPaletteItem = palette[paletteIdx];\r\n\r\n    if (name) {\r\n      paletteNameMap[name] = pickedPaletteItem;\r\n    }\r\n\r\n    scopeFields.paletteIdx = (paletteIdx + 1) % palette.length;\r\n    return pickedPaletteItem;\r\n  }\r\n\r\n  function clearPalette(that, inner) {\r\n    inner(that).paletteIdx = 0;\r\n    inner(that).paletteNameMap = {};\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Caution: If the mechanism should be changed some day, these cases\r\n   * should be considered:\r\n   *\r\n   * (1) In `merge option` mode, if using the same option to call `setOption`\r\n   * many times, the result should be the same (try our best to ensure that).\r\n   * (2) In `merge option` mode, if a component has no id/name specified, it\r\n   * will be merged by index, and the result sequence of the components is\r\n   * consistent to the original sequence.\r\n   * (3) In `replaceMerge` mode, keep the result sequence of the components is\r\n   * consistent to the original sequence, even though there might result in \"hole\".\r\n   * (4) `reset` feature (in toolbox). Find detailed info in comments about\r\n   * `mergeOption` in module:echarts/model/OptionManager.\r\n   */\r\n  // Internal method names:\r\n  // -----------------------\r\n\r\n\r\n  var reCreateSeriesIndices;\r\n  var assertSeriesInitialized;\r\n  var initBase;\r\n  var OPTION_INNER_KEY = '\\0_ec_inner';\r\n  var OPTION_INNER_VALUE = 1;\r\n\r\n  var GlobalModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(GlobalModel, _super);\r\n\r\n    function GlobalModel() {\r\n      return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n\r\n    GlobalModel.prototype.init = function (option, parentModel, ecModel, theme, locale, optionManager) {\r\n      theme = theme || {};\r\n      this.option = null; // Mark as not initialized.\r\n\r\n      this._theme = new Model(theme);\r\n      this._locale = new Model(locale);\r\n      this._optionManager = optionManager;\r\n    };\r\n\r\n    GlobalModel.prototype.setOption = function (option, opts, optionPreprocessorFuncs) {\r\n      {\r\n        assert$1(option != null, 'option is null/undefined');\r\n        assert$1(option[OPTION_INNER_KEY] !== OPTION_INNER_VALUE, 'please use chart.getOption()');\r\n      }\r\n      var innerOpt = normalizeSetOptionInput(opts);\r\n\r\n      this._optionManager.setOption(option, optionPreprocessorFuncs, innerOpt);\r\n\r\n      this._resetOption(null, innerOpt);\r\n    };\r\n    /**\r\n     * @param type null/undefined: reset all.\r\n     *        'recreate': force recreate all.\r\n     *        'timeline': only reset timeline option\r\n     *        'media': only reset media query option\r\n     * @return Whether option changed.\r\n     */\r\n\r\n\r\n    GlobalModel.prototype.resetOption = function (type, opt) {\r\n      return this._resetOption(type, normalizeSetOptionInput(opt));\r\n    };\r\n\r\n    GlobalModel.prototype._resetOption = function (type, opt) {\r\n      var optionChanged = false;\r\n      var optionManager = this._optionManager;\r\n\r\n      if (!type || type === 'recreate') {\r\n        var baseOption = optionManager.mountOption(type === 'recreate');\r\n\r\n        if (!this.option || type === 'recreate') {\r\n          initBase(this, baseOption);\r\n        } else {\r\n          this.restoreData();\r\n\r\n          this._mergeOption(baseOption, opt);\r\n        }\r\n\r\n        optionChanged = true;\r\n      }\r\n\r\n      if (type === 'timeline' || type === 'media') {\r\n        this.restoreData();\r\n      } // By design, if `setOption(option2)` at the second time, and `option2` is a `ECUnitOption`,\r\n      // it should better not have the same props with `MediaUnit['option']`.\r\n      // Becuase either `option2` or `MediaUnit['option']` will be always merged to \"current option\"\r\n      // rather than original \"baseOption\". If they both override a prop, the result might be\r\n      // unexpected when media state changed after `setOption` called.\r\n      // If we really need to modify a props in each `MediaUnit['option']`, use the full version\r\n      // (`{baseOption, media}`) in `setOption`.\r\n      // For `timeline`, the case is the same.\r\n\r\n\r\n      if (!type || type === 'recreate' || type === 'timeline') {\r\n        var timelineOption = optionManager.getTimelineOption(this);\r\n\r\n        if (timelineOption) {\r\n          optionChanged = true;\r\n\r\n          this._mergeOption(timelineOption, opt);\r\n        }\r\n      }\r\n\r\n      if (!type || type === 'recreate' || type === 'media') {\r\n        var mediaOptions = optionManager.getMediaOption(this);\r\n\r\n        if (mediaOptions.length) {\r\n          each$1(mediaOptions, function (mediaOption) {\r\n            optionChanged = true;\r\n\r\n            this._mergeOption(mediaOption, opt);\r\n          }, this);\r\n        }\r\n      }\r\n\r\n      return optionChanged;\r\n    };\r\n\r\n    GlobalModel.prototype.mergeOption = function (option) {\r\n      this._mergeOption(option, null);\r\n    };\r\n\r\n    GlobalModel.prototype._mergeOption = function (newOption, opt) {\r\n      var option = this.option;\r\n      var componentsMap = this._componentsMap;\r\n      var componentsCount = this._componentsCount;\r\n      var newCmptTypes = [];\r\n      var newCmptTypeMap = createHashMap();\r\n      var replaceMergeMainTypeMap = opt && opt.replaceMergeMainTypeMap;\r\n      resetSourceDefaulter(this); // If no component class, merge directly.\r\n      // For example: color, animaiton options, etc.\r\n\r\n      each$1(newOption, function (componentOption, mainType) {\r\n        if (componentOption == null) {\r\n          return;\r\n        }\r\n\r\n        if (!ComponentModel.hasClass(mainType)) {\r\n          // globalSettingTask.dirty();\r\n          option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\r\n        } else if (mainType) {\r\n          newCmptTypes.push(mainType);\r\n          newCmptTypeMap.set(mainType, true);\r\n        }\r\n      });\r\n\r\n      if (replaceMergeMainTypeMap) {\r\n        // If there is a mainType `xxx` in `replaceMerge` but not declared in option,\r\n        // we trade it as it is declared in option as `{xxx: []}`. Because:\r\n        // (1) for normal merge, `{xxx: null/undefined}` are the same meaning as `{xxx: []}`.\r\n        // (2) some preprocessor may convert some of `{xxx: null/undefined}` to `{xxx: []}`.\r\n        replaceMergeMainTypeMap.each(function (val, mainTypeInReplaceMerge) {\r\n          if (ComponentModel.hasClass(mainTypeInReplaceMerge) && !newCmptTypeMap.get(mainTypeInReplaceMerge)) {\r\n            newCmptTypes.push(mainTypeInReplaceMerge);\r\n            newCmptTypeMap.set(mainTypeInReplaceMerge, true);\r\n          }\r\n        });\r\n      }\r\n\r\n      ComponentModel.topologicalTravel(newCmptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\r\n\r\n      function visitComponent(mainType) {\r\n        var newCmptOptionList = concatInternalOptions(this, mainType, normalizeToArray(newOption[mainType]));\r\n        var oldCmptList = componentsMap.get(mainType);\r\n        var mergeMode = // `!oldCmptList` means init. See the comment in `mappingToExists`\r\n        !oldCmptList ? 'replaceAll' : replaceMergeMainTypeMap && replaceMergeMainTypeMap.get(mainType) ? 'replaceMerge' : 'normalMerge';\r\n        var mappingResult = mappingToExists(oldCmptList, newCmptOptionList, mergeMode); // Set mainType and complete subType.\r\n\r\n        setComponentTypeToKeyInfo(mappingResult, mainType, ComponentModel); // Empty it before the travel, in order to prevent `this._componentsMap`\r\n        // from being used in the `init`/`mergeOption`/`optionUpdated` of some\r\n        // components, which is probably incorrect logic.\r\n\r\n        option[mainType] = null;\r\n        componentsMap.set(mainType, null);\r\n        componentsCount.set(mainType, 0);\r\n        var optionsByMainType = [];\r\n        var cmptsByMainType = [];\r\n        var cmptsCountByMainType = 0;\r\n        each$1(mappingResult, function (resultItem, index) {\r\n          var componentModel = resultItem.existing;\r\n          var newCmptOption = resultItem.newOption;\r\n\r\n          if (!newCmptOption) {\r\n            if (componentModel) {\r\n              // Consider where is no new option and should be merged using {},\r\n              // see removeEdgeAndAdd in topologicalTravel and\r\n              // ComponentModel.getAllClassMainTypes.\r\n              componentModel.mergeOption({}, this);\r\n              componentModel.optionUpdated({}, false);\r\n            } // If no both `resultItem.exist` and `resultItem.option`,\r\n            // either it is in `replaceMerge` and not matched by any id,\r\n            // or it has been removed in previous `replaceMerge` and left a \"hole\" in this component index.\r\n\r\n          } else {\r\n            var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\r\n\r\n            if (componentModel && componentModel.constructor === ComponentModelClass) {\r\n              componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\r\n\r\n              componentModel.mergeOption(newCmptOption, this);\r\n              componentModel.optionUpdated(newCmptOption, false);\r\n            } else {\r\n              // PENDING Global as parent ?\r\n              var extraOpt = extend({\r\n                componentIndex: index\r\n              }, resultItem.keyInfo);\r\n              componentModel = new ComponentModelClass(newCmptOption, this, this, extraOpt); // Assign `keyInfo`\r\n\r\n              extend(componentModel, extraOpt);\r\n\r\n              if (resultItem.brandNew) {\r\n                componentModel.__requireNewView = true;\r\n              }\r\n\r\n              componentModel.init(newCmptOption, this, this); // Call optionUpdated after init.\r\n              // newCmptOption has been used as componentModel.option\r\n              // and may be merged with theme and default, so pass null\r\n              // to avoid confusion.\r\n\r\n              componentModel.optionUpdated(null, true);\r\n            }\r\n          }\r\n\r\n          if (componentModel) {\r\n            optionsByMainType.push(componentModel.option);\r\n            cmptsByMainType.push(componentModel);\r\n            cmptsCountByMainType++;\r\n          } else {\r\n            // Always do assign to avoid elided item in array.\r\n            optionsByMainType.push(void 0);\r\n            cmptsByMainType.push(void 0);\r\n          }\r\n        }, this);\r\n        option[mainType] = optionsByMainType;\r\n        componentsMap.set(mainType, cmptsByMainType);\r\n        componentsCount.set(mainType, cmptsCountByMainType); // Backup series for filtering.\r\n\r\n        if (mainType === 'series') {\r\n          reCreateSeriesIndices(this);\r\n        }\r\n      } // If no series declared, ensure `_seriesIndices` initialized.\r\n\r\n\r\n      if (!this._seriesIndices) {\r\n        reCreateSeriesIndices(this);\r\n      }\r\n    };\r\n    /**\r\n     * Get option for output (cloned option and inner info removed)\r\n     */\r\n\r\n\r\n    GlobalModel.prototype.getOption = function () {\r\n      var option = clone(this.option);\r\n      each$1(option, function (optInMainType, mainType) {\r\n        if (ComponentModel.hasClass(mainType)) {\r\n          var opts = normalizeToArray(optInMainType); // Inner cmpts need to be removed.\r\n          // Inner cmpts might not be at last since ec5.0, but still\r\n          // compatible for users: if inner cmpt at last, splice the returned array.\r\n\r\n          var realLen = opts.length;\r\n          var metNonInner = false;\r\n\r\n          for (var i = realLen - 1; i >= 0; i--) {\r\n            // Remove options with inner id.\r\n            if (opts[i] && !isComponentIdInternal(opts[i])) {\r\n              metNonInner = true;\r\n            } else {\r\n              opts[i] = null;\r\n              !metNonInner && realLen--;\r\n            }\r\n          }\r\n\r\n          opts.length = realLen;\r\n          option[mainType] = opts;\r\n        }\r\n      });\r\n      delete option[OPTION_INNER_KEY];\r\n      return option;\r\n    };\r\n\r\n    GlobalModel.prototype.getTheme = function () {\r\n      return this._theme;\r\n    };\r\n\r\n    GlobalModel.prototype.getLocaleModel = function () {\r\n      return this._locale;\r\n    };\r\n\r\n    GlobalModel.prototype.getLocale = function (localePosition) {\r\n      var locale = this.getLocaleModel();\r\n      return locale.get(localePosition);\r\n    };\r\n\r\n    GlobalModel.prototype.setUpdatePayload = function (payload) {\r\n      this._payload = payload;\r\n    };\r\n\r\n    GlobalModel.prototype.getUpdatePayload = function () {\r\n      return this._payload;\r\n    };\r\n    /**\r\n     * @param idx If not specified, return the first one.\r\n     */\r\n\r\n\r\n    GlobalModel.prototype.getComponent = function (mainType, idx) {\r\n      var list = this._componentsMap.get(mainType);\r\n\r\n      if (list) {\r\n        var cmpt = list[idx || 0];\r\n\r\n        if (cmpt) {\r\n          return cmpt;\r\n        } else if (idx == null) {\r\n          for (var i = 0; i < list.length; i++) {\r\n            if (list[i]) {\r\n              return list[i];\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n    /**\r\n     * @return Never be null/undefined.\r\n     */\r\n\r\n\r\n    GlobalModel.prototype.queryComponents = function (condition) {\r\n      var mainType = condition.mainType;\r\n\r\n      if (!mainType) {\r\n        return [];\r\n      }\r\n\r\n      var index = condition.index;\r\n      var id = condition.id;\r\n      var name = condition.name;\r\n\r\n      var cmpts = this._componentsMap.get(mainType);\r\n\r\n      if (!cmpts || !cmpts.length) {\r\n        return [];\r\n      }\r\n\r\n      var result;\r\n\r\n      if (index != null) {\r\n        result = [];\r\n        each$1(normalizeToArray(index), function (idx) {\r\n          cmpts[idx] && result.push(cmpts[idx]);\r\n        });\r\n      } else if (id != null) {\r\n        result = queryByIdOrName('id', id, cmpts);\r\n      } else if (name != null) {\r\n        result = queryByIdOrName('name', name, cmpts);\r\n      } else {\r\n        // Return all non-empty components in that mainType\r\n        result = filter(cmpts, function (cmpt) {\r\n          return !!cmpt;\r\n        });\r\n      }\r\n\r\n      return filterBySubType(result, condition);\r\n    };\r\n    /**\r\n     * The interface is different from queryComponents,\r\n     * which is convenient for inner usage.\r\n     *\r\n     * @usage\r\n     * let result = findComponents(\r\n     *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\r\n     * );\r\n     * let result = findComponents(\r\n     *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\r\n     * );\r\n     * let result = findComponents(\r\n     *     {mainType: 'series',\r\n     *     filter: function (model, index) {...}}\r\n     * );\r\n     * // result like [component0, componnet1, ...]\r\n     */\r\n\r\n\r\n    GlobalModel.prototype.findComponents = function (condition) {\r\n      var query = condition.query;\r\n      var mainType = condition.mainType;\r\n      var queryCond = getQueryCond(query);\r\n      var result = queryCond ? this.queryComponents(queryCond) // Retrieve all non-empty components.\r\n      : filter(this._componentsMap.get(mainType), function (cmpt) {\r\n        return !!cmpt;\r\n      });\r\n      return doFilter(filterBySubType(result, condition));\r\n\r\n      function getQueryCond(q) {\r\n        var indexAttr = mainType + 'Index';\r\n        var idAttr = mainType + 'Id';\r\n        var nameAttr = mainType + 'Name';\r\n        return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\r\n          mainType: mainType,\r\n          // subType will be filtered finally.\r\n          index: q[indexAttr],\r\n          id: q[idAttr],\r\n          name: q[nameAttr]\r\n        } : null;\r\n      }\r\n\r\n      function doFilter(res) {\r\n        return condition.filter ? filter(res, condition.filter) : res;\r\n      }\r\n    };\r\n\r\n    GlobalModel.prototype.eachComponent = function (mainType, cb, context) {\r\n      var componentsMap = this._componentsMap;\r\n\r\n      if (isFunction$1(mainType)) {\r\n        var ctxForAll_1 = cb;\r\n        var cbForAll_1 = mainType;\r\n        componentsMap.each(function (cmpts, componentType) {\r\n          for (var i = 0; cmpts && i < cmpts.length; i++) {\r\n            var cmpt = cmpts[i];\r\n            cmpt && cbForAll_1.call(ctxForAll_1, componentType, cmpt, cmpt.componentIndex);\r\n          }\r\n        });\r\n      } else {\r\n        var cmpts = isString(mainType) ? componentsMap.get(mainType) : isObject$1(mainType) ? this.findComponents(mainType) : null;\r\n\r\n        for (var i = 0; cmpts && i < cmpts.length; i++) {\r\n          var cmpt = cmpts[i];\r\n          cmpt && cb.call(context, cmpt, cmpt.componentIndex);\r\n        }\r\n      }\r\n    };\r\n    /**\r\n     * Get series list before filtered by name.\r\n     */\r\n\r\n\r\n    GlobalModel.prototype.getSeriesByName = function (name) {\r\n      var nameStr = convertOptionIdName(name, null);\r\n      return filter(this._componentsMap.get('series'), function (oneSeries) {\r\n        return !!oneSeries && nameStr != null && oneSeries.name === nameStr;\r\n      });\r\n    };\r\n    /**\r\n     * Get series list before filtered by index.\r\n     */\r\n\r\n\r\n    GlobalModel.prototype.getSeriesByIndex = function (seriesIndex) {\r\n      return this._componentsMap.get('series')[seriesIndex];\r\n    };\r\n    /**\r\n     * Get series list before filtered by type.\r\n     * FIXME: rename to getRawSeriesByType?\r\n     */\r\n\r\n\r\n    GlobalModel.prototype.getSeriesByType = function (subType) {\r\n      return filter(this._componentsMap.get('series'), function (oneSeries) {\r\n        return !!oneSeries && oneSeries.subType === subType;\r\n      });\r\n    };\r\n    /**\r\n     * Get all series before filtered.\r\n     */\r\n\r\n\r\n    GlobalModel.prototype.getSeries = function () {\r\n      return filter(this._componentsMap.get('series').slice(), function (oneSeries) {\r\n        return !!oneSeries;\r\n      });\r\n    };\r\n    /**\r\n     * Count series before filtered.\r\n     */\r\n\r\n\r\n    GlobalModel.prototype.getSeriesCount = function () {\r\n      return this._componentsCount.get('series');\r\n    };\r\n    /**\r\n     * After filtering, series may be different\r\n     * frome raw series.\r\n     */\r\n\r\n\r\n    GlobalModel.prototype.eachSeries = function (cb, context) {\r\n      assertSeriesInitialized(this);\r\n      each$1(this._seriesIndices, function (rawSeriesIndex) {\r\n        var series = this._componentsMap.get('series')[rawSeriesIndex];\r\n\r\n        cb.call(context, series, rawSeriesIndex);\r\n      }, this);\r\n    };\r\n    /**\r\n     * Iterate raw series before filtered.\r\n     *\r\n     * @param {Function} cb\r\n     * @param {*} context\r\n     */\r\n\r\n\r\n    GlobalModel.prototype.eachRawSeries = function (cb, context) {\r\n      each$1(this._componentsMap.get('series'), function (series) {\r\n        series && cb.call(context, series, series.componentIndex);\r\n      });\r\n    };\r\n    /**\r\n     * After filtering, series may be different.\r\n     * frome raw series.\r\n     */\r\n\r\n\r\n    GlobalModel.prototype.eachSeriesByType = function (subType, cb, context) {\r\n      assertSeriesInitialized(this);\r\n      each$1(this._seriesIndices, function (rawSeriesIndex) {\r\n        var series = this._componentsMap.get('series')[rawSeriesIndex];\r\n\r\n        if (series.subType === subType) {\r\n          cb.call(context, series, rawSeriesIndex);\r\n        }\r\n      }, this);\r\n    };\r\n    /**\r\n     * Iterate raw series before filtered of given type.\r\n     */\r\n\r\n\r\n    GlobalModel.prototype.eachRawSeriesByType = function (subType, cb, context) {\r\n      return each$1(this.getSeriesByType(subType), cb, context);\r\n    };\r\n\r\n    GlobalModel.prototype.isSeriesFiltered = function (seriesModel) {\r\n      assertSeriesInitialized(this);\r\n      return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\r\n    };\r\n\r\n    GlobalModel.prototype.getCurrentSeriesIndices = function () {\r\n      return (this._seriesIndices || []).slice();\r\n    };\r\n\r\n    GlobalModel.prototype.filterSeries = function (cb, context) {\r\n      assertSeriesInitialized(this);\r\n      var newSeriesIndices = [];\r\n      each$1(this._seriesIndices, function (seriesRawIdx) {\r\n        var series = this._componentsMap.get('series')[seriesRawIdx];\r\n\r\n        cb.call(context, series, seriesRawIdx) && newSeriesIndices.push(seriesRawIdx);\r\n      }, this);\r\n      this._seriesIndices = newSeriesIndices;\r\n      this._seriesIndicesMap = createHashMap(newSeriesIndices);\r\n    };\r\n\r\n    GlobalModel.prototype.restoreData = function (payload) {\r\n      reCreateSeriesIndices(this);\r\n      var componentsMap = this._componentsMap;\r\n      var componentTypes = [];\r\n      componentsMap.each(function (components, componentType) {\r\n        if (ComponentModel.hasClass(componentType)) {\r\n          componentTypes.push(componentType);\r\n        }\r\n      });\r\n      ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType) {\r\n        each$1(componentsMap.get(componentType), function (component) {\r\n          if (component && (componentType !== 'series' || !isNotTargetSeries(component, payload))) {\r\n            component.restoreData();\r\n          }\r\n        });\r\n      });\r\n    };\r\n\r\n    GlobalModel.internalField = function () {\r\n      reCreateSeriesIndices = function (ecModel) {\r\n        var seriesIndices = ecModel._seriesIndices = [];\r\n        each$1(ecModel._componentsMap.get('series'), function (series) {\r\n          // series may have been removed by `replaceMerge`.\r\n          series && seriesIndices.push(series.componentIndex);\r\n        });\r\n        ecModel._seriesIndicesMap = createHashMap(seriesIndices);\r\n      };\r\n\r\n      assertSeriesInitialized = function (ecModel) {\r\n        // Components that use _seriesIndices should depends on series component,\r\n        // which make sure that their initialization is after series.\r\n        {\r\n          if (!ecModel._seriesIndices) {\r\n            throw new Error('Option should contains series.');\r\n          }\r\n        }\r\n      };\r\n\r\n      initBase = function (ecModel, baseOption) {\r\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\r\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\r\n        ecModel.option = {};\r\n        ecModel.option[OPTION_INNER_KEY] = OPTION_INNER_VALUE; // Init with series: [], in case of calling findSeries method\r\n        // before series initialized.\r\n\r\n        ecModel._componentsMap = createHashMap({\r\n          series: []\r\n        });\r\n        ecModel._componentsCount = createHashMap(); // If user spefied `option.aria`, aria will be enable. This detection should be\r\n        // performed before theme and globalDefault merge.\r\n\r\n        var airaOption = baseOption.aria;\r\n\r\n        if (isObject$1(airaOption) && airaOption.enabled == null) {\r\n          airaOption.enabled = true;\r\n        }\r\n\r\n        mergeTheme(baseOption, ecModel._theme.option); // TODO Needs clone when merging to the unexisted property\r\n\r\n        merge(baseOption, globalDefault, false);\r\n\r\n        ecModel._mergeOption(baseOption, null);\r\n      };\r\n    }();\r\n\r\n    return GlobalModel;\r\n  }(Model);\r\n\r\n  function isNotTargetSeries(seriesModel, payload) {\r\n    if (payload) {\r\n      var index = payload.seriesIndex;\r\n      var id = payload.seriesId;\r\n      var name_1 = payload.seriesName;\r\n      return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name_1 != null && seriesModel.name !== name_1;\r\n    }\r\n  }\r\n\r\n  function mergeTheme(option, theme) {\r\n    // PENDING\r\n    // NOT use `colorLayer` in theme if option has `color`\r\n    var notMergeColorLayer = option.color && !option.colorLayer;\r\n    each$1(theme, function (themeItem, name) {\r\n      if (name === 'colorLayer' && notMergeColorLayer) {\r\n        return;\r\n      } // If it is component model mainType, the model handles that merge later.\r\n      // otherwise, merge them here.\r\n\r\n\r\n      if (!ComponentModel.hasClass(name)) {\r\n        if (typeof themeItem === 'object') {\r\n          option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\r\n        } else {\r\n          if (option[name] == null) {\r\n            option[name] = themeItem;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  function queryByIdOrName(attr, idOrName, cmpts) {\r\n    // Here is a break from echarts4: string and number are\r\n    // treated as equal.\r\n    if (isArray(idOrName)) {\r\n      var keyMap_1 = createHashMap();\r\n      each$1(idOrName, function (idOrNameItem) {\r\n        if (idOrNameItem != null) {\r\n          var idName = convertOptionIdName(idOrNameItem, null);\r\n          idName != null && keyMap_1.set(idOrNameItem, true);\r\n        }\r\n      });\r\n      return filter(cmpts, function (cmpt) {\r\n        return cmpt && keyMap_1.get(cmpt[attr]);\r\n      });\r\n    } else {\r\n      var idName_1 = convertOptionIdName(idOrName, null);\r\n      return filter(cmpts, function (cmpt) {\r\n        return cmpt && idName_1 != null && cmpt[attr] === idName_1;\r\n      });\r\n    }\r\n  }\r\n\r\n  function filterBySubType(components, condition) {\r\n    // Using hasOwnProperty for restrict. Consider\r\n    // subType is undefined in user payload.\r\n    return condition.hasOwnProperty('subType') ? filter(components, function (cmpt) {\r\n      return cmpt && cmpt.subType === condition.subType;\r\n    }) : components;\r\n  }\r\n\r\n  function normalizeSetOptionInput(opts) {\r\n    var replaceMergeMainTypeMap = createHashMap();\r\n    opts && each$1(normalizeToArray(opts.replaceMerge), function (mainType) {\r\n      {\r\n        assert$1(ComponentModel.hasClass(mainType), '\"' + mainType + '\" is not valid component main type in \"replaceMerge\"');\r\n      }\r\n      replaceMergeMainTypeMap.set(mainType, true);\r\n    });\r\n    return {\r\n      replaceMergeMainTypeMap: replaceMergeMainTypeMap\r\n    };\r\n  }\r\n\r\n  mixin(GlobalModel, PaletteMixin);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var availableMethods = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', // 'getModel',\r\n  'getOption', // 'getViewOfComponentModel',\r\n  // 'getViewOfSeriesModel',\r\n  'getId', 'updateLabelLayout'];\r\n\r\n  var ExtensionAPI =\r\n  /** @class */\r\n  function () {\r\n    function ExtensionAPI(ecInstance) {\r\n      each$1(availableMethods, function (methodName) {\r\n        this[methodName] = bind(ecInstance[methodName], ecInstance);\r\n      }, this);\r\n    }\r\n\r\n    return ExtensionAPI;\r\n  }();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var coordinateSystemCreators = {};\r\n\r\n  var CoordinateSystemManager =\r\n  /** @class */\r\n  function () {\r\n    function CoordinateSystemManager() {\r\n      this._coordinateSystems = [];\r\n    }\r\n\r\n    CoordinateSystemManager.prototype.create = function (ecModel, api) {\r\n      var coordinateSystems = [];\r\n      each$1(coordinateSystemCreators, function (creater, type) {\r\n        var list = creater.create(ecModel, api);\r\n        coordinateSystems = coordinateSystems.concat(list || []);\r\n      });\r\n      this._coordinateSystems = coordinateSystems;\r\n    };\r\n\r\n    CoordinateSystemManager.prototype.update = function (ecModel, api) {\r\n      each$1(this._coordinateSystems, function (coordSys) {\r\n        coordSys.update && coordSys.update(ecModel, api);\r\n      });\r\n    };\r\n\r\n    CoordinateSystemManager.prototype.getCoordinateSystems = function () {\r\n      return this._coordinateSystems.slice();\r\n    };\r\n\r\n    CoordinateSystemManager.register = function (type, creator) {\r\n      coordinateSystemCreators[type] = creator;\r\n    };\r\n\r\n    CoordinateSystemManager.get = function (type) {\r\n      return coordinateSystemCreators[type];\r\n    };\r\n\r\n    return CoordinateSystemManager;\r\n  }();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var QUERY_REG = /^(min|max)?(.+)$/; // Key: mainType\r\n  // type FakeComponentsMap = HashMap<(MappingExistingItem & { subType: string })[]>;\r\n\r\n  /**\r\n   * TERM EXPLANATIONS:\r\n   * See `ECOption` and `ECUnitOption` in `src/util/types.ts`.\r\n   */\r\n\r\n  var OptionManager =\r\n  /** @class */\r\n  function () {\r\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\r\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\r\n    // rawOption cloned and backuped when timeline changed, which does no\r\n    // good to performance. What's more, that both timeline and setOption\r\n    // method supply 'notMerge' brings complex and some problems.\r\n    // Consider this case:\r\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\r\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\r\n    function OptionManager(api) {\r\n      this._timelineOptions = [];\r\n      this._mediaList = [];\r\n      /**\r\n       * -1, means default.\r\n       * empty means no media.\r\n       */\r\n\r\n      this._currentMediaIndices = [];\r\n      this._api = api;\r\n    }\r\n\r\n    OptionManager.prototype.setOption = function (rawOption, optionPreprocessorFuncs, opt) {\r\n      if (rawOption) {\r\n        // That set dat primitive is dangerous if user reuse the data when setOption again.\r\n        each$1(normalizeToArray(rawOption.series), function (series) {\r\n          series && series.data && isTypedArray(series.data) && setAsPrimitive(series.data);\r\n        });\r\n        each$1(normalizeToArray(rawOption.dataset), function (dataset) {\r\n          dataset && dataset.source && isTypedArray(dataset.source) && setAsPrimitive(dataset.source);\r\n        });\r\n      } // Caution: some series modify option data, if do not clone,\r\n      // it should ensure that the repeat modify correctly\r\n      // (create a new object when modify itself).\r\n\r\n\r\n      rawOption = clone(rawOption); // FIXME\r\n      // If some property is set in timeline options or media option but\r\n      // not set in baseOption, a warning should be given.\r\n\r\n      var optionBackup = this._optionBackup;\r\n      var newParsedOption = parseRawOption(rawOption, optionPreprocessorFuncs, !optionBackup);\r\n      this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\r\n\r\n      if (optionBackup) {\r\n        // FIXME\r\n        // the restore merge solution is essentially incorrect.\r\n        // the mapping can not be 100% consistent with ecModel, which probably brings\r\n        // potential bug!\r\n        // The first merge is delayed, becuase in most cases, users do not call `setOption` twice.\r\n        // let fakeCmptsMap = this._fakeCmptsMap;\r\n        // if (!fakeCmptsMap) {\r\n        //     fakeCmptsMap = this._fakeCmptsMap = createHashMap();\r\n        //     mergeToBackupOption(fakeCmptsMap, null, optionBackup.baseOption, null);\r\n        // }\r\n        // mergeToBackupOption(\r\n        //     fakeCmptsMap, optionBackup.baseOption, newParsedOption.baseOption, opt\r\n        // );\r\n        // For simplicity, timeline options and media options do not support merge,\r\n        // that is, if you `setOption` twice and both has timeline options, the latter\r\n        // timeline opitons will not be merged to the formers, but just substitude them.\r\n        if (newParsedOption.timelineOptions.length) {\r\n          optionBackup.timelineOptions = newParsedOption.timelineOptions;\r\n        }\r\n\r\n        if (newParsedOption.mediaList.length) {\r\n          optionBackup.mediaList = newParsedOption.mediaList;\r\n        }\r\n\r\n        if (newParsedOption.mediaDefault) {\r\n          optionBackup.mediaDefault = newParsedOption.mediaDefault;\r\n        }\r\n      } else {\r\n        this._optionBackup = newParsedOption;\r\n      }\r\n    };\r\n\r\n    OptionManager.prototype.mountOption = function (isRecreate) {\r\n      var optionBackup = this._optionBackup;\r\n      this._timelineOptions = optionBackup.timelineOptions;\r\n      this._mediaList = optionBackup.mediaList;\r\n      this._mediaDefault = optionBackup.mediaDefault;\r\n      this._currentMediaIndices = [];\r\n      return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\r\n      // called, and is merged into every new option by inner method `mergeToBackupOption`\r\n      // each time `setOption` called, can be only used in `isRecreate`, because\r\n      // its reliability is under suspicion. In other cases option merge is\r\n      // performed by `model.mergeOption`.\r\n      ? optionBackup.baseOption : this._newBaseOption);\r\n    };\r\n\r\n    OptionManager.prototype.getTimelineOption = function (ecModel) {\r\n      var option;\r\n      var timelineOptions = this._timelineOptions;\r\n\r\n      if (timelineOptions.length) {\r\n        // getTimelineOption can only be called after ecModel inited,\r\n        // so we can get currentIndex from timelineModel.\r\n        var timelineModel = ecModel.getComponent('timeline');\r\n\r\n        if (timelineModel) {\r\n          option = clone( // FIXME:TS as TimelineModel or quivlant interface\r\n          timelineOptions[timelineModel.getCurrentIndex()]);\r\n        }\r\n      }\r\n\r\n      return option;\r\n    };\r\n\r\n    OptionManager.prototype.getMediaOption = function (ecModel) {\r\n      var ecWidth = this._api.getWidth();\r\n\r\n      var ecHeight = this._api.getHeight();\r\n\r\n      var mediaList = this._mediaList;\r\n      var mediaDefault = this._mediaDefault;\r\n      var indices = [];\r\n      var result = []; // No media defined.\r\n\r\n      if (!mediaList.length && !mediaDefault) {\r\n        return result;\r\n      } // Multi media may be applied, the latter defined media has higher priority.\r\n\r\n\r\n      for (var i = 0, len = mediaList.length; i < len; i++) {\r\n        if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\r\n          indices.push(i);\r\n        }\r\n      } // FIXME\r\n      // Whether mediaDefault should force users to provide? Otherwise\r\n      // the change by media query can not be recorvered.\r\n\r\n\r\n      if (!indices.length && mediaDefault) {\r\n        indices = [-1];\r\n      }\r\n\r\n      if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\r\n        result = map(indices, function (index) {\r\n          return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\r\n        });\r\n      } // Otherwise return nothing.\r\n\r\n\r\n      this._currentMediaIndices = indices;\r\n      return result;\r\n    };\r\n\r\n    return OptionManager;\r\n  }();\r\n  /**\r\n   * [RAW_OPTION_PATTERNS]\r\n   * (Note: \"series: []\" represents all other props in `ECUnitOption`)\r\n   *\r\n   * (1) No prop \"baseOption\" declared:\r\n   * Root option is used as \"baseOption\" (except prop \"options\" and \"media\").\r\n   * ```js\r\n   * option = {\r\n   *     series: [],\r\n   *     timeline: {},\r\n   *     options: [],\r\n   * };\r\n   * option = {\r\n   *     series: [],\r\n   *     media: {},\r\n   * };\r\n   * option = {\r\n   *     series: [],\r\n   *     timeline: {},\r\n   *     options: [],\r\n   *     media: {},\r\n   * }\r\n   * ```\r\n   *\r\n   * (2) Prop \"baseOption\" declared:\r\n   * If \"baseOption\" declared, `ECUnitOption` props can only be declared\r\n   * inside \"baseOption\" except prop \"timeline\" (compat ec2).\r\n   * ```js\r\n   * option = {\r\n   *     baseOption: {\r\n   *         timeline: {},\r\n   *         series: [],\r\n   *     },\r\n   *     options: []\r\n   * };\r\n   * option = {\r\n   *     baseOption: {\r\n   *         series: [],\r\n   *     },\r\n   *     media: []\r\n   * };\r\n   * option = {\r\n   *     baseOption: {\r\n   *         timeline: {},\r\n   *         series: [],\r\n   *     },\r\n   *     options: []\r\n   *     media: []\r\n   * };\r\n   * option = {\r\n   *     // ec3 compat ec2: allow (only) `timeline` declared\r\n   *     // outside baseOption. Keep this setting for compat.\r\n   *     timeline: {},\r\n   *     baseOption: {\r\n   *         series: [],\r\n   *     },\r\n   *     options: [],\r\n   *     media: []\r\n   * };\r\n   * ```\r\n   */\r\n\r\n\r\n  function parseRawOption( // `rawOption` May be modified\r\n  rawOption, optionPreprocessorFuncs, isNew) {\r\n    var mediaList = [];\r\n    var mediaDefault;\r\n    var baseOption;\r\n    var declaredBaseOption = rawOption.baseOption; // Compatible with ec2, [RAW_OPTION_PATTERNS] above.\r\n\r\n    var timelineOnRoot = rawOption.timeline;\r\n    var timelineOptionsOnRoot = rawOption.options;\r\n    var mediaOnRoot = rawOption.media;\r\n    var hasMedia = !!rawOption.media;\r\n    var hasTimeline = !!(timelineOptionsOnRoot || timelineOnRoot || declaredBaseOption && declaredBaseOption.timeline);\r\n\r\n    if (declaredBaseOption) {\r\n      baseOption = declaredBaseOption; // For merge option.\r\n\r\n      if (!baseOption.timeline) {\r\n        baseOption.timeline = timelineOnRoot;\r\n      }\r\n    } // For convenience, enable to use the root option as the `baseOption`:\r\n    // `{ ...normalOptionProps, media: [{ ... }, { ... }] }`\r\n    else {\r\n        if (hasTimeline || hasMedia) {\r\n          rawOption.options = rawOption.media = null;\r\n        }\r\n\r\n        baseOption = rawOption;\r\n      }\r\n\r\n    if (hasMedia) {\r\n      if (isArray(mediaOnRoot)) {\r\n        each$1(mediaOnRoot, function (singleMedia) {\r\n          {\r\n            // Real case of wrong config.\r\n            if (singleMedia && !singleMedia.option && isObject$1(singleMedia.query) && isObject$1(singleMedia.query.option)) {\r\n              error('Illegal media option. Must be like { media: [ { query: {}, option: {} } ] }');\r\n            }\r\n          }\r\n\r\n          if (singleMedia && singleMedia.option) {\r\n            if (singleMedia.query) {\r\n              mediaList.push(singleMedia);\r\n            } else if (!mediaDefault) {\r\n              // Use the first media default.\r\n              mediaDefault = singleMedia;\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        {\r\n          // Real case of wrong config.\r\n          error('Illegal media option. Must be an array. Like { media: [ {...}, {...} ] }');\r\n        }\r\n      }\r\n    }\r\n\r\n    doPreprocess(baseOption);\r\n    each$1(timelineOptionsOnRoot, function (option) {\r\n      return doPreprocess(option);\r\n    });\r\n    each$1(mediaList, function (media) {\r\n      return doPreprocess(media.option);\r\n    });\r\n\r\n    function doPreprocess(option) {\r\n      each$1(optionPreprocessorFuncs, function (preProcess) {\r\n        preProcess(option, isNew);\r\n      });\r\n    }\r\n\r\n    return {\r\n      baseOption: baseOption,\r\n      timelineOptions: timelineOptionsOnRoot || [],\r\n      mediaDefault: mediaDefault,\r\n      mediaList: mediaList\r\n    };\r\n  }\r\n  /**\r\n   * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\r\n   * Support: width, height, aspectRatio\r\n   * Can use max or min as prefix.\r\n   */\r\n\r\n\r\n  function applyMediaQuery(query, ecWidth, ecHeight) {\r\n    var realMap = {\r\n      width: ecWidth,\r\n      height: ecHeight,\r\n      aspectratio: ecWidth / ecHeight // lowser case for convenientce.\r\n\r\n    };\r\n    var applicatable = true;\r\n    each$1(query, function (value, attr) {\r\n      var matched = attr.match(QUERY_REG);\r\n\r\n      if (!matched || !matched[1] || !matched[2]) {\r\n        return;\r\n      }\r\n\r\n      var operator = matched[1];\r\n      var realAttr = matched[2].toLowerCase();\r\n\r\n      if (!compare(realMap[realAttr], value, operator)) {\r\n        applicatable = false;\r\n      }\r\n    });\r\n    return applicatable;\r\n  }\r\n\r\n  function compare(real, expect, operator) {\r\n    if (operator === 'min') {\r\n      return real >= expect;\r\n    } else if (operator === 'max') {\r\n      return real <= expect;\r\n    } else {\r\n      // Equals\r\n      return real === expect;\r\n    }\r\n  }\r\n\r\n  function indicesEquals(indices1, indices2) {\r\n    // indices is always order by asc and has only finite number.\r\n    return indices1.join(',') === indices2.join(',');\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var each$3 = each$1;\r\n  var isObject$2 = isObject$1;\r\n  var POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\r\n\r\n  function compatEC2ItemStyle(opt) {\r\n    var itemStyleOpt = opt && opt.itemStyle;\r\n\r\n    if (!itemStyleOpt) {\r\n      return;\r\n    }\r\n\r\n    for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\r\n      var styleName = POSSIBLE_STYLES[i];\r\n      var normalItemStyleOpt = itemStyleOpt.normal;\r\n      var emphasisItemStyleOpt = itemStyleOpt.emphasis;\r\n\r\n      if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\r\n        {\r\n          deprecateReplaceLog(\"itemStyle.normal.\" + styleName, styleName);\r\n        }\r\n        opt[styleName] = opt[styleName] || {};\r\n\r\n        if (!opt[styleName].normal) {\r\n          opt[styleName].normal = normalItemStyleOpt[styleName];\r\n        } else {\r\n          merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\r\n        }\r\n\r\n        normalItemStyleOpt[styleName] = null;\r\n      }\r\n\r\n      if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\r\n        {\r\n          deprecateReplaceLog(\"itemStyle.emphasis.\" + styleName, \"emphasis.\" + styleName);\r\n        }\r\n        opt[styleName] = opt[styleName] || {};\r\n\r\n        if (!opt[styleName].emphasis) {\r\n          opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\r\n        } else {\r\n          merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\r\n        }\r\n\r\n        emphasisItemStyleOpt[styleName] = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  function convertNormalEmphasis(opt, optType, useExtend) {\r\n    if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\r\n      var normalOpt = opt[optType].normal;\r\n      var emphasisOpt = opt[optType].emphasis;\r\n\r\n      if (normalOpt) {\r\n        {\r\n          // eslint-disable-next-line max-len\r\n          deprecateLog(\"'normal' hierarchy in \" + optType + \" has been removed since 4.0. All style properties are configured in \" + optType + \" directly now.\");\r\n        } // Timeline controlStyle has other properties besides normal and emphasis\r\n\r\n        if (useExtend) {\r\n          opt[optType].normal = opt[optType].emphasis = null;\r\n          defaults(opt[optType], normalOpt);\r\n        } else {\r\n          opt[optType] = normalOpt;\r\n        }\r\n      }\r\n\r\n      if (emphasisOpt) {\r\n        {\r\n          deprecateLog(optType + \".emphasis has been changed to emphasis.\" + optType + \" since 4.0\");\r\n        }\r\n        opt.emphasis = opt.emphasis || {};\r\n        opt.emphasis[optType] = emphasisOpt; // Also compat the case user mix the style and focus together in ec3 style\r\n        // for example: { itemStyle: { normal: {}, emphasis: {focus, shadowBlur} } }\r\n\r\n        if (emphasisOpt.focus) {\r\n          opt.emphasis.focus = emphasisOpt.focus;\r\n        }\r\n\r\n        if (emphasisOpt.blurScope) {\r\n          opt.emphasis.blurScope = emphasisOpt.blurScope;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function removeEC3NormalStatus(opt) {\r\n    convertNormalEmphasis(opt, 'itemStyle');\r\n    convertNormalEmphasis(opt, 'lineStyle');\r\n    convertNormalEmphasis(opt, 'areaStyle');\r\n    convertNormalEmphasis(opt, 'label');\r\n    convertNormalEmphasis(opt, 'labelLine'); // treemap\r\n\r\n    convertNormalEmphasis(opt, 'upperLabel'); // graph\r\n\r\n    convertNormalEmphasis(opt, 'edgeLabel');\r\n  }\r\n\r\n  function compatTextStyle(opt, propName) {\r\n    // Check whether is not object (string\\null\\undefined ...)\r\n    var labelOptSingle = isObject$2(opt) && opt[propName];\r\n    var textStyle = isObject$2(labelOptSingle) && labelOptSingle.textStyle;\r\n\r\n    if (textStyle) {\r\n      {\r\n        // eslint-disable-next-line max-len\r\n        deprecateLog(\"textStyle hierarchy in \" + propName + \" has been removed since 4.0. All textStyle properties are configured in \" + propName + \" directly now.\");\r\n      }\r\n\r\n      for (var i = 0, len = TEXT_STYLE_OPTIONS.length; i < len; i++) {\r\n        var textPropName = TEXT_STYLE_OPTIONS[i];\r\n\r\n        if (textStyle.hasOwnProperty(textPropName)) {\r\n          labelOptSingle[textPropName] = textStyle[textPropName];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function compatEC3CommonStyles(opt) {\r\n    if (opt) {\r\n      removeEC3NormalStatus(opt);\r\n      compatTextStyle(opt, 'label');\r\n      opt.emphasis && compatTextStyle(opt.emphasis, 'label');\r\n    }\r\n  }\r\n\r\n  function processSeries(seriesOpt) {\r\n    if (!isObject$2(seriesOpt)) {\r\n      return;\r\n    }\r\n\r\n    compatEC2ItemStyle(seriesOpt);\r\n    removeEC3NormalStatus(seriesOpt);\r\n    compatTextStyle(seriesOpt, 'label'); // treemap\r\n\r\n    compatTextStyle(seriesOpt, 'upperLabel'); // graph\r\n\r\n    compatTextStyle(seriesOpt, 'edgeLabel');\r\n\r\n    if (seriesOpt.emphasis) {\r\n      compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\r\n\r\n      compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\r\n\r\n      compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\r\n    }\r\n\r\n    var markPoint = seriesOpt.markPoint;\r\n\r\n    if (markPoint) {\r\n      compatEC2ItemStyle(markPoint);\r\n      compatEC3CommonStyles(markPoint);\r\n    }\r\n\r\n    var markLine = seriesOpt.markLine;\r\n\r\n    if (markLine) {\r\n      compatEC2ItemStyle(markLine);\r\n      compatEC3CommonStyles(markLine);\r\n    }\r\n\r\n    var markArea = seriesOpt.markArea;\r\n\r\n    if (markArea) {\r\n      compatEC3CommonStyles(markArea);\r\n    }\r\n\r\n    var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\r\n    // then the backward compat based on option type will not be performed.\r\n\r\n    if (seriesOpt.type === 'graph') {\r\n      data = data || seriesOpt.nodes;\r\n      var edgeData = seriesOpt.links || seriesOpt.edges;\r\n\r\n      if (edgeData && !isTypedArray(edgeData)) {\r\n        for (var i = 0; i < edgeData.length; i++) {\r\n          compatEC3CommonStyles(edgeData[i]);\r\n        }\r\n      }\r\n\r\n      each$1(seriesOpt.categories, function (opt) {\r\n        removeEC3NormalStatus(opt);\r\n      });\r\n    }\r\n\r\n    if (data && !isTypedArray(data)) {\r\n      for (var i = 0; i < data.length; i++) {\r\n        compatEC3CommonStyles(data[i]);\r\n      }\r\n    } // mark point data\r\n\r\n\r\n    markPoint = seriesOpt.markPoint;\r\n\r\n    if (markPoint && markPoint.data) {\r\n      var mpData = markPoint.data;\r\n\r\n      for (var i = 0; i < mpData.length; i++) {\r\n        compatEC3CommonStyles(mpData[i]);\r\n      }\r\n    } // mark line data\r\n\r\n\r\n    markLine = seriesOpt.markLine;\r\n\r\n    if (markLine && markLine.data) {\r\n      var mlData = markLine.data;\r\n\r\n      for (var i = 0; i < mlData.length; i++) {\r\n        if (isArray(mlData[i])) {\r\n          compatEC3CommonStyles(mlData[i][0]);\r\n          compatEC3CommonStyles(mlData[i][1]);\r\n        } else {\r\n          compatEC3CommonStyles(mlData[i]);\r\n        }\r\n      }\r\n    } // Series\r\n\r\n\r\n    if (seriesOpt.type === 'gauge') {\r\n      compatTextStyle(seriesOpt, 'axisLabel');\r\n      compatTextStyle(seriesOpt, 'title');\r\n      compatTextStyle(seriesOpt, 'detail');\r\n    } else if (seriesOpt.type === 'treemap') {\r\n      convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\r\n      each$1(seriesOpt.levels, function (opt) {\r\n        removeEC3NormalStatus(opt);\r\n      });\r\n    } else if (seriesOpt.type === 'tree') {\r\n      removeEC3NormalStatus(seriesOpt.leaves);\r\n    } // sunburst starts from ec4, so it does not need to compat levels.\r\n\r\n  }\r\n\r\n  function toArr(o) {\r\n    return isArray(o) ? o : o ? [o] : [];\r\n  }\r\n\r\n  function toObj(o) {\r\n    return (isArray(o) ? o[0] : o) || {};\r\n  }\r\n\r\n  function globalCompatStyle(option, isTheme) {\r\n    each$3(toArr(option.series), function (seriesOpt) {\r\n      isObject$2(seriesOpt) && processSeries(seriesOpt);\r\n    });\r\n    var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\r\n    isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\r\n    each$3(axes, function (axisName) {\r\n      each$3(toArr(option[axisName]), function (axisOpt) {\r\n        if (axisOpt) {\r\n          compatTextStyle(axisOpt, 'axisLabel');\r\n          compatTextStyle(axisOpt.axisPointer, 'label');\r\n        }\r\n      });\r\n    });\r\n    each$3(toArr(option.parallel), function (parallelOpt) {\r\n      var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\r\n      compatTextStyle(parallelAxisDefault, 'axisLabel');\r\n      compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\r\n    });\r\n    each$3(toArr(option.calendar), function (calendarOpt) {\r\n      convertNormalEmphasis(calendarOpt, 'itemStyle');\r\n      compatTextStyle(calendarOpt, 'dayLabel');\r\n      compatTextStyle(calendarOpt, 'monthLabel');\r\n      compatTextStyle(calendarOpt, 'yearLabel');\r\n    }); // radar.name.textStyle\r\n\r\n    each$3(toArr(option.radar), function (radarOpt) {\r\n      compatTextStyle(radarOpt, 'name'); // Use axisName instead of name because component has name property\r\n\r\n      if (radarOpt.name && radarOpt.axisName == null) {\r\n        radarOpt.axisName = radarOpt.name;\r\n        delete radarOpt.name;\r\n        {\r\n          deprecateLog('name property in radar component has been changed to axisName');\r\n        }\r\n      }\r\n\r\n      if (radarOpt.nameGap != null && radarOpt.axisNameGap == null) {\r\n        radarOpt.axisNameGap = radarOpt.nameGap;\r\n        delete radarOpt.nameGap;\r\n        {\r\n          deprecateLog('nameGap property in radar component has been changed to axisNameGap');\r\n        }\r\n      }\r\n    });\r\n    each$3(toArr(option.geo), function (geoOpt) {\r\n      if (isObject$2(geoOpt)) {\r\n        compatEC3CommonStyles(geoOpt);\r\n        each$3(toArr(geoOpt.regions), function (regionObj) {\r\n          compatEC3CommonStyles(regionObj);\r\n        });\r\n      }\r\n    });\r\n    each$3(toArr(option.timeline), function (timelineOpt) {\r\n      compatEC3CommonStyles(timelineOpt);\r\n      convertNormalEmphasis(timelineOpt, 'label');\r\n      convertNormalEmphasis(timelineOpt, 'itemStyle');\r\n      convertNormalEmphasis(timelineOpt, 'controlStyle', true);\r\n      var data = timelineOpt.data;\r\n      isArray(data) && each$1(data, function (item) {\r\n        if (isObject$1(item)) {\r\n          convertNormalEmphasis(item, 'label');\r\n          convertNormalEmphasis(item, 'itemStyle');\r\n        }\r\n      });\r\n    });\r\n    each$3(toArr(option.toolbox), function (toolboxOpt) {\r\n      convertNormalEmphasis(toolboxOpt, 'iconStyle');\r\n      each$3(toolboxOpt.feature, function (featureOpt) {\r\n        convertNormalEmphasis(featureOpt, 'iconStyle');\r\n      });\r\n    });\r\n    compatTextStyle(toObj(option.axisPointer), 'label');\r\n    compatTextStyle(toObj(option.tooltip).axisPointer, 'label'); // Clean logs\r\n    // storedLogs = {};\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function get(opt, path) {\r\n    var pathArr = path.split(',');\r\n    var obj = opt;\r\n\r\n    for (var i = 0; i < pathArr.length; i++) {\r\n      obj = obj && obj[pathArr[i]];\r\n\r\n      if (obj == null) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  function set$1(opt, path, val, overwrite) {\r\n    var pathArr = path.split(',');\r\n    var obj = opt;\r\n    var key;\r\n    var i = 0;\r\n\r\n    for (; i < pathArr.length - 1; i++) {\r\n      key = pathArr[i];\r\n\r\n      if (obj[key] == null) {\r\n        obj[key] = {};\r\n      }\r\n\r\n      obj = obj[key];\r\n    }\r\n\r\n    if (overwrite || obj[pathArr[i]] == null) {\r\n      obj[pathArr[i]] = val;\r\n    }\r\n  }\r\n\r\n  function compatLayoutProperties(option) {\r\n    option && each$1(LAYOUT_PROPERTIES, function (prop) {\r\n      if (prop[0] in option && !(prop[1] in option)) {\r\n        option[prop[1]] = option[prop[0]];\r\n      }\r\n    });\r\n  }\r\n\r\n  var LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\r\n  var COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\r\n  var BAR_ITEM_STYLE_MAP = [['borderRadius', 'barBorderRadius'], ['borderColor', 'barBorderColor'], ['borderWidth', 'barBorderWidth']];\r\n\r\n  function compatBarItemStyle(option) {\r\n    var itemStyle = option && option.itemStyle;\r\n\r\n    if (itemStyle) {\r\n      for (var i = 0; i < BAR_ITEM_STYLE_MAP.length; i++) {\r\n        var oldName = BAR_ITEM_STYLE_MAP[i][1];\r\n        var newName = BAR_ITEM_STYLE_MAP[i][0];\r\n\r\n        if (itemStyle[oldName] != null) {\r\n          itemStyle[newName] = itemStyle[oldName];\r\n          {\r\n            deprecateReplaceLog(oldName, newName);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function compatPieLabel(option) {\r\n    if (!option) {\r\n      return;\r\n    }\r\n\r\n    if (option.alignTo === 'edge' && option.margin != null && option.edgeDistance == null) {\r\n      {\r\n        deprecateReplaceLog('label.margin', 'label.edgeDistance', 'pie');\r\n      }\r\n      option.edgeDistance = option.margin;\r\n    }\r\n  }\r\n\r\n  function compatSunburstState(option) {\r\n    if (!option) {\r\n      return;\r\n    }\r\n\r\n    if (option.downplay && !option.blur) {\r\n      option.blur = option.downplay;\r\n      {\r\n        deprecateReplaceLog('downplay', 'blur', 'sunburst');\r\n      }\r\n    }\r\n  }\r\n\r\n  function compatGraphFocus(option) {\r\n    if (!option) {\r\n      return;\r\n    }\r\n\r\n    if (option.focusNodeAdjacency != null) {\r\n      option.emphasis = option.emphasis || {};\r\n\r\n      if (option.emphasis.focus == null) {\r\n        {\r\n          deprecateReplaceLog('focusNodeAdjacency', 'emphasis: { focus: \\'adjacency\\'}', 'graph/sankey');\r\n        }\r\n        option.emphasis.focus = 'adjacency';\r\n      }\r\n    }\r\n  }\r\n\r\n  function traverseTree(data, cb) {\r\n    if (data) {\r\n      for (var i = 0; i < data.length; i++) {\r\n        cb(data[i]);\r\n        data[i] && traverseTree(data[i].children, cb);\r\n      }\r\n    }\r\n  }\r\n\r\n  function globalBackwardCompat(option, isTheme) {\r\n    globalCompatStyle(option, isTheme); // Make sure series array for model initialization.\r\n\r\n    option.series = normalizeToArray(option.series);\r\n    each$1(option.series, function (seriesOpt) {\r\n      if (!isObject$1(seriesOpt)) {\r\n        return;\r\n      }\r\n\r\n      var seriesType = seriesOpt.type;\r\n\r\n      if (seriesType === 'line') {\r\n        if (seriesOpt.clipOverflow != null) {\r\n          seriesOpt.clip = seriesOpt.clipOverflow;\r\n          {\r\n            deprecateReplaceLog('clipOverflow', 'clip', 'line');\r\n          }\r\n        }\r\n      } else if (seriesType === 'pie' || seriesType === 'gauge') {\r\n        if (seriesOpt.clockWise != null) {\r\n          seriesOpt.clockwise = seriesOpt.clockWise;\r\n          {\r\n            deprecateReplaceLog('clockWise', 'clockwise');\r\n          }\r\n        }\r\n\r\n        compatPieLabel(seriesOpt.label);\r\n        var data = seriesOpt.data;\r\n\r\n        if (data && !isTypedArray(data)) {\r\n          for (var i = 0; i < data.length; i++) {\r\n            compatPieLabel(data[i]);\r\n          }\r\n        }\r\n\r\n        if (seriesOpt.hoverOffset != null) {\r\n          seriesOpt.emphasis = seriesOpt.emphasis || {};\r\n\r\n          if (seriesOpt.emphasis.scaleSize = null) {\r\n            {\r\n              deprecateReplaceLog('hoverOffset', 'emphasis.scaleSize');\r\n            }\r\n            seriesOpt.emphasis.scaleSize = seriesOpt.hoverOffset;\r\n          }\r\n        }\r\n      } else if (seriesType === 'gauge') {\r\n        var pointerColor = get(seriesOpt, 'pointer.color');\r\n        pointerColor != null && set$1(seriesOpt, 'itemStyle.color', pointerColor);\r\n      } else if (seriesType === 'bar') {\r\n        compatBarItemStyle(seriesOpt);\r\n        compatBarItemStyle(seriesOpt.backgroundStyle);\r\n        compatBarItemStyle(seriesOpt.emphasis);\r\n        var data = seriesOpt.data;\r\n\r\n        if (data && !isTypedArray(data)) {\r\n          for (var i = 0; i < data.length; i++) {\r\n            if (typeof data[i] === 'object') {\r\n              compatBarItemStyle(data[i]);\r\n              compatBarItemStyle(data[i] && data[i].emphasis);\r\n            }\r\n          }\r\n        }\r\n      } else if (seriesType === 'sunburst') {\r\n        var highlightPolicy = seriesOpt.highlightPolicy;\r\n\r\n        if (highlightPolicy) {\r\n          seriesOpt.emphasis = seriesOpt.emphasis || {};\r\n\r\n          if (!seriesOpt.emphasis.focus) {\r\n            seriesOpt.emphasis.focus = highlightPolicy;\r\n            {\r\n              deprecateReplaceLog('highlightPolicy', 'emphasis.focus', 'sunburst');\r\n            }\r\n          }\r\n        }\r\n\r\n        compatSunburstState(seriesOpt);\r\n        traverseTree(seriesOpt.data, compatSunburstState);\r\n      } else if (seriesType === 'graph' || seriesType === 'sankey') {\r\n        compatGraphFocus(seriesOpt); // TODO nodes, edges?\r\n      } else if (seriesType === 'map') {\r\n        if (seriesOpt.mapType && !seriesOpt.map) {\r\n          {\r\n            deprecateReplaceLog('mapType', 'map', 'map');\r\n          }\r\n          seriesOpt.map = seriesOpt.mapType;\r\n        }\r\n\r\n        if (seriesOpt.mapLocation) {\r\n          {\r\n            deprecateLog('`mapLocation` is not used anymore.');\r\n          }\r\n          defaults(seriesOpt, seriesOpt.mapLocation);\r\n        }\r\n      }\r\n\r\n      if (seriesOpt.hoverAnimation != null) {\r\n        seriesOpt.emphasis = seriesOpt.emphasis || {};\r\n\r\n        if (seriesOpt.emphasis && seriesOpt.emphasis.scale == null) {\r\n          {\r\n            deprecateReplaceLog('hoverAnimation', 'emphasis.scale');\r\n          }\r\n          seriesOpt.emphasis.scale = seriesOpt.hoverAnimation;\r\n        }\r\n      }\r\n\r\n      compatLayoutProperties(seriesOpt);\r\n    }); // dataRange has changed to visualMap\r\n\r\n    if (option.dataRange) {\r\n      option.visualMap = option.dataRange;\r\n    }\r\n\r\n    each$1(COMPATITABLE_COMPONENTS, function (componentName) {\r\n      var options = option[componentName];\r\n\r\n      if (options) {\r\n        if (!isArray(options)) {\r\n          options = [options];\r\n        }\r\n\r\n        each$1(options, function (option) {\r\n          compatLayoutProperties(option);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n  //     data processing stage is blocked in stream.\r\n  //     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\r\n  // (2) Only register once when import repeatly.\r\n  //     Should be executed after series filtered and before stack calculation.\r\n\r\n\r\n  function dataStack(ecModel) {\r\n    var stackInfoMap = createHashMap();\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\r\n\r\n      if (stack) {\r\n        var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\r\n        var data = seriesModel.getData();\r\n        var stackInfo = {\r\n          // Used for calculate axis extent automatically.\r\n          // TODO: Type getCalculationInfo return more specific type?\r\n          stackResultDimension: data.getCalculationInfo('stackResultDimension'),\r\n          stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\r\n          stackedDimension: data.getCalculationInfo('stackedDimension'),\r\n          stackedByDimension: data.getCalculationInfo('stackedByDimension'),\r\n          isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\r\n          data: data,\r\n          seriesModel: seriesModel\r\n        }; // If stacked on axis that do not support data stack.\r\n\r\n        if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\r\n          return;\r\n        }\r\n\r\n        stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\r\n        stackInfoList.push(stackInfo);\r\n      }\r\n    });\r\n    stackInfoMap.each(calculateStack);\r\n  }\r\n\r\n  function calculateStack(stackInfoList) {\r\n    each$1(stackInfoList, function (targetStackInfo, idxInStack) {\r\n      var resultVal = [];\r\n      var resultNaN = [NaN, NaN];\r\n      var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\r\n      var targetData = targetStackInfo.data;\r\n      var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\r\n      // depending on legend selection.\r\n\r\n      var newData = targetData.map(dims, function (v0, v1, dataIndex) {\r\n        var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\r\n        // should also be NaN, to draw a appropriate belt area.\r\n\r\n        if (isNaN(sum)) {\r\n          return resultNaN;\r\n        }\r\n\r\n        var byValue;\r\n        var stackedDataRawIndex;\r\n\r\n        if (isStackedByIndex) {\r\n          stackedDataRawIndex = targetData.getRawIndex(dataIndex);\r\n        } else {\r\n          byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\r\n        } // If stackOver is NaN, chart view will render point on value start.\r\n\r\n\r\n        var stackedOver = NaN;\r\n\r\n        for (var j = idxInStack - 1; j >= 0; j--) {\r\n          var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\r\n\r\n          if (!isStackedByIndex) {\r\n            stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\r\n          }\r\n\r\n          if (stackedDataRawIndex >= 0) {\r\n            var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\r\n\r\n            if (sum >= 0 && val > 0 || // Positive stack\r\n            sum <= 0 && val < 0 // Negative stack\r\n            ) {\r\n                sum += val;\r\n                stackedOver = val;\r\n                break;\r\n              }\r\n          }\r\n        }\r\n\r\n        resultVal[0] = sum;\r\n        resultVal[1] = stackedOver;\r\n        return resultVal;\r\n      });\r\n      targetData.hostModel.setData(newData); // Update for consequent calculation\r\n\r\n      targetStackInfo.data = newData;\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n  // @inner\r\n\r\n\r\n  var SourceImpl =\r\n  /** @class */\r\n  function () {\r\n    // readonly frozen: boolean;\r\n    function SourceImpl(fields) {\r\n      this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\r\n      this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN; // Visit config\r\n\r\n      this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\r\n      this.startIndex = fields.startIndex || 0;\r\n      this.dimensionsDefine = fields.dimensionsDefine;\r\n      this.dimensionsDetectedCount = fields.dimensionsDetectedCount;\r\n      this.encodeDefine = fields.encodeDefine;\r\n      this.metaRawOption = fields.metaRawOption;\r\n    }\r\n\r\n    return SourceImpl;\r\n  }();\r\n\r\n  function isSourceInstance(val) {\r\n    return val instanceof SourceImpl;\r\n  }\r\n\r\n  function createSource(sourceData, thisMetaRawOption, // can be null. If not provided, auto detect it from `sourceData`.\r\n  sourceFormat, encodeDefine // can be null\r\n  ) {\r\n    sourceFormat = sourceFormat || detectSourceFormat(sourceData);\r\n    var seriesLayoutBy = thisMetaRawOption.seriesLayoutBy;\r\n    var determined = determineSourceDimensions(sourceData, sourceFormat, seriesLayoutBy, thisMetaRawOption.sourceHeader, thisMetaRawOption.dimensions);\r\n    var source = new SourceImpl({\r\n      data: sourceData,\r\n      sourceFormat: sourceFormat,\r\n      seriesLayoutBy: seriesLayoutBy,\r\n      dimensionsDefine: determined.dimensionsDefine,\r\n      startIndex: determined.startIndex,\r\n      dimensionsDetectedCount: determined.dimensionsDetectedCount,\r\n      encodeDefine: makeEncodeDefine(encodeDefine),\r\n      metaRawOption: clone(thisMetaRawOption)\r\n    });\r\n    return source;\r\n  }\r\n  /**\r\n   * Wrap original series data for some compatibility cases.\r\n   */\r\n\r\n\r\n  function createSourceFromSeriesDataOption(data) {\r\n    return new SourceImpl({\r\n      data: data,\r\n      sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL\r\n    });\r\n  }\r\n  /**\r\n   * Clone source but excludes source data.\r\n   */\r\n\r\n\r\n  function cloneSourceShallow(source) {\r\n    return new SourceImpl({\r\n      data: source.data,\r\n      sourceFormat: source.sourceFormat,\r\n      seriesLayoutBy: source.seriesLayoutBy,\r\n      dimensionsDefine: clone(source.dimensionsDefine),\r\n      startIndex: source.startIndex,\r\n      dimensionsDetectedCount: source.dimensionsDetectedCount,\r\n      encodeDefine: makeEncodeDefine(source.encodeDefine)\r\n    });\r\n  }\r\n\r\n  function makeEncodeDefine(encodeDefine) {\r\n    // null means user not specify `series.encode`.\r\n    return encodeDefine ? createHashMap(encodeDefine) : null;\r\n  }\r\n  /**\r\n   * Note: An empty array will be detected as `SOURCE_FORMAT_ARRAY_ROWS`.\r\n   */\r\n\r\n\r\n  function detectSourceFormat(data) {\r\n    var sourceFormat = SOURCE_FORMAT_UNKNOWN;\r\n\r\n    if (isTypedArray(data)) {\r\n      sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\r\n    } else if (isArray(data)) {\r\n      // FIXME Whether tolerate null in top level array?\r\n      if (data.length === 0) {\r\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\r\n      }\r\n\r\n      for (var i = 0, len = data.length; i < len; i++) {\r\n        var item = data[i];\r\n\r\n        if (item == null) {\r\n          continue;\r\n        } else if (isArray(item)) {\r\n          sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\r\n          break;\r\n        } else if (isObject$1(item)) {\r\n          sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\r\n          break;\r\n        }\r\n      }\r\n    } else if (isObject$1(data)) {\r\n      for (var key in data) {\r\n        if (hasOwn(data, key) && isArrayLike(data[key])) {\r\n          sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return sourceFormat;\r\n  }\r\n  /**\r\n   * Determine the source definitions from data standalone dimensions definitions\r\n   * are not specified.\r\n   */\r\n\r\n\r\n  function determineSourceDimensions(data, sourceFormat, seriesLayoutBy, sourceHeader, // standalone raw dimensions definition, like:\r\n  // {\r\n  //     dimensions: ['aa', 'bb', { name: 'cc', type: 'time' }]\r\n  // }\r\n  // in `dataset` or `series`\r\n  dimensionsDefine) {\r\n    var dimensionsDetectedCount;\r\n    var startIndex; // PEDING: could data be null/undefined here?\r\n    // currently, if `dataset.source` not specified, error thrown.\r\n    // if `series.data` not specified, nothing rendered without error thrown.\r\n    // Should test these cases.\r\n\r\n    if (!data) {\r\n      return {\r\n        dimensionsDefine: normalizeDimensionsOption(dimensionsDefine),\r\n        startIndex: startIndex,\r\n        dimensionsDetectedCount: dimensionsDetectedCount\r\n      };\r\n    }\r\n\r\n    if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\r\n      var dataArrayRows = data; // Rule: Most of the first line are string: it is header.\r\n      // Caution: consider a line with 5 string and 1 number,\r\n      // it still can not be sure it is a head, because the\r\n      // 5 string may be 5 values of category columns.\r\n\r\n      if (sourceHeader === 'auto' || sourceHeader == null) {\r\n        arrayRowsTravelFirst(function (val) {\r\n          // '-' is regarded as null/undefined.\r\n          if (val != null && val !== '-') {\r\n            if (isString(val)) {\r\n              startIndex == null && (startIndex = 1);\r\n            } else {\r\n              startIndex = 0;\r\n            }\r\n          } // 10 is an experience number, avoid long loop.\r\n\r\n        }, seriesLayoutBy, dataArrayRows, 10);\r\n      } else {\r\n        startIndex = isNumber(sourceHeader) ? sourceHeader : sourceHeader ? 1 : 0;\r\n      }\r\n\r\n      if (!dimensionsDefine && startIndex === 1) {\r\n        dimensionsDefine = [];\r\n        arrayRowsTravelFirst(function (val, index) {\r\n          dimensionsDefine[index] = val != null ? val + '' : '';\r\n        }, seriesLayoutBy, dataArrayRows, Infinity);\r\n      }\r\n\r\n      dimensionsDetectedCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? dataArrayRows.length : dataArrayRows[0] ? dataArrayRows[0].length : null;\r\n    } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\r\n      if (!dimensionsDefine) {\r\n        dimensionsDefine = objectRowsCollectDimensions(data);\r\n      }\r\n    } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\r\n      if (!dimensionsDefine) {\r\n        dimensionsDefine = [];\r\n        each$1(data, function (colArr, key) {\r\n          dimensionsDefine.push(key);\r\n        });\r\n      }\r\n    } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\r\n      var value0 = getDataItemValue(data[0]);\r\n      dimensionsDetectedCount = isArray(value0) && value0.length || 1;\r\n    } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\r\n      {\r\n        assert$1(!!dimensionsDefine, 'dimensions must be given if data is TypedArray.');\r\n      }\r\n    }\r\n\r\n    return {\r\n      startIndex: startIndex,\r\n      dimensionsDefine: normalizeDimensionsOption(dimensionsDefine),\r\n      dimensionsDetectedCount: dimensionsDetectedCount\r\n    };\r\n  }\r\n\r\n  function objectRowsCollectDimensions(data) {\r\n    var firstIndex = 0;\r\n    var obj;\r\n\r\n    while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\r\n\r\n\r\n    if (obj) {\r\n      var dimensions_1 = [];\r\n      each$1(obj, function (value, key) {\r\n        dimensions_1.push(key);\r\n      });\r\n      return dimensions_1;\r\n    }\r\n  } // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\r\n  // which is reasonable. But dimension name is duplicated.\r\n  // Returns undefined or an array contains only object without null/undefiend or string.\r\n\r\n\r\n  function normalizeDimensionsOption(dimensionsDefine) {\r\n    if (!dimensionsDefine) {\r\n      // The meaning of null/undefined is different from empty array.\r\n      return;\r\n    }\r\n\r\n    var nameMap = createHashMap();\r\n    return map(dimensionsDefine, function (rawItem, index) {\r\n      rawItem = isObject$1(rawItem) ? rawItem : {\r\n        name: rawItem\r\n      }; // Other fields will be discarded.\r\n\r\n      var item = {\r\n        name: rawItem.name,\r\n        displayName: rawItem.displayName,\r\n        type: rawItem.type\r\n      }; // User can set null in dimensions.\r\n      // We dont auto specify name, othewise a given name may\r\n      // cause it be refered unexpectedly.\r\n\r\n      if (item.name == null) {\r\n        return item;\r\n      } // Also consider number form like 2012.\r\n\r\n\r\n      item.name += ''; // User may also specify displayName.\r\n      // displayName will always exists except user not\r\n      // specified or dim name is not specified or detected.\r\n      // (A auto generated dim name will not be used as\r\n      // displayName).\r\n\r\n      if (item.displayName == null) {\r\n        item.displayName = item.name;\r\n      }\r\n\r\n      var exist = nameMap.get(item.name);\r\n\r\n      if (!exist) {\r\n        nameMap.set(item.name, {\r\n          count: 1\r\n        });\r\n      } else {\r\n        item.name += '-' + exist.count++;\r\n      }\r\n\r\n      return item;\r\n    });\r\n  }\r\n\r\n  function arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\r\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\r\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\r\n        cb(data[i] ? data[i][0] : null, i);\r\n      }\r\n    } else {\r\n      var value0 = data[0] || [];\r\n\r\n      for (var i = 0; i < value0.length && i < maxLoop; i++) {\r\n        cb(value0[i], i);\r\n      }\r\n    }\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var _a;\r\n\r\n  var _b;\r\n\r\n  var _c; // TODO\r\n  // ??? refactor? check the outer usage of data provider.\r\n  // merge with defaultDimValueGetter?\r\n\r\n\r\n  var providerMethods;\r\n  var mountMethods;\r\n  /**\r\n   * If normal array used, mutable chunk size is supported.\r\n   * If typed array used, chunk size must be fixed.\r\n   */\r\n\r\n  var DefaultDataProvider =\r\n  /** @class */\r\n  function () {\r\n    function DefaultDataProvider(sourceParam, dimSize) {\r\n      // let source: Source;\r\n      var source = !isSourceInstance(sourceParam) ? createSourceFromSeriesDataOption(sourceParam) : sourceParam; // declare source is Source;\r\n\r\n      this._source = source;\r\n      var data = this._data = source.data; // Typed array. TODO IE10+?\r\n\r\n      if (source.sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\r\n        {\r\n          if (dimSize == null) {\r\n            throw new Error('Typed array data must specify dimension size');\r\n          }\r\n        }\r\n        this._offset = 0;\r\n        this._dimSize = dimSize;\r\n        this._data = data;\r\n      }\r\n\r\n      mountMethods(this, data, source);\r\n    }\r\n\r\n    DefaultDataProvider.prototype.getSource = function () {\r\n      return this._source;\r\n    };\r\n\r\n    DefaultDataProvider.prototype.count = function () {\r\n      return 0;\r\n    };\r\n\r\n    DefaultDataProvider.prototype.getItem = function (idx, out) {\r\n      return;\r\n    };\r\n\r\n    DefaultDataProvider.prototype.appendData = function (newData) {};\r\n\r\n    DefaultDataProvider.prototype.clean = function () {};\r\n\r\n    DefaultDataProvider.protoInitialize = function () {\r\n      // PENDING: To avoid potential incompat (e.g., prototype\r\n      // is visited somewhere), still init them on prototype.\r\n      var proto = DefaultDataProvider.prototype;\r\n      proto.pure = false;\r\n      proto.persistent = true;\r\n    }();\r\n\r\n    DefaultDataProvider.internalField = function () {\r\n      var _a;\r\n\r\n      mountMethods = function (provider, data, source) {\r\n        var sourceFormat = source.sourceFormat;\r\n        var seriesLayoutBy = source.seriesLayoutBy;\r\n        var startIndex = source.startIndex;\r\n        var dimsDef = source.dimensionsDefine;\r\n        var methods = providerMethods[getMethodMapKey(sourceFormat, seriesLayoutBy)];\r\n        {\r\n          assert$1(methods, 'Invalide sourceFormat: ' + sourceFormat);\r\n        }\r\n        extend(provider, methods);\r\n\r\n        if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\r\n          provider.getItem = getItemForTypedArray;\r\n          provider.count = countForTypedArray;\r\n          provider.fillStorage = fillStorageForTypedArray;\r\n        } else {\r\n          var rawItemGetter = getRawSourceItemGetter(sourceFormat, seriesLayoutBy);\r\n          provider.getItem = bind(rawItemGetter, null, data, startIndex, dimsDef);\r\n          var rawCounter = getRawSourceDataCounter(sourceFormat, seriesLayoutBy);\r\n          provider.count = bind(rawCounter, null, data, startIndex, dimsDef);\r\n        }\r\n      };\r\n\r\n      var getItemForTypedArray = function (idx, out) {\r\n        idx = idx - this._offset;\r\n        out = out || [];\r\n        var data = this._data;\r\n        var dimSize = this._dimSize;\r\n        var offset = dimSize * idx;\r\n\r\n        for (var i = 0; i < dimSize; i++) {\r\n          out[i] = data[offset + i];\r\n        }\r\n\r\n        return out;\r\n      };\r\n\r\n      var fillStorageForTypedArray = function (start, end, storage, extent) {\r\n        var data = this._data;\r\n        var dimSize = this._dimSize;\r\n\r\n        for (var dim = 0; dim < dimSize; dim++) {\r\n          var dimExtent = extent[dim];\r\n          var min = dimExtent[0] == null ? Infinity : dimExtent[0];\r\n          var max = dimExtent[1] == null ? -Infinity : dimExtent[1];\r\n          var count = end - start;\r\n          var arr = storage[dim];\r\n\r\n          for (var i = 0; i < count; i++) {\r\n            // appendData with TypedArray will always do replace in provider.\r\n            var val = data[i * dimSize + dim];\r\n            arr[start + i] = val;\r\n            val < min && (min = val);\r\n            val > max && (max = val);\r\n          }\r\n\r\n          dimExtent[0] = min;\r\n          dimExtent[1] = max;\r\n        }\r\n      };\r\n\r\n      var countForTypedArray = function () {\r\n        return this._data ? this._data.length / this._dimSize : 0;\r\n      };\r\n\r\n      providerMethods = (_a = {}, _a[SOURCE_FORMAT_ARRAY_ROWS + '_' + SERIES_LAYOUT_BY_COLUMN] = {\r\n        pure: true,\r\n        appendData: appendDataSimply\r\n      }, _a[SOURCE_FORMAT_ARRAY_ROWS + '_' + SERIES_LAYOUT_BY_ROW] = {\r\n        pure: true,\r\n        appendData: function () {\r\n          throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\r\n        }\r\n      }, _a[SOURCE_FORMAT_OBJECT_ROWS] = {\r\n        pure: true,\r\n        appendData: appendDataSimply\r\n      }, _a[SOURCE_FORMAT_KEYED_COLUMNS] = {\r\n        pure: true,\r\n        appendData: function (newData) {\r\n          var data = this._data;\r\n          each$1(newData, function (newCol, key) {\r\n            var oldCol = data[key] || (data[key] = []);\r\n\r\n            for (var i = 0; i < (newCol || []).length; i++) {\r\n              oldCol.push(newCol[i]);\r\n            }\r\n          });\r\n        }\r\n      }, _a[SOURCE_FORMAT_ORIGINAL] = {\r\n        appendData: appendDataSimply\r\n      }, _a[SOURCE_FORMAT_TYPED_ARRAY] = {\r\n        persistent: false,\r\n        pure: true,\r\n        appendData: function (newData) {\r\n          {\r\n            assert$1(isTypedArray(newData), 'Added data must be TypedArray if data in initialization is TypedArray');\r\n          }\r\n          this._data = newData;\r\n        },\r\n        // Clean self if data is already used.\r\n        clean: function () {\r\n          // PENDING\r\n          this._offset += this.count();\r\n          this._data = null;\r\n        }\r\n      }, _a);\r\n\r\n      function appendDataSimply(newData) {\r\n        for (var i = 0; i < newData.length; i++) {\r\n          this._data.push(newData[i]);\r\n        }\r\n      }\r\n    }();\r\n\r\n    return DefaultDataProvider;\r\n  }();\r\n\r\n  var getItemSimply = function (rawData, startIndex, dimsDef, idx) {\r\n    return rawData[idx];\r\n  };\r\n\r\n  var rawSourceItemGetterMap = (_a = {}, _a[SOURCE_FORMAT_ARRAY_ROWS + '_' + SERIES_LAYOUT_BY_COLUMN] = function (rawData, startIndex, dimsDef, idx) {\r\n    return rawData[idx + startIndex];\r\n  }, _a[SOURCE_FORMAT_ARRAY_ROWS + '_' + SERIES_LAYOUT_BY_ROW] = function (rawData, startIndex, dimsDef, idx) {\r\n    idx += startIndex;\r\n    var item = [];\r\n    var data = rawData;\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n      var row = data[i];\r\n      item.push(row ? row[idx] : null);\r\n    }\r\n\r\n    return item;\r\n  }, _a[SOURCE_FORMAT_OBJECT_ROWS] = getItemSimply, _a[SOURCE_FORMAT_KEYED_COLUMNS] = function (rawData, startIndex, dimsDef, idx) {\r\n    var item = [];\r\n\r\n    for (var i = 0; i < dimsDef.length; i++) {\r\n      var dimName = dimsDef[i].name;\r\n      {\r\n        if (dimName == null) {\r\n          throw new Error();\r\n        }\r\n      }\r\n      var col = rawData[dimName];\r\n      item.push(col ? col[idx] : null);\r\n    }\r\n\r\n    return item;\r\n  }, _a[SOURCE_FORMAT_ORIGINAL] = getItemSimply, _a);\r\n\r\n  function getRawSourceItemGetter(sourceFormat, seriesLayoutBy) {\r\n    var method = rawSourceItemGetterMap[getMethodMapKey(sourceFormat, seriesLayoutBy)];\r\n    {\r\n      assert$1(method, 'Do not suppport get item on \"' + sourceFormat + '\", \"' + seriesLayoutBy + '\".');\r\n    }\r\n    return method;\r\n  }\r\n\r\n  var countSimply = function (rawData, startIndex, dimsDef) {\r\n    return rawData.length;\r\n  };\r\n\r\n  var rawSourceDataCounterMap = (_b = {}, _b[SOURCE_FORMAT_ARRAY_ROWS + '_' + SERIES_LAYOUT_BY_COLUMN] = function (rawData, startIndex, dimsDef) {\r\n    return Math.max(0, rawData.length - startIndex);\r\n  }, _b[SOURCE_FORMAT_ARRAY_ROWS + '_' + SERIES_LAYOUT_BY_ROW] = function (rawData, startIndex, dimsDef) {\r\n    var row = rawData[0];\r\n    return row ? Math.max(0, row.length - startIndex) : 0;\r\n  }, _b[SOURCE_FORMAT_OBJECT_ROWS] = countSimply, _b[SOURCE_FORMAT_KEYED_COLUMNS] = function (rawData, startIndex, dimsDef) {\r\n    var dimName = dimsDef[0].name;\r\n    {\r\n      if (dimName == null) {\r\n        throw new Error();\r\n      }\r\n    }\r\n    var col = rawData[dimName];\r\n    return col ? col.length : 0;\r\n  }, _b[SOURCE_FORMAT_ORIGINAL] = countSimply, _b);\r\n\r\n  function getRawSourceDataCounter(sourceFormat, seriesLayoutBy) {\r\n    var method = rawSourceDataCounterMap[getMethodMapKey(sourceFormat, seriesLayoutBy)];\r\n    {\r\n      assert$1(method, 'Do not suppport count on \"' + sourceFormat + '\", \"' + seriesLayoutBy + '\".');\r\n    }\r\n    return method;\r\n  }\r\n\r\n  var getRawValueSimply = function (dataItem, dimIndex, dimName) {\r\n    return dimIndex != null ? dataItem[dimIndex] : dataItem;\r\n  };\r\n\r\n  var rawSourceValueGetterMap = (_c = {}, _c[SOURCE_FORMAT_ARRAY_ROWS] = getRawValueSimply, _c[SOURCE_FORMAT_OBJECT_ROWS] = function (dataItem, dimIndex, dimName) {\r\n    return dimIndex != null ? dataItem[dimName] : dataItem;\r\n  }, _c[SOURCE_FORMAT_KEYED_COLUMNS] = getRawValueSimply, _c[SOURCE_FORMAT_ORIGINAL] = function (dataItem, dimIndex, dimName) {\r\n    // FIXME: In some case (markpoint in geo (geo-map.html)),\r\n    // dataItem is {coord: [...]}\r\n    var value = getDataItemValue(dataItem);\r\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\r\n  }, _c[SOURCE_FORMAT_TYPED_ARRAY] = getRawValueSimply, _c);\r\n\r\n  function getRawSourceValueGetter(sourceFormat) {\r\n    var method = rawSourceValueGetterMap[sourceFormat];\r\n    {\r\n      assert$1(method, 'Do not suppport get value on \"' + sourceFormat + '\".');\r\n    }\r\n    return method;\r\n  }\r\n\r\n  function getMethodMapKey(sourceFormat, seriesLayoutBy) {\r\n    return sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + seriesLayoutBy : sourceFormat;\r\n  } // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\r\n  // Consider persistent.\r\n  // Caution: why use raw value to display on label or tooltip?\r\n  // A reason is to avoid format. For example time value we do not know\r\n  // how to format is expected. More over, if stack is used, calculated\r\n  // value may be 0.91000000001, which have brings trouble to display.\r\n  // TODO: consider how to treat null/undefined/NaN when display?\r\n\r\n\r\n  function retrieveRawValue(data, dataIndex, dim // If dimIndex is null/undefined, return OptionDataItem.\r\n  // Otherwise, return OptionDataValue.\r\n  ) {\r\n    if (!data) {\r\n      return;\r\n    } // Consider data may be not persistent.\r\n\r\n\r\n    var dataItem = data.getRawDataItem(dataIndex);\r\n\r\n    if (dataItem == null) {\r\n      return;\r\n    }\r\n\r\n    var sourceFormat = data.getProvider().getSource().sourceFormat;\r\n    var dimName;\r\n    var dimIndex;\r\n    var dimInfo = data.getDimensionInfo(dim);\r\n\r\n    if (dimInfo) {\r\n      dimName = dimInfo.name;\r\n      dimIndex = dimInfo.index;\r\n    }\r\n\r\n    return getRawSourceValueGetter(sourceFormat)(dataItem, dimIndex, dimName);\r\n  }\r\n  /**\r\n   * Compatible with some cases (in pie, map) like:\r\n   * data: [{name: 'xx', value: 5, selected: true}, ...]\r\n   * where only sourceFormat is 'original' and 'objectRows' supported.\r\n   *\r\n   * // TODO\r\n   * Supported detail options in data item when using 'arrayRows'.\r\n   *\r\n   * @param data\r\n   * @param dataIndex\r\n   * @param attr like 'selected'\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g;\r\n\r\n  var DataFormatMixin =\r\n  /** @class */\r\n  function () {\r\n    function DataFormatMixin() {}\r\n    /**\r\n     * Get params for formatter\r\n     */\r\n\r\n\r\n    DataFormatMixin.prototype.getDataParams = function (dataIndex, dataType) {\r\n      var data = this.getData(dataType);\r\n      var rawValue = this.getRawValue(dataIndex, dataType);\r\n      var rawDataIndex = data.getRawIndex(dataIndex);\r\n      var name = data.getName(dataIndex);\r\n      var itemOpt = data.getRawDataItem(dataIndex);\r\n      var style = data.getItemVisual(dataIndex, 'style');\r\n      var color = style && style[data.getItemVisual(dataIndex, 'drawType') || 'fill'];\r\n      var borderColor = style && style.stroke;\r\n      var mainType = this.mainType;\r\n      var isSeries = mainType === 'series';\r\n      var userOutput = data.userOutput;\r\n      return {\r\n        componentType: mainType,\r\n        componentSubType: this.subType,\r\n        componentIndex: this.componentIndex,\r\n        seriesType: isSeries ? this.subType : null,\r\n        seriesIndex: this.seriesIndex,\r\n        seriesId: isSeries ? this.id : null,\r\n        seriesName: isSeries ? this.name : null,\r\n        name: name,\r\n        dataIndex: rawDataIndex,\r\n        data: itemOpt,\r\n        dataType: dataType,\r\n        value: rawValue,\r\n        color: color,\r\n        borderColor: borderColor,\r\n        dimensionNames: userOutput ? userOutput.dimensionNames : null,\r\n        encode: userOutput ? userOutput.encode : null,\r\n        // Param name list for mapping `a`, `b`, `c`, `d`, `e`\r\n        $vars: ['seriesName', 'name', 'value']\r\n      };\r\n    };\r\n    /**\r\n     * Format label\r\n     * @param dataIndex\r\n     * @param status 'normal' by default\r\n     * @param dataType\r\n     * @param labelDimIndex Only used in some chart that\r\n     *        use formatter in different dimensions, like radar.\r\n     * @param formatter Formatter given outside.\r\n     * @return return null/undefined if no formatter\r\n     */\r\n\r\n\r\n    DataFormatMixin.prototype.getFormattedLabel = function (dataIndex, status, dataType, labelDimIndex, formatter, extendParams) {\r\n      status = status || 'normal';\r\n      var data = this.getData(dataType);\r\n      var params = this.getDataParams(dataIndex, dataType);\r\n\r\n      if (extendParams) {\r\n        params.value = extendParams.interpolatedValue;\r\n      }\r\n\r\n      if (labelDimIndex != null && isArray(params.value)) {\r\n        params.value = params.value[labelDimIndex];\r\n      }\r\n\r\n      if (!formatter) {\r\n        var itemModel = data.getItemModel(dataIndex); // @ts-ignore\r\n\r\n        formatter = itemModel.get(status === 'normal' ? ['label', 'formatter'] : [status, 'label', 'formatter']);\r\n      }\r\n\r\n      if (typeof formatter === 'function') {\r\n        params.status = status;\r\n        params.dimensionIndex = labelDimIndex;\r\n        return formatter(params);\r\n      } else if (typeof formatter === 'string') {\r\n        var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\r\n        // Do not support '}' in dim name util have to.\r\n\r\n        return str.replace(DIMENSION_LABEL_REG, function (origin, dimStr) {\r\n          var len = dimStr.length;\r\n          var dimLoose = dimStr.charAt(0) === '[' && dimStr.charAt(len - 1) === ']' ? +dimStr.slice(1, len - 1) // Also support: '[]' => 0\r\n          : dimStr;\r\n          var val = retrieveRawValue(data, dataIndex, dimLoose);\r\n\r\n          if (extendParams && isArray(extendParams.interpolatedValue)) {\r\n            var dimInfo = data.getDimensionInfo(dimLoose);\r\n\r\n            if (dimInfo) {\r\n              val = extendParams.interpolatedValue[dimInfo.index];\r\n            }\r\n          }\r\n\r\n          return val != null ? val + '' : '';\r\n        });\r\n      }\r\n    };\r\n    /**\r\n     * Get raw value in option\r\n     */\r\n\r\n\r\n    DataFormatMixin.prototype.getRawValue = function (idx, dataType) {\r\n      return retrieveRawValue(this.getData(dataType), idx);\r\n    };\r\n    /**\r\n     * Should be implemented.\r\n     * @param {number} dataIndex\r\n     * @param {boolean} [multipleSeries=false]\r\n     * @param {string} [dataType]\r\n     */\r\n\r\n\r\n    DataFormatMixin.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\r\n      // Empty function\r\n      return;\r\n    };\r\n\r\n    return DataFormatMixin;\r\n  }(); // PENDING: previously we accept this type when calling `formatTooltip`,\r\n  // but guess little chance has been used outside. Do we need to backward\r\n  // compat it?\r\n  // type TooltipFormatResultLegacyObject = {\r\n  //     // `html` means the markup language text, either in 'html' or 'richText'.\r\n  //     // The name `html` is not appropriate becuase in 'richText' it is not a HTML\r\n  //     // string. But still support it for backward compat.\r\n  //     html: string;\r\n  //     markers: Dictionary<ColorString>;\r\n  // };\r\n\r\n  /**\r\n   * For backward compat, normalize the return from `formatTooltip`.\r\n   */\r\n\r\n\r\n  function normalizeTooltipFormatResult(result // markersExisting: Dictionary<ColorString>\r\n  ) {\r\n    var markupText; // let markers: Dictionary<ColorString>;\r\n\r\n    var markupFragment;\r\n\r\n    if (isObject$1(result)) {\r\n      if (result.type) {\r\n        markupFragment = result;\r\n      } else {\r\n        {\r\n          console.warn('The return type of `formatTooltip` is not supported: ' + makePrintable(result));\r\n        }\r\n      } // else {\r\n      //     markupText = (result as TooltipFormatResultLegacyObject).html;\r\n      //     markers = (result as TooltipFormatResultLegacyObject).markers;\r\n      //     if (markersExisting) {\r\n      //         markers = zrUtil.merge(markersExisting, markers);\r\n      //     }\r\n      // }\r\n\r\n    } else {\r\n      markupText = result;\r\n    }\r\n\r\n    return {\r\n      markupText: markupText,\r\n      // markers: markers || markersExisting,\r\n      markupFragment: markupFragment\r\n    };\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * @param {Object} define\r\n   * @return See the return of `createTask`.\r\n   */\r\n\r\n\r\n  function createTask(define) {\r\n    return new Task(define);\r\n  }\r\n\r\n  var Task =\r\n  /** @class */\r\n  function () {\r\n    function Task(define) {\r\n      define = define || {};\r\n      this._reset = define.reset;\r\n      this._plan = define.plan;\r\n      this._count = define.count;\r\n      this._onDirty = define.onDirty;\r\n      this._dirty = true;\r\n    }\r\n    /**\r\n     * @param step Specified step.\r\n     * @param skip Skip customer perform call.\r\n     * @param modBy Sampling window size.\r\n     * @param modDataCount Sampling count.\r\n     * @return whether unfinished.\r\n     */\r\n\r\n\r\n    Task.prototype.perform = function (performArgs) {\r\n      var upTask = this._upstream;\r\n      var skip = performArgs && performArgs.skip; // TODO some refactor.\r\n      // Pull data. Must pull data each time, because context.data\r\n      // may be updated by Series.setData.\r\n\r\n      if (this._dirty && upTask) {\r\n        var context = this.context;\r\n        context.data = context.outputData = upTask.context.outputData;\r\n      }\r\n\r\n      if (this.__pipeline) {\r\n        this.__pipeline.currentTask = this;\r\n      }\r\n\r\n      var planResult;\r\n\r\n      if (this._plan && !skip) {\r\n        planResult = this._plan(this.context);\r\n      } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\r\n      // elements uniformed distributed when progress, especially when moving or zooming.\r\n\r\n\r\n      var lastModBy = normalizeModBy(this._modBy);\r\n      var lastModDataCount = this._modDataCount || 0;\r\n      var modBy = normalizeModBy(performArgs && performArgs.modBy);\r\n      var modDataCount = performArgs && performArgs.modDataCount || 0;\r\n\r\n      if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\r\n        planResult = 'reset';\r\n      }\r\n\r\n      function normalizeModBy(val) {\r\n        !(val >= 1) && (val = 1); // jshint ignore:line\r\n\r\n        return val;\r\n      }\r\n\r\n      var forceFirstProgress;\r\n\r\n      if (this._dirty || planResult === 'reset') {\r\n        this._dirty = false;\r\n        forceFirstProgress = this._doReset(skip);\r\n      }\r\n\r\n      this._modBy = modBy;\r\n      this._modDataCount = modDataCount;\r\n      var step = performArgs && performArgs.step;\r\n\r\n      if (upTask) {\r\n        {\r\n          assert$1(upTask._outputDueEnd != null);\r\n        }\r\n        this._dueEnd = upTask._outputDueEnd;\r\n      } // DataTask or overallTask\r\n      else {\r\n          {\r\n            assert$1(!this._progress || this._count);\r\n          }\r\n          this._dueEnd = this._count ? this._count(this.context) : Infinity;\r\n        } // Note: Stubs, that its host overall task let it has progress, has progress.\r\n      // If no progress, pass index from upstream to downstream each time plan called.\r\n\r\n\r\n      if (this._progress) {\r\n        var start = this._dueIndex;\r\n        var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\r\n\r\n        if (!skip && (forceFirstProgress || start < end)) {\r\n          var progress = this._progress;\r\n\r\n          if (isArray(progress)) {\r\n            for (var i = 0; i < progress.length; i++) {\r\n              this._doProgress(progress[i], start, end, modBy, modDataCount);\r\n            }\r\n          } else {\r\n            this._doProgress(progress, start, end, modBy, modDataCount);\r\n          }\r\n        }\r\n\r\n        this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\r\n        // input data is the same, so use `dueIndex` as `outputDueEnd`.\r\n\r\n        var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\r\n        {\r\n          // ??? Can not rollback.\r\n          assert$1(outputDueEnd >= this._outputDueEnd);\r\n        }\r\n        this._outputDueEnd = outputDueEnd;\r\n      } else {\r\n        // (1) Some overall task has no progress.\r\n        // (2) Stubs, that its host overall task do not let it has progress, has no progress.\r\n        // This should always be performed so it can be passed to downstream.\r\n        this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\r\n      }\r\n\r\n      return this.unfinished();\r\n    };\r\n\r\n    Task.prototype.dirty = function () {\r\n      this._dirty = true;\r\n      this._onDirty && this._onDirty(this.context);\r\n    };\r\n\r\n    Task.prototype._doProgress = function (progress, start, end, modBy, modDataCount) {\r\n      iterator.reset(start, end, modBy, modDataCount);\r\n      this._callingProgress = progress;\r\n\r\n      this._callingProgress({\r\n        start: start,\r\n        end: end,\r\n        count: end - start,\r\n        next: iterator.next\r\n      }, this.context);\r\n    };\r\n\r\n    Task.prototype._doReset = function (skip) {\r\n      this._dueIndex = this._outputDueEnd = this._dueEnd = 0;\r\n      this._settedOutputEnd = null;\r\n      var progress;\r\n      var forceFirstProgress;\r\n\r\n      if (!skip && this._reset) {\r\n        progress = this._reset(this.context);\r\n\r\n        if (progress && progress.progress) {\r\n          forceFirstProgress = progress.forceFirstProgress;\r\n          progress = progress.progress;\r\n        } // To simplify no progress checking, array must has item.\r\n\r\n\r\n        if (isArray(progress) && !progress.length) {\r\n          progress = null;\r\n        }\r\n      }\r\n\r\n      this._progress = progress;\r\n      this._modBy = this._modDataCount = null;\r\n      var downstream = this._downstream;\r\n      downstream && downstream.dirty();\r\n      return forceFirstProgress;\r\n    };\r\n\r\n    Task.prototype.unfinished = function () {\r\n      return this._progress && this._dueIndex < this._dueEnd;\r\n    };\r\n    /**\r\n     * @param downTask The downstream task.\r\n     * @return The downstream task.\r\n     */\r\n\r\n\r\n    Task.prototype.pipe = function (downTask) {\r\n      {\r\n        assert$1(downTask && !downTask._disposed && downTask !== this);\r\n      } // If already downstream, do not dirty downTask.\r\n\r\n      if (this._downstream !== downTask || this._dirty) {\r\n        this._downstream = downTask;\r\n        downTask._upstream = this;\r\n        downTask.dirty();\r\n      }\r\n    };\r\n\r\n    Task.prototype.dispose = function () {\r\n      if (this._disposed) {\r\n        return;\r\n      }\r\n\r\n      this._upstream && (this._upstream._downstream = null);\r\n      this._downstream && (this._downstream._upstream = null);\r\n      this._dirty = false;\r\n      this._disposed = true;\r\n    };\r\n\r\n    Task.prototype.getUpstream = function () {\r\n      return this._upstream;\r\n    };\r\n\r\n    Task.prototype.getDownstream = function () {\r\n      return this._downstream;\r\n    };\r\n\r\n    Task.prototype.setOutputEnd = function (end) {\r\n      // This only happend in dataTask, dataZoom, map, currently.\r\n      // where dataZoom do not set end each time, but only set\r\n      // when reset. So we should record the setted end, in case\r\n      // that the stub of dataZoom perform again and earse the\r\n      // setted end by upstream.\r\n      this._outputDueEnd = this._settedOutputEnd = end;\r\n    };\r\n\r\n    return Task;\r\n  }();\r\n\r\n  var iterator = function () {\r\n    var end;\r\n    var current;\r\n    var modBy;\r\n    var modDataCount;\r\n    var winCount;\r\n    var it = {\r\n      reset: function (s, e, sStep, sCount) {\r\n        current = s;\r\n        end = e;\r\n        modBy = sStep;\r\n        modDataCount = sCount;\r\n        winCount = Math.ceil(modDataCount / modBy);\r\n        it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\r\n      }\r\n    };\r\n    return it;\r\n\r\n    function sequentialNext() {\r\n      return current < end ? current++ : null;\r\n    }\r\n\r\n    function modNext() {\r\n      var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\r\n      var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\r\n      // Use normal linear rendering mode.\r\n      : current;\r\n      current++;\r\n      return result;\r\n    }\r\n  }(); ///////////////////////////////////////////////////////////\r\n  // For stream debug (Should be commented out after used!)\r\n  // @usage: printTask(this, 'begin');\r\n  // @usage: printTask(this, null, {someExtraProp});\r\n  // @usage: Use `__idxInPipeline` as conditional breakpiont.\r\n  //\r\n  // window.printTask = function (task: any, prefix: string, extra: { [key: string]: unknown }): void {\r\n  //     window.ecTaskUID == null && (window.ecTaskUID = 0);\r\n  //     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\r\n  //     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\r\n  //     let props = [];\r\n  //     if (task.__pipeline) {\r\n  //         let val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\r\n  //         props.push({text: '__idxInPipeline/total', value: val});\r\n  //     } else {\r\n  //         let stubCount = 0;\r\n  //         task.agentStubMap.each(() => stubCount++);\r\n  //         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\r\n  //     }\r\n  //     props.push({text: 'uid', value: task.uidDebug});\r\n  //     if (task.__pipeline) {\r\n  //         props.push({text: 'pipelineId', value: task.__pipeline.id});\r\n  //         task.agent && props.push(\r\n  //             {text: 'stubFor', value: task.agent.uidDebug}\r\n  //         );\r\n  //     }\r\n  //     props.push(\r\n  //         {text: 'dirty', value: task._dirty},\r\n  //         {text: 'dueIndex', value: task._dueIndex},\r\n  //         {text: 'dueEnd', value: task._dueEnd},\r\n  //         {text: 'outputDueEnd', value: task._outputDueEnd}\r\n  //     );\r\n  //     if (extra) {\r\n  //         Object.keys(extra).forEach(key => {\r\n  //             props.push({text: key, value: extra[key]});\r\n  //         });\r\n  //     }\r\n  //     let args = ['color: blue'];\r\n  //     let msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\r\n  //         args.push('color: green', 'color: red'),\r\n  //         `${item.text}: %c${item.value}`\r\n  //     )).join('%c, ');\r\n  //     console.log.apply(console, [msg].concat(args));\r\n  //     // console.log(this);\r\n  // };\r\n  // window.printPipeline = function (task: any, prefix: string) {\r\n  //     const pipeline = task.__pipeline;\r\n  //     let currTask = pipeline.head;\r\n  //     while (currTask) {\r\n  //         window.printTask(currTask, prefix);\r\n  //         currTask = currTask._downstream;\r\n  //     }\r\n  // };\r\n  // window.showChain = function (chainHeadTask) {\r\n  //     var chain = [];\r\n  //     var task = chainHeadTask;\r\n  //     while (task) {\r\n  //         chain.push({\r\n  //             task: task,\r\n  //             up: task._upstream,\r\n  //             down: task._downstream,\r\n  //             idxInPipeline: task.__idxInPipeline\r\n  //         });\r\n  //         task = task._downstream;\r\n  //     }\r\n  //     return chain;\r\n  // };\r\n  // window.findTaskInChain = function (task, chainHeadTask) {\r\n  //     let chain = window.showChain(chainHeadTask);\r\n  //     let result = [];\r\n  //     for (let i = 0; i < chain.length; i++) {\r\n  //         let chainItem = chain[i];\r\n  //         if (chainItem.task === task) {\r\n  //             result.push(i);\r\n  //         }\r\n  //     }\r\n  //     return result;\r\n  // };\r\n  // window.printChainAEachInChainB = function (chainHeadTaskA, chainHeadTaskB) {\r\n  //     let chainA = window.showChain(chainHeadTaskA);\r\n  //     for (let i = 0; i < chainA.length; i++) {\r\n  //         console.log('chainAIdx:', i, 'inChainB:', window.findTaskInChain(chainA[i].task, chainHeadTaskB));\r\n  //     }\r\n  // };\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Convert raw the value in to inner value in List.\r\n   *\r\n   * [Performance sensitive]\r\n   *\r\n   * [Caution]: this is the key logic of user value parser.\r\n   * For backward compatibiliy, do not modify it until have to!\r\n   */\r\n\r\n\r\n  function parseDataValue(value, // For high performance, do not omit the second param.\r\n  opt) {\r\n    // Performance sensitive.\r\n    var dimType = opt && opt.type;\r\n\r\n    if (dimType === 'ordinal') {\r\n      // If given value is a category string\r\n      var ordinalMeta = opt && opt.ordinalMeta;\r\n      return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\r\n    }\r\n\r\n    if (dimType === 'time' // spead up when using timestamp\r\n    && typeof value !== 'number' && value != null && value !== '-') {\r\n      value = +parseDate(value);\r\n    } // dimType defaults 'number'.\r\n    // If dimType is not ordinal and value is null or undefined or NaN or '-',\r\n    // parse to NaN.\r\n    // number-like string (like ' 123 ') can be converted to a number.\r\n    // where null/undefined or other string will be converted to NaN.\r\n\r\n\r\n    return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\r\n    // If object, also parse to NaN\r\n    : +value;\r\n  }\r\n\r\n  var valueParserMap = createHashMap({\r\n    'number': function (val) {\r\n      // Do not use `numericToNumber` here. We have by defualt `numericToNumber`.\r\n      // Here the number parser can have loose rule:\r\n      // enable to cut suffix: \"120px\" => 120, \"14%\" => 14.\r\n      return parseFloat(val);\r\n    },\r\n    'time': function (val) {\r\n      // return timestamp.\r\n      return +parseDate(val);\r\n    },\r\n    'trim': function (val) {\r\n      return typeof val === 'string' ? trim(val) : val;\r\n    }\r\n  });\r\n  var ORDER_COMPARISON_OP_MAP = {\r\n    lt: function (lval, rval) {\r\n      return lval < rval;\r\n    },\r\n    lte: function (lval, rval) {\r\n      return lval <= rval;\r\n    },\r\n    gt: function (lval, rval) {\r\n      return lval > rval;\r\n    },\r\n    gte: function (lval, rval) {\r\n      return lval >= rval;\r\n    }\r\n  };\r\n\r\n  var FilterOrderComparator =\r\n  /** @class */\r\n  function () {\r\n    function FilterOrderComparator(op, rval) {\r\n      if (typeof rval !== 'number') {\r\n        var errMsg = '';\r\n        {\r\n          errMsg = 'rvalue of \"<\", \">\", \"<=\", \">=\" can only be number in filter.';\r\n        }\r\n        throwError(errMsg);\r\n      }\r\n\r\n      this._opFn = ORDER_COMPARISON_OP_MAP[op];\r\n      this._rvalFloat = numericToNumber(rval);\r\n    } // Performance sensitive.\r\n\r\n\r\n    FilterOrderComparator.prototype.evaluate = function (lval) {\r\n      // Most cases is 'number', and typeof maybe 10 times faseter than parseFloat.\r\n      return typeof lval === 'number' ? this._opFn(lval, this._rvalFloat) : this._opFn(numericToNumber(lval), this._rvalFloat);\r\n    };\r\n\r\n    return FilterOrderComparator;\r\n  }();\r\n\r\n  var SortOrderComparator =\r\n  /** @class */\r\n  function () {\r\n    /**\r\n     * @param order by defualt: 'asc'\r\n     * @param incomparable by defualt: Always on the tail.\r\n     *        That is, if 'asc' => 'max', if 'desc' => 'min'\r\n     *        See the definition of \"incomparable\" in [SORT_COMPARISON_RULE]\r\n     */\r\n    function SortOrderComparator(order, incomparable) {\r\n      var isDesc = order === 'desc';\r\n      this._resultLT = isDesc ? 1 : -1;\r\n\r\n      if (incomparable == null) {\r\n        incomparable = isDesc ? 'min' : 'max';\r\n      }\r\n\r\n      this._incomparable = incomparable === 'min' ? -Infinity : Infinity;\r\n    } // See [SORT_COMPARISON_RULE].\r\n    // Performance sensitive.\r\n\r\n\r\n    SortOrderComparator.prototype.evaluate = function (lval, rval) {\r\n      // Most cases is 'number', and typeof maybe 10 times faseter than parseFloat.\r\n      var lvalTypeof = typeof lval;\r\n      var rvalTypeof = typeof rval;\r\n      var lvalFloat = lvalTypeof === 'number' ? lval : numericToNumber(lval);\r\n      var rvalFloat = rvalTypeof === 'number' ? rval : numericToNumber(rval);\r\n      var lvalNotNumeric = isNaN(lvalFloat);\r\n      var rvalNotNumeric = isNaN(rvalFloat);\r\n\r\n      if (lvalNotNumeric) {\r\n        lvalFloat = this._incomparable;\r\n      }\r\n\r\n      if (rvalNotNumeric) {\r\n        rvalFloat = this._incomparable;\r\n      }\r\n\r\n      if (lvalNotNumeric && rvalNotNumeric) {\r\n        var lvalIsStr = lvalTypeof === 'string';\r\n        var rvalIsStr = rvalTypeof === 'string';\r\n\r\n        if (lvalIsStr) {\r\n          lvalFloat = rvalIsStr ? lval : 0;\r\n        }\r\n\r\n        if (rvalIsStr) {\r\n          rvalFloat = lvalIsStr ? rval : 0;\r\n        }\r\n      }\r\n\r\n      return lvalFloat < rvalFloat ? this._resultLT : lvalFloat > rvalFloat ? -this._resultLT : 0;\r\n    };\r\n\r\n    return SortOrderComparator;\r\n  }();\r\n\r\n  var FilterEqualityComparator =\r\n  /** @class */\r\n  function () {\r\n    function FilterEqualityComparator(isEq, rval) {\r\n      this._rval = rval;\r\n      this._isEQ = isEq;\r\n      this._rvalTypeof = typeof rval;\r\n      this._rvalFloat = numericToNumber(rval);\r\n    } // Performance sensitive.\r\n\r\n\r\n    FilterEqualityComparator.prototype.evaluate = function (lval) {\r\n      var eqResult = lval === this._rval;\r\n\r\n      if (!eqResult) {\r\n        var lvalTypeof = typeof lval;\r\n\r\n        if (lvalTypeof !== this._rvalTypeof && (lvalTypeof === 'number' || this._rvalTypeof === 'number')) {\r\n          eqResult = numericToNumber(lval) === this._rvalFloat;\r\n        }\r\n      }\r\n\r\n      return this._isEQ ? eqResult : !eqResult;\r\n    };\r\n\r\n    return FilterEqualityComparator;\r\n  }();\r\n  /**\r\n   * [FILTER_COMPARISON_RULE]\r\n   * `lt`|`lte`|`gt`|`gte`:\r\n   * + rval must be a number. And lval will be converted to number (`numericToNumber`) to compare.\r\n   * `eq`:\r\n   * + If same type, compare with `===`.\r\n   * + If there is one number, convert to number (`numericToNumber`) to compare.\r\n   * + Else return `false`.\r\n   * `ne`:\r\n   * + Not `eq`.\r\n   *\r\n   *\r\n   * [SORT_COMPARISON_RULE]\r\n   * All the values are grouped into three categories:\r\n   * + \"numeric\" (number and numeric string)\r\n   * + \"non-numeric-string\" (string that excluding numeric string)\r\n   * + \"others\"\r\n   * \"numeric\" vs \"numeric\": values are ordered by number order.\r\n   * \"non-numeric-string\" vs \"non-numeric-string\": values are ordered by ES spec (#sec-abstract-relational-comparison).\r\n   * \"others\" vs \"others\": do not change order (always return 0).\r\n   * \"numeric\" vs \"non-numeric-string\": \"non-numeric-string\" is treated as \"incomparable\".\r\n   * \"number\" vs \"others\": \"others\" is treated as \"incomparable\".\r\n   * \"non-numeric-string\" vs \"others\": \"others\" is treated as \"incomparable\".\r\n   * \"incomparable\" will be seen as -Infinity or Infinity (depends on the settings).\r\n   * MEMO:\r\n   *   non-numeric string sort make sence when need to put the items with the same tag together.\r\n   *   But if we support string sort, we still need to avoid the misleading like `'2' > '12'`,\r\n   *   So we treat \"numeric-string\" sorted by number order rather than string comparison.\r\n   *\r\n   *\r\n   * [CHECK_LIST_OF_THE_RULE_DESIGN]\r\n   * + Do not support string comparison until required. And also need to\r\n   *   void the misleading of \"2\" > \"12\".\r\n   * + Should avoid the misleading case:\r\n   *   `\" 22 \" gte \"22\"` is `true` but `\" 22 \" eq \"22\"` is `false`.\r\n   * + JS bad case should be avoided: null <= 0, [] <= 0, ' ' <= 0, ...\r\n   * + Only \"numeric\" can be converted to comparable number, otherwise converted to NaN.\r\n   *   See `util/number.ts#numericToNumber`.\r\n   *\r\n   * @return If `op` is not `RelationalOperator`, return null;\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * TODO: disable writable.\r\n   * This structure will be exposed to users.\r\n   */\r\n\r\n\r\n  var ExternalSource =\r\n  /** @class */\r\n  function () {\r\n    function ExternalSource() {}\r\n\r\n    ExternalSource.prototype.getRawData = function () {\r\n      // Only built-in transform available.\r\n      throw new Error('not supported');\r\n    };\r\n\r\n    ExternalSource.prototype.getRawDataItem = function (dataIndex) {\r\n      // Only built-in transform available.\r\n      throw new Error('not supported');\r\n    };\r\n\r\n    ExternalSource.prototype.cloneRawData = function () {\r\n      return;\r\n    };\r\n    /**\r\n     * @return If dimension not found, return null/undefined.\r\n     */\r\n\r\n\r\n    ExternalSource.prototype.getDimensionInfo = function (dim) {\r\n      return;\r\n    };\r\n    /**\r\n     * dimensions defined if and only if either:\r\n     * (a) dataset.dimensions are declared.\r\n     * (b) dataset data include dimensions definitions in data (detected or via specified `sourceHeader`).\r\n     * If dimensions are defined, `dimensionInfoAll` is corresponding to\r\n     * the defined dimensions.\r\n     * Otherwise, `dimensionInfoAll` is determined by data columns.\r\n     * @return Always return an array (even empty array).\r\n     */\r\n\r\n\r\n    ExternalSource.prototype.cloneAllDimensionInfo = function () {\r\n      return;\r\n    };\r\n\r\n    ExternalSource.prototype.count = function () {\r\n      return;\r\n    };\r\n    /**\r\n     * Only support by dimension index.\r\n     * No need to support by dimension name in transform function,\r\n     * becuase transform function is not case-specific, no need to use name literally.\r\n     */\r\n\r\n\r\n    ExternalSource.prototype.retrieveValue = function (dataIndex, dimIndex) {\r\n      return;\r\n    };\r\n\r\n    ExternalSource.prototype.retrieveValueFromItem = function (dataItem, dimIndex) {\r\n      return;\r\n    };\r\n\r\n    ExternalSource.prototype.convertValue = function (rawVal, dimInfo) {\r\n      return parseDataValue(rawVal, dimInfo);\r\n    };\r\n\r\n    return ExternalSource;\r\n  }();\r\n\r\n  function createExternalSource(internalSource, externalTransform) {\r\n    var extSource = new ExternalSource();\r\n    var data = internalSource.data;\r\n    var sourceFormat = extSource.sourceFormat = internalSource.sourceFormat;\r\n    var sourceHeaderCount = internalSource.startIndex;\r\n    var errMsg = '';\r\n\r\n    if (internalSource.seriesLayoutBy !== SERIES_LAYOUT_BY_COLUMN) {\r\n      // For the logic simplicity in transformer, only 'culumn' is\r\n      // supported in data transform. Otherwise, the `dimensionsDefine`\r\n      // might be detected by 'row', which probably confuses users.\r\n      {\r\n        errMsg = '`seriesLayoutBy` of upstream dataset can only be \"column\" in data transform.';\r\n      }\r\n      throwError(errMsg);\r\n    } // [MEMO]\r\n    // Create a new dimensions structure for exposing.\r\n    // Do not expose all dimension info to users directly.\r\n    // Becuase the dimension is probably auto detected from data and not might reliable.\r\n    // Should not lead the transformers to think that is relialbe and return it.\r\n    // See [DIMENSION_INHERIT_RULE] in `sourceManager.ts`.\r\n\r\n\r\n    var dimensions = [];\r\n    var dimsByName = {};\r\n    var dimsDef = internalSource.dimensionsDefine;\r\n\r\n    if (dimsDef) {\r\n      each$1(dimsDef, function (dimDef, idx) {\r\n        var name = dimDef.name;\r\n        var dimDefExt = {\r\n          index: idx,\r\n          name: name,\r\n          displayName: dimDef.displayName\r\n        };\r\n        dimensions.push(dimDefExt); // Users probably not sepcify dimension name. For simplicity, data transform\r\n        // do not generate dimension name.\r\n\r\n        if (name != null) {\r\n          // Dimension name should not be duplicated.\r\n          // For simplicity, data transform forbid name duplication, do not generate\r\n          // new name like module `completeDimensions.ts` did, but just tell users.\r\n          var errMsg_1 = '';\r\n\r\n          if (hasOwn(dimsByName, name)) {\r\n            {\r\n              errMsg_1 = 'dimension name \"' + name + '\" duplicated.';\r\n            }\r\n            throwError(errMsg_1);\r\n          }\r\n\r\n          dimsByName[name] = dimDefExt;\r\n        }\r\n      });\r\n    } // If dimension definitions are not defined and can not be detected.\r\n    // e.g., pure data `[[11, 22], ...]`.\r\n    else {\r\n        for (var i = 0; i < internalSource.dimensionsDetectedCount || 0; i++) {\r\n          // Do not generete name or anything others. The consequence process in\r\n          // `transform` or `series` probably have there own name generation strategry.\r\n          dimensions.push({\r\n            index: i\r\n          });\r\n        }\r\n      } // Implement public methods:\r\n\r\n\r\n    var rawItemGetter = getRawSourceItemGetter(sourceFormat, SERIES_LAYOUT_BY_COLUMN);\r\n\r\n    if (externalTransform.__isBuiltIn) {\r\n      extSource.getRawDataItem = function (dataIndex) {\r\n        return rawItemGetter(data, sourceHeaderCount, dimensions, dataIndex);\r\n      };\r\n\r\n      extSource.getRawData = bind(getRawData, null, internalSource);\r\n    }\r\n\r\n    extSource.cloneRawData = bind(cloneRawData, null, internalSource);\r\n    var rawCounter = getRawSourceDataCounter(sourceFormat, SERIES_LAYOUT_BY_COLUMN);\r\n    extSource.count = bind(rawCounter, null, data, sourceHeaderCount, dimensions);\r\n    var rawValueGetter = getRawSourceValueGetter(sourceFormat);\r\n\r\n    extSource.retrieveValue = function (dataIndex, dimIndex) {\r\n      var rawItem = rawItemGetter(data, sourceHeaderCount, dimensions, dataIndex);\r\n      return retrieveValueFromItem(rawItem, dimIndex);\r\n    };\r\n\r\n    var retrieveValueFromItem = extSource.retrieveValueFromItem = function (dataItem, dimIndex) {\r\n      if (dataItem == null) {\r\n        return;\r\n      }\r\n\r\n      var dimDef = dimensions[dimIndex]; // When `dimIndex` is `null`, `rawValueGetter` return the whole item.\r\n\r\n      if (dimDef) {\r\n        return rawValueGetter(dataItem, dimIndex, dimDef.name);\r\n      }\r\n    };\r\n\r\n    extSource.getDimensionInfo = bind(getDimensionInfo, null, dimensions, dimsByName);\r\n    extSource.cloneAllDimensionInfo = bind(cloneAllDimensionInfo, null, dimensions);\r\n    return extSource;\r\n  }\r\n\r\n  function getRawData(upstream) {\r\n    var sourceFormat = upstream.sourceFormat;\r\n\r\n    if (!isSupportedSourceFormat(sourceFormat)) {\r\n      var errMsg = '';\r\n      {\r\n        errMsg = '`getRawData` is not supported in source format ' + sourceFormat;\r\n      }\r\n      throwError(errMsg);\r\n    }\r\n\r\n    return upstream.data;\r\n  }\r\n\r\n  function cloneRawData(upstream) {\r\n    var sourceFormat = upstream.sourceFormat;\r\n    var data = upstream.data;\r\n\r\n    if (!isSupportedSourceFormat(sourceFormat)) {\r\n      var errMsg = '';\r\n      {\r\n        errMsg = '`cloneRawData` is not supported in source format ' + sourceFormat;\r\n      }\r\n      throwError(errMsg);\r\n    }\r\n\r\n    if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\r\n      var result = [];\r\n\r\n      for (var i = 0, len = data.length; i < len; i++) {\r\n        // Not strictly clone for performance\r\n        result.push(data[i].slice());\r\n      }\r\n\r\n      return result;\r\n    } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\r\n      var result = [];\r\n\r\n      for (var i = 0, len = data.length; i < len; i++) {\r\n        // Not strictly clone for performance\r\n        result.push(extend({}, data[i]));\r\n      }\r\n\r\n      return result;\r\n    }\r\n  }\r\n\r\n  function getDimensionInfo(dimensions, dimsByName, dim) {\r\n    if (dim == null) {\r\n      return;\r\n    } // Keep the same logic as `List::getDimension` did.\r\n\r\n\r\n    if (typeof dim === 'number' // If being a number-like string but not being defined a dimension name.\r\n    || !isNaN(dim) && !hasOwn(dimsByName, dim)) {\r\n      return dimensions[dim];\r\n    } else if (hasOwn(dimsByName, dim)) {\r\n      return dimsByName[dim];\r\n    }\r\n  }\r\n\r\n  function cloneAllDimensionInfo(dimensions) {\r\n    return clone(dimensions);\r\n  }\r\n\r\n  var externalTransformMap = createHashMap();\r\n\r\n  function registerExternalTransform(externalTransform) {\r\n    externalTransform = clone(externalTransform);\r\n    var type = externalTransform.type;\r\n    var errMsg = '';\r\n\r\n    if (!type) {\r\n      {\r\n        errMsg = 'Must have a `type` when `registerTransform`.';\r\n      }\r\n      throwError(errMsg);\r\n    }\r\n\r\n    var typeParsed = type.split(':');\r\n\r\n    if (typeParsed.length !== 2) {\r\n      {\r\n        errMsg = 'Name must include namespace like \"ns:regression\".';\r\n      }\r\n      throwError(errMsg);\r\n    } // Namespace 'echarts:xxx' is official namespace, where the transforms should\r\n    // be called directly via 'xxx' rather than 'echarts:xxx'.\r\n\r\n\r\n    var isBuiltIn = false;\r\n\r\n    if (typeParsed[0] === 'echarts') {\r\n      type = typeParsed[1];\r\n      isBuiltIn = true;\r\n    }\r\n\r\n    externalTransform.__isBuiltIn = isBuiltIn;\r\n    externalTransformMap.set(type, externalTransform);\r\n  }\r\n\r\n  function applyDataTransform(rawTransOption, sourceList, infoForPrint) {\r\n    var pipedTransOption = normalizeToArray(rawTransOption);\r\n    var pipeLen = pipedTransOption.length;\r\n    var errMsg = '';\r\n\r\n    if (!pipeLen) {\r\n      {\r\n        errMsg = 'If `transform` declared, it should at least contain one transform.';\r\n      }\r\n      throwError(errMsg);\r\n    }\r\n\r\n    for (var i = 0, len = pipeLen; i < len; i++) {\r\n      var transOption = pipedTransOption[i];\r\n      sourceList = applySingleDataTransform(transOption, sourceList, infoForPrint, pipeLen === 1 ? null : i); // piped transform only support single input, except the fist one.\r\n      // piped transform only support single output, except the last one.\r\n\r\n      if (i !== len - 1) {\r\n        sourceList.length = Math.max(sourceList.length, 1);\r\n      }\r\n    }\r\n\r\n    return sourceList;\r\n  }\r\n\r\n  function applySingleDataTransform(transOption, upSourceList, infoForPrint, // If `pipeIndex` is null/undefined, no piped transform.\r\n  pipeIndex) {\r\n    var errMsg = '';\r\n\r\n    if (!upSourceList.length) {\r\n      {\r\n        errMsg = 'Must have at least one upstream dataset.';\r\n      }\r\n      throwError(errMsg);\r\n    }\r\n\r\n    if (!isObject$1(transOption)) {\r\n      {\r\n        errMsg = 'transform declaration must be an object rather than ' + typeof transOption + '.';\r\n      }\r\n      throwError(errMsg);\r\n    }\r\n\r\n    var transType = transOption.type;\r\n    var externalTransform = externalTransformMap.get(transType);\r\n\r\n    if (!externalTransform) {\r\n      {\r\n        errMsg = 'Can not find transform on type \"' + transType + '\".';\r\n      }\r\n      throwError(errMsg);\r\n    } // Prepare source\r\n\r\n\r\n    var extUpSourceList = map(upSourceList, function (upSource) {\r\n      return createExternalSource(upSource, externalTransform);\r\n    });\r\n    var resultList = normalizeToArray(externalTransform.transform({\r\n      upstream: extUpSourceList[0],\r\n      upstreamList: extUpSourceList,\r\n      config: clone(transOption.config)\r\n    }));\r\n    {\r\n      if (transOption.print) {\r\n        var printStrArr = map(resultList, function (extSource) {\r\n          var pipeIndexStr = pipeIndex != null ? ' === pipe index: ' + pipeIndex : '';\r\n          return ['=== dataset index: ' + infoForPrint.datasetIndex + pipeIndexStr + ' ===', '- transform result data:', makePrintable(extSource.data), '- transform result dimensions:', makePrintable(extSource.dimensions)].join('\\n');\r\n        }).join('\\n');\r\n        consoleLog(printStrArr);\r\n      }\r\n    }\r\n    return map(resultList, function (result, resultIndex) {\r\n      var errMsg = '';\r\n\r\n      if (!isObject$1(result)) {\r\n        {\r\n          errMsg = 'A transform should not return some empty results.';\r\n        }\r\n        throwError(errMsg);\r\n      }\r\n\r\n      if (!result.data) {\r\n        {\r\n          errMsg = 'Transform result data should be not be null or undefined';\r\n        }\r\n        throwError(errMsg);\r\n      }\r\n\r\n      var sourceFormat = detectSourceFormat(result.data);\r\n\r\n      if (!isSupportedSourceFormat(sourceFormat)) {\r\n        {\r\n          errMsg = 'Transform result data should be array rows or object rows.';\r\n        }\r\n        throwError(errMsg);\r\n      }\r\n\r\n      var resultMetaRawOption;\r\n      var firstUpSource = upSourceList[0];\r\n      /**\r\n       * Intuitively, the end users known the content of the original `dataset.source`,\r\n       * calucating the transform result in mind.\r\n       * Suppose the original `dataset.source` is:\r\n       * ```js\r\n       * [\r\n       *     ['product', '2012', '2013', '2014', '2015'],\r\n       *     ['AAA', 41.1, 30.4, 65.1, 53.3],\r\n       *     ['BBB', 86.5, 92.1, 85.7, 83.1],\r\n       *     ['CCC', 24.1, 67.2, 79.5, 86.4]\r\n       * ]\r\n       * ```\r\n       * The dimension info have to be detected from the source data.\r\n       * Some of the transformers (like filter, sort) will follow the dimension info\r\n       * of upstream, while others use new dimensions (like aggregate).\r\n       * Transformer can output a field `dimensions` to define the its own output dimensions.\r\n       * We also allow transformers to ignore the output `dimensions` field, and\r\n       * inherit the upstream dimensions definition. It can reduce the burden of handling\r\n       * dimensions in transformers.\r\n       *\r\n       * See also [DIMENSION_INHERIT_RULE] in `sourceManager.ts`.\r\n       */\r\n\r\n      if (firstUpSource && resultIndex === 0 // If transformer returns `dimensions`, it means that the transformer has different\r\n      // dimensions definitions. We do not inherit anything from upstream.\r\n      && !result.dimensions) {\r\n        var startIndex = firstUpSource.startIndex; // We copy the header of upstream to the result becuase:\r\n        // (1) The returned data always does not contain header line and can not be used\r\n        // as dimension-detection. In this case we can not use \"detected dimensions\" of\r\n        // upstream directly, because it might be detected based on different `seriesLayoutBy`.\r\n        // (2) We should support that the series read the upstream source in `seriesLayoutBy: 'row'`.\r\n        // So the original detected header should be add to the result, otherwise they can not be read.\r\n\r\n        if (startIndex) {\r\n          result.data = firstUpSource.data.slice(0, startIndex).concat(result.data);\r\n        }\r\n\r\n        resultMetaRawOption = {\r\n          seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\r\n          sourceHeader: startIndex,\r\n          dimensions: firstUpSource.metaRawOption.dimensions\r\n        };\r\n      } else {\r\n        resultMetaRawOption = {\r\n          seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\r\n          sourceHeader: 0,\r\n          dimensions: result.dimensions\r\n        };\r\n      }\r\n\r\n      return createSource(result.data, resultMetaRawOption, null, null);\r\n    });\r\n  }\r\n\r\n  function isSupportedSourceFormat(sourceFormat) {\r\n    return sourceFormat === SOURCE_FORMAT_ARRAY_ROWS || sourceFormat === SOURCE_FORMAT_OBJECT_ROWS;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * [REQUIREMENT_MEMO]:\r\n   * (0) `metaRawOption` means `dimensions`/`sourceHeader`/`seriesLayoutBy` in raw option.\r\n   * (1) Keep support the feature: `metaRawOption` can be specified both on `series` and\r\n   * `root-dataset`. Them on `series` has higher priority.\r\n   * (2) Do not support to set `metaRawOption` on a `non-root-dataset`, because it might\r\n   * confuse users: whether those props indicate how to visit the upstream source or visit\r\n   * the transform result source, and some transforms has nothing to do with these props,\r\n   * and some transforms might have multiple upstream.\r\n   * (3) Transforms should specify `metaRawOption` in each output, just like they can be\r\n   * declared in `root-dataset`.\r\n   * (4) At present only support visit source in `SERIES_LAYOUT_BY_COLUMN` in transforms.\r\n   * That is for reducing complexity in transfroms.\r\n   * PENDING: Whether to provide transposition transform?\r\n   *\r\n   * [IMPLEMENTAION_MEMO]:\r\n   * \"sourceVisitConfig\" are calculated from `metaRawOption` and `data`.\r\n   * They will not be calculated until `source` is about to be visited (to prevent from\r\n   * duplicate calcuation). `source` is visited only in series and input to transforms.\r\n   *\r\n   * [DIMENSION_INHERIT_RULE]:\r\n   * By default the dimensions are inherited from ancestors, unless a transform return\r\n   * a new dimensions definition.\r\n   * Consider the case:\r\n   * ```js\r\n   * dataset: [{\r\n   *     source: [ ['Product', 'Sales', 'Prise'], ['Cookies', 321, 44.21], ...]\r\n   * }, {\r\n   *     transform: { type: 'filter', ... }\r\n   * }]\r\n   * dataset: [{\r\n   *     dimension: ['Product', 'Sales', 'Prise'],\r\n   *     source: [ ['Cookies', 321, 44.21], ...]\r\n   * }, {\r\n   *     transform: { type: 'filter', ... }\r\n   * }]\r\n   * ```\r\n   * The two types of option should have the same behavior after transform.\r\n   *\r\n   *\r\n   * [SCENARIO]:\r\n   * (1) Provide source data directly:\r\n   * ```js\r\n   * series: {\r\n   *     encode: {...},\r\n   *     dimensions: [...]\r\n   *     seriesLayoutBy: 'row',\r\n   *     data: [[...]]\r\n   * }\r\n   * ```\r\n   * (2) Series refer to dataset.\r\n   * ```js\r\n   * series: [{\r\n   *     encode: {...}\r\n   *     // Ignore datasetIndex means `datasetIndex: 0`\r\n   *     // and the dimensions defination in dataset is used\r\n   * }, {\r\n   *     encode: {...},\r\n   *     seriesLayoutBy: 'column',\r\n   *     datasetIndex: 1\r\n   * }]\r\n   * ```\r\n   * (3) dataset transform\r\n   * ```js\r\n   * dataset: [{\r\n   *     source: [...]\r\n   * }, {\r\n   *     source: [...]\r\n   * }, {\r\n   *     // By default from 0.\r\n   *     transform: { type: 'filter', config: {...} }\r\n   * }, {\r\n   *     // Piped.\r\n   *     transform: [\r\n   *         { type: 'filter', config: {...} },\r\n   *         { type: 'sort', config: {...} }\r\n   *     ]\r\n   * }, {\r\n   *     id: 'regressionData',\r\n   *     fromDatasetIndex: 1,\r\n   *     // Third-party transform\r\n   *     transform: { type: 'ecStat:regression', config: {...} }\r\n   * }, {\r\n   *     // retrieve the extra result.\r\n   *     id: 'regressionFormula',\r\n   *     fromDatasetId: 'regressionData',\r\n   *     fromTransformResult: 1\r\n   * }]\r\n   * ```\r\n   */\r\n\r\n\r\n  var SourceManager =\r\n  /** @class */\r\n  function () {\r\n    function SourceManager(sourceHost) {\r\n      // Cached source. Do not repeat calculating if not dirty.\r\n      this._sourceList = []; // version sign of each upstream source manager.\r\n\r\n      this._upstreamSignList = [];\r\n      this._versionSignBase = 0;\r\n      this._sourceHost = sourceHost;\r\n    }\r\n    /**\r\n     * Mark dirty.\r\n     */\r\n\r\n\r\n    SourceManager.prototype.dirty = function () {\r\n      this._setLocalSource([], []);\r\n    };\r\n\r\n    SourceManager.prototype._setLocalSource = function (sourceList, upstreamSignList) {\r\n      this._sourceList = sourceList;\r\n      this._upstreamSignList = upstreamSignList;\r\n      this._versionSignBase++;\r\n\r\n      if (this._versionSignBase > 9e10) {\r\n        this._versionSignBase = 0;\r\n      }\r\n    };\r\n    /**\r\n     * For detecting whether the upstream source is dirty, so that\r\n     * the local cached source (in `_sourceList`) should be discarded.\r\n     */\r\n\r\n\r\n    SourceManager.prototype._getVersionSign = function () {\r\n      return this._sourceHost.uid + '_' + this._versionSignBase;\r\n    };\r\n    /**\r\n     * Always return a source instance. Otherwise throw error.\r\n     */\r\n\r\n\r\n    SourceManager.prototype.prepareSource = function () {\r\n      // For the case that call `setOption` multiple time but no data changed,\r\n      // cache the result source to prevent from repeating transform.\r\n      if (this._isDirty()) {\r\n        this._createSource();\r\n      }\r\n    };\r\n\r\n    SourceManager.prototype._createSource = function () {\r\n      this._setLocalSource([], []);\r\n\r\n      var sourceHost = this._sourceHost;\r\n\r\n      var upSourceMgrList = this._getUpstreamSourceManagers();\r\n\r\n      var hasUpstream = !!upSourceMgrList.length;\r\n      var resultSourceList;\r\n      var upstreamSignList;\r\n\r\n      if (isSeries(sourceHost)) {\r\n        var seriesModel = sourceHost;\r\n        var data = void 0;\r\n        var sourceFormat = void 0;\r\n        var upSource = void 0; // Has upstream dataset\r\n\r\n        if (hasUpstream) {\r\n          var upSourceMgr = upSourceMgrList[0];\r\n          upSourceMgr.prepareSource();\r\n          upSource = upSourceMgr.getSource();\r\n          data = upSource.data;\r\n          sourceFormat = upSource.sourceFormat;\r\n          upstreamSignList = [upSourceMgr._getVersionSign()];\r\n        } // Series data is from own.\r\n        else {\r\n            data = seriesModel.get('data', true);\r\n            sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\r\n            upstreamSignList = [];\r\n          } // See [REQUIREMENT_MEMO], merge settings on series and parent dataset if it is root.\r\n\r\n\r\n        var newMetaRawOption = this._getSourceMetaRawOption();\r\n\r\n        var upMetaRawOption = upSource ? upSource.metaRawOption : null;\r\n        var seriesLayoutBy = retrieve2(newMetaRawOption.seriesLayoutBy, upMetaRawOption ? upMetaRawOption.seriesLayoutBy : null);\r\n        var sourceHeader = retrieve2(newMetaRawOption.sourceHeader, upMetaRawOption ? upMetaRawOption.sourceHeader : null); // Note here we should not use `upSource.dimensionsDefine`. Consider the case:\r\n        // `upSource.dimensionsDefine` is detected by `seriesLayoutBy: 'column'`,\r\n        // but series need `seriesLayoutBy: 'row'`.\r\n\r\n        var dimensions = retrieve2(newMetaRawOption.dimensions, upMetaRawOption ? upMetaRawOption.dimensions : null);\r\n        resultSourceList = [createSource(data, {\r\n          seriesLayoutBy: seriesLayoutBy,\r\n          sourceHeader: sourceHeader,\r\n          dimensions: dimensions\r\n        }, sourceFormat, seriesModel.get('encode', true))];\r\n      } else {\r\n        var datasetModel = sourceHost; // Has upstream dataset.\r\n\r\n        if (hasUpstream) {\r\n          var result = this._applyTransform(upSourceMgrList);\r\n\r\n          resultSourceList = result.sourceList;\r\n          upstreamSignList = result.upstreamSignList;\r\n        } // Is root dataset.\r\n        else {\r\n            var sourceData = datasetModel.get('source', true);\r\n            resultSourceList = [createSource(sourceData, this._getSourceMetaRawOption(), null, // Note: dataset option does not have `encode`.\r\n            null)];\r\n            upstreamSignList = [];\r\n          }\r\n      }\r\n\r\n      {\r\n        assert$1(resultSourceList && upstreamSignList);\r\n      }\r\n\r\n      this._setLocalSource(resultSourceList, upstreamSignList);\r\n    };\r\n\r\n    SourceManager.prototype._applyTransform = function (upMgrList) {\r\n      var datasetModel = this._sourceHost;\r\n      var transformOption = datasetModel.get('transform', true);\r\n      var fromTransformResult = datasetModel.get('fromTransformResult', true);\r\n      {\r\n        assert$1(fromTransformResult != null || transformOption != null);\r\n      }\r\n\r\n      if (fromTransformResult != null) {\r\n        var errMsg = '';\r\n\r\n        if (upMgrList.length !== 1) {\r\n          {\r\n            errMsg = 'When using `fromTransformResult`, there should be only one upstream dataset';\r\n          }\r\n          doThrow(errMsg);\r\n        }\r\n      }\r\n\r\n      var sourceList;\r\n      var upSourceList = [];\r\n      var upstreamSignList = [];\r\n      each$1(upMgrList, function (upMgr) {\r\n        upMgr.prepareSource();\r\n        var upSource = upMgr.getSource(fromTransformResult || 0);\r\n        var errMsg = '';\r\n\r\n        if (fromTransformResult != null && !upSource) {\r\n          {\r\n            errMsg = 'Can not retrieve result by `fromTransformResult`: ' + fromTransformResult;\r\n          }\r\n          doThrow(errMsg);\r\n        }\r\n\r\n        upSourceList.push(upSource);\r\n        upstreamSignList.push(upMgr._getVersionSign());\r\n      });\r\n\r\n      if (transformOption) {\r\n        sourceList = applyDataTransform(transformOption, upSourceList, {\r\n          datasetIndex: datasetModel.componentIndex\r\n        });\r\n      } else if (fromTransformResult != null) {\r\n        sourceList = [cloneSourceShallow(upSourceList[0])];\r\n      }\r\n\r\n      return {\r\n        sourceList: sourceList,\r\n        upstreamSignList: upstreamSignList\r\n      };\r\n    };\r\n\r\n    SourceManager.prototype._isDirty = function () {\r\n      var sourceList = this._sourceList;\r\n\r\n      if (!sourceList.length) {\r\n        return true;\r\n      } // All sourceList is from the some upsteam.\r\n\r\n\r\n      var upSourceMgrList = this._getUpstreamSourceManagers();\r\n\r\n      for (var i = 0; i < upSourceMgrList.length; i++) {\r\n        var upSrcMgr = upSourceMgrList[i];\r\n\r\n        if ( // Consider the case that there is ancestor diry, call it recursively.\r\n        // The performance is probably not an issue because usually the chain is not long.\r\n        upSrcMgr._isDirty() || this._upstreamSignList[i] !== upSrcMgr._getVersionSign()) {\r\n          return true;\r\n        }\r\n      }\r\n    };\r\n    /**\r\n     * @param sourceIndex By defualt 0, means \"main source\".\r\n     *                    Most cases there is only one source.\r\n     */\r\n\r\n\r\n    SourceManager.prototype.getSource = function (sourceIndex) {\r\n      return this._sourceList[sourceIndex || 0];\r\n    };\r\n    /**\r\n     * PEDING: Is it fast enough?\r\n     * If no upstream, return empty array.\r\n     */\r\n\r\n\r\n    SourceManager.prototype._getUpstreamSourceManagers = function () {\r\n      // Always get the relationship from the raw option.\r\n      // Do not cache the link of the dependency graph, so that\r\n      // no need to update them when change happen.\r\n      var sourceHost = this._sourceHost;\r\n\r\n      if (isSeries(sourceHost)) {\r\n        var datasetModel = querySeriesUpstreamDatasetModel(sourceHost);\r\n        return !datasetModel ? [] : [datasetModel.getSourceManager()];\r\n      } else {\r\n        return map(queryDatasetUpstreamDatasetModels(sourceHost), function (datasetModel) {\r\n          return datasetModel.getSourceManager();\r\n        });\r\n      }\r\n    };\r\n\r\n    SourceManager.prototype._getSourceMetaRawOption = function () {\r\n      var sourceHost = this._sourceHost;\r\n      var seriesLayoutBy;\r\n      var sourceHeader;\r\n      var dimensions;\r\n\r\n      if (isSeries(sourceHost)) {\r\n        seriesLayoutBy = sourceHost.get('seriesLayoutBy', true);\r\n        sourceHeader = sourceHost.get('sourceHeader', true);\r\n        dimensions = sourceHost.get('dimensions', true);\r\n      } // See [REQUIREMENT_MEMO], `non-root-dataset` do not support them.\r\n      else if (!this._getUpstreamSourceManagers().length) {\r\n          var model = sourceHost;\r\n          seriesLayoutBy = model.get('seriesLayoutBy', true);\r\n          sourceHeader = model.get('sourceHeader', true);\r\n          dimensions = model.get('dimensions', true);\r\n        }\r\n\r\n      return {\r\n        seriesLayoutBy: seriesLayoutBy,\r\n        sourceHeader: sourceHeader,\r\n        dimensions: dimensions\r\n      };\r\n    };\r\n\r\n    return SourceManager;\r\n  }(); // disable the transform merge, but do not disable transfrom clone from rawOption.\r\n\r\n\r\n  function disableTransformOptionMerge(datasetModel) {\r\n    var transformOption = datasetModel.option.transform;\r\n    transformOption && setAsPrimitive(datasetModel.option.transform);\r\n  }\r\n\r\n  function isSeries(sourceHost) {\r\n    // Avoid circular dependency with Series.ts\r\n    return sourceHost.mainType === 'series';\r\n  }\r\n\r\n  function doThrow(errMsg) {\r\n    throw new Error(errMsg);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var TOOLTIP_LINE_HEIGHT_CSS = 'line-height:1'; // TODO: more textStyle option\r\n\r\n  function getTooltipTextStyle(textStyle, renderMode) {\r\n    var nameFontColor = textStyle.color || '#6e7079';\r\n    var nameFontSize = textStyle.fontSize || 12;\r\n    var nameFontWeight = textStyle.fontWeight || '400';\r\n    var valueFontColor = textStyle.color || '#464646';\r\n    var valueFontSize = textStyle.fontSize || 14;\r\n    var valueFontWeight = textStyle.fontWeight || '900';\r\n\r\n    if (renderMode === 'html') {\r\n      // `textStyle` is probably from user input, should be encoded to reduce security risk.\r\n      return {\r\n        // eslint-disable-next-line max-len\r\n        nameStyle: \"font-size:\" + encodeHTML(nameFontSize + '') + \"px;color:\" + encodeHTML(nameFontColor) + \";font-weight:\" + encodeHTML(nameFontWeight + ''),\r\n        // eslint-disable-next-line max-len\r\n        valueStyle: \"font-size:\" + encodeHTML(valueFontSize + '') + \"px;color:\" + encodeHTML(valueFontColor) + \";font-weight:\" + encodeHTML(valueFontWeight + '')\r\n      };\r\n    } else {\r\n      return {\r\n        nameStyle: {\r\n          fontSize: nameFontSize,\r\n          fill: nameFontColor,\r\n          fontWeight: nameFontWeight\r\n        },\r\n        valueStyle: {\r\n          fontSize: valueFontSize,\r\n          fill: valueFontColor,\r\n          fontWeight: valueFontWeight\r\n        }\r\n      };\r\n    }\r\n  } // See `TooltipMarkupLayoutIntent['innerGapLevel']`.\r\n  // (value from UI design)\r\n\r\n\r\n  var HTML_GAPS = [0, 10, 20, 30];\r\n  var RICH_TEXT_GAPS = ['', '\\n', '\\n\\n', '\\n\\n\\n']; // eslint-disable-next-line max-len\r\n\r\n  function createTooltipMarkup(type, option) {\r\n    option.type = type;\r\n    return option;\r\n  }\r\n\r\n  function getBuilder(fragment) {\r\n    return hasOwn(builderMap, fragment.type) && builderMap[fragment.type];\r\n  }\r\n\r\n  var builderMap = {\r\n    /**\r\n     * A `section` block is like:\r\n     * ```\r\n     * header\r\n     * subBlock\r\n     * subBlock\r\n     * ...\r\n     * ```\r\n     */\r\n    section: {\r\n      planLayout: function (fragment) {\r\n        var subBlockLen = fragment.blocks.length;\r\n        var thisBlockHasInnerGap = subBlockLen > 1 || subBlockLen > 0 && !fragment.noHeader;\r\n        var thisGapLevelBetweenSubBlocks = 0;\r\n        each$1(fragment.blocks, function (subBlock) {\r\n          getBuilder(subBlock).planLayout(subBlock);\r\n          var subGapLevel = subBlock.__gapLevelBetweenSubBlocks; // If the some of the sub-blocks have some gaps (like 10px) inside, this block\r\n          // should use a larger gap (like 20px) to distinguish those sub-blocks.\r\n\r\n          if (subGapLevel >= thisGapLevelBetweenSubBlocks) {\r\n            thisGapLevelBetweenSubBlocks = subGapLevel + (thisBlockHasInnerGap && ( // 0 always can not be readable gap level.\r\n            !subGapLevel // If no header, always keep the sub gap level. Otherwise\r\n            // look weird in case `multipleSeries`.\r\n            || subBlock.type === 'section' && !subBlock.noHeader) ? 1 : 0);\r\n          }\r\n        });\r\n        fragment.__gapLevelBetweenSubBlocks = thisGapLevelBetweenSubBlocks;\r\n      },\r\n      build: function (ctx, fragment, topMarginForOuterGap, toolTipTextStyle) {\r\n        var noHeader = fragment.noHeader;\r\n        var gaps = getGap(fragment);\r\n        var subMarkupText = buildSubBlocks(ctx, fragment, noHeader ? topMarginForOuterGap : gaps.html, toolTipTextStyle);\r\n\r\n        if (noHeader) {\r\n          return subMarkupText;\r\n        }\r\n\r\n        var displayableHeader = makeValueReadable(fragment.header, 'ordinal', ctx.useUTC);\r\n        var nameStyle = getTooltipTextStyle(toolTipTextStyle, ctx.renderMode).nameStyle;\r\n\r\n        if (ctx.renderMode === 'richText') {\r\n          return wrapInlineNameRichText(ctx, displayableHeader, nameStyle) + gaps.richText + subMarkupText;\r\n        } else {\r\n          return wrapBlockHTML(\"<div style=\\\"\" + nameStyle + \";\" + TOOLTIP_LINE_HEIGHT_CSS + \";\\\">\" + encodeHTML(displayableHeader) + '</div>' + subMarkupText, topMarginForOuterGap);\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * A `nameValue` block is like:\r\n     * ```\r\n     * marker  name  value\r\n     * ```\r\n     */\r\n    nameValue: {\r\n      planLayout: function (fragment) {\r\n        fragment.__gapLevelBetweenSubBlocks = 0;\r\n      },\r\n      build: function (ctx, fragment, topMarginForOuterGap, toolTipTextStyle) {\r\n        var renderMode = ctx.renderMode;\r\n        var noName = fragment.noName;\r\n        var noValue = fragment.noValue;\r\n        var noMarker = !fragment.markerType;\r\n        var name = fragment.name;\r\n        var value = fragment.value;\r\n        var useUTC = ctx.useUTC;\r\n\r\n        if (noName && noValue) {\r\n          return;\r\n        }\r\n\r\n        var markerStr = noMarker ? '' : ctx.markupStyleCreator.makeTooltipMarker(fragment.markerType, fragment.markerColor || '#333', renderMode);\r\n        var readableName = noName ? '' : makeValueReadable(name, 'ordinal', useUTC);\r\n        var valueTypeOption = fragment.valueType;\r\n        var readableValueList = noValue ? [] : isArray(value) ? map(value, function (val, idx) {\r\n          return makeValueReadable(val, isArray(valueTypeOption) ? valueTypeOption[idx] : valueTypeOption, useUTC);\r\n        }) : [makeValueReadable(value, isArray(valueTypeOption) ? valueTypeOption[0] : valueTypeOption, useUTC)];\r\n        var valueAlignRight = !noMarker || !noName; // It little weird if only value next to marker but far from marker.\r\n\r\n        var valueCloseToMarker = !noMarker && noName;\r\n\r\n        var _a = getTooltipTextStyle(toolTipTextStyle, renderMode),\r\n            nameStyle = _a.nameStyle,\r\n            valueStyle = _a.valueStyle;\r\n\r\n        return renderMode === 'richText' ? (noMarker ? '' : markerStr) + (noName ? '' : wrapInlineNameRichText(ctx, readableName, nameStyle)) // Value has commas inside, so use ' ' as delimiter for multiple values.\r\n        + (noValue ? '' : wrapInlineValueRichText(ctx, readableValueList, valueAlignRight, valueCloseToMarker, valueStyle)) : wrapBlockHTML((noMarker ? '' : markerStr) + (noName ? '' : wrapInlineNameHTML(readableName, !noMarker, nameStyle)) + (noValue ? '' : wrapInlineValueHTML(readableValueList, valueAlignRight, valueCloseToMarker, valueStyle)), topMarginForOuterGap);\r\n      }\r\n    }\r\n  };\r\n\r\n  function buildSubBlocks(ctx, fragment, topMarginForOuterGap, tooltipTextStyle) {\r\n    var subMarkupTextList = [];\r\n    var subBlocks = fragment.blocks || [];\r\n    assert$1(!subBlocks || isArray(subBlocks));\r\n    subBlocks = subBlocks || [];\r\n    var orderMode = ctx.orderMode;\r\n\r\n    if (fragment.sortBlocks && orderMode) {\r\n      subBlocks = subBlocks.slice();\r\n      var orderMap = {\r\n        valueAsc: 'asc',\r\n        valueDesc: 'desc'\r\n      };\r\n\r\n      if (hasOwn(orderMap, orderMode)) {\r\n        var comparator_1 = new SortOrderComparator(orderMap[orderMode], null);\r\n        subBlocks.sort(function (a, b) {\r\n          return comparator_1.evaluate(a.sortParam, b.sortParam);\r\n        });\r\n      } // FIXME 'seriesDesc' necessary?\r\n      else if (orderMode === 'seriesDesc') {\r\n          subBlocks.reverse();\r\n        }\r\n    }\r\n\r\n    var gaps = getGap(fragment);\r\n    each$1(subBlocks, function (subBlock, idx) {\r\n      var subMarkupText = getBuilder(subBlock).build(ctx, subBlock, idx > 0 ? gaps.html : 0, tooltipTextStyle);\r\n      subMarkupText != null && subMarkupTextList.push(subMarkupText);\r\n    });\r\n\r\n    if (!subMarkupTextList.length) {\r\n      return;\r\n    }\r\n\r\n    return ctx.renderMode === 'richText' ? subMarkupTextList.join(gaps.richText) : wrapBlockHTML(subMarkupTextList.join(''), topMarginForOuterGap);\r\n  }\r\n  /**\r\n   * @return markupText. null/undefined means no content.\r\n   */\r\n\r\n\r\n  function buildTooltipMarkup(fragment, markupStyleCreator, renderMode, orderMode, useUTC, toolTipTextStyle) {\r\n    if (!fragment) {\r\n      return;\r\n    }\r\n\r\n    var builder = getBuilder(fragment);\r\n    builder.planLayout(fragment);\r\n    var ctx = {\r\n      useUTC: useUTC,\r\n      renderMode: renderMode,\r\n      orderMode: orderMode,\r\n      markupStyleCreator: markupStyleCreator\r\n    };\r\n    return builder.build(ctx, fragment, 0, toolTipTextStyle);\r\n  }\r\n\r\n  function getGap(fragment) {\r\n    var gapLevelBetweenSubBlocks = fragment.__gapLevelBetweenSubBlocks;\r\n    return {\r\n      html: HTML_GAPS[gapLevelBetweenSubBlocks],\r\n      richText: RICH_TEXT_GAPS[gapLevelBetweenSubBlocks]\r\n    };\r\n  }\r\n\r\n  function wrapBlockHTML(encodedContent, topGap) {\r\n    var clearfix = '<div style=\"clear:both\"></div>';\r\n    var marginCSS = \"margin: \" + topGap + \"px 0 0\";\r\n    return \"<div style=\\\"\" + marginCSS + \";\" + TOOLTIP_LINE_HEIGHT_CSS + \";\\\">\" + encodedContent + clearfix + '</div>';\r\n  }\r\n\r\n  function wrapInlineNameHTML(name, leftHasMarker, style) {\r\n    var marginCss = leftHasMarker ? 'margin-left:2px' : '';\r\n    return \"<span style=\\\"\" + style + \";\" + marginCss + \"\\\">\" + encodeHTML(name) + '</span>';\r\n  }\r\n\r\n  function wrapInlineValueHTML(valueList, alignRight, valueCloseToMarker, style) {\r\n    // Do not too close to marker, considering there are multiple values separated by spaces.\r\n    var paddingStr = valueCloseToMarker ? '10px' : '20px';\r\n    var alignCSS = alignRight ? \"float:right;margin-left:\" + paddingStr : '';\r\n    return \"<span style=\\\"\" + alignCSS + \";\" + style + \"\\\">\" // Value has commas inside, so use '  ' as delimiter for multiple values.\r\n    + map(valueList, function (value) {\r\n      return encodeHTML(value);\r\n    }).join('&nbsp;&nbsp;') + '</span>';\r\n  }\r\n\r\n  function wrapInlineNameRichText(ctx, name, style) {\r\n    return ctx.markupStyleCreator.wrapRichTextStyle(name, style);\r\n  }\r\n\r\n  function wrapInlineValueRichText(ctx, valueList, alignRight, valueCloseToMarker, style) {\r\n    var styles = [style];\r\n    var paddingLeft = valueCloseToMarker ? 10 : 20;\r\n    alignRight && styles.push({\r\n      padding: [0, 0, 0, paddingLeft],\r\n      align: 'right'\r\n    }); // Value has commas inside, so use '  ' as delimiter for multiple values.\r\n\r\n    return ctx.markupStyleCreator.wrapRichTextStyle(valueList.join('  '), styles);\r\n  }\r\n\r\n  function retrieveVisualColorForTooltipMarker(series, dataIndex) {\r\n    var style = series.getData().getItemVisual(dataIndex, 'style');\r\n    var color = style[series.visualDrawType];\r\n    return convertToColorString(color);\r\n  }\r\n\r\n  function getPaddingFromTooltipModel(model, renderMode) {\r\n    var padding = model.get('padding');\r\n    return padding != null ? padding // We give slightly different to look pretty.\r\n    : renderMode === 'richText' ? [8, 10] : 10;\r\n  }\r\n  /**\r\n   * The major feature is generate styles for `renderMode: 'richText'`.\r\n   * But it also serves `renderMode: 'html'` to provide\r\n   * \"renderMode-independent\" API.\r\n   */\r\n\r\n\r\n  var TooltipMarkupStyleCreator =\r\n  /** @class */\r\n  function () {\r\n    function TooltipMarkupStyleCreator() {\r\n      this.richTextStyles = {}; // Notice that \"generate a style name\" usuall happens repeatly when mouse moving and\r\n      // displaying a tooltip. So we put the `_nextStyleNameId` as a member of each creator\r\n      // rather than static shared by all creators (which will cause it increase to fast).\r\n\r\n      this._nextStyleNameId = getRandomIdBase();\r\n    }\r\n\r\n    TooltipMarkupStyleCreator.prototype._generateStyleName = function () {\r\n      return '__EC_aUTo_' + this._nextStyleNameId++;\r\n    };\r\n\r\n    TooltipMarkupStyleCreator.prototype.makeTooltipMarker = function (markerType, colorStr, renderMode) {\r\n      var markerId = renderMode === 'richText' ? this._generateStyleName() : null;\r\n      var marker = getTooltipMarker({\r\n        color: colorStr,\r\n        type: markerType,\r\n        renderMode: renderMode,\r\n        markerId: markerId\r\n      });\r\n\r\n      if (isString(marker)) {\r\n        return marker;\r\n      } else {\r\n        {\r\n          assert$1(markerId);\r\n        }\r\n        this.richTextStyles[markerId] = marker.style;\r\n        return marker.content;\r\n      }\r\n    };\r\n    /**\r\n     * @usage\r\n     * ```ts\r\n     * const styledText = markupStyleCreator.wrapRichTextStyle([\r\n     *     // The styles will be auto merged.\r\n     *     {\r\n     *         fontSize: 12,\r\n     *         color: 'blue'\r\n     *     },\r\n     *     {\r\n     *         padding: 20\r\n     *     }\r\n     * ]);\r\n     * ```\r\n     */\r\n\r\n\r\n    TooltipMarkupStyleCreator.prototype.wrapRichTextStyle = function (text, styles) {\r\n      var finalStl = {};\r\n\r\n      if (isArray(styles)) {\r\n        each$1(styles, function (stl) {\r\n          return extend(finalStl, stl);\r\n        });\r\n      } else {\r\n        extend(finalStl, styles);\r\n      }\r\n\r\n      var styleName = this._generateStyleName();\r\n\r\n      this.richTextStyles[styleName] = finalStl;\r\n      return \"{\" + styleName + \"|\" + text + \"}\";\r\n    };\r\n\r\n    return TooltipMarkupStyleCreator;\r\n  }();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function defaultSeriesFormatTooltip(opt) {\r\n    var series = opt.series;\r\n    var dataIndex = opt.dataIndex;\r\n    var multipleSeries = opt.multipleSeries;\r\n    var data = series.getData();\r\n    var tooltipDims = data.mapDimensionsAll('defaultedTooltip');\r\n    var tooltipDimLen = tooltipDims.length;\r\n    var value = series.getRawValue(dataIndex);\r\n    var isValueArr = isArray(value);\r\n    var markerColor = retrieveVisualColorForTooltipMarker(series, dataIndex); // Complicated rule for pretty tooltip.\r\n\r\n    var inlineValue;\r\n    var inlineValueType;\r\n    var subBlocks;\r\n    var sortParam;\r\n\r\n    if (tooltipDimLen > 1 || isValueArr && !tooltipDimLen) {\r\n      var formatArrResult = formatTooltipArrayValue(value, series, dataIndex, tooltipDims, markerColor);\r\n      inlineValue = formatArrResult.inlineValues;\r\n      inlineValueType = formatArrResult.inlineValueTypes;\r\n      subBlocks = formatArrResult.blocks; // Only support tooltip sort by the first inline value. It's enough in most cases.\r\n\r\n      sortParam = formatArrResult.inlineValues[0];\r\n    } else if (tooltipDimLen) {\r\n      var dimInfo = data.getDimensionInfo(tooltipDims[0]);\r\n      sortParam = inlineValue = retrieveRawValue(data, dataIndex, tooltipDims[0]);\r\n      inlineValueType = dimInfo.type;\r\n    } else {\r\n      sortParam = inlineValue = isValueArr ? value[0] : value;\r\n    } // Do not show generated series name. It might not be readable.\r\n\r\n\r\n    var seriesNameSpecified = isNameSpecified(series);\r\n    var seriesName = seriesNameSpecified && series.name || '';\r\n    var itemName = data.getName(dataIndex);\r\n    var inlineName = multipleSeries ? seriesName : itemName;\r\n    return createTooltipMarkup('section', {\r\n      header: seriesName,\r\n      // When series name not specified, do not show a header line with only '-'.\r\n      // This case alway happen in tooltip.trigger: 'item'.\r\n      noHeader: multipleSeries || !seriesNameSpecified,\r\n      sortParam: sortParam,\r\n      blocks: [createTooltipMarkup('nameValue', {\r\n        markerType: 'item',\r\n        markerColor: markerColor,\r\n        // Do not mix display seriesName and itemName in one tooltip,\r\n        // which might confuses users.\r\n        name: inlineName,\r\n        // name dimension might be auto assigned, where the name might\r\n        // be not readable. So we check trim here.\r\n        noName: !trim(inlineName),\r\n        value: inlineValue,\r\n        valueType: inlineValueType\r\n      })].concat(subBlocks || [])\r\n    });\r\n  }\r\n\r\n  function formatTooltipArrayValue(value, series, dataIndex, tooltipDims, colorStr) {\r\n    // check: category-no-encode-has-axis-data in dataset.html\r\n    var data = series.getData();\r\n    var isValueMultipleLine = reduce(value, function (isValueMultipleLine, val, idx) {\r\n      var dimItem = data.getDimensionInfo(idx);\r\n      return isValueMultipleLine = isValueMultipleLine || dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\r\n    }, false);\r\n    var inlineValues = [];\r\n    var inlineValueTypes = [];\r\n    var blocks = [];\r\n    tooltipDims.length ? each$1(tooltipDims, function (dim) {\r\n      setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\r\n    }) // By default, all dims is used on tooltip.\r\n    : each$1(value, setEachItem);\r\n\r\n    function setEachItem(val, dim) {\r\n      var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\r\n\r\n      if (!dimInfo || dimInfo.otherDims.tooltip === false) {\r\n        return;\r\n      }\r\n\r\n      if (isValueMultipleLine) {\r\n        blocks.push(createTooltipMarkup('nameValue', {\r\n          markerType: 'subItem',\r\n          markerColor: colorStr,\r\n          name: dimInfo.displayName,\r\n          value: val,\r\n          valueType: dimInfo.type\r\n        }));\r\n      } else {\r\n        inlineValues.push(val);\r\n        inlineValueTypes.push(dimInfo.type);\r\n      }\r\n    }\r\n\r\n    return {\r\n      inlineValues: inlineValues,\r\n      inlineValueTypes: inlineValueTypes,\r\n      blocks: blocks\r\n    };\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var inner$1 = makeInner();\r\n\r\n  function getSelectionKey(data, dataIndex) {\r\n    return data.getName(dataIndex) || data.getId(dataIndex);\r\n  }\r\n\r\n  var SeriesModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(SeriesModel, _super);\r\n\r\n    function SeriesModel() {\r\n      // [Caution]: Becuase this class or desecendants can be used as `XXX.extend(subProto)`,\r\n      // the class members must not be initialized in constructor or declaration place.\r\n      // Otherwise there is bad case:\r\n      //   class A {xxx = 1;}\r\n      //   enableClassExtend(A);\r\n      //   class B extends A {}\r\n      //   var C = B.extend({xxx: 5});\r\n      //   var c = new C();\r\n      //   console.log(c.xxx); // expect 5 but always 1.\r\n      var _this = _super !== null && _super.apply(this, arguments) || this; // ---------------------------------------\r\n      // Props about data selection\r\n      // ---------------------------------------\r\n\r\n\r\n      _this._selectedDataIndicesMap = {};\r\n      return _this;\r\n    }\r\n\r\n    SeriesModel.prototype.init = function (option, parentModel, ecModel) {\r\n      this.seriesIndex = this.componentIndex;\r\n      this.dataTask = createTask({\r\n        count: dataTaskCount,\r\n        reset: dataTaskReset\r\n      });\r\n      this.dataTask.context = {\r\n        model: this\r\n      };\r\n      this.mergeDefaultAndTheme(option, ecModel);\r\n      var sourceManager = inner$1(this).sourceManager = new SourceManager(this);\r\n      sourceManager.prepareSource();\r\n      var data = this.getInitialData(option, ecModel);\r\n      wrapData(data, this);\r\n      this.dataTask.context.data = data;\r\n      {\r\n        assert$1(data, 'getInitialData returned invalid data.');\r\n      }\r\n      inner$1(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\r\n      // dataBeforeProcessed by cloneShallow), cloneShallow will\r\n      // cause data.graph.data !== data when using\r\n      // module:echarts/data/Graph or module:echarts/data/Tree.\r\n      // See module:echarts/data/helper/linkList\r\n      // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\r\n      // init or merge stage, because the data can be restored. So we do not `restoreData`\r\n      // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\r\n      // Call `seriesModel.getRawData()` instead.\r\n      // this.restoreData();\r\n\r\n      autoSeriesName(this);\r\n\r\n      this._initSelectedMapFromData(data);\r\n    };\r\n    /**\r\n     * Util for merge default and theme to option\r\n     */\r\n\r\n\r\n    SeriesModel.prototype.mergeDefaultAndTheme = function (option, ecModel) {\r\n      var layoutMode = fetchLayoutMode(this);\r\n      var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\r\n      // But if name duplicate between series subType\r\n      // (for example: parallel) add component mainType,\r\n      // add suffix 'Series'.\r\n\r\n      var themeSubType = this.subType;\r\n\r\n      if (ComponentModel.hasClass(themeSubType)) {\r\n        themeSubType += 'Series';\r\n      }\r\n\r\n      merge(option, ecModel.getTheme().get(this.subType));\r\n      merge(option, this.getDefaultOption()); // Default label emphasis `show`\r\n\r\n      defaultEmphasis(option, 'label', ['show']);\r\n      this.fillDataTextStyle(option.data);\r\n\r\n      if (layoutMode) {\r\n        mergeLayoutParam(option, inputPositionParams, layoutMode);\r\n      }\r\n    };\r\n\r\n    SeriesModel.prototype.mergeOption = function (newSeriesOption, ecModel) {\r\n      // this.settingTask.dirty();\r\n      newSeriesOption = merge(this.option, newSeriesOption, true);\r\n      this.fillDataTextStyle(newSeriesOption.data);\r\n      var layoutMode = fetchLayoutMode(this);\r\n\r\n      if (layoutMode) {\r\n        mergeLayoutParam(this.option, newSeriesOption, layoutMode);\r\n      }\r\n\r\n      var sourceManager = inner$1(this).sourceManager;\r\n      sourceManager.dirty();\r\n      sourceManager.prepareSource();\r\n      var data = this.getInitialData(newSeriesOption, ecModel);\r\n      wrapData(data, this);\r\n      this.dataTask.dirty();\r\n      this.dataTask.context.data = data;\r\n      inner$1(this).dataBeforeProcessed = data;\r\n      autoSeriesName(this);\r\n\r\n      this._initSelectedMapFromData(data);\r\n    };\r\n\r\n    SeriesModel.prototype.fillDataTextStyle = function (data) {\r\n      // Default data label emphasis `show`\r\n      // FIXME Tree structure data ?\r\n      // FIXME Performance ?\r\n      if (data && !isTypedArray(data)) {\r\n        var props = ['show'];\r\n\r\n        for (var i = 0; i < data.length; i++) {\r\n          if (data[i] && data[i].label) {\r\n            defaultEmphasis(data[i], 'label', props);\r\n          }\r\n        }\r\n      }\r\n    };\r\n    /**\r\n     * Init a data structure from data related option in series\r\n     * Must be overriden.\r\n     */\r\n\r\n\r\n    SeriesModel.prototype.getInitialData = function (option, ecModel) {\r\n      return;\r\n    };\r\n    /**\r\n     * Append data to list\r\n     */\r\n\r\n\r\n    SeriesModel.prototype.appendData = function (params) {\r\n      // FIXME ???\r\n      // (1) If data from dataset, forbidden append.\r\n      // (2) support append data of dataset.\r\n      var data = this.getRawData();\r\n      data.appendData(params.data);\r\n    };\r\n    /**\r\n     * Consider some method like `filter`, `map` need make new data,\r\n     * We should make sure that `seriesModel.getData()` get correct\r\n     * data in the stream procedure. So we fetch data from upstream\r\n     * each time `task.perform` called.\r\n     */\r\n\r\n\r\n    SeriesModel.prototype.getData = function (dataType) {\r\n      var task = getCurrentTask(this);\r\n\r\n      if (task) {\r\n        var data = task.context.data;\r\n        return dataType == null ? data : data.getLinkedData(dataType);\r\n      } else {\r\n        // When series is not alive (that may happen when click toolbox\r\n        // restore or setOption with not merge mode), series data may\r\n        // be still need to judge animation or something when graphic\r\n        // elements want to know whether fade out.\r\n        return inner$1(this).data;\r\n      }\r\n    };\r\n\r\n    SeriesModel.prototype.getAllData = function () {\r\n      var mainData = this.getData();\r\n      return mainData && mainData.getLinkedDataAll ? mainData.getLinkedDataAll() : [{\r\n        data: mainData\r\n      }];\r\n    };\r\n\r\n    SeriesModel.prototype.setData = function (data) {\r\n      var task = getCurrentTask(this);\r\n\r\n      if (task) {\r\n        var context = task.context; // Consider case: filter, data sample.\r\n        // FIXME:TS never used, so comment it\r\n        // if (context.data !== data && task.modifyOutputEnd) {\r\n        //     task.setOutputEnd(data.count());\r\n        // }\r\n\r\n        context.outputData = data; // Caution: setData should update context.data,\r\n        // Because getData may be called multiply in a\r\n        // single stage and expect to get the data just\r\n        // set. (For example, AxisProxy, x y both call\r\n        // getData and setDate sequentially).\r\n        // So the context.data should be fetched from\r\n        // upstream each time when a stage starts to be\r\n        // performed.\r\n\r\n        if (task !== this.dataTask) {\r\n          context.data = data;\r\n        }\r\n      }\r\n\r\n      inner$1(this).data = data;\r\n    };\r\n\r\n    SeriesModel.prototype.getSource = function () {\r\n      return inner$1(this).sourceManager.getSource();\r\n    };\r\n    /**\r\n     * Get data before processed\r\n     */\r\n\r\n\r\n    SeriesModel.prototype.getRawData = function () {\r\n      return inner$1(this).dataBeforeProcessed;\r\n    };\r\n    /**\r\n     * Get base axis if has coordinate system and has axis.\r\n     * By default use coordSys.getBaseAxis();\r\n     * Can be overrided for some chart.\r\n     * @return {type} description\r\n     */\r\n\r\n\r\n    SeriesModel.prototype.getBaseAxis = function () {\r\n      var coordSys = this.coordinateSystem; // @ts-ignore\r\n\r\n      return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\r\n    };\r\n    /**\r\n     * Default tooltip formatter\r\n     *\r\n     * @param dataIndex\r\n     * @param multipleSeries\r\n     * @param dataType\r\n     * @param renderMode valid values: 'html'(by default) and 'richText'.\r\n     *        'html' is used for rendering tooltip in extra DOM form, and the result\r\n     *        string is used as DOM HTML content.\r\n     *        'richText' is used for rendering tooltip in rich text form, for those where\r\n     *        DOM operation is not supported.\r\n     * @return formatted tooltip with `html` and `markers`\r\n     *        Notice: The override method can also return string\r\n     */\r\n\r\n\r\n    SeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\r\n      return defaultSeriesFormatTooltip({\r\n        series: this,\r\n        dataIndex: dataIndex,\r\n        multipleSeries: multipleSeries\r\n      });\r\n    };\r\n\r\n    SeriesModel.prototype.isAnimationEnabled = function () {\r\n      if (env.node) {\r\n        return false;\r\n      }\r\n\r\n      var animationEnabled = this.getShallow('animation');\r\n\r\n      if (animationEnabled) {\r\n        if (this.getData().count() > this.getShallow('animationThreshold')) {\r\n          animationEnabled = false;\r\n        }\r\n      }\r\n\r\n      return !!animationEnabled;\r\n    };\r\n\r\n    SeriesModel.prototype.restoreData = function () {\r\n      this.dataTask.dirty();\r\n    };\r\n\r\n    SeriesModel.prototype.getColorFromPalette = function (name, scope, requestColorNum) {\r\n      var ecModel = this.ecModel; // PENDING\r\n\r\n      var color = PaletteMixin.prototype.getColorFromPalette.call(this, name, scope, requestColorNum);\r\n\r\n      if (!color) {\r\n        color = ecModel.getColorFromPalette(name, scope, requestColorNum);\r\n      }\r\n\r\n      return color;\r\n    };\r\n    /**\r\n     * Use `data.mapDimensionsAll(coordDim)` instead.\r\n     * @deprecated\r\n     */\r\n\r\n\r\n    SeriesModel.prototype.coordDimToDataDim = function (coordDim) {\r\n      return this.getRawData().mapDimensionsAll(coordDim);\r\n    };\r\n    /**\r\n     * Get progressive rendering count each step\r\n     */\r\n\r\n\r\n    SeriesModel.prototype.getProgressive = function () {\r\n      return this.get('progressive');\r\n    };\r\n    /**\r\n     * Get progressive rendering count each step\r\n     */\r\n\r\n\r\n    SeriesModel.prototype.getProgressiveThreshold = function () {\r\n      return this.get('progressiveThreshold');\r\n    }; // PENGING If selectedMode is null ?\r\n\r\n\r\n    SeriesModel.prototype.select = function (innerDataIndices, dataType) {\r\n      this._innerSelect(this.getData(dataType), innerDataIndices);\r\n    };\r\n\r\n    SeriesModel.prototype.unselect = function (innerDataIndices, dataType) {\r\n      var selectedMap = this.option.selectedMap;\r\n\r\n      if (!selectedMap) {\r\n        return;\r\n      }\r\n\r\n      var data = this.getData(dataType);\r\n\r\n      for (var i = 0; i < innerDataIndices.length; i++) {\r\n        var dataIndex = innerDataIndices[i];\r\n        var nameOrId = getSelectionKey(data, dataIndex);\r\n        selectedMap[nameOrId] = false;\r\n        this._selectedDataIndicesMap[nameOrId] = -1;\r\n      }\r\n    };\r\n\r\n    SeriesModel.prototype.toggleSelect = function (innerDataIndices, dataType) {\r\n      var tmpArr = [];\r\n\r\n      for (var i = 0; i < innerDataIndices.length; i++) {\r\n        tmpArr[0] = innerDataIndices[i];\r\n        this.isSelected(innerDataIndices[i], dataType) ? this.unselect(tmpArr, dataType) : this.select(tmpArr, dataType);\r\n      }\r\n    };\r\n\r\n    SeriesModel.prototype.getSelectedDataIndices = function () {\r\n      var selectedDataIndicesMap = this._selectedDataIndicesMap;\r\n      var nameOrIds = keys(selectedDataIndicesMap);\r\n      var dataIndices = [];\r\n\r\n      for (var i = 0; i < nameOrIds.length; i++) {\r\n        var dataIndex = selectedDataIndicesMap[nameOrIds[i]];\r\n\r\n        if (dataIndex >= 0) {\r\n          dataIndices.push(dataIndex);\r\n        }\r\n      }\r\n\r\n      return dataIndices;\r\n    };\r\n\r\n    SeriesModel.prototype.isSelected = function (dataIndex, dataType) {\r\n      var selectedMap = this.option.selectedMap;\r\n\r\n      if (!selectedMap) {\r\n        return false;\r\n      }\r\n\r\n      var data = this.getData(dataType);\r\n      var nameOrId = getSelectionKey(data, dataIndex);\r\n      return selectedMap[nameOrId] || false;\r\n    };\r\n\r\n    SeriesModel.prototype._innerSelect = function (data, innerDataIndices) {\r\n      var _a, _b;\r\n\r\n      var selectedMode = this.option.selectedMode;\r\n      var len = innerDataIndices.length;\r\n\r\n      if (!selectedMode || !len) {\r\n        return;\r\n      }\r\n\r\n      if (selectedMode === 'multiple') {\r\n        var selectedMap = this.option.selectedMap || (this.option.selectedMap = {});\r\n\r\n        for (var i = 0; i < len; i++) {\r\n          var dataIndex = innerDataIndices[i]; // TODO diffrent types of data share same object.\r\n\r\n          var nameOrId = getSelectionKey(data, dataIndex);\r\n          selectedMap[nameOrId] = true;\r\n          this._selectedDataIndicesMap[nameOrId] = data.getRawIndex(dataIndex);\r\n        }\r\n      } else if (selectedMode === 'single' || selectedMode === true) {\r\n        var lastDataIndex = innerDataIndices[len - 1];\r\n        var nameOrId = getSelectionKey(data, lastDataIndex);\r\n        this.option.selectedMap = (_a = {}, _a[nameOrId] = true, _a);\r\n        this._selectedDataIndicesMap = (_b = {}, _b[nameOrId] = data.getRawIndex(lastDataIndex), _b);\r\n      }\r\n    };\r\n\r\n    SeriesModel.prototype._initSelectedMapFromData = function (data) {\r\n      // Ignore select info in data if selectedMap exists.\r\n      // NOTE It's only for legacy usage. edge data is not supported.\r\n      if (this.option.selectedMap) {\r\n        return;\r\n      }\r\n\r\n      var dataIndices = [];\r\n\r\n      if (data.hasItemOption) {\r\n        data.each(function (idx) {\r\n          var rawItem = data.getRawDataItem(idx);\r\n\r\n          if (typeof rawItem === 'object' && rawItem.selected) {\r\n            dataIndices.push(idx);\r\n          }\r\n        });\r\n      }\r\n\r\n      if (dataIndices.length > 0) {\r\n        this._innerSelect(data, dataIndices);\r\n      }\r\n    }; // /**\r\n    //  * @see {module:echarts/stream/Scheduler}\r\n    //  */\r\n    // abstract pipeTask: null\r\n\r\n\r\n    SeriesModel.registerClass = function (clz) {\r\n      return ComponentModel.registerClass(clz);\r\n    };\r\n\r\n    SeriesModel.protoInitialize = function () {\r\n      var proto = SeriesModel.prototype;\r\n      proto.type = 'series.__base__';\r\n      proto.seriesIndex = 0;\r\n      proto.useColorPaletteOnData = false;\r\n      proto.ignoreStyleOnData = false;\r\n      proto.hasSymbolVisual = false;\r\n      proto.defaultSymbol = 'circle'; // Make sure the values can be accessed!\r\n\r\n      proto.visualStyleAccessPath = 'itemStyle';\r\n      proto.visualDrawType = 'fill';\r\n    }();\r\n\r\n    return SeriesModel;\r\n  }(ComponentModel);\r\n\r\n  mixin(SeriesModel, DataFormatMixin);\r\n  mixin(SeriesModel, PaletteMixin);\r\n  mountExtend(SeriesModel, ComponentModel);\r\n  /**\r\n   * MUST be called after `prepareSource` called\r\n   * Here we need to make auto series, especially for auto legend. But we\r\n   * do not modify series.name in option to avoid side effects.\r\n   */\r\n\r\n  function autoSeriesName(seriesModel) {\r\n    // User specified name has higher priority, otherwise it may cause\r\n    // series can not be queried unexpectedly.\r\n    var name = seriesModel.name;\r\n\r\n    if (!isNameSpecified(seriesModel)) {\r\n      seriesModel.name = getSeriesAutoName(seriesModel) || name;\r\n    }\r\n  }\r\n\r\n  function getSeriesAutoName(seriesModel) {\r\n    var data = seriesModel.getRawData();\r\n    var dataDims = data.mapDimensionsAll('seriesName');\r\n    var nameArr = [];\r\n    each$1(dataDims, function (dataDim) {\r\n      var dimInfo = data.getDimensionInfo(dataDim);\r\n      dimInfo.displayName && nameArr.push(dimInfo.displayName);\r\n    });\r\n    return nameArr.join(' ');\r\n  }\r\n\r\n  function dataTaskCount(context) {\r\n    return context.model.getRawData().count();\r\n  }\r\n\r\n  function dataTaskReset(context) {\r\n    var seriesModel = context.model;\r\n    seriesModel.setData(seriesModel.getRawData().cloneShallow());\r\n    return dataTaskProgress;\r\n  }\r\n\r\n  function dataTaskProgress(param, context) {\r\n    // Avoid repead cloneShallow when data just created in reset.\r\n    if (context.outputData && param.end > context.outputData.count()) {\r\n      context.model.getRawData().cloneShallow(context.outputData);\r\n    }\r\n  } // TODO refactor\r\n\r\n\r\n  function wrapData(data, seriesModel) {\r\n    each$1(__spreadArrays(data.CHANGABLE_METHODS, data.DOWNSAMPLE_METHODS), function (methodName) {\r\n      data.wrapMethod(methodName, curry(onDataChange, seriesModel));\r\n    });\r\n  }\r\n\r\n  function onDataChange(seriesModel, newList) {\r\n    var task = getCurrentTask(seriesModel);\r\n\r\n    if (task) {\r\n      // Consider case: filter, selectRange\r\n      task.setOutputEnd((newList || this).count());\r\n    }\r\n\r\n    return newList;\r\n  }\r\n\r\n  function getCurrentTask(seriesModel) {\r\n    var scheduler = (seriesModel.ecModel || {}).scheduler;\r\n    var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\r\n\r\n    if (pipeline) {\r\n      // When pipline finished, the currrentTask keep the last\r\n      // task (renderTask).\r\n      var task = pipeline.currentTask;\r\n\r\n      if (task) {\r\n        var agentStubMap = task.agentStubMap;\r\n\r\n        if (agentStubMap) {\r\n          task = agentStubMap.get(seriesModel.uid);\r\n        }\r\n      }\r\n\r\n      return task;\r\n    }\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var ComponentView =\r\n  /** @class */\r\n  function () {\r\n    function ComponentView() {\r\n      this.group = new Group();\r\n      this.uid = getUID('viewComponent');\r\n    }\r\n\r\n    ComponentView.prototype.init = function (ecModel, api) {};\r\n\r\n    ComponentView.prototype.render = function (model, ecModel, api, payload) {};\r\n\r\n    ComponentView.prototype.dispose = function (ecModel, api) {};\r\n\r\n    ComponentView.prototype.updateView = function (model, ecModel, api, payload) {// Do nothing;\r\n    };\r\n\r\n    ComponentView.prototype.updateLayout = function (model, ecModel, api, payload) {// Do nothing;\r\n    };\r\n\r\n    ComponentView.prototype.updateVisual = function (model, ecModel, api, payload) {// Do nothing;\r\n    };\r\n    /**\r\n     * Hook for blur target series.\r\n     * Can be used in marker for blur the markers\r\n     */\r\n\r\n\r\n    ComponentView.prototype.blurSeries = function (seriesModels, ecModel) {// Do nothing;\r\n    };\r\n\r\n    return ComponentView;\r\n  }();\r\n\r\n  enableClassExtend(ComponentView);\r\n  enableClassManagement(ComponentView);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * @return {string} If large mode changed, return string 'reset';\r\n   */\r\n\r\n  function createRenderPlanner() {\r\n    var inner = makeInner();\r\n    return function (seriesModel) {\r\n      var fields = inner(seriesModel);\r\n      var pipelineContext = seriesModel.pipelineContext;\r\n      var originalLarge = !!fields.large;\r\n      var originalProgressive = !!fields.progressiveRender; // FIXME: if the planner works on a filtered series, `pipelineContext` does not\r\n      // exists. See #11611 . Probably we need to modify this structure, see the comment\r\n      // on `performRawSeries` in `Schedular.js`.\r\n\r\n      var large = fields.large = !!(pipelineContext && pipelineContext.large);\r\n      var progressive = fields.progressiveRender = !!(pipelineContext && pipelineContext.progressiveRender);\r\n      return !!(originalLarge !== large || originalProgressive !== progressive) && 'reset';\r\n    };\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var inner$2 = makeInner();\r\n  var renderPlanner = createRenderPlanner();\r\n\r\n  var ChartView =\r\n  /** @class */\r\n  function () {\r\n    function ChartView() {\r\n      this.group = new Group();\r\n      this.uid = getUID('viewChart');\r\n      this.renderTask = createTask({\r\n        plan: renderTaskPlan,\r\n        reset: renderTaskReset\r\n      });\r\n      this.renderTask.context = {\r\n        view: this\r\n      };\r\n    }\r\n\r\n    ChartView.prototype.init = function (ecModel, api) {};\r\n\r\n    ChartView.prototype.render = function (seriesModel, ecModel, api, payload) {};\r\n    /**\r\n     * Highlight series or specified data item.\r\n     */\r\n\r\n\r\n    ChartView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\r\n      toggleHighlight(seriesModel.getData(), payload, 'emphasis');\r\n    };\r\n    /**\r\n     * Downplay series or specified data item.\r\n     */\r\n\r\n\r\n    ChartView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\r\n      toggleHighlight(seriesModel.getData(), payload, 'normal');\r\n    };\r\n    /**\r\n     * Remove self.\r\n     */\r\n\r\n\r\n    ChartView.prototype.remove = function (ecModel, api) {\r\n      this.group.removeAll();\r\n    };\r\n    /**\r\n     * Dispose self.\r\n     */\r\n\r\n\r\n    ChartView.prototype.dispose = function (ecModel, api) {};\r\n\r\n    ChartView.prototype.updateView = function (seriesModel, ecModel, api, payload) {\r\n      this.render(seriesModel, ecModel, api, payload);\r\n    }; // FIXME never used?\r\n\r\n\r\n    ChartView.prototype.updateLayout = function (seriesModel, ecModel, api, payload) {\r\n      this.render(seriesModel, ecModel, api, payload);\r\n    }; // FIXME never used?\r\n\r\n\r\n    ChartView.prototype.updateVisual = function (seriesModel, ecModel, api, payload) {\r\n      this.render(seriesModel, ecModel, api, payload);\r\n    };\r\n\r\n    ChartView.markUpdateMethod = function (payload, methodName) {\r\n      inner$2(payload).updateMethod = methodName;\r\n    };\r\n\r\n    ChartView.protoInitialize = function () {\r\n      var proto = ChartView.prototype;\r\n      proto.type = 'chart';\r\n    }();\r\n\r\n    return ChartView;\r\n  }();\r\n  /**\r\n   * Set state of single element\r\n   */\r\n\r\n\r\n  function elSetState(el, state, highlightDigit) {\r\n    if (el) {\r\n      (state === 'emphasis' ? enterEmphasis : leaveEmphasis)(el, highlightDigit);\r\n    }\r\n  }\r\n\r\n  function toggleHighlight(data, payload, state) {\r\n    var dataIndex = queryDataIndex(data, payload);\r\n    var highlightDigit = payload && payload.highlightKey != null ? getHighlightDigit(payload.highlightKey) : null;\r\n\r\n    if (dataIndex != null) {\r\n      each$1(normalizeToArray(dataIndex), function (dataIdx) {\r\n        elSetState(data.getItemGraphicEl(dataIdx), state, highlightDigit);\r\n      });\r\n    } else {\r\n      data.eachItemGraphicEl(function (el) {\r\n        elSetState(el, state, highlightDigit);\r\n      });\r\n    }\r\n  }\r\n\r\n  enableClassExtend(ChartView, ['dispose']);\r\n  enableClassManagement(ChartView);\r\n\r\n  function renderTaskPlan(context) {\r\n    return renderPlanner(context.model);\r\n  }\r\n\r\n  function renderTaskReset(context) {\r\n    var seriesModel = context.model;\r\n    var ecModel = context.ecModel;\r\n    var api = context.api;\r\n    var payload = context.payload; // FIXME: remove updateView updateVisual\r\n\r\n    var progressiveRender = seriesModel.pipelineContext.progressiveRender;\r\n    var view = context.view;\r\n    var updateMethod = payload && inner$2(payload).updateMethod;\r\n    var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\r\n    // is less than progressive threshold.\r\n    : 'render';\r\n\r\n    if (methodName !== 'render') {\r\n      view[methodName](seriesModel, ecModel, api, payload);\r\n    }\r\n\r\n    return progressMethodMap[methodName];\r\n  }\r\n\r\n  var progressMethodMap = {\r\n    incrementalPrepareRender: {\r\n      progress: function (params, context) {\r\n        context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\r\n      }\r\n    },\r\n    render: {\r\n      // Put view.render in `progress` to support appendData. But in this case\r\n      // view.render should not be called in reset, otherwise it will be called\r\n      // twise. Use `forceFirstProgress` to make sure that view.render is called\r\n      // in any cases.\r\n      forceFirstProgress: true,\r\n      progress: function (params, context) {\r\n        context.view.render(context.model, context.ecModel, context.api, context.payload);\r\n      }\r\n    }\r\n  };\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var ORIGIN_METHOD = '\\0__throttleOriginMethod';\r\n  var RATE = '\\0__throttleRate';\r\n  var THROTTLE_TYPE = '\\0__throttleType';\r\n  /**\r\n   * @public\r\n   * @param {(Function)} fn\r\n   * @param {number} [delay=0] Unit: ms.\r\n   * @param {boolean} [debounce=false]\r\n   *        true: If call interval less than `delay`, only the last call works.\r\n   *        false: If call interval less than `delay, call works on fixed rate.\r\n   * @return {(Function)} throttled fn.\r\n   */\r\n\r\n  function throttle(fn, delay, debounce) {\r\n    var currCall;\r\n    var lastCall = 0;\r\n    var lastExec = 0;\r\n    var timer = null;\r\n    var diff;\r\n    var scope;\r\n    var args;\r\n    var debounceNextCall;\r\n    delay = delay || 0;\r\n\r\n    function exec() {\r\n      lastExec = new Date().getTime();\r\n      timer = null;\r\n      fn.apply(scope, args || []);\r\n    }\r\n\r\n    var cb = function () {\r\n      var cbArgs = [];\r\n\r\n      for (var _i = 0; _i < arguments.length; _i++) {\r\n        cbArgs[_i] = arguments[_i];\r\n      }\r\n\r\n      currCall = new Date().getTime();\r\n      scope = this;\r\n      args = cbArgs;\r\n      var thisDelay = debounceNextCall || delay;\r\n      var thisDebounce = debounceNextCall || debounce;\r\n      debounceNextCall = null;\r\n      diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\r\n      clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later\r\n      // than a new call of `cb`, that is, preserving the command order. Consider\r\n      // calculating \"scale rate\" when roaming as an example. When a call of `cb`\r\n      // happens, either the `exec` is called dierectly, or the call is delayed.\r\n      // But the delayed call should never be later than next call of `cb`. Under\r\n      // this assurance, we can simply update view state each time `dispatchAction`\r\n      // triggered by user roaming, but not need to add extra code to avoid the\r\n      // state being \"rolled-back\".\r\n\r\n      if (thisDebounce) {\r\n        timer = setTimeout(exec, thisDelay);\r\n      } else {\r\n        if (diff >= 0) {\r\n          exec();\r\n        } else {\r\n          timer = setTimeout(exec, -diff);\r\n        }\r\n      }\r\n\r\n      lastCall = currCall;\r\n    };\r\n    /**\r\n     * Clear throttle.\r\n     * @public\r\n     */\r\n\r\n\r\n    cb.clear = function () {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n        timer = null;\r\n      }\r\n    };\r\n    /**\r\n     * Enable debounce once.\r\n     */\r\n\r\n\r\n    cb.debounceNextCall = function (debounceDelay) {\r\n      debounceNextCall = debounceDelay;\r\n    };\r\n\r\n    return cb;\r\n  }\r\n  /**\r\n   * Create throttle method or update throttle rate.\r\n   *\r\n   * @example\r\n   * ComponentView.prototype.render = function () {\r\n   *     ...\r\n   *     throttle.createOrUpdate(\r\n   *         this,\r\n   *         '_dispatchAction',\r\n   *         this.model.get('throttle'),\r\n   *         'fixRate'\r\n   *     );\r\n   * };\r\n   * ComponentView.prototype.remove = function () {\r\n   *     throttle.clear(this, '_dispatchAction');\r\n   * };\r\n   * ComponentView.prototype.dispose = function () {\r\n   *     throttle.clear(this, '_dispatchAction');\r\n   * };\r\n   *\r\n   */\r\n\r\n\r\n  function createOrUpdate(obj, fnAttr, rate, throttleType) {\r\n    var fn = obj[fnAttr];\r\n\r\n    if (!fn) {\r\n      return;\r\n    }\r\n\r\n    var originFn = fn[ORIGIN_METHOD] || fn;\r\n    var lastThrottleType = fn[THROTTLE_TYPE];\r\n    var lastRate = fn[RATE];\r\n\r\n    if (lastRate !== rate || lastThrottleType !== throttleType) {\r\n      if (rate == null || !throttleType) {\r\n        return obj[fnAttr] = originFn;\r\n      }\r\n\r\n      fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\r\n      fn[ORIGIN_METHOD] = originFn;\r\n      fn[THROTTLE_TYPE] = throttleType;\r\n      fn[RATE] = rate;\r\n    }\r\n\r\n    return fn;\r\n  }\r\n  /**\r\n   * Clear throttle. Example see throttle.createOrUpdate.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var inner$3 = makeInner();\r\n  var defaultStyleMappers = {\r\n    itemStyle: makeStyleMapper(ITEM_STYLE_KEY_MAP, true),\r\n    lineStyle: makeStyleMapper(LINE_STYLE_KEY_MAP, true)\r\n  };\r\n  var defaultColorKey = {\r\n    lineStyle: 'stroke',\r\n    itemStyle: 'fill'\r\n  };\r\n\r\n  function getStyleMapper(seriesModel, stylePath) {\r\n    var styleMapper = seriesModel.visualStyleMapper || defaultStyleMappers[stylePath];\r\n\r\n    if (!styleMapper) {\r\n      console.warn(\"Unkown style type '\" + stylePath + \"'.\");\r\n      return defaultStyleMappers.itemStyle;\r\n    }\r\n\r\n    return styleMapper;\r\n  }\r\n\r\n  function getDefaultColorKey(seriesModel, stylePath) {\r\n    // return defaultColorKey[stylePath] ||\r\n    var colorKey = seriesModel.visualDrawType || defaultColorKey[stylePath];\r\n\r\n    if (!colorKey) {\r\n      console.warn(\"Unkown style type '\" + stylePath + \"'.\");\r\n      return 'fill';\r\n    }\r\n\r\n    return colorKey;\r\n  }\r\n\r\n  var seriesStyleTask = {\r\n    createOnAllSeries: true,\r\n    performRawSeries: true,\r\n    reset: function (seriesModel, ecModel) {\r\n      var data = seriesModel.getData();\r\n      var stylePath = seriesModel.visualStyleAccessPath || 'itemStyle'; // Set in itemStyle\r\n\r\n      var styleModel = seriesModel.getModel(stylePath);\r\n      var getStyle = getStyleMapper(seriesModel, stylePath);\r\n      var globalStyle = getStyle(styleModel);\r\n      var decalOption = styleModel.getShallow('decal');\r\n\r\n      if (decalOption) {\r\n        data.setVisual('decal', decalOption);\r\n        decalOption.dirty = true;\r\n      } // TODO\r\n\r\n\r\n      var colorKey = getDefaultColorKey(seriesModel, stylePath);\r\n      var color = globalStyle[colorKey]; // TODO style callback\r\n\r\n      var colorCallback = isFunction$1(color) ? color : null; // Get from color palette by default.\r\n\r\n      if (!globalStyle[colorKey] || colorCallback) {\r\n        // Note: if some series has color specified (e.g., by itemStyle.color), we DO NOT\r\n        // make it effect palette. Bacause some scenarios users need to make some series\r\n        // transparent or as background, which should better not effect the palette.\r\n        globalStyle[colorKey] = seriesModel.getColorFromPalette( // TODO series count changed.\r\n        seriesModel.name, null, ecModel.getSeriesCount());\r\n        data.setVisual('colorFromPalette', true);\r\n      }\r\n\r\n      data.setVisual('style', globalStyle);\r\n      data.setVisual('drawType', colorKey); // Only visible series has each data be visual encoded\r\n\r\n      if (!ecModel.isSeriesFiltered(seriesModel) && colorCallback) {\r\n        data.setVisual('colorFromPalette', false);\r\n        return {\r\n          dataEach: function (data, idx) {\r\n            var dataParams = seriesModel.getDataParams(idx);\r\n            var itemStyle = extend({}, globalStyle);\r\n            itemStyle[colorKey] = colorCallback(dataParams);\r\n            data.setItemVisual(idx, 'style', itemStyle);\r\n          }\r\n        };\r\n      }\r\n    }\r\n  };\r\n  var sharedModel = new Model();\r\n  var dataStyleTask = {\r\n    createOnAllSeries: true,\r\n    performRawSeries: true,\r\n    reset: function (seriesModel, ecModel) {\r\n      if (seriesModel.ignoreStyleOnData || ecModel.isSeriesFiltered(seriesModel)) {\r\n        return;\r\n      }\r\n\r\n      var data = seriesModel.getData();\r\n      var stylePath = seriesModel.visualStyleAccessPath || 'itemStyle'; // Set in itemStyle\r\n\r\n      var getStyle = getStyleMapper(seriesModel, stylePath);\r\n      var colorKey = data.getVisual('drawType');\r\n      return {\r\n        dataEach: data.hasItemOption ? function (data, idx) {\r\n          // Not use getItemModel for performance considuration\r\n          var rawItem = data.getRawDataItem(idx);\r\n\r\n          if (rawItem && rawItem[stylePath]) {\r\n            sharedModel.option = rawItem[stylePath];\r\n            var style = getStyle(sharedModel);\r\n            var existsStyle = data.ensureUniqueItemVisual(idx, 'style');\r\n            extend(existsStyle, style);\r\n\r\n            if (sharedModel.option.decal) {\r\n              data.setItemVisual(idx, 'decal', sharedModel.option.decal);\r\n              sharedModel.option.decal.dirty = true;\r\n            }\r\n\r\n            if (colorKey in style) {\r\n              data.setItemVisual(idx, 'colorFromPalette', false);\r\n            }\r\n          }\r\n        } : null\r\n      };\r\n    }\r\n  }; // Pick color from palette for the data which has not been set with color yet.\r\n  // Note: do not support stream rendering. No such cases yet.\r\n\r\n  var dataColorPaletteTask = {\r\n    performRawSeries: true,\r\n    overallReset: function (ecModel) {\r\n      // Each type of series use one scope.\r\n      // Pie and funnel are using diferrent scopes\r\n      var paletteScopeGroupByType = createHashMap();\r\n      ecModel.eachSeries(function (seriesModel) {\r\n        if (!seriesModel.useColorPaletteOnData) {\r\n          return;\r\n        }\r\n\r\n        var colorScope = paletteScopeGroupByType.get(seriesModel.type);\r\n\r\n        if (!colorScope) {\r\n          colorScope = {};\r\n          paletteScopeGroupByType.set(seriesModel.type, colorScope);\r\n        }\r\n\r\n        inner$3(seriesModel).scope = colorScope;\r\n      });\r\n      ecModel.eachSeries(function (seriesModel) {\r\n        if (!seriesModel.useColorPaletteOnData || ecModel.isSeriesFiltered(seriesModel)) {\r\n          return;\r\n        }\r\n\r\n        var dataAll = seriesModel.getRawData();\r\n        var idxMap = {};\r\n        var data = seriesModel.getData();\r\n        var colorScope = inner$3(seriesModel).scope;\r\n        var stylePath = seriesModel.visualStyleAccessPath || 'itemStyle';\r\n        var colorKey = getDefaultColorKey(seriesModel, stylePath);\r\n        data.each(function (idx) {\r\n          var rawIdx = data.getRawIndex(idx);\r\n          idxMap[rawIdx] = idx;\r\n        }); // Iterate on data before filtered. To make sure color from palette can be\r\n        // Consistent when toggling legend.\r\n\r\n        dataAll.each(function (rawIdx) {\r\n          var idx = idxMap[rawIdx];\r\n          var fromPalette = data.getItemVisual(idx, 'colorFromPalette'); // Get color from palette for each data only when the color is inherited from series color, which is\r\n          // also picked from color palette. So following situation is not in the case:\r\n          // 1. series.itemStyle.color is set\r\n          // 2. color is encoded by visualMap\r\n\r\n          if (fromPalette) {\r\n            var itemStyle = data.ensureUniqueItemVisual(idx, 'style');\r\n            var name_1 = dataAll.getName(rawIdx) || rawIdx + '';\r\n            var dataCount = dataAll.count();\r\n            itemStyle[colorKey] = seriesModel.getColorFromPalette(name_1, colorScope, dataCount);\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var PI$3 = Math.PI;\r\n  /**\r\n   * @param {module:echarts/ExtensionAPI} api\r\n   * @param {Object} [opts]\r\n   * @param {string} [opts.text]\r\n   * @param {string} [opts.color]\r\n   * @param {string} [opts.textColor]\r\n   * @return {module:zrender/Element}\r\n   */\r\n\r\n  function defaultLoading(api, opts) {\r\n    opts = opts || {};\r\n    defaults(opts, {\r\n      text: 'loading',\r\n      textColor: '#000',\r\n      fontSize: 12,\r\n      fontWeight: 'normal',\r\n      fontStyle: 'normal',\r\n      fontFamily: 'sans-serif',\r\n      maskColor: 'rgba(255, 255, 255, 0.8)',\r\n      showSpinner: true,\r\n      color: '#5470c6',\r\n      spinnerRadius: 10,\r\n      lineWidth: 5,\r\n      zlevel: 0\r\n    });\r\n    var group = new Group();\r\n    var mask = new Rect({\r\n      style: {\r\n        fill: opts.maskColor\r\n      },\r\n      zlevel: opts.zlevel,\r\n      z: 10000\r\n    });\r\n    group.add(mask);\r\n    var textContent = new ZRText({\r\n      style: {\r\n        text: opts.text,\r\n        fill: opts.textColor,\r\n        fontSize: opts.fontSize,\r\n        fontWeight: opts.fontWeight,\r\n        fontStyle: opts.fontStyle,\r\n        fontFamily: opts.fontFamily\r\n      }\r\n    });\r\n    var labelRect = new Rect({\r\n      style: {\r\n        fill: 'none'\r\n      },\r\n      textContent: textContent,\r\n      textConfig: {\r\n        position: 'right',\r\n        distance: 10\r\n      },\r\n      zlevel: opts.zlevel,\r\n      z: 10001\r\n    });\r\n    group.add(labelRect);\r\n    var arc;\r\n\r\n    if (opts.showSpinner) {\r\n      arc = new Arc({\r\n        shape: {\r\n          startAngle: -PI$3 / 2,\r\n          endAngle: -PI$3 / 2 + 0.1,\r\n          r: opts.spinnerRadius\r\n        },\r\n        style: {\r\n          stroke: opts.color,\r\n          lineCap: 'round',\r\n          lineWidth: opts.lineWidth\r\n        },\r\n        zlevel: opts.zlevel,\r\n        z: 10001\r\n      });\r\n      arc.animateShape(true).when(1000, {\r\n        endAngle: PI$3 * 3 / 2\r\n      }).start('circularInOut');\r\n      arc.animateShape(true).when(1000, {\r\n        startAngle: PI$3 * 3 / 2\r\n      }).delay(300).start('circularInOut');\r\n      group.add(arc);\r\n    } // Inject resize\r\n\r\n\r\n    group.resize = function () {\r\n      var textWidth = textContent.getBoundingRect().width;\r\n      var r = opts.showSpinner ? opts.spinnerRadius : 0; // cx = (containerWidth - arcDiameter - textDistance - textWidth) / 2\r\n      // textDistance needs to be calculated when both animation and text exist\r\n\r\n      var cx = (api.getWidth() - r * 2 - (opts.showSpinner && textWidth ? 10 : 0) - textWidth) / 2 - (opts.showSpinner && textWidth ? 0 : 5 + textWidth / 2) // only show the text\r\n      + (opts.showSpinner ? 0 : textWidth / 2) // only show the spinner\r\n      + (textWidth ? 0 : r);\r\n      var cy = api.getHeight() / 2;\r\n      opts.showSpinner && arc.setShape({\r\n        cx: cx,\r\n        cy: cy\r\n      });\r\n      labelRect.setShape({\r\n        x: cx - r,\r\n        y: cy - r,\r\n        width: r * 2,\r\n        height: r * 2\r\n      });\r\n      mask.setShape({\r\n        x: 0,\r\n        y: 0,\r\n        width: api.getWidth(),\r\n        height: api.getHeight()\r\n      });\r\n    };\r\n\r\n    group.resize();\r\n    return group;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var Scheduler =\r\n  /** @class */\r\n  function () {\r\n    function Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\r\n      // key: handlerUID\r\n      this._stageTaskMap = createHashMap();\r\n      this.ecInstance = ecInstance;\r\n      this.api = api; // Fix current processors in case that in some rear cases that\r\n      // processors might be registered after echarts instance created.\r\n      // Register processors incrementally for a echarts instance is\r\n      // not supported by this stream architecture.\r\n\r\n      dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\r\n      visualHandlers = this._visualHandlers = visualHandlers.slice();\r\n      this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\r\n    }\r\n\r\n    Scheduler.prototype.restoreData = function (ecModel, payload) {\r\n      // TODO: Only restore needed series and components, but not all components.\r\n      // Currently `restoreData` of all of the series and component will be called.\r\n      // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\r\n      // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\r\n      // and some components like coordinate system, axes, dataZoom, visualMap only\r\n      // need their target series refresh.\r\n      // (1) If we are implementing this feature some day, we should consider these cases:\r\n      // if a data processor depends on a component (e.g., dataZoomProcessor depends\r\n      // on the settings of `dataZoom`), it should be re-performed if the component\r\n      // is modified by `setOption`.\r\n      // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\r\n      // it should be re-performed when the result array of `getTargetSeries` changed.\r\n      // We use `dependencies` to cover these issues.\r\n      // (3) How to update target series when coordinate system related components modified.\r\n      // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\r\n      // and this case all of the tasks will be set as dirty.\r\n      ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\r\n      // depends on all of the series.\r\n      // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\r\n      // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\r\n      // that the overall task is set as dirty and to be performed, otherwise it probably cause\r\n      // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\r\n      // probably cause state chaos (consider `dataZoomProcessor`).\r\n\r\n      this._stageTaskMap.each(function (taskRecord) {\r\n        var overallTask = taskRecord.overallTask;\r\n        overallTask && overallTask.dirty();\r\n      });\r\n    }; // If seriesModel provided, incremental threshold is check by series data.\r\n\r\n\r\n    Scheduler.prototype.getPerformArgs = function (task, isBlock) {\r\n      // For overall task\r\n      if (!task.__pipeline) {\r\n        return;\r\n      }\r\n\r\n      var pipeline = this._pipelineMap.get(task.__pipeline.id);\r\n\r\n      var pCtx = pipeline.context;\r\n      var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\r\n      var step = incremental ? pipeline.step : null;\r\n      var modDataCount = pCtx && pCtx.modDataCount;\r\n      var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\r\n      return {\r\n        step: step,\r\n        modBy: modBy,\r\n        modDataCount: modDataCount\r\n      };\r\n    };\r\n\r\n    Scheduler.prototype.getPipeline = function (pipelineId) {\r\n      return this._pipelineMap.get(pipelineId);\r\n    };\r\n    /**\r\n     * Current, progressive rendering starts from visual and layout.\r\n     * Always detect render mode in the same stage, avoiding that incorrect\r\n     * detection caused by data filtering.\r\n     * Caution:\r\n     * `updateStreamModes` use `seriesModel.getData()`.\r\n     */\r\n\r\n\r\n    Scheduler.prototype.updateStreamModes = function (seriesModel, view) {\r\n      var pipeline = this._pipelineMap.get(seriesModel.uid);\r\n\r\n      var data = seriesModel.getData();\r\n      var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\r\n      // animation frame. Note that some types of series do not provide\r\n      // `view.incrementalPrepareRender` but support `chart.appendData`. We\r\n      // use the term `incremental` but not `progressive` to describe the\r\n      // case that `chart.appendData`.\r\n\r\n      var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\r\n      var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\r\n      // see `test/candlestick-large3.html`\r\n\r\n      var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\r\n      seriesModel.pipelineContext = pipeline.context = {\r\n        progressiveRender: progressiveRender,\r\n        modDataCount: modDataCount,\r\n        large: large\r\n      };\r\n    };\r\n\r\n    Scheduler.prototype.restorePipelines = function (ecModel) {\r\n      var scheduler = this;\r\n      var pipelineMap = scheduler._pipelineMap = createHashMap();\r\n      ecModel.eachSeries(function (seriesModel) {\r\n        var progressive = seriesModel.getProgressive();\r\n        var pipelineId = seriesModel.uid;\r\n        pipelineMap.set(pipelineId, {\r\n          id: pipelineId,\r\n          head: null,\r\n          tail: null,\r\n          threshold: seriesModel.getProgressiveThreshold(),\r\n          progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\r\n          blockIndex: -1,\r\n          step: Math.round(progressive || 700),\r\n          count: 0\r\n        });\r\n\r\n        scheduler._pipe(seriesModel, seriesModel.dataTask);\r\n      });\r\n    };\r\n\r\n    Scheduler.prototype.prepareStageTasks = function () {\r\n      var stageTaskMap = this._stageTaskMap;\r\n      var ecModel = this.api.getModel();\r\n      var api = this.api;\r\n      each$1(this._allHandlers, function (handler) {\r\n        var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, {});\r\n        var errMsg = '';\r\n        {\r\n          // Currently do not need to support to sepecify them both.\r\n          errMsg = '\"reset\" and \"overallReset\" must not be both specified.';\r\n        }\r\n        assert$1(!(handler.reset && handler.overallReset), errMsg);\r\n        handler.reset && this._createSeriesStageTask(handler, record, ecModel, api);\r\n        handler.overallReset && this._createOverallStageTask(handler, record, ecModel, api);\r\n      }, this);\r\n    };\r\n\r\n    Scheduler.prototype.prepareView = function (view, model, ecModel, api) {\r\n      var renderTask = view.renderTask;\r\n      var context = renderTask.context;\r\n      context.model = model;\r\n      context.ecModel = ecModel;\r\n      context.api = api;\r\n      renderTask.__block = !view.incrementalPrepareRender;\r\n\r\n      this._pipe(model, renderTask);\r\n    };\r\n\r\n    Scheduler.prototype.performDataProcessorTasks = function (ecModel, payload) {\r\n      // If we do not use `block` here, it should be considered when to update modes.\r\n      this._performStageTasks(this._dataProcessorHandlers, ecModel, payload, {\r\n        block: true\r\n      });\r\n    };\r\n\r\n    Scheduler.prototype.performVisualTasks = function (ecModel, payload, opt) {\r\n      this._performStageTasks(this._visualHandlers, ecModel, payload, opt);\r\n    };\r\n\r\n    Scheduler.prototype._performStageTasks = function (stageHandlers, ecModel, payload, opt) {\r\n      opt = opt || {};\r\n      var unfinished = false;\r\n      var scheduler = this;\r\n      each$1(stageHandlers, function (stageHandler, idx) {\r\n        if (opt.visualType && opt.visualType !== stageHandler.visualType) {\r\n          return;\r\n        }\r\n\r\n        var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\r\n\r\n        var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\r\n        var overallTask = stageHandlerRecord.overallTask;\r\n\r\n        if (overallTask) {\r\n          var overallNeedDirty_1;\r\n          var agentStubMap = overallTask.agentStubMap;\r\n          agentStubMap.each(function (stub) {\r\n            if (needSetDirty(opt, stub)) {\r\n              stub.dirty();\r\n              overallNeedDirty_1 = true;\r\n            }\r\n          });\r\n          overallNeedDirty_1 && overallTask.dirty();\r\n          scheduler.updatePayload(overallTask, payload);\r\n          var performArgs_1 = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\r\n          // then execute the overall task. And stub will call seriesModel.setData,\r\n          // which ensures that in the overallTask seriesModel.getData() will not\r\n          // return incorrect data.\r\n\r\n          agentStubMap.each(function (stub) {\r\n            stub.perform(performArgs_1);\r\n          });\r\n\r\n          if (overallTask.perform(performArgs_1)) {\r\n            unfinished = true;\r\n          }\r\n        } else if (seriesTaskMap) {\r\n          seriesTaskMap.each(function (task, pipelineId) {\r\n            if (needSetDirty(opt, task)) {\r\n              task.dirty();\r\n            }\r\n\r\n            var performArgs = scheduler.getPerformArgs(task, opt.block); // FIXME\r\n            // if intending to decalare `performRawSeries` in handlers, only\r\n            // stream-independent (specifically, data item independent) operations can be\r\n            // performed. Because is a series is filtered, most of the tasks will not\r\n            // be performed. A stream-dependent operation probably cause wrong biz logic.\r\n            // Perhaps we should not provide a separate callback for this case instead\r\n            // of providing the config `performRawSeries`. The stream-dependent operaions\r\n            // and stream-independent operations should better not be mixed.\r\n\r\n            performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\r\n            scheduler.updatePayload(task, payload);\r\n\r\n            if (task.perform(performArgs)) {\r\n              unfinished = true;\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      function needSetDirty(opt, task) {\r\n        return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\r\n      }\r\n\r\n      this.unfinished = unfinished || this.unfinished;\r\n    };\r\n\r\n    Scheduler.prototype.performSeriesTasks = function (ecModel) {\r\n      var unfinished;\r\n      ecModel.eachSeries(function (seriesModel) {\r\n        // Progress to the end for dataInit and dataRestore.\r\n        unfinished = seriesModel.dataTask.perform() || unfinished;\r\n      });\r\n      this.unfinished = unfinished || this.unfinished;\r\n    };\r\n\r\n    Scheduler.prototype.plan = function () {\r\n      // Travel pipelines, check block.\r\n      this._pipelineMap.each(function (pipeline) {\r\n        var task = pipeline.tail;\r\n\r\n        do {\r\n          if (task.__block) {\r\n            pipeline.blockIndex = task.__idxInPipeline;\r\n            break;\r\n          }\r\n\r\n          task = task.getUpstream();\r\n        } while (task);\r\n      });\r\n    };\r\n\r\n    Scheduler.prototype.updatePayload = function (task, payload) {\r\n      payload !== 'remain' && (task.context.payload = payload);\r\n    };\r\n\r\n    Scheduler.prototype._createSeriesStageTask = function (stageHandler, stageHandlerRecord, ecModel, api) {\r\n      var scheduler = this;\r\n      var oldSeriesTaskMap = stageHandlerRecord.seriesTaskMap; // The count of stages are totally about only several dozen, so\r\n      // do not need to reuse the map.\r\n\r\n      var newSeriesTaskMap = stageHandlerRecord.seriesTaskMap = createHashMap();\r\n      var seriesType = stageHandler.seriesType;\r\n      var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\r\n      // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\r\n      // it works but it may cause other irrelevant charts blocked.\r\n\r\n      if (stageHandler.createOnAllSeries) {\r\n        ecModel.eachRawSeries(create);\r\n      } else if (seriesType) {\r\n        ecModel.eachRawSeriesByType(seriesType, create);\r\n      } else if (getTargetSeries) {\r\n        getTargetSeries(ecModel, api).each(create);\r\n      }\r\n\r\n      function create(seriesModel) {\r\n        var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\r\n        // Reuse original task instance.\r\n\r\n        var task = newSeriesTaskMap.set(pipelineId, oldSeriesTaskMap && oldSeriesTaskMap.get(pipelineId) || createTask({\r\n          plan: seriesTaskPlan,\r\n          reset: seriesTaskReset,\r\n          count: seriesTaskCount\r\n        }));\r\n        task.context = {\r\n          model: seriesModel,\r\n          ecModel: ecModel,\r\n          api: api,\r\n          // PENDING: `useClearVisual` not used?\r\n          useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\r\n          plan: stageHandler.plan,\r\n          reset: stageHandler.reset,\r\n          scheduler: scheduler\r\n        };\r\n\r\n        scheduler._pipe(seriesModel, task);\r\n      }\r\n    };\r\n\r\n    Scheduler.prototype._createOverallStageTask = function (stageHandler, stageHandlerRecord, ecModel, api) {\r\n      var scheduler = this;\r\n      var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\r\n      || createTask({\r\n        reset: overallTaskReset\r\n      });\r\n      overallTask.context = {\r\n        ecModel: ecModel,\r\n        api: api,\r\n        overallReset: stageHandler.overallReset,\r\n        scheduler: scheduler\r\n      };\r\n      var oldAgentStubMap = overallTask.agentStubMap; // The count of stages are totally about only several dozen, so\r\n      // do not need to reuse the map.\r\n\r\n      var newAgentStubMap = overallTask.agentStubMap = createHashMap();\r\n      var seriesType = stageHandler.seriesType;\r\n      var getTargetSeries = stageHandler.getTargetSeries;\r\n      var overallProgress = true;\r\n      var shouldOverallTaskDirty = false; // FIXME:TS never used, so comment it\r\n      // let modifyOutputEnd = stageHandler.modifyOutputEnd;\r\n      // An overall task with seriesType detected or has `getTargetSeries`, we add\r\n      // stub in each pipelines, it will set the overall task dirty when the pipeline\r\n      // progress. Moreover, to avoid call the overall task each frame (too frequent),\r\n      // we set the pipeline block.\r\n\r\n      var errMsg = '';\r\n      {\r\n        errMsg = '\"createOnAllSeries\" do not supported for \"overallReset\", ' + 'becuase it will block all streams.';\r\n      }\r\n      assert$1(!stageHandler.createOnAllSeries, errMsg);\r\n\r\n      if (seriesType) {\r\n        ecModel.eachRawSeriesByType(seriesType, createStub);\r\n      } else if (getTargetSeries) {\r\n        getTargetSeries(ecModel, api).each(createStub);\r\n      } // Otherwise, (usually it is legancy case), the overall task will only be\r\n      // executed when upstream dirty. Otherwise the progressive rendering of all\r\n      // pipelines will be disabled unexpectedly. But it still needs stubs to receive\r\n      // dirty info from upsteam.\r\n      else {\r\n          overallProgress = false;\r\n          each$1(ecModel.getSeries(), createStub);\r\n        }\r\n\r\n      function createStub(seriesModel) {\r\n        var pipelineId = seriesModel.uid;\r\n        var stub = newAgentStubMap.set(pipelineId, oldAgentStubMap && oldAgentStubMap.get(pipelineId) || ( // When the result of `getTargetSeries` changed, the overallTask\r\n        // should be set as dirty and re-performed.\r\n        shouldOverallTaskDirty = true, createTask({\r\n          reset: stubReset,\r\n          onDirty: stubOnDirty\r\n        })));\r\n        stub.context = {\r\n          model: seriesModel,\r\n          overallProgress: overallProgress // FIXME:TS never used, so comment it\r\n          // modifyOutputEnd: modifyOutputEnd\r\n\r\n        };\r\n        stub.agent = overallTask;\r\n        stub.__block = overallProgress;\r\n\r\n        scheduler._pipe(seriesModel, stub);\r\n      }\r\n\r\n      if (shouldOverallTaskDirty) {\r\n        overallTask.dirty();\r\n      }\r\n    };\r\n\r\n    Scheduler.prototype._pipe = function (seriesModel, task) {\r\n      var pipelineId = seriesModel.uid;\r\n\r\n      var pipeline = this._pipelineMap.get(pipelineId);\r\n\r\n      !pipeline.head && (pipeline.head = task);\r\n      pipeline.tail && pipeline.tail.pipe(task);\r\n      pipeline.tail = task;\r\n      task.__idxInPipeline = pipeline.count++;\r\n      task.__pipeline = pipeline;\r\n    };\r\n\r\n    Scheduler.wrapStageHandler = function (stageHandler, visualType) {\r\n      if (isFunction$1(stageHandler)) {\r\n        stageHandler = {\r\n          overallReset: stageHandler,\r\n          seriesType: detectSeriseType(stageHandler)\r\n        };\r\n      }\r\n\r\n      stageHandler.uid = getUID('stageHandler');\r\n      visualType && (stageHandler.visualType = visualType);\r\n      return stageHandler;\r\n    };\r\n\r\n    return Scheduler;\r\n  }();\r\n\r\n  function overallTaskReset(context) {\r\n    context.overallReset(context.ecModel, context.api, context.payload);\r\n  }\r\n\r\n  function stubReset(context) {\r\n    return context.overallProgress && stubProgress;\r\n  }\r\n\r\n  function stubProgress() {\r\n    this.agent.dirty();\r\n    this.getDownstream().dirty();\r\n  }\r\n\r\n  function stubOnDirty() {\r\n    this.agent && this.agent.dirty();\r\n  }\r\n\r\n  function seriesTaskPlan(context) {\r\n    return context.plan ? context.plan(context.model, context.ecModel, context.api, context.payload) : null;\r\n  }\r\n\r\n  function seriesTaskReset(context) {\r\n    if (context.useClearVisual) {\r\n      context.data.clearAllVisual();\r\n    }\r\n\r\n    var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\r\n    return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\r\n      return makeSeriesTaskProgress(idx);\r\n    }) : singleSeriesTaskProgress;\r\n  }\r\n\r\n  var singleSeriesTaskProgress = makeSeriesTaskProgress(0);\r\n\r\n  function makeSeriesTaskProgress(resetDefineIdx) {\r\n    return function (params, context) {\r\n      var data = context.data;\r\n      var resetDefine = context.resetDefines[resetDefineIdx];\r\n\r\n      if (resetDefine && resetDefine.dataEach) {\r\n        for (var i = params.start; i < params.end; i++) {\r\n          resetDefine.dataEach(data, i);\r\n        }\r\n      } else if (resetDefine && resetDefine.progress) {\r\n        resetDefine.progress(params, data);\r\n      }\r\n    };\r\n  }\r\n\r\n  function seriesTaskCount(context) {\r\n    return context.data.count();\r\n  }\r\n  /**\r\n   * Only some legacy stage handlers (usually in echarts extensions) are pure function.\r\n   * To ensure that they can work normally, they should work in block mode, that is,\r\n   * they should not be started util the previous tasks finished. So they cause the\r\n   * progressive rendering disabled. We try to detect the series type, to narrow down\r\n   * the block range to only the series type they concern, but not all series.\r\n   */\r\n\r\n\r\n  function detectSeriseType(legacyFunc) {\r\n    seriesType = null;\r\n\r\n    try {\r\n      // Assume there is no async when calling `eachSeriesByType`.\r\n      legacyFunc(ecModelMock, apiMock);\r\n    } catch (e) {}\r\n\r\n    return seriesType;\r\n  }\r\n\r\n  var ecModelMock = {};\r\n  var apiMock = {};\r\n  var seriesType;\r\n  mockMethods(ecModelMock, GlobalModel);\r\n  mockMethods(apiMock, ExtensionAPI);\r\n\r\n  ecModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\r\n    seriesType = type;\r\n  };\r\n\r\n  ecModelMock.eachComponent = function (cond) {\r\n    if (cond.mainType === 'series' && cond.subType) {\r\n      seriesType = cond.subType;\r\n    }\r\n  };\r\n\r\n  function mockMethods(target, Clz) {\r\n    /* eslint-disable */\r\n    for (var name_1 in Clz.prototype) {\r\n      // Do not use hasOwnProperty\r\n      target[name_1] = noop;\r\n    }\r\n    /* eslint-enable */\r\n\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\r\n  var lightTheme = {\r\n    color: colorAll,\r\n    colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\r\n  };\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var contrastColor = '#B9B8CE';\r\n  var backgroundColor = '#100C2A';\r\n\r\n  var axisCommon = function () {\r\n    return {\r\n      axisLine: {\r\n        lineStyle: {\r\n          color: contrastColor\r\n        }\r\n      },\r\n      splitLine: {\r\n        lineStyle: {\r\n          color: '#484753'\r\n        }\r\n      },\r\n      splitArea: {\r\n        areaStyle: {\r\n          color: ['rgba(255,255,255,0.02)', 'rgba(255,255,255,0.05)']\r\n        }\r\n      },\r\n      minorSplitLine: {\r\n        lineStyle: {\r\n          color: '#20203B'\r\n        }\r\n      }\r\n    };\r\n  };\r\n\r\n  var colorPalette = ['#4992ff', '#7cffb2', '#fddd60', '#ff6e76', '#58d9f9', '#05c091', '#ff8a45', '#8d48e3', '#dd79ff'];\r\n  var theme = {\r\n    darkMode: true,\r\n    color: colorPalette,\r\n    backgroundColor: backgroundColor,\r\n    axisPointer: {\r\n      lineStyle: {\r\n        color: '#817f91'\r\n      },\r\n      crossStyle: {\r\n        color: '#817f91'\r\n      },\r\n      label: {\r\n        // TODO Contrast of label backgorundColor\r\n        color: '#fff'\r\n      }\r\n    },\r\n    legend: {\r\n      textStyle: {\r\n        color: contrastColor\r\n      }\r\n    },\r\n    textStyle: {\r\n      color: contrastColor\r\n    },\r\n    title: {\r\n      textStyle: {\r\n        color: '#EEF1FA'\r\n      },\r\n      subtextStyle: {\r\n        color: '#B9B8CE'\r\n      }\r\n    },\r\n    toolbox: {\r\n      iconStyle: {\r\n        borderColor: contrastColor\r\n      }\r\n    },\r\n    dataZoom: {\r\n      borderColor: '#71708A',\r\n      textStyle: {\r\n        color: contrastColor\r\n      },\r\n      brushStyle: {\r\n        color: 'rgba(135,163,206,0.3)'\r\n      },\r\n      handleStyle: {\r\n        color: '#353450',\r\n        borderColor: '#C5CBE3'\r\n      },\r\n      moveHandleStyle: {\r\n        color: '#B0B6C3',\r\n        opacity: 0.3\r\n      },\r\n      fillerColor: 'rgba(135,163,206,0.2)',\r\n      emphasis: {\r\n        handleStyle: {\r\n          borderColor: '#91B7F2',\r\n          color: '#4D587D'\r\n        },\r\n        moveHandleStyle: {\r\n          color: '#636D9A',\r\n          opacity: 0.7\r\n        }\r\n      },\r\n      dataBackground: {\r\n        lineStyle: {\r\n          color: '#71708A',\r\n          width: 1\r\n        },\r\n        areaStyle: {\r\n          color: '#71708A'\r\n        }\r\n      },\r\n      selectedDataBackground: {\r\n        lineStyle: {\r\n          color: '#87A3CE'\r\n        },\r\n        areaStyle: {\r\n          color: '#87A3CE'\r\n        }\r\n      }\r\n    },\r\n    visualMap: {\r\n      textStyle: {\r\n        color: contrastColor\r\n      }\r\n    },\r\n    timeline: {\r\n      lineStyle: {\r\n        color: contrastColor\r\n      },\r\n      label: {\r\n        color: contrastColor\r\n      },\r\n      controlStyle: {\r\n        color: contrastColor,\r\n        borderColor: contrastColor\r\n      }\r\n    },\r\n    calendar: {\r\n      itemStyle: {\r\n        color: backgroundColor\r\n      },\r\n      dayLabel: {\r\n        color: contrastColor\r\n      },\r\n      monthLabel: {\r\n        color: contrastColor\r\n      },\r\n      yearLabel: {\r\n        color: contrastColor\r\n      }\r\n    },\r\n    timeAxis: axisCommon(),\r\n    logAxis: axisCommon(),\r\n    valueAxis: axisCommon(),\r\n    categoryAxis: axisCommon(),\r\n    line: {\r\n      symbol: 'circle'\r\n    },\r\n    graph: {\r\n      color: colorPalette\r\n    },\r\n    gauge: {\r\n      title: {\r\n        color: contrastColor\r\n      },\r\n      axisLine: {\r\n        lineStyle: {\r\n          color: [[1, 'rgba(207,212,219,0.2)']]\r\n        }\r\n      },\r\n      axisLabel: {\r\n        color: contrastColor\r\n      },\r\n      detail: {\r\n        color: '#EEF1FA'\r\n      }\r\n    },\r\n    candlestick: {\r\n      itemStyle: {\r\n        color: '#f64e56',\r\n        color0: '#54ea92',\r\n        borderColor: '#f64e56',\r\n        borderColor0: '#54ea92' // borderColor: '#ca2824',\r\n        // borderColor0: '#09a443'\r\n\r\n      }\r\n    }\r\n  };\r\n  theme.categoryAxis.splitLine.show = false;\r\n\r\n  function parseXML(svg) {\r\n    if (isString(svg)) {\r\n      var parser = new DOMParser();\r\n      svg = parser.parseFromString(svg, 'text/xml');\r\n    }\r\n\r\n    var svgNode = svg;\r\n\r\n    if (svgNode.nodeType === 9) {\r\n      svgNode = svgNode.firstChild;\r\n    }\r\n\r\n    while (svgNode.nodeName.toLowerCase() !== 'svg' || svgNode.nodeType !== 1) {\r\n      svgNode = svgNode.nextSibling;\r\n    }\r\n\r\n    return svgNode;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var storage = createHashMap();\r\n  var mapDataStorage = {\r\n    /**\r\n     * Compatible with previous `echarts.registerMap`.\r\n     * @usage\r\n     * ```js\r\n     * $.get('USA.json', function (geoJson) {\r\n     *     echarts.registerMap('USA', geoJson);\r\n     *     // Or\r\n     *     echarts.registerMap('USA', {\r\n     *         geoJson: geoJson,\r\n     *         specialAreas: {}\r\n     *     })\r\n     * });\r\n     *\r\n     * $.get('airport.svg', function (svg) {\r\n     *     echarts.registerMap('airport', {\r\n     *         svg: svg\r\n     *     }\r\n     * });\r\n     *\r\n     * echarts.registerMap('eu', [\r\n     *     {svg: eu-topographic.svg},\r\n     *     {geoJSON: eu.json}\r\n     * ])\r\n     * ```\r\n     */\r\n    registerMap: function (mapName, rawDef, rawSpecialAreas) {\r\n      var records;\r\n\r\n      if (isArray(rawDef)) {\r\n        records = rawDef;\r\n      } else if (rawDef.svg) {\r\n        records = [{\r\n          type: 'svg',\r\n          source: rawDef.svg,\r\n          specialAreas: rawDef.specialAreas\r\n        }];\r\n      } else {\r\n        // Backward compatibility.\r\n        var geoSource = rawDef.geoJson || rawDef.geoJSON;\r\n\r\n        if (geoSource && !rawDef.features) {\r\n          rawSpecialAreas = rawDef.specialAreas;\r\n          rawDef = geoSource;\r\n        }\r\n\r\n        records = [{\r\n          type: 'geoJSON',\r\n          source: rawDef,\r\n          specialAreas: rawSpecialAreas\r\n        }];\r\n      }\r\n\r\n      each$1(records, function (record) {\r\n        var type = record.type;\r\n        type === 'geoJson' && (type = record.type = 'geoJSON');\r\n        var parse = parsers[type];\r\n        {\r\n          assert$1(parse, 'Illegal map type: ' + type);\r\n        }\r\n        parse(record);\r\n      });\r\n      return storage.set(mapName, records);\r\n    },\r\n    retrieveMap: function (mapName) {\r\n      return storage.get(mapName);\r\n    }\r\n  };\r\n  var parsers = {\r\n    geoJSON: function (record) {\r\n      var source = record.source;\r\n      record.geoJSON = !isString(source) ? source : typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(source) : new Function('return (' + source + ');')();\r\n    },\r\n    // Only perform parse to XML object here, which might be time\r\n    // consiming for large SVG.\r\n    // Although convert XML to zrender element is also time consiming,\r\n    // if we do it here, the clone of zrender elements has to be\r\n    // required. So we do it once for each geo instance, util real\r\n    // performance issues call for optimizing it.\r\n    svg: function (record) {\r\n      record.svgXML = parseXML(record.source);\r\n    }\r\n  };\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Usage of query:\r\n   * `chart.on('click', query, handler);`\r\n   * The `query` can be:\r\n   * + The component type query string, only `mainType` or `mainType.subType`,\r\n   *   like: 'xAxis', 'series', 'xAxis.category' or 'series.line'.\r\n   * + The component query object, like:\r\n   *   `{seriesIndex: 2}`, `{seriesName: 'xx'}`, `{seriesId: 'some'}`,\r\n   *   `{xAxisIndex: 2}`, `{xAxisName: 'xx'}`, `{xAxisId: 'some'}`.\r\n   * + The data query object, like:\r\n   *   `{dataIndex: 123}`, `{dataType: 'link'}`, `{name: 'some'}`.\r\n   * + The other query object (cmponent customized query), like:\r\n   *   `{element: 'some'}` (only available in custom series).\r\n   *\r\n   * Caveat: If a prop in the `query` object is `null/undefined`, it is the\r\n   * same as there is no such prop in the `query` object.\r\n   */\r\n\r\n  var ECEventProcessor =\r\n  /** @class */\r\n  function () {\r\n    function ECEventProcessor() {}\r\n\r\n    ECEventProcessor.prototype.normalizeQuery = function (query) {\r\n      var cptQuery = {};\r\n      var dataQuery = {};\r\n      var otherQuery = {}; // `query` is `mainType` or `mainType.subType` of component.\r\n\r\n      if (isString(query)) {\r\n        var condCptType = parseClassType(query); // `.main` and `.sub` may be ''.\r\n\r\n        cptQuery.mainType = condCptType.main || null;\r\n        cptQuery.subType = condCptType.sub || null;\r\n      } // `query` is an object, convert to {mainType, index, name, id}.\r\n      else {\r\n          // `xxxIndex`, `xxxName`, `xxxId`, `name`, `dataIndex`, `dataType` is reserved,\r\n          // can not be used in `compomentModel.filterForExposedEvent`.\r\n          var suffixes_1 = ['Index', 'Name', 'Id'];\r\n          var dataKeys_1 = {\r\n            name: 1,\r\n            dataIndex: 1,\r\n            dataType: 1\r\n          };\r\n          each$1(query, function (val, key) {\r\n            var reserved = false;\r\n\r\n            for (var i = 0; i < suffixes_1.length; i++) {\r\n              var propSuffix = suffixes_1[i];\r\n              var suffixPos = key.lastIndexOf(propSuffix);\r\n\r\n              if (suffixPos > 0 && suffixPos === key.length - propSuffix.length) {\r\n                var mainType = key.slice(0, suffixPos); // Consider `dataIndex`.\r\n\r\n                if (mainType !== 'data') {\r\n                  cptQuery.mainType = mainType;\r\n                  cptQuery[propSuffix.toLowerCase()] = val;\r\n                  reserved = true;\r\n                }\r\n              }\r\n            }\r\n\r\n            if (dataKeys_1.hasOwnProperty(key)) {\r\n              dataQuery[key] = val;\r\n              reserved = true;\r\n            }\r\n\r\n            if (!reserved) {\r\n              otherQuery[key] = val;\r\n            }\r\n          });\r\n        }\r\n\r\n      return {\r\n        cptQuery: cptQuery,\r\n        dataQuery: dataQuery,\r\n        otherQuery: otherQuery\r\n      };\r\n    };\r\n\r\n    ECEventProcessor.prototype.filter = function (eventType, query) {\r\n      // They should be assigned before each trigger call.\r\n      var eventInfo = this.eventInfo;\r\n\r\n      if (!eventInfo) {\r\n        return true;\r\n      }\r\n\r\n      var targetEl = eventInfo.targetEl;\r\n      var packedEvent = eventInfo.packedEvent;\r\n      var model = eventInfo.model;\r\n      var view = eventInfo.view; // For event like 'globalout'.\r\n\r\n      if (!model || !view) {\r\n        return true;\r\n      }\r\n\r\n      var cptQuery = query.cptQuery;\r\n      var dataQuery = query.dataQuery;\r\n      return check(cptQuery, model, 'mainType') && check(cptQuery, model, 'subType') && check(cptQuery, model, 'index', 'componentIndex') && check(cptQuery, model, 'name') && check(cptQuery, model, 'id') && check(dataQuery, packedEvent, 'name') && check(dataQuery, packedEvent, 'dataIndex') && check(dataQuery, packedEvent, 'dataType') && (!view.filterForExposedEvent || view.filterForExposedEvent(eventType, query.otherQuery, targetEl, packedEvent));\r\n\r\n      function check(query, host, prop, propOnHost) {\r\n        return query[prop] == null || host[propOnHost || prop] === query[prop];\r\n      }\r\n    };\r\n\r\n    ECEventProcessor.prototype.afterTrigger = function () {\r\n      // Make sure the eventInfo wont be used in next trigger.\r\n      this.eventInfo = null;\r\n    };\r\n\r\n    return ECEventProcessor;\r\n  }();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var seriesSymbolTask = {\r\n    createOnAllSeries: true,\r\n    // For legend.\r\n    performRawSeries: true,\r\n    reset: function (seriesModel, ecModel) {\r\n      var data = seriesModel.getData();\r\n\r\n      if (seriesModel.legendSymbol) {\r\n        data.setVisual('legendSymbol', seriesModel.legendSymbol);\r\n      }\r\n\r\n      if (!seriesModel.hasSymbolVisual) {\r\n        return;\r\n      }\r\n\r\n      var symbolType = seriesModel.get('symbol');\r\n      var symbolSize = seriesModel.get('symbolSize');\r\n      var keepAspect = seriesModel.get('symbolKeepAspect');\r\n      var symbolRotate = seriesModel.get('symbolRotate');\r\n      var hasSymbolTypeCallback = isFunction$1(symbolType);\r\n      var hasSymbolSizeCallback = isFunction$1(symbolSize);\r\n      var hasSymbolRotateCallback = isFunction$1(symbolRotate);\r\n      var hasCallback = hasSymbolTypeCallback || hasSymbolSizeCallback || hasSymbolRotateCallback;\r\n      var seriesSymbol = !hasSymbolTypeCallback && symbolType ? symbolType : seriesModel.defaultSymbol;\r\n      var seriesSymbolSize = !hasSymbolSizeCallback ? symbolSize : null;\r\n      var seriesSymbolRotate = !hasSymbolRotateCallback ? symbolRotate : null;\r\n      data.setVisual({\r\n        legendSymbol: seriesModel.legendSymbol || seriesSymbol,\r\n        // If seting callback functions on `symbol` or `symbolSize`, for simplicity and avoiding\r\n        // to bring trouble, we do not pick a reuslt from one of its calling on data item here,\r\n        // but just use the default value. Callback on `symbol` or `symbolSize` is convenient in\r\n        // some cases but generally it is not recommanded.\r\n        symbol: seriesSymbol,\r\n        symbolSize: seriesSymbolSize,\r\n        symbolKeepAspect: keepAspect,\r\n        symbolRotate: seriesSymbolRotate\r\n      }); // Only visible series has each data be visual encoded\r\n\r\n      if (ecModel.isSeriesFiltered(seriesModel)) {\r\n        return;\r\n      }\r\n\r\n      function dataEach(data, idx) {\r\n        var rawValue = seriesModel.getRawValue(idx);\r\n        var params = seriesModel.getDataParams(idx);\r\n        hasSymbolTypeCallback && data.setItemVisual(idx, 'symbol', symbolType(rawValue, params));\r\n        hasSymbolSizeCallback && data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\r\n        hasSymbolRotateCallback && data.setItemVisual(idx, 'symbolRotate', symbolRotate(rawValue, params));\r\n      }\r\n\r\n      return {\r\n        dataEach: hasCallback ? dataEach : null\r\n      };\r\n    }\r\n  };\r\n  var dataSymbolTask = {\r\n    createOnAllSeries: true,\r\n    // For legend.\r\n    performRawSeries: true,\r\n    reset: function (seriesModel, ecModel) {\r\n      if (!seriesModel.hasSymbolVisual) {\r\n        return;\r\n      } // Only visible series has each data be visual encoded\r\n\r\n\r\n      if (ecModel.isSeriesFiltered(seriesModel)) {\r\n        return;\r\n      }\r\n\r\n      var data = seriesModel.getData();\r\n\r\n      function dataEach(data, idx) {\r\n        var itemModel = data.getItemModel(idx);\r\n        var itemSymbolType = itemModel.getShallow('symbol', true);\r\n        var itemSymbolSize = itemModel.getShallow('symbolSize', true);\r\n        var itemSymbolRotate = itemModel.getShallow('symbolRotate', true);\r\n        var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\r\n\r\n        if (itemSymbolType != null) {\r\n          data.setItemVisual(idx, 'symbol', itemSymbolType);\r\n        }\r\n\r\n        if (itemSymbolSize != null) {\r\n          // PENDING Transform symbolSize ?\r\n          data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\r\n        }\r\n\r\n        if (itemSymbolRotate != null) {\r\n          data.setItemVisual(idx, 'symbolRotate', itemSymbolRotate);\r\n        }\r\n\r\n        if (itemSymbolKeepAspect != null) {\r\n          data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\r\n        }\r\n      }\r\n\r\n      return {\r\n        dataEach: data.hasItemOption ? dataEach : null\r\n      };\r\n    }\r\n  };\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  function getItemVisualFromData(data, dataIndex, key) {\r\n    switch (key) {\r\n      case 'color':\r\n        var style = data.getItemVisual(dataIndex, 'style');\r\n        return style[data.getVisual('drawType')];\r\n\r\n      case 'opacity':\r\n        return data.getItemVisual(dataIndex, 'style').opacity;\r\n\r\n      case 'symbol':\r\n      case 'symbolSize':\r\n      case 'liftZ':\r\n        return data.getItemVisual(dataIndex, key);\r\n\r\n      default:\r\n        {\r\n          console.warn(\"Unknown visual type \" + key);\r\n        }\r\n    }\r\n  }\r\n\r\n  function getVisualFromData(data, key) {\r\n    switch (key) {\r\n      case 'color':\r\n        var style = data.getVisual('style');\r\n        return style[data.getVisual('drawType')];\r\n\r\n      case 'opacity':\r\n        return data.getVisual('style').opacity;\r\n\r\n      case 'symbol':\r\n      case 'symbolSize':\r\n      case 'liftZ':\r\n        return data.getVisual(key);\r\n\r\n      default:\r\n        {\r\n          console.warn(\"Unknown visual type \" + key);\r\n        }\r\n    }\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var PI2$6 = Math.PI * 2;\r\n  var CMD$3 = PathProxy.CMD;\r\n  var DEFAULT_SEARCH_SPACE = ['top', 'right', 'bottom', 'left'];\r\n\r\n  function getCandidateAnchor(pos, distance$$1, rect, outPt, outDir) {\r\n    var width = rect.width;\r\n    var height = rect.height;\r\n\r\n    switch (pos) {\r\n      case 'top':\r\n        outPt.set(rect.x + width / 2, rect.y - distance$$1);\r\n        outDir.set(0, -1);\r\n        break;\r\n\r\n      case 'bottom':\r\n        outPt.set(rect.x + width / 2, rect.y + height + distance$$1);\r\n        outDir.set(0, 1);\r\n        break;\r\n\r\n      case 'left':\r\n        outPt.set(rect.x - distance$$1, rect.y + height / 2);\r\n        outDir.set(-1, 0);\r\n        break;\r\n\r\n      case 'right':\r\n        outPt.set(rect.x + width + distance$$1, rect.y + height / 2);\r\n        outDir.set(1, 0);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function projectPointToArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y, out) {\r\n    x -= cx;\r\n    y -= cy;\r\n    var d = Math.sqrt(x * x + y * y);\r\n    x /= d;\r\n    y /= d; // Intersect point.\r\n\r\n    var ox = x * r + cx;\r\n    var oy = y * r + cy;\r\n\r\n    if (Math.abs(startAngle - endAngle) % PI2$6 < 1e-4) {\r\n      // Is a circle\r\n      out[0] = ox;\r\n      out[1] = oy;\r\n      return d - r;\r\n    }\r\n\r\n    if (anticlockwise) {\r\n      var tmp = startAngle;\r\n      startAngle = normalizeRadian(endAngle);\r\n      endAngle = normalizeRadian(tmp);\r\n    } else {\r\n      startAngle = normalizeRadian(startAngle);\r\n      endAngle = normalizeRadian(endAngle);\r\n    }\r\n\r\n    if (startAngle > endAngle) {\r\n      endAngle += PI2$6;\r\n    }\r\n\r\n    var angle = Math.atan2(y, x);\r\n\r\n    if (angle < 0) {\r\n      angle += PI2$6;\r\n    }\r\n\r\n    if (angle >= startAngle && angle <= endAngle || angle + PI2$6 >= startAngle && angle + PI2$6 <= endAngle) {\r\n      // Project point is on the arc.\r\n      out[0] = ox;\r\n      out[1] = oy;\r\n      return d - r;\r\n    }\r\n\r\n    var x1 = r * Math.cos(startAngle) + cx;\r\n    var y1 = r * Math.sin(startAngle) + cy;\r\n    var x2 = r * Math.cos(endAngle) + cx;\r\n    var y2 = r * Math.sin(endAngle) + cy;\r\n    var d1 = (x1 - x) * (x1 - x) + (y1 - y) * (y1 - y);\r\n    var d2 = (x2 - x) * (x2 - x) + (y2 - y) * (y2 - y);\r\n\r\n    if (d1 < d2) {\r\n      out[0] = x1;\r\n      out[1] = y1;\r\n      return Math.sqrt(d1);\r\n    } else {\r\n      out[0] = x2;\r\n      out[1] = y2;\r\n      return Math.sqrt(d2);\r\n    }\r\n  }\r\n\r\n  function projectPointToLine(x1, y1, x2, y2, x, y, out, limitToEnds) {\r\n    var dx = x - x1;\r\n    var dy = y - y1;\r\n    var dx1 = x2 - x1;\r\n    var dy1 = y2 - y1;\r\n    var lineLen = Math.sqrt(dx1 * dx1 + dy1 * dy1);\r\n    dx1 /= lineLen;\r\n    dy1 /= lineLen; // dot product\r\n\r\n    var projectedLen = dx * dx1 + dy * dy1;\r\n    var t = projectedLen / lineLen;\r\n\r\n    if (limitToEnds) {\r\n      t = Math.min(Math.max(t, 0), 1);\r\n    }\r\n\r\n    t *= lineLen;\r\n    var ox = out[0] = x1 + t * dx1;\r\n    var oy = out[1] = y1 + t * dy1;\r\n    return Math.sqrt((ox - x) * (ox - x) + (oy - y) * (oy - y));\r\n  }\r\n\r\n  function projectPointToRect(x1, y1, width, height, x, y, out) {\r\n    if (width < 0) {\r\n      x1 = x1 + width;\r\n      width = -width;\r\n    }\r\n\r\n    if (height < 0) {\r\n      y1 = y1 + height;\r\n      height = -height;\r\n    }\r\n\r\n    var x2 = x1 + width;\r\n    var y2 = y1 + height;\r\n    var ox = out[0] = Math.min(Math.max(x, x1), x2);\r\n    var oy = out[1] = Math.min(Math.max(y, y1), y2);\r\n    return Math.sqrt((ox - x) * (ox - x) + (oy - y) * (oy - y));\r\n  }\r\n\r\n  var tmpPt = [];\r\n\r\n  function nearestPointOnRect(pt, rect, out) {\r\n    var dist$$1 = projectPointToRect(rect.x, rect.y, rect.width, rect.height, pt.x, pt.y, tmpPt);\r\n    out.set(tmpPt[0], tmpPt[1]);\r\n    return dist$$1;\r\n  }\r\n  /**\r\n   * Calculate min distance corresponding point.\r\n   * This method won't evaluate if point is in the path.\r\n   */\r\n\r\n\r\n  function nearestPointOnPath(pt, path, out) {\r\n    var xi = 0;\r\n    var yi = 0;\r\n    var x0 = 0;\r\n    var y0 = 0;\r\n    var x1;\r\n    var y1;\r\n    var minDist = Infinity;\r\n    var data = path.data;\r\n    var x = pt.x;\r\n    var y = pt.y;\r\n\r\n    for (var i = 0; i < data.length;) {\r\n      var cmd = data[i++];\r\n\r\n      if (i === 1) {\r\n        xi = data[i];\r\n        yi = data[i + 1];\r\n        x0 = xi;\r\n        y0 = yi;\r\n      }\r\n\r\n      var d = minDist;\r\n\r\n      switch (cmd) {\r\n        case CMD$3.M:\r\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\r\n          // 在 closePath 的时候使用\r\n          x0 = data[i++];\r\n          y0 = data[i++];\r\n          xi = x0;\r\n          yi = y0;\r\n          break;\r\n\r\n        case CMD$3.L:\r\n          d = projectPointToLine(xi, yi, data[i], data[i + 1], x, y, tmpPt, true);\r\n          xi = data[i++];\r\n          yi = data[i++];\r\n          break;\r\n\r\n        case CMD$3.C:\r\n          d = cubicProjectPoint(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y, tmpPt);\r\n          xi = data[i++];\r\n          yi = data[i++];\r\n          break;\r\n\r\n        case CMD$3.Q:\r\n          d = quadraticProjectPoint(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y, tmpPt);\r\n          xi = data[i++];\r\n          yi = data[i++];\r\n          break;\r\n\r\n        case CMD$3.A:\r\n          // TODO Arc 判断的开销比较大\r\n          var cx = data[i++];\r\n          var cy = data[i++];\r\n          var rx = data[i++];\r\n          var ry = data[i++];\r\n          var theta = data[i++];\r\n          var dTheta = data[i++]; // TODO Arc 旋转\r\n\r\n          i += 1;\r\n          var anticlockwise = !!(1 - data[i++]);\r\n          x1 = Math.cos(theta) * rx + cx;\r\n          y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\r\n\r\n          if (i <= 1) {\r\n            // 第一个命令起点还未定义\r\n            x0 = x1;\r\n            y0 = y1;\r\n          } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\r\n\r\n\r\n          var _x = (x - cx) * ry / rx + cx;\r\n\r\n          d = projectPointToArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y, tmpPt);\r\n          xi = Math.cos(theta + dTheta) * rx + cx;\r\n          yi = Math.sin(theta + dTheta) * ry + cy;\r\n          break;\r\n\r\n        case CMD$3.R:\r\n          x0 = xi = data[i++];\r\n          y0 = yi = data[i++];\r\n          var width = data[i++];\r\n          var height = data[i++];\r\n          d = projectPointToRect(x0, y0, width, height, x, y, tmpPt);\r\n          break;\r\n\r\n        case CMD$3.Z:\r\n          d = projectPointToLine(xi, yi, x0, y0, x, y, tmpPt, true);\r\n          xi = x0;\r\n          yi = y0;\r\n          break;\r\n      }\r\n\r\n      if (d < minDist) {\r\n        minDist = d;\r\n        out.set(tmpPt[0], tmpPt[1]);\r\n      }\r\n    }\r\n\r\n    return minDist;\r\n  } // Temporal varible for intermediate usage.\r\n\r\n\r\n  var pt0 = new Point();\r\n  var pt1 = new Point();\r\n  var pt2 = new Point();\r\n  var dir = new Point();\r\n  var dir2 = new Point();\r\n  /**\r\n   * Calculate a proper guide line based on the label position and graphic element definition\r\n   * @param label\r\n   * @param labelRect\r\n   * @param target\r\n   * @param targetRect\r\n   */\r\n\r\n  function updateLabelLinePoints(target, labelLineModel) {\r\n    if (!target) {\r\n      return;\r\n    }\r\n\r\n    var labelLine = target.getTextGuideLine();\r\n    var label = target.getTextContent(); // Needs to create text guide in each charts.\r\n\r\n    if (!(label && labelLine)) {\r\n      return;\r\n    }\r\n\r\n    var labelGuideConfig = target.textGuideLineConfig || {};\r\n    var points = [[0, 0], [0, 0], [0, 0]];\r\n    var searchSpace = labelGuideConfig.candidates || DEFAULT_SEARCH_SPACE;\r\n    var labelRect = label.getBoundingRect().clone();\r\n    labelRect.applyTransform(label.getComputedTransform());\r\n    var minDist = Infinity;\r\n    var anchorPoint = labelGuideConfig.anchor;\r\n    var targetTransform = target.getComputedTransform();\r\n    var targetInversedTransform = targetTransform && invert([], targetTransform);\r\n    var len$$1 = labelLineModel.get('length2') || 0;\r\n\r\n    if (anchorPoint) {\r\n      pt2.copy(anchorPoint);\r\n    }\r\n\r\n    for (var i = 0; i < searchSpace.length; i++) {\r\n      var candidate = searchSpace[i];\r\n      getCandidateAnchor(candidate, 0, labelRect, pt0, dir);\r\n      Point.scaleAndAdd(pt1, pt0, dir, len$$1); // Transform to target coord space.\r\n\r\n      pt1.transform(targetInversedTransform); // Note: getBoundingRect will ensure the `path` being created.\r\n\r\n      var boundingRect = target.getBoundingRect();\r\n      var dist$$1 = anchorPoint ? anchorPoint.distance(pt1) : target instanceof Path ? nearestPointOnPath(pt1, target.path, pt2) : nearestPointOnRect(pt1, boundingRect, pt2); // TODO pt2 is in the path\r\n\r\n      if (dist$$1 < minDist) {\r\n        minDist = dist$$1; // Transform back to global space.\r\n\r\n        pt1.transform(targetTransform);\r\n        pt2.transform(targetTransform);\r\n        pt2.toArray(points[0]);\r\n        pt1.toArray(points[1]);\r\n        pt0.toArray(points[2]);\r\n      }\r\n    }\r\n\r\n    limitTurnAngle(points, labelLineModel.get('minTurnAngle'));\r\n    labelLine.setShape({\r\n      points: points\r\n    });\r\n  } // Temporal variable for the limitTurnAngle function\r\n\r\n\r\n  var tmpArr = [];\r\n  var tmpProjPoint = new Point();\r\n  /**\r\n   * Reduce the line segment attached to the label to limit the turn angle between two segments.\r\n   * @param linePoints\r\n   * @param minTurnAngle Radian of minimum turn angle. 0 - 180\r\n   */\r\n\r\n  function limitTurnAngle(linePoints, minTurnAngle) {\r\n    if (!(minTurnAngle <= 180 && minTurnAngle > 0)) {\r\n      return;\r\n    }\r\n\r\n    minTurnAngle = minTurnAngle / 180 * Math.PI; // The line points can be\r\n    //      /pt1----pt2 (label)\r\n    //     /\r\n    // pt0/\r\n\r\n    pt0.fromArray(linePoints[0]);\r\n    pt1.fromArray(linePoints[1]);\r\n    pt2.fromArray(linePoints[2]);\r\n    Point.sub(dir, pt0, pt1);\r\n    Point.sub(dir2, pt2, pt1);\r\n    var len1 = dir.len();\r\n    var len2 = dir2.len();\r\n\r\n    if (len1 < 1e-3 || len2 < 1e-3) {\r\n      return;\r\n    }\r\n\r\n    dir.scale(1 / len1);\r\n    dir2.scale(1 / len2);\r\n    var angleCos = dir.dot(dir2);\r\n    var minTurnAngleCos = Math.cos(minTurnAngle);\r\n\r\n    if (minTurnAngleCos < angleCos) {\r\n      // Smaller than minTurnAngle\r\n      // Calculate project point of pt0 on pt1-pt2\r\n      var d = projectPointToLine(pt1.x, pt1.y, pt2.x, pt2.y, pt0.x, pt0.y, tmpArr, false);\r\n      tmpProjPoint.fromArray(tmpArr); // Calculate new projected length with limited minTurnAngle and get the new connect point\r\n\r\n      tmpProjPoint.scaleAndAdd(dir2, d / Math.tan(Math.PI - minTurnAngle)); // Limit the new calculated connect point between pt1 and pt2.\r\n\r\n      var t = pt2.x !== pt1.x ? (tmpProjPoint.x - pt1.x) / (pt2.x - pt1.x) : (tmpProjPoint.y - pt1.y) / (pt2.y - pt1.y);\r\n\r\n      if (isNaN(t)) {\r\n        return;\r\n      }\r\n\r\n      if (t < 0) {\r\n        Point.copy(tmpProjPoint, pt1);\r\n      } else if (t > 1) {\r\n        Point.copy(tmpProjPoint, pt2);\r\n      }\r\n\r\n      tmpProjPoint.toArray(linePoints[1]);\r\n    }\r\n  }\r\n  /**\r\n   * Limit the angle of line and the surface\r\n   * @param maxSurfaceAngle Radian of minimum turn angle. 0 - 180. 0 is same direction to normal. 180 is opposite\r\n   */\r\n\r\n\r\n  function setLabelLineState(labelLine, ignore, stateName, stateModel) {\r\n    var isNormal = stateName === 'normal';\r\n    var stateObj = isNormal ? labelLine : labelLine.ensureState(stateName); // Make sure display.\r\n\r\n    stateObj.ignore = ignore; // Set smooth\r\n\r\n    var smooth = stateModel.get('smooth');\r\n\r\n    if (smooth && smooth === true) {\r\n      smooth = 0.3;\r\n    }\r\n\r\n    stateObj.shape = stateObj.shape || {};\r\n\r\n    if (smooth > 0) {\r\n      stateObj.shape.smooth = smooth;\r\n    }\r\n\r\n    var styleObj = stateModel.getModel('lineStyle').getLineStyle();\r\n    isNormal ? labelLine.useStyle(styleObj) : stateObj.style = styleObj;\r\n  }\r\n\r\n  function buildLabelLinePath(path, shape) {\r\n    var smooth = shape.smooth;\r\n    var points = shape.points;\r\n\r\n    if (!points) {\r\n      return;\r\n    }\r\n\r\n    path.moveTo(points[0][0], points[0][1]);\r\n\r\n    if (smooth > 0 && points.length >= 3) {\r\n      var len1 = dist(points[0], points[1]);\r\n      var len2 = dist(points[1], points[2]);\r\n\r\n      if (!len1 || !len2) {\r\n        path.lineTo(points[1][0], points[1][1]);\r\n        path.lineTo(points[2][0], points[2][1]);\r\n        return;\r\n      }\r\n\r\n      var moveLen = Math.min(len1, len2) * smooth;\r\n      var midPoint0 = lerp([], points[1], points[0], moveLen / len1);\r\n      var midPoint2 = lerp([], points[1], points[2], moveLen / len2);\r\n      var midPoint1 = lerp([], midPoint0, midPoint2, 0.5);\r\n      path.bezierCurveTo(midPoint0[0], midPoint0[1], midPoint0[0], midPoint0[1], midPoint1[0], midPoint1[1]);\r\n      path.bezierCurveTo(midPoint2[0], midPoint2[1], midPoint2[0], midPoint2[1], points[2][0], points[2][1]);\r\n    } else {\r\n      for (var i = 1; i < points.length; i++) {\r\n        path.lineTo(points[i][0], points[i][1]);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Create a label line if necessary and set it's style.\r\n   */\r\n\r\n\r\n  function setLabelLineStyle(targetEl, statesModels, defaultStyle) {\r\n    var labelLine = targetEl.getTextGuideLine();\r\n    var label = targetEl.getTextContent();\r\n\r\n    if (!label) {\r\n      // Not show label line if there is no label.\r\n      if (labelLine) {\r\n        targetEl.removeTextGuideLine();\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    var normalModel = statesModels.normal;\r\n    var showNormal = normalModel.get('show');\r\n    var labelIgnoreNormal = label.ignore;\r\n\r\n    for (var i = 0; i < DISPLAY_STATES.length; i++) {\r\n      var stateName = DISPLAY_STATES[i];\r\n      var stateModel = statesModels[stateName];\r\n      var isNormal = stateName === 'normal';\r\n\r\n      if (stateModel) {\r\n        var stateShow = stateModel.get('show');\r\n        var isLabelIgnored = isNormal ? labelIgnoreNormal : retrieve2(label.states[stateName] && label.states[stateName].ignore, labelIgnoreNormal);\r\n\r\n        if (isLabelIgnored // Not show when label is not shown in this state.\r\n        || !retrieve2(stateShow, showNormal) // Use normal state by default if not set.\r\n        ) {\r\n            var stateObj = isNormal ? labelLine : labelLine && labelLine.states.normal;\r\n\r\n            if (stateObj) {\r\n              stateObj.ignore = true;\r\n            }\r\n\r\n            continue;\r\n          } // Create labelLine if not exists\r\n\r\n\r\n        if (!labelLine) {\r\n          labelLine = new Polyline();\r\n          targetEl.setTextGuideLine(labelLine); // Reset state of normal because it's new created.\r\n          // NOTE: NORMAL should always been the first!\r\n\r\n          if (!isNormal && (labelIgnoreNormal || !showNormal)) {\r\n            setLabelLineState(labelLine, true, 'normal', statesModels.normal);\r\n          } // Use same state proxy.\r\n\r\n\r\n          if (targetEl.stateProxy) {\r\n            labelLine.stateProxy = targetEl.stateProxy;\r\n          }\r\n        }\r\n\r\n        setLabelLineState(labelLine, false, stateName, stateModel);\r\n      }\r\n    }\r\n\r\n    if (labelLine) {\r\n      defaults(labelLine.style, defaultStyle); // Not fill.\r\n\r\n      labelLine.style.fill = null;\r\n      var showAbove = normalModel.get('showAbove');\r\n      var labelLineConfig = targetEl.textGuideLineConfig = targetEl.textGuideLineConfig || {};\r\n      labelLineConfig.showAbove = showAbove || false; // Custom the buildPath.\r\n\r\n      labelLine.buildPath = buildLabelLinePath;\r\n    }\r\n  }\r\n\r\n  function getLabelLineStatesModels(itemModel, labelLineName) {\r\n    labelLineName = labelLineName || 'labelLine';\r\n    var statesModels = {\r\n      normal: itemModel.getModel(labelLineName)\r\n    };\r\n\r\n    for (var i = 0; i < SPECIAL_STATES.length; i++) {\r\n      var stateName = SPECIAL_STATES[i];\r\n      statesModels[stateName] = itemModel.getModel([stateName, labelLineName]);\r\n    }\r\n\r\n    return statesModels;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function prepareLayoutList(input) {\r\n    var list = [];\r\n\r\n    for (var i = 0; i < input.length; i++) {\r\n      var rawItem = input[i];\r\n\r\n      if (rawItem.defaultAttr.ignore) {\r\n        continue;\r\n      }\r\n\r\n      var label = rawItem.label;\r\n      var transform = label.getComputedTransform(); // NOTE: Get bounding rect after getComputedTransform, or label may not been updated by the host el.\r\n\r\n      var localRect = label.getBoundingRect();\r\n      var isAxisAligned = !transform || transform[1] < 1e-5 && transform[2] < 1e-5;\r\n      var minMargin = label.style.margin || 0;\r\n      var globalRect = localRect.clone();\r\n      globalRect.applyTransform(transform);\r\n      globalRect.x -= minMargin / 2;\r\n      globalRect.y -= minMargin / 2;\r\n      globalRect.width += minMargin;\r\n      globalRect.height += minMargin;\r\n      var obb = isAxisAligned ? new OrientedBoundingRect(localRect, transform) : null;\r\n      list.push({\r\n        label: label,\r\n        labelLine: rawItem.labelLine,\r\n        rect: globalRect,\r\n        localRect: localRect,\r\n        obb: obb,\r\n        priority: rawItem.priority,\r\n        defaultAttr: rawItem.defaultAttr,\r\n        layoutOption: rawItem.computedLayoutOption,\r\n        axisAligned: isAxisAligned,\r\n        transform: transform\r\n      });\r\n    }\r\n\r\n    return list;\r\n  }\r\n\r\n  function shiftLayout(list, xyDim, sizeDim, minBound, maxBound, balanceShift) {\r\n    var len = list.length;\r\n\r\n    if (len < 2) {\r\n      return;\r\n    }\r\n\r\n    list.sort(function (a, b) {\r\n      return a.rect[xyDim] - b.rect[xyDim];\r\n    });\r\n    var lastPos = 0;\r\n    var delta;\r\n    var adjusted = false;\r\n    var shifts = [];\r\n    var totalShifts = 0;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      var item = list[i];\r\n      var rect = item.rect;\r\n      delta = rect[xyDim] - lastPos;\r\n\r\n      if (delta < 0) {\r\n        // shiftForward(i, len, -delta);\r\n        rect[xyDim] -= delta;\r\n        item.label[xyDim] -= delta;\r\n        adjusted = true;\r\n      }\r\n\r\n      var shift = Math.max(-delta, 0);\r\n      shifts.push(shift);\r\n      totalShifts += shift;\r\n      lastPos = rect[xyDim] + rect[sizeDim];\r\n    }\r\n\r\n    if (totalShifts > 0 && balanceShift) {\r\n      // Shift back to make the distribution more equally.\r\n      shiftList(-totalShifts / len, 0, len);\r\n    } // TODO bleedMargin?\r\n\r\n\r\n    var first = list[0];\r\n    var last = list[len - 1];\r\n    var minGap;\r\n    var maxGap;\r\n    updateMinMaxGap(); // If ends exceed two bounds, squeeze at most 80%, then take the gap of two bounds.\r\n\r\n    minGap < 0 && squeezeGaps(-minGap, 0.8);\r\n    maxGap < 0 && squeezeGaps(maxGap, 0.8);\r\n    updateMinMaxGap();\r\n    takeBoundsGap(minGap, maxGap, 1);\r\n    takeBoundsGap(maxGap, minGap, -1); // Handle bailout when there is not enough space.\r\n\r\n    updateMinMaxGap();\r\n\r\n    if (minGap < 0) {\r\n      squeezeWhenBailout(-minGap);\r\n    }\r\n\r\n    if (maxGap < 0) {\r\n      squeezeWhenBailout(maxGap);\r\n    }\r\n\r\n    function updateMinMaxGap() {\r\n      minGap = first.rect[xyDim] - minBound;\r\n      maxGap = maxBound - last.rect[xyDim] - last.rect[sizeDim];\r\n    }\r\n\r\n    function takeBoundsGap(gapThisBound, gapOtherBound, moveDir) {\r\n      if (gapThisBound < 0) {\r\n        // Move from other gap if can.\r\n        var moveFromMaxGap = Math.min(gapOtherBound, -gapThisBound);\r\n\r\n        if (moveFromMaxGap > 0) {\r\n          shiftList(moveFromMaxGap * moveDir, 0, len);\r\n          var remained = moveFromMaxGap + gapThisBound;\r\n\r\n          if (remained < 0) {\r\n            squeezeGaps(-remained * moveDir, 1);\r\n          }\r\n        } else {\r\n          squeezeGaps(-gapThisBound * moveDir, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    function shiftList(delta, start, end) {\r\n      if (delta !== 0) {\r\n        adjusted = true;\r\n      }\r\n\r\n      for (var i = start; i < end; i++) {\r\n        var item = list[i];\r\n        var rect = item.rect;\r\n        rect[xyDim] += delta;\r\n        item.label[xyDim] += delta;\r\n      }\r\n    } // Squeeze gaps if the labels exceed margin.\r\n\r\n\r\n    function squeezeGaps(delta, maxSqeezePercent) {\r\n      var gaps = [];\r\n      var totalGaps = 0;\r\n\r\n      for (var i = 1; i < len; i++) {\r\n        var prevItemRect = list[i - 1].rect;\r\n        var gap = Math.max(list[i].rect[xyDim] - prevItemRect[xyDim] - prevItemRect[sizeDim], 0);\r\n        gaps.push(gap);\r\n        totalGaps += gap;\r\n      }\r\n\r\n      if (!totalGaps) {\r\n        return;\r\n      }\r\n\r\n      var squeezePercent = Math.min(Math.abs(delta) / totalGaps, maxSqeezePercent);\r\n\r\n      if (delta > 0) {\r\n        for (var i = 0; i < len - 1; i++) {\r\n          // Distribute the shift delta to all gaps.\r\n          var movement = gaps[i] * squeezePercent; // Forward\r\n\r\n          shiftList(movement, 0, i + 1);\r\n        }\r\n      } else {\r\n        // Backward\r\n        for (var i = len - 1; i > 0; i--) {\r\n          // Distribute the shift delta to all gaps.\r\n          var movement = gaps[i - 1] * squeezePercent;\r\n          shiftList(-movement, i, len);\r\n        }\r\n      }\r\n    }\r\n    /**\r\n     * Squeeze to allow overlap if there is no more space available.\r\n     * Let other overlapping strategy like hideOverlap do the job instead of keep exceeding the bounds.\r\n     */\r\n\r\n\r\n    function squeezeWhenBailout(delta) {\r\n      var dir = delta < 0 ? -1 : 1;\r\n      delta = Math.abs(delta);\r\n      var moveForEachLabel = Math.ceil(delta / (len - 1));\r\n\r\n      for (var i = 0; i < len - 1; i++) {\r\n        if (dir > 0) {\r\n          // Forward\r\n          shiftList(moveForEachLabel, 0, i + 1);\r\n        } else {\r\n          // Backward\r\n          shiftList(-moveForEachLabel, len - i - 1, len);\r\n        }\r\n\r\n        delta -= moveForEachLabel;\r\n\r\n        if (delta <= 0) {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    return adjusted;\r\n  }\r\n  /**\r\n   * Adjust labels on x direction to avoid overlap.\r\n   */\r\n\r\n\r\n  function shiftLayoutOnX(list, leftBound, rightBound, // If average the shifts on all labels and add them to 0\r\n  // TODO: Not sure if should enable it.\r\n  // Pros: The angle of lines will distribute more equally\r\n  // Cons: In some layout. It may not what user wanted. like in pie. the label of last sector is usually changed unexpectedly.\r\n  balanceShift) {\r\n    return shiftLayout(list, 'x', 'width', leftBound, rightBound, balanceShift);\r\n  }\r\n  /**\r\n   * Adjust labels on y direction to avoid overlap.\r\n   */\r\n\r\n\r\n  function shiftLayoutOnY(list, topBound, bottomBound, // If average the shifts on all labels and add them to 0\r\n  balanceShift) {\r\n    return shiftLayout(list, 'y', 'height', topBound, bottomBound, balanceShift);\r\n  }\r\n\r\n  function hideOverlap(labelList) {\r\n    var displayedLabels = []; // TODO, render overflow visible first, put in the displayedLabels.\r\n\r\n    labelList.sort(function (a, b) {\r\n      return b.priority - a.priority;\r\n    });\r\n    var globalRect = new BoundingRect(0, 0, 0, 0);\r\n\r\n    function hideEl(el) {\r\n      if (!el.ignore) {\r\n        // Show on emphasis.\r\n        var emphasisState = el.ensureState('emphasis');\r\n\r\n        if (emphasisState.ignore == null) {\r\n          emphasisState.ignore = false;\r\n        }\r\n      }\r\n\r\n      el.ignore = true;\r\n    }\r\n\r\n    for (var i = 0; i < labelList.length; i++) {\r\n      var labelItem = labelList[i];\r\n      var isAxisAligned = labelItem.axisAligned;\r\n      var localRect = labelItem.localRect;\r\n      var transform = labelItem.transform;\r\n      var label = labelItem.label;\r\n      var labelLine = labelItem.labelLine;\r\n      globalRect.copy(labelItem.rect); // Add a threshold because layout may be aligned precisely.\r\n\r\n      globalRect.width -= 0.1;\r\n      globalRect.height -= 0.1;\r\n      globalRect.x += 0.05;\r\n      globalRect.y += 0.05;\r\n      var obb = labelItem.obb;\r\n      var overlapped = false;\r\n\r\n      for (var j = 0; j < displayedLabels.length; j++) {\r\n        var existsTextCfg = displayedLabels[j]; // Fast rejection.\r\n\r\n        if (!globalRect.intersect(existsTextCfg.rect)) {\r\n          continue;\r\n        }\r\n\r\n        if (isAxisAligned && existsTextCfg.axisAligned) {\r\n          // Is overlapped\r\n          overlapped = true;\r\n          break;\r\n        }\r\n\r\n        if (!existsTextCfg.obb) {\r\n          // If self is not axis aligned. But other is.\r\n          existsTextCfg.obb = new OrientedBoundingRect(existsTextCfg.localRect, existsTextCfg.transform);\r\n        }\r\n\r\n        if (!obb) {\r\n          // If self is axis aligned. But other is not.\r\n          obb = new OrientedBoundingRect(localRect, transform);\r\n        }\r\n\r\n        if (obb.intersect(existsTextCfg.obb)) {\r\n          overlapped = true;\r\n          break;\r\n        }\r\n      } // TODO Callback to determine if this overlap should be handled?\r\n\r\n\r\n      if (overlapped) {\r\n        hideEl(label);\r\n        labelLine && hideEl(labelLine);\r\n      } else {\r\n        label.attr('ignore', labelItem.defaultAttr.ignore);\r\n        labelLine && labelLine.attr('ignore', labelItem.defaultAttr.labelGuideIgnore);\r\n        displayedLabels.push(labelItem);\r\n      }\r\n    }\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n  // TODO: move labels out of viewport.\r\n\r\n\r\n  function cloneArr(points) {\r\n    if (points) {\r\n      var newPoints = [];\r\n\r\n      for (var i = 0; i < points.length; i++) {\r\n        newPoints.push(points[i].slice());\r\n      }\r\n\r\n      return newPoints;\r\n    }\r\n  }\r\n\r\n  function prepareLayoutCallbackParams(labelItem, hostEl) {\r\n    var label = labelItem.label;\r\n    var labelLine = hostEl && hostEl.getTextGuideLine();\r\n    return {\r\n      dataIndex: labelItem.dataIndex,\r\n      dataType: labelItem.dataType,\r\n      seriesIndex: labelItem.seriesModel.seriesIndex,\r\n      text: labelItem.label.style.text,\r\n      rect: labelItem.hostRect,\r\n      labelRect: labelItem.rect,\r\n      // x: labelAttr.x,\r\n      // y: labelAttr.y,\r\n      align: label.style.align,\r\n      verticalAlign: label.style.verticalAlign,\r\n      labelLinePoints: cloneArr(labelLine && labelLine.shape.points)\r\n    };\r\n  }\r\n\r\n  var LABEL_OPTION_TO_STYLE_KEYS = ['align', 'verticalAlign', 'width', 'height', 'fontSize'];\r\n  var dummyTransformable = new Transformable();\r\n  var labelLayoutInnerStore = makeInner();\r\n  var labelLineAnimationStore = makeInner();\r\n\r\n  function extendWithKeys(target, source, keys$$1) {\r\n    for (var i = 0; i < keys$$1.length; i++) {\r\n      var key = keys$$1[i];\r\n\r\n      if (source[key] != null) {\r\n        target[key] = source[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  var LABEL_LAYOUT_PROPS = ['x', 'y', 'rotation'];\r\n\r\n  var LabelManager =\r\n  /** @class */\r\n  function () {\r\n    function LabelManager() {\r\n      this._labelList = [];\r\n      this._chartViewList = [];\r\n    }\r\n\r\n    LabelManager.prototype.clearLabels = function () {\r\n      this._labelList = [];\r\n      this._chartViewList = [];\r\n    };\r\n    /**\r\n     * Add label to manager\r\n     */\r\n\r\n\r\n    LabelManager.prototype._addLabel = function (dataIndex, dataType, seriesModel, label, layoutOption) {\r\n      var labelStyle = label.style;\r\n      var hostEl = label.__hostTarget;\r\n      var textConfig = hostEl.textConfig || {}; // TODO: If label is in other state.\r\n\r\n      var labelTransform = label.getComputedTransform();\r\n      var labelRect = label.getBoundingRect().plain();\r\n      BoundingRect.applyTransform(labelRect, labelRect, labelTransform);\r\n\r\n      if (labelTransform) {\r\n        dummyTransformable.setLocalTransform(labelTransform);\r\n      } else {\r\n        // Identity transform.\r\n        dummyTransformable.x = dummyTransformable.y = dummyTransformable.rotation = dummyTransformable.originX = dummyTransformable.originY = 0;\r\n        dummyTransformable.scaleX = dummyTransformable.scaleY = 1;\r\n      }\r\n\r\n      var host = label.__hostTarget;\r\n      var hostRect;\r\n\r\n      if (host) {\r\n        hostRect = host.getBoundingRect().plain();\r\n        var transform = host.getComputedTransform();\r\n        BoundingRect.applyTransform(hostRect, hostRect, transform);\r\n      }\r\n\r\n      var labelGuide = hostRect && host.getTextGuideLine();\r\n\r\n      this._labelList.push({\r\n        label: label,\r\n        labelLine: labelGuide,\r\n        seriesModel: seriesModel,\r\n        dataIndex: dataIndex,\r\n        dataType: dataType,\r\n        layoutOption: layoutOption,\r\n        computedLayoutOption: null,\r\n        rect: labelRect,\r\n        hostRect: hostRect,\r\n        // Label with lower priority will be hidden when overlapped\r\n        // Use rect size as default priority\r\n        priority: hostRect ? hostRect.width * hostRect.height : 0,\r\n        // Save default label attributes.\r\n        // For restore if developers want get back to default value in callback.\r\n        defaultAttr: {\r\n          ignore: label.ignore,\r\n          labelGuideIgnore: labelGuide && labelGuide.ignore,\r\n          x: dummyTransformable.x,\r\n          y: dummyTransformable.y,\r\n          rotation: dummyTransformable.rotation,\r\n          style: {\r\n            x: labelStyle.x,\r\n            y: labelStyle.y,\r\n            align: labelStyle.align,\r\n            verticalAlign: labelStyle.verticalAlign,\r\n            width: labelStyle.width,\r\n            height: labelStyle.height,\r\n            fontSize: labelStyle.fontSize\r\n          },\r\n          cursor: label.cursor,\r\n          attachedPos: textConfig.position,\r\n          attachedRot: textConfig.rotation\r\n        }\r\n      });\r\n    };\r\n\r\n    LabelManager.prototype.addLabelsOfSeries = function (chartView) {\r\n      var _this = this;\r\n\r\n      this._chartViewList.push(chartView);\r\n\r\n      var seriesModel = chartView.__model;\r\n      var layoutOption = seriesModel.get('labelLayout');\r\n      /**\r\n       * Ignore layouting if it's not specified anything.\r\n       */\r\n\r\n      if (!(isFunction$1(layoutOption) || keys(layoutOption).length)) {\r\n        return;\r\n      }\r\n\r\n      chartView.group.traverse(function (child) {\r\n        if (child.ignore) {\r\n          return true; // Stop traverse descendants.\r\n        } // Only support label being hosted on graphic elements.\r\n\r\n\r\n        var textEl = child.getTextContent();\r\n        var ecData = getECData(child); // Can only attach the text on the element with dataIndex\r\n\r\n        if (textEl && !textEl.disableLabelLayout) {\r\n          _this._addLabel(ecData.dataIndex, ecData.dataType, seriesModel, textEl, layoutOption);\r\n        }\r\n      });\r\n    };\r\n\r\n    LabelManager.prototype.updateLayoutConfig = function (api) {\r\n      var width = api.getWidth();\r\n      var height = api.getHeight();\r\n\r\n      function createDragHandler(el, labelLineModel) {\r\n        return function () {\r\n          updateLabelLinePoints(el, labelLineModel);\r\n        };\r\n      }\r\n\r\n      for (var i = 0; i < this._labelList.length; i++) {\r\n        var labelItem = this._labelList[i];\r\n        var label = labelItem.label;\r\n        var hostEl = label.__hostTarget;\r\n        var defaultLabelAttr = labelItem.defaultAttr;\r\n        var layoutOption = void 0; // TODO A global layout option?\r\n\r\n        if (typeof labelItem.layoutOption === 'function') {\r\n          layoutOption = labelItem.layoutOption(prepareLayoutCallbackParams(labelItem, hostEl));\r\n        } else {\r\n          layoutOption = labelItem.layoutOption;\r\n        }\r\n\r\n        layoutOption = layoutOption || {};\r\n        labelItem.computedLayoutOption = layoutOption;\r\n        var degreeToRadian = Math.PI / 180;\r\n\r\n        if (hostEl) {\r\n          hostEl.setTextConfig({\r\n            // Force to set local false.\r\n            local: false,\r\n            // Ignore position and rotation config on the host el if x or y is changed.\r\n            position: layoutOption.x != null || layoutOption.y != null ? null : defaultLabelAttr.attachedPos,\r\n            // Ignore rotation config on the host el if rotation is changed.\r\n            rotation: layoutOption.rotate != null ? layoutOption.rotate * degreeToRadian : defaultLabelAttr.attachedRot,\r\n            offset: [layoutOption.dx || 0, layoutOption.dy || 0]\r\n          });\r\n        }\r\n\r\n        var needsUpdateLabelLine = false;\r\n\r\n        if (layoutOption.x != null) {\r\n          // TODO width of chart view.\r\n          label.x = parsePercent$1(layoutOption.x, width);\r\n          label.setStyle('x', 0); // Ignore movement in style. TODO: origin.\r\n\r\n          needsUpdateLabelLine = true;\r\n        } else {\r\n          label.x = defaultLabelAttr.x;\r\n          label.setStyle('x', defaultLabelAttr.style.x);\r\n        }\r\n\r\n        if (layoutOption.y != null) {\r\n          // TODO height of chart view.\r\n          label.y = parsePercent$1(layoutOption.y, height);\r\n          label.setStyle('y', 0); // Ignore movement in style.\r\n\r\n          needsUpdateLabelLine = true;\r\n        } else {\r\n          label.y = defaultLabelAttr.y;\r\n          label.setStyle('y', defaultLabelAttr.style.y);\r\n        }\r\n\r\n        if (layoutOption.labelLinePoints) {\r\n          var guideLine = hostEl.getTextGuideLine();\r\n\r\n          if (guideLine) {\r\n            guideLine.setShape({\r\n              points: layoutOption.labelLinePoints\r\n            }); // Not update\r\n\r\n            needsUpdateLabelLine = false;\r\n          }\r\n        }\r\n\r\n        var labelLayoutStore = labelLayoutInnerStore(label);\r\n        labelLayoutStore.needsUpdateLabelLine = needsUpdateLabelLine;\r\n        label.rotation = layoutOption.rotate != null ? layoutOption.rotate * degreeToRadian : defaultLabelAttr.rotation;\r\n\r\n        for (var k = 0; k < LABEL_OPTION_TO_STYLE_KEYS.length; k++) {\r\n          var key = LABEL_OPTION_TO_STYLE_KEYS[k];\r\n          label.setStyle(key, layoutOption[key] != null ? layoutOption[key] : defaultLabelAttr.style[key]);\r\n        }\r\n\r\n        if (layoutOption.draggable) {\r\n          label.draggable = true;\r\n          label.cursor = 'move';\r\n\r\n          if (hostEl) {\r\n            var hostModel = labelItem.seriesModel;\r\n\r\n            if (labelItem.dataIndex != null) {\r\n              var data = labelItem.seriesModel.getData(labelItem.dataType);\r\n              hostModel = data.getItemModel(labelItem.dataIndex);\r\n            }\r\n\r\n            label.on('drag', createDragHandler(hostEl, hostModel.getModel('labelLine')));\r\n          }\r\n        } else {\r\n          // TODO Other drag functions?\r\n          label.off('drag');\r\n          label.cursor = defaultLabelAttr.cursor;\r\n        }\r\n      }\r\n    };\r\n\r\n    LabelManager.prototype.layout = function (api) {\r\n      var width = api.getWidth();\r\n      var height = api.getHeight();\r\n      var labelList = prepareLayoutList(this._labelList);\r\n      var labelsNeedsAdjustOnX = filter(labelList, function (item) {\r\n        return item.layoutOption.moveOverlap === 'shiftX';\r\n      });\r\n      var labelsNeedsAdjustOnY = filter(labelList, function (item) {\r\n        return item.layoutOption.moveOverlap === 'shiftY';\r\n      });\r\n      shiftLayoutOnX(labelsNeedsAdjustOnX, 0, width);\r\n      shiftLayoutOnY(labelsNeedsAdjustOnY, 0, height);\r\n      var labelsNeedsHideOverlap = filter(labelList, function (item) {\r\n        return item.layoutOption.hideOverlap;\r\n      });\r\n      hideOverlap(labelsNeedsHideOverlap);\r\n    };\r\n    /**\r\n     * Process all labels. Not only labels with layoutOption.\r\n     */\r\n\r\n\r\n    LabelManager.prototype.processLabelsOverall = function () {\r\n      var _this = this;\r\n\r\n      each$1(this._chartViewList, function (chartView) {\r\n        var seriesModel = chartView.__model;\r\n        var ignoreLabelLineUpdate = chartView.ignoreLabelLineUpdate;\r\n        var animationEnabled = seriesModel.isAnimationEnabled();\r\n        chartView.group.traverse(function (child) {\r\n          if (child.ignore) {\r\n            return true; // Stop traverse descendants.\r\n          }\r\n\r\n          var needsUpdateLabelLine = !ignoreLabelLineUpdate;\r\n          var label = child.getTextContent();\r\n\r\n          if (!needsUpdateLabelLine && label) {\r\n            needsUpdateLabelLine = labelLayoutInnerStore(label).needsUpdateLabelLine;\r\n          }\r\n\r\n          if (needsUpdateLabelLine) {\r\n            _this._updateLabelLine(child, seriesModel);\r\n          }\r\n\r\n          if (animationEnabled) {\r\n            _this._animateLabels(child, seriesModel);\r\n          }\r\n        });\r\n      });\r\n    };\r\n\r\n    LabelManager.prototype._updateLabelLine = function (el, seriesModel) {\r\n      // Only support label being hosted on graphic elements.\r\n      var textEl = el.getTextContent(); // Update label line style.\r\n\r\n      var ecData = getECData(el);\r\n      var dataIndex = ecData.dataIndex; // Only support labelLine on the labels represent data.\r\n\r\n      if (textEl && dataIndex != null) {\r\n        var data = seriesModel.getData(ecData.dataType);\r\n        var itemModel = data.getItemModel(dataIndex);\r\n        var defaultStyle = {};\r\n        var visualStyle = data.getItemVisual(dataIndex, 'style');\r\n        var visualType = data.getVisual('drawType'); // Default to be same with main color\r\n\r\n        defaultStyle.stroke = visualStyle[visualType];\r\n        var labelLineModel = itemModel.getModel('labelLine');\r\n        setLabelLineStyle(el, getLabelLineStatesModels(itemModel), defaultStyle);\r\n        updateLabelLinePoints(el, labelLineModel);\r\n      }\r\n    };\r\n\r\n    LabelManager.prototype._animateLabels = function (el, seriesModel) {\r\n      var textEl = el.getTextContent();\r\n      var guideLine = el.getTextGuideLine(); // Animate\r\n\r\n      if (textEl && !textEl.ignore && !textEl.invisible && !el.disableLabelAnimation && !isElementRemoved(el)) {\r\n        var layoutStore = labelLayoutInnerStore(textEl);\r\n        var oldLayout = layoutStore.oldLayout;\r\n        var ecData = getECData(el);\r\n        var dataIndex = ecData.dataIndex;\r\n        var newProps = {\r\n          x: textEl.x,\r\n          y: textEl.y,\r\n          rotation: textEl.rotation\r\n        };\r\n        var data = seriesModel.getData(ecData.dataType);\r\n\r\n        if (!oldLayout) {\r\n          textEl.attr(newProps); // Disable fade in animation if value animation is enabled.\r\n\r\n          if (!labelInner(textEl).valueAnimation) {\r\n            var oldOpacity = retrieve2(textEl.style.opacity, 1); // Fade in animation\r\n\r\n            textEl.style.opacity = 0;\r\n            initProps(textEl, {\r\n              style: {\r\n                opacity: oldOpacity\r\n              }\r\n            }, seriesModel, dataIndex);\r\n          }\r\n        } else {\r\n          textEl.attr(oldLayout); // Make sure the animation from is in the right status.\r\n\r\n          var prevStates = el.prevStates;\r\n\r\n          if (prevStates) {\r\n            if (indexOf$1(prevStates, 'select') >= 0) {\r\n              textEl.attr(layoutStore.oldLayoutSelect);\r\n            }\r\n\r\n            if (indexOf$1(prevStates, 'emphasis') >= 0) {\r\n              textEl.attr(layoutStore.oldLayoutEmphasis);\r\n            }\r\n          }\r\n\r\n          updateProps(textEl, newProps, seriesModel, dataIndex);\r\n        }\r\n\r\n        layoutStore.oldLayout = newProps;\r\n\r\n        if (textEl.states.select) {\r\n          var layoutSelect = layoutStore.oldLayoutSelect = {};\r\n          extendWithKeys(layoutSelect, newProps, LABEL_LAYOUT_PROPS);\r\n          extendWithKeys(layoutSelect, textEl.states.select, LABEL_LAYOUT_PROPS);\r\n        }\r\n\r\n        if (textEl.states.emphasis) {\r\n          var layoutEmphasis = layoutStore.oldLayoutEmphasis = {};\r\n          extendWithKeys(layoutEmphasis, newProps, LABEL_LAYOUT_PROPS);\r\n          extendWithKeys(layoutEmphasis, textEl.states.emphasis, LABEL_LAYOUT_PROPS);\r\n        }\r\n\r\n        animateLabelValue(textEl, dataIndex, data, seriesModel, seriesModel);\r\n      }\r\n\r\n      if (guideLine && !guideLine.ignore && !guideLine.invisible) {\r\n        var layoutStore = labelLineAnimationStore(guideLine);\r\n        var oldLayout = layoutStore.oldLayout;\r\n        var newLayout = {\r\n          points: guideLine.shape.points\r\n        };\r\n\r\n        if (!oldLayout) {\r\n          guideLine.setShape(newLayout);\r\n          guideLine.style.strokePercent = 0;\r\n          initProps(guideLine, {\r\n            style: {\r\n              strokePercent: 1\r\n            }\r\n          }, seriesModel);\r\n        } else {\r\n          guideLine.attr({\r\n            shape: oldLayout\r\n          });\r\n          updateProps(guideLine, {\r\n            shape: newLayout\r\n          }, seriesModel);\r\n        }\r\n\r\n        layoutStore.oldLayout = newLayout;\r\n      }\r\n    };\r\n\r\n    return LabelManager;\r\n  }();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n  // Inlucdes: pieSelect, pieUnSelect, pieToggleSelect, mapSelect, mapUnSelect, mapToggleSelect\r\n\r\n\r\n  function handleSeriesLegacySelectEvents(type, eventPostfix, ecIns, ecModel, payload) {\r\n    var legacyEventName = type + eventPostfix;\r\n\r\n    if (!ecIns.isSilent(legacyEventName)) {\r\n      {\r\n        deprecateLog(\"event \" + legacyEventName + \" is deprecated.\");\r\n      }\r\n      ecModel.eachComponent({\r\n        mainType: 'series',\r\n        subType: 'pie'\r\n      }, function (seriesModel) {\r\n        var seriesIndex = seriesModel.seriesIndex;\r\n        var selected = payload.selected;\r\n\r\n        for (var i = 0; i < selected.length; i++) {\r\n          if (selected[i].seriesIndex === seriesIndex) {\r\n            var data = seriesModel.getData();\r\n            var dataIndex = queryDataIndex(data, payload.fromActionPayload);\r\n            ecIns.trigger(legacyEventName, {\r\n              type: legacyEventName,\r\n              seriesId: seriesModel.id,\r\n              name: isArray(dataIndex) ? data.getName(dataIndex[0]) : data.getName(dataIndex),\r\n              selected: extend({}, seriesModel.option.selectedMap)\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleLegacySelectEvents(messageCenter, ecIns, api) {\r\n    messageCenter.on('selectchanged', function (params) {\r\n      var ecModel = api.getModel();\r\n\r\n      if (params.isFromClick) {\r\n        handleSeriesLegacySelectEvents('map', 'selectchanged', ecIns, ecModel, params);\r\n        handleSeriesLegacySelectEvents('pie', 'selectchanged', ecIns, ecModel, params);\r\n      } else if (params.fromAction === 'select') {\r\n        handleSeriesLegacySelectEvents('map', 'selected', ecIns, ecModel, params);\r\n        handleSeriesLegacySelectEvents('pie', 'selected', ecIns, ecModel, params);\r\n      } else if (params.fromAction === 'unselect') {\r\n        handleSeriesLegacySelectEvents('map', 'unselected', ecIns, ecModel, params);\r\n        handleSeriesLegacySelectEvents('pie', 'unselected', ecIns, ecModel, params);\r\n      }\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function findEventDispatcher(target, det, returnFirstMatch) {\r\n    var found;\r\n\r\n    while (target) {\r\n      if (det(target)) {\r\n        found = target;\r\n\r\n        if (returnFirstMatch) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      target = target.__hostTarget || target.parent;\r\n    }\r\n\r\n    return found;\r\n  }\r\n\r\n  var wmUniqueIndex = Math.round(Math.random() * 9);\r\n\r\n  var WeakMap = function () {\r\n    function WeakMap() {\r\n      this._id = '__ec_inner_' + wmUniqueIndex++;\r\n    }\r\n\r\n    WeakMap.prototype.get = function (key) {\r\n      return this._guard(key)[this._id];\r\n    };\r\n\r\n    WeakMap.prototype.set = function (key, value) {\r\n      var target = this._guard(key);\r\n\r\n      if (typeof Object.defineProperty === 'function') {\r\n        Object.defineProperty(target, this._id, {\r\n          value: value,\r\n          enumerable: false,\r\n          configurable: true\r\n        });\r\n      } else {\r\n        target[this._id] = value;\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    WeakMap.prototype[\"delete\"] = function (key) {\r\n      if (this.has(key)) {\r\n        delete this._guard(key)[this._id];\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    WeakMap.prototype.has = function (key) {\r\n      return !!this._guard(key)[this._id];\r\n    };\r\n\r\n    WeakMap.prototype._guard = function (key) {\r\n      if (key !== Object(key)) {\r\n        throw TypeError('Value of WeakMap is not a non-null object.');\r\n      }\r\n\r\n      return key;\r\n    };\r\n\r\n    return WeakMap;\r\n  }();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n  // Symbol factory\r\n\r\n  /**\r\n   * Triangle shape\r\n   * @inner\r\n   */\r\n\r\n\r\n  var Triangle = Path.extend({\r\n    type: 'triangle',\r\n    shape: {\r\n      cx: 0,\r\n      cy: 0,\r\n      width: 0,\r\n      height: 0\r\n    },\r\n    buildPath: function (path, shape) {\r\n      var cx = shape.cx;\r\n      var cy = shape.cy;\r\n      var width = shape.width / 2;\r\n      var height = shape.height / 2;\r\n      path.moveTo(cx, cy - height);\r\n      path.lineTo(cx + width, cy + height);\r\n      path.lineTo(cx - width, cy + height);\r\n      path.closePath();\r\n    }\r\n  });\r\n  /**\r\n   * Diamond shape\r\n   * @inner\r\n   */\r\n\r\n  var Diamond = Path.extend({\r\n    type: 'diamond',\r\n    shape: {\r\n      cx: 0,\r\n      cy: 0,\r\n      width: 0,\r\n      height: 0\r\n    },\r\n    buildPath: function (path, shape) {\r\n      var cx = shape.cx;\r\n      var cy = shape.cy;\r\n      var width = shape.width / 2;\r\n      var height = shape.height / 2;\r\n      path.moveTo(cx, cy - height);\r\n      path.lineTo(cx + width, cy);\r\n      path.lineTo(cx, cy + height);\r\n      path.lineTo(cx - width, cy);\r\n      path.closePath();\r\n    }\r\n  });\r\n  /**\r\n   * Pin shape\r\n   * @inner\r\n   */\r\n\r\n  var Pin = Path.extend({\r\n    type: 'pin',\r\n    shape: {\r\n      // x, y on the cusp\r\n      x: 0,\r\n      y: 0,\r\n      width: 0,\r\n      height: 0\r\n    },\r\n    buildPath: function (path, shape) {\r\n      var x = shape.x;\r\n      var y = shape.y;\r\n      var w = shape.width / 5 * 3; // Height must be larger than width\r\n\r\n      var h = Math.max(w, shape.height);\r\n      var r = w / 2; // Dist on y with tangent point and circle center\r\n\r\n      var dy = r * r / (h - r);\r\n      var cy = y - h + r + dy;\r\n      var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\r\n\r\n      var dx = Math.cos(angle) * r;\r\n      var tanX = Math.sin(angle);\r\n      var tanY = Math.cos(angle);\r\n      var cpLen = r * 0.6;\r\n      var cpLen2 = r * 0.7;\r\n      path.moveTo(x - dx, cy + dy);\r\n      path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\r\n      path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\r\n      path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\r\n      path.closePath();\r\n    }\r\n  });\r\n  /**\r\n   * Arrow shape\r\n   * @inner\r\n   */\r\n\r\n  var Arrow = Path.extend({\r\n    type: 'arrow',\r\n    shape: {\r\n      x: 0,\r\n      y: 0,\r\n      width: 0,\r\n      height: 0\r\n    },\r\n    buildPath: function (ctx, shape) {\r\n      var height = shape.height;\r\n      var width = shape.width;\r\n      var x = shape.x;\r\n      var y = shape.y;\r\n      var dx = width / 3 * 2;\r\n      ctx.moveTo(x, y);\r\n      ctx.lineTo(x + dx, y + height);\r\n      ctx.lineTo(x, y + height / 4 * 3);\r\n      ctx.lineTo(x - dx, y + height);\r\n      ctx.lineTo(x, y);\r\n      ctx.closePath();\r\n    }\r\n  });\r\n  /**\r\n   * Map of path contructors\r\n   */\r\n  // TODO Use function to build symbol path.\r\n\r\n  var symbolCtors = {\r\n    // Use small height rect to simulate line.\r\n    // Avoid using stroke.\r\n    line: Rect,\r\n    rect: Rect,\r\n    roundRect: Rect,\r\n    square: Rect,\r\n    circle: Circle,\r\n    diamond: Diamond,\r\n    pin: Pin,\r\n    arrow: Arrow,\r\n    triangle: Triangle\r\n  }; // NOTICE Only use fill. No line!\r\n\r\n  var symbolShapeMakers = {\r\n    line: function (x, y, w, h, shape) {\r\n      var thickness = 2; // A thin line\r\n\r\n      shape.x = x;\r\n      shape.y = y + h / 2 - thickness / 2;\r\n      shape.width = w;\r\n      shape.height = thickness;\r\n    },\r\n    rect: function (x, y, w, h, shape) {\r\n      shape.x = x;\r\n      shape.y = y;\r\n      shape.width = w;\r\n      shape.height = h;\r\n    },\r\n    roundRect: function (x, y, w, h, shape) {\r\n      shape.x = x;\r\n      shape.y = y;\r\n      shape.width = w;\r\n      shape.height = h;\r\n      shape.r = Math.min(w, h) / 4;\r\n    },\r\n    square: function (x, y, w, h, shape) {\r\n      var size = Math.min(w, h);\r\n      shape.x = x;\r\n      shape.y = y;\r\n      shape.width = size;\r\n      shape.height = size;\r\n    },\r\n    circle: function (x, y, w, h, shape) {\r\n      // Put circle in the center of square\r\n      shape.cx = x + w / 2;\r\n      shape.cy = y + h / 2;\r\n      shape.r = Math.min(w, h) / 2;\r\n    },\r\n    diamond: function (x, y, w, h, shape) {\r\n      shape.cx = x + w / 2;\r\n      shape.cy = y + h / 2;\r\n      shape.width = w;\r\n      shape.height = h;\r\n    },\r\n    pin: function (x, y, w, h, shape) {\r\n      shape.x = x + w / 2;\r\n      shape.y = y + h / 2;\r\n      shape.width = w;\r\n      shape.height = h;\r\n    },\r\n    arrow: function (x, y, w, h, shape) {\r\n      shape.x = x + w / 2;\r\n      shape.y = y + h / 2;\r\n      shape.width = w;\r\n      shape.height = h;\r\n    },\r\n    triangle: function (x, y, w, h, shape) {\r\n      shape.cx = x + w / 2;\r\n      shape.cy = y + h / 2;\r\n      shape.width = w;\r\n      shape.height = h;\r\n    }\r\n  };\r\n  var symbolBuildProxies = {};\r\n  each$1(symbolCtors, function (Ctor, name) {\r\n    symbolBuildProxies[name] = new Ctor();\r\n  });\r\n  var SymbolClz = Path.extend({\r\n    type: 'symbol',\r\n    shape: {\r\n      symbolType: '',\r\n      x: 0,\r\n      y: 0,\r\n      width: 0,\r\n      height: 0\r\n    },\r\n    calculateTextPosition: function (out, config, rect) {\r\n      var res = calculateTextPosition(out, config, rect);\r\n      var shape = this.shape;\r\n\r\n      if (shape && shape.symbolType === 'pin' && config.position === 'inside') {\r\n        res.y = rect.y + rect.height * 0.4;\r\n      }\r\n\r\n      return res;\r\n    },\r\n    buildPath: function (ctx, shape, inBundle) {\r\n      var symbolType = shape.symbolType;\r\n\r\n      if (symbolType !== 'none') {\r\n        var proxySymbol = symbolBuildProxies[symbolType];\r\n\r\n        if (!proxySymbol) {\r\n          // Default rect\r\n          symbolType = 'rect';\r\n          proxySymbol = symbolBuildProxies[symbolType];\r\n        }\r\n\r\n        symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\r\n        proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\r\n      }\r\n    }\r\n  }); // Provide setColor helper method to avoid determine if set the fill or stroke outside\r\n\r\n  function symbolPathSetColor(color, innerColor) {\r\n    if (this.type !== 'image') {\r\n      var symbolStyle = this.style;\r\n\r\n      if (this.__isEmptyBrush) {\r\n        symbolStyle.stroke = color;\r\n        symbolStyle.fill = innerColor || '#fff'; // TODO Same width with lineStyle in LineView.\r\n\r\n        symbolStyle.lineWidth = 2;\r\n      } else {\r\n        symbolStyle.fill = color;\r\n      }\r\n\r\n      this.markRedraw();\r\n    }\r\n  }\r\n  /**\r\n   * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\r\n   */\r\n\r\n\r\n  function createSymbol(symbolType, x, y, w, h, color, // whether to keep the ratio of w/h,\r\n  keepAspect) {\r\n    // TODO Support image object, DynamicImage.\r\n    var isEmpty = symbolType.indexOf('empty') === 0;\r\n\r\n    if (isEmpty) {\r\n      symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\r\n    }\r\n\r\n    var symbolPath;\r\n\r\n    if (symbolType.indexOf('image://') === 0) {\r\n      symbolPath = makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\r\n    } else if (symbolType.indexOf('path://') === 0) {\r\n      symbolPath = makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\r\n    } else {\r\n      symbolPath = new SymbolClz({\r\n        shape: {\r\n          symbolType: symbolType,\r\n          x: x,\r\n          y: y,\r\n          width: w,\r\n          height: h\r\n        }\r\n      });\r\n    }\r\n\r\n    symbolPath.__isEmptyBrush = isEmpty; // TODO Should deprecate setColor\r\n\r\n    symbolPath.setColor = symbolPathSetColor;\r\n\r\n    if (color) {\r\n      symbolPath.setColor(color);\r\n    }\r\n\r\n    return symbolPath;\r\n  }\r\n\r\n  function createLinearGradient(ctx, obj, rect) {\r\n    var x = obj.x == null ? 0 : obj.x;\r\n    var x2 = obj.x2 == null ? 1 : obj.x2;\r\n    var y = obj.y == null ? 0 : obj.y;\r\n    var y2 = obj.y2 == null ? 0 : obj.y2;\r\n\r\n    if (!obj.global) {\r\n      x = x * rect.width + rect.x;\r\n      x2 = x2 * rect.width + rect.x;\r\n      y = y * rect.height + rect.y;\r\n      y2 = y2 * rect.height + rect.y;\r\n    }\r\n\r\n    x = isNaN(x) ? 0 : x;\r\n    x2 = isNaN(x2) ? 1 : x2;\r\n    y = isNaN(y) ? 0 : y;\r\n    y2 = isNaN(y2) ? 0 : y2;\r\n    var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\r\n    return canvasGradient;\r\n  }\r\n\r\n  function createRadialGradient(ctx, obj, rect) {\r\n    var width = rect.width;\r\n    var height = rect.height;\r\n    var min = Math.min(width, height);\r\n    var x = obj.x == null ? 0.5 : obj.x;\r\n    var y = obj.y == null ? 0.5 : obj.y;\r\n    var r = obj.r == null ? 0.5 : obj.r;\r\n\r\n    if (!obj.global) {\r\n      x = x * width + rect.x;\r\n      y = y * height + rect.y;\r\n      r = r * min;\r\n    }\r\n\r\n    var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\r\n    return canvasGradient;\r\n  }\r\n\r\n  function getCanvasGradient(ctx, obj, rect) {\r\n    var canvasGradient = obj.type === 'radial' ? createRadialGradient(ctx, obj, rect) : createLinearGradient(ctx, obj, rect);\r\n    var colorStops = obj.colorStops;\r\n\r\n    for (var i = 0; i < colorStops.length; i++) {\r\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\r\n    }\r\n\r\n    return canvasGradient;\r\n  }\r\n\r\n  function isClipPathChanged(clipPaths, prevClipPaths) {\r\n    if (clipPaths === prevClipPaths || !clipPaths && !prevClipPaths) {\r\n      return false;\r\n    }\r\n\r\n    if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\r\n      return true;\r\n    }\r\n\r\n    for (var i = 0; i < clipPaths.length; i++) {\r\n      if (clipPaths[i] !== prevClipPaths[i]) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function normalizeLineDash(lineType, lineWidth) {\r\n    if (!lineType || lineType === 'solid' || !(lineWidth > 0)) {\r\n      return null;\r\n    }\r\n\r\n    lineWidth = lineWidth || 1;\r\n    return lineType === 'dashed' ? [4 * lineWidth, 2 * lineWidth] : lineType === 'dotted' ? [lineWidth] : isNumber(lineType) ? [lineType] : isArray(lineType) ? lineType : null;\r\n  }\r\n\r\n  var pathProxyForDraw = new PathProxy(true);\r\n\r\n  function styleHasStroke(style) {\r\n    var stroke = style.stroke;\r\n    return !(stroke == null || stroke === 'none' || !(style.lineWidth > 0));\r\n  }\r\n\r\n  function styleHasFill(style) {\r\n    var fill = style.fill;\r\n    return fill != null && fill !== 'none';\r\n  }\r\n\r\n  function doFillPath(ctx, style) {\r\n    if (style.fillOpacity != null && style.fillOpacity !== 1) {\r\n      var originalGlobalAlpha = ctx.globalAlpha;\r\n      ctx.globalAlpha = style.fillOpacity * style.opacity;\r\n      ctx.fill();\r\n      ctx.globalAlpha = originalGlobalAlpha;\r\n    } else {\r\n      ctx.fill();\r\n    }\r\n  }\r\n\r\n  function doStrokePath(ctx, style) {\r\n    if (style.strokeOpacity != null && style.strokeOpacity !== 1) {\r\n      var originalGlobalAlpha = ctx.globalAlpha;\r\n      ctx.globalAlpha = style.strokeOpacity * style.opacity;\r\n      ctx.stroke();\r\n      ctx.globalAlpha = originalGlobalAlpha;\r\n    } else {\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  function createCanvasPattern(ctx, pattern, el) {\r\n    var image = createOrUpdateImage(pattern.image, pattern.__image, el);\r\n\r\n    if (isImageReady(image)) {\r\n      var canvasPattern = ctx.createPattern(image, pattern.repeat || 'repeat');\r\n\r\n      if (typeof DOMMatrix === 'function') {\r\n        var matrix = new DOMMatrix();\r\n        matrix.rotateSelf(0, 0, (pattern.rotation || 0) / Math.PI * 180);\r\n        matrix.scaleSelf(pattern.scaleX || 1, pattern.scaleY || 1);\r\n        matrix.translateSelf(pattern.x || 0, pattern.y || 0);\r\n        canvasPattern.setTransform(matrix);\r\n      }\r\n\r\n      return canvasPattern;\r\n    }\r\n  }\r\n\r\n  function brushPath(ctx, el, style, inBatch) {\r\n    var hasStroke = styleHasStroke(style);\r\n    var hasFill = styleHasFill(style);\r\n    var strokePercent = style.strokePercent;\r\n    var strokePart = strokePercent < 1;\r\n    var firstDraw = !el.path;\r\n\r\n    if ((!el.silent || strokePart) && firstDraw) {\r\n      el.createPathProxy();\r\n    }\r\n\r\n    var path = el.path || pathProxyForDraw;\r\n\r\n    if (!inBatch) {\r\n      var fill = style.fill;\r\n      var stroke = style.stroke;\r\n      var hasFillGradient = hasFill && !!fill.colorStops;\r\n      var hasStrokeGradient = hasStroke && !!stroke.colorStops;\r\n      var hasFillPattern = hasFill && !!fill.image;\r\n      var hasStrokePattern = hasStroke && !!stroke.image;\r\n      var fillGradient = void 0;\r\n      var strokeGradient = void 0;\r\n      var fillPattern = void 0;\r\n      var strokePattern = void 0;\r\n      var rect = void 0;\r\n\r\n      if (hasFillGradient || hasStrokeGradient) {\r\n        rect = el.getBoundingRect();\r\n      }\r\n\r\n      if (hasFillGradient) {\r\n        fillGradient = el.__dirty ? getCanvasGradient(ctx, fill, rect) : el.__canvasFillGradient;\r\n        el.__canvasFillGradient = fillGradient;\r\n      }\r\n\r\n      if (hasStrokeGradient) {\r\n        strokeGradient = el.__dirty ? getCanvasGradient(ctx, stroke, rect) : el.__canvasStrokeGradient;\r\n        el.__canvasStrokeGradient = strokeGradient;\r\n      }\r\n\r\n      if (hasFillPattern) {\r\n        fillPattern = el.__dirty || !el.__canvasFillPattern ? createCanvasPattern(ctx, fill, el) : el.__canvasFillPattern;\r\n        el.__canvasFillPattern = fillPattern;\r\n      }\r\n\r\n      if (hasStrokePattern) {\r\n        strokePattern = el.__dirty || !el.__canvasStrokePattern ? createCanvasPattern(ctx, stroke, el) : el.__canvasStrokePattern;\r\n        el.__canvasStrokePattern = fillPattern;\r\n      }\r\n\r\n      if (hasFillGradient) {\r\n        ctx.fillStyle = fillGradient;\r\n      } else if (hasFillPattern) {\r\n        if (fillPattern) {\r\n          ctx.fillStyle = fillPattern;\r\n        } else {\r\n          hasFill = false;\r\n        }\r\n      }\r\n\r\n      if (hasStrokeGradient) {\r\n        ctx.strokeStyle = strokeGradient;\r\n      } else if (hasStrokePattern) {\r\n        if (strokePattern) {\r\n          ctx.strokeStyle = strokePattern;\r\n        } else {\r\n          hasStroke = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    var lineDash = style.lineDash && style.lineWidth > 0 && normalizeLineDash(style.lineDash, style.lineWidth);\r\n    var lineDashOffset = style.lineDashOffset;\r\n    var ctxLineDash = !!ctx.setLineDash;\r\n    var scale = el.getGlobalScale();\r\n    path.setScale(scale[0], scale[1], el.segmentIgnoreThreshold);\r\n\r\n    if (lineDash) {\r\n      var lineScale_1 = style.strokeNoScale && el.getLineScale ? el.getLineScale() : 1;\r\n\r\n      if (lineScale_1 && lineScale_1 !== 1) {\r\n        lineDash = map(lineDash, function (rawVal) {\r\n          return rawVal / lineScale_1;\r\n        });\r\n        lineDashOffset /= lineScale_1;\r\n      }\r\n    }\r\n\r\n    var needsRebuild = true;\r\n\r\n    if (firstDraw || el.__dirty & Path.SHAPE_CHANGED_BIT || lineDash && !ctxLineDash && hasStroke) {\r\n      path.setDPR(ctx.dpr);\r\n\r\n      if (strokePart) {\r\n        path.setContext(null);\r\n      } else {\r\n        path.setContext(ctx);\r\n        needsRebuild = false;\r\n      }\r\n\r\n      path.reset();\r\n\r\n      if (lineDash && !ctxLineDash) {\r\n        path.setLineDash(lineDash);\r\n        path.setLineDashOffset(lineDashOffset);\r\n      }\r\n\r\n      el.buildPath(path, el.shape, inBatch);\r\n      path.toStatic();\r\n      el.pathUpdated();\r\n    }\r\n\r\n    if (needsRebuild) {\r\n      path.rebuildPath(ctx, strokePart ? strokePercent : 1);\r\n    }\r\n\r\n    if (lineDash && ctxLineDash) {\r\n      ctx.setLineDash(lineDash);\r\n      ctx.lineDashOffset = lineDashOffset;\r\n    }\r\n\r\n    if (!inBatch) {\r\n      if (style.strokeFirst) {\r\n        if (hasStroke) {\r\n          doStrokePath(ctx, style);\r\n        }\r\n\r\n        if (hasFill) {\r\n          doFillPath(ctx, style);\r\n        }\r\n      } else {\r\n        if (hasFill) {\r\n          doFillPath(ctx, style);\r\n        }\r\n\r\n        if (hasStroke) {\r\n          doStrokePath(ctx, style);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (lineDash && ctxLineDash) {\r\n      ctx.setLineDash([]);\r\n    }\r\n  }\r\n\r\n  function brushImage(ctx, el, style) {\r\n    var image = el.__image = createOrUpdateImage(style.image, el.__image, el, el.onload);\r\n\r\n    if (!image || !isImageReady(image)) {\r\n      return;\r\n    }\r\n\r\n    var x = style.x || 0;\r\n    var y = style.y || 0;\r\n    var width = el.getWidth();\r\n    var height = el.getHeight();\r\n    var aspect = image.width / image.height;\r\n\r\n    if (width == null && height != null) {\r\n      width = height * aspect;\r\n    } else if (height == null && width != null) {\r\n      height = width / aspect;\r\n    } else if (width == null && height == null) {\r\n      width = image.width;\r\n      height = image.height;\r\n    }\r\n\r\n    if (style.sWidth && style.sHeight) {\r\n      var sx = style.sx || 0;\r\n      var sy = style.sy || 0;\r\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\r\n    } else if (style.sx && style.sy) {\r\n      var sx = style.sx;\r\n      var sy = style.sy;\r\n      var sWidth = width - sx;\r\n      var sHeight = height - sy;\r\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\r\n    } else {\r\n      ctx.drawImage(image, x, y, width, height);\r\n    }\r\n  }\r\n\r\n  function brushText(ctx, el, style) {\r\n    var text = style.text;\r\n    text != null && (text += '');\r\n\r\n    if (text) {\r\n      ctx.font = style.font || DEFAULT_FONT;\r\n      ctx.textAlign = style.textAlign;\r\n      ctx.textBaseline = style.textBaseline;\r\n      var hasLineDash = void 0;\r\n\r\n      if (ctx.setLineDash) {\r\n        var lineDash = style.lineDash && style.lineWidth > 0 && normalizeLineDash(style.lineDash, style.lineWidth);\r\n        var lineDashOffset = style.lineDashOffset;\r\n\r\n        if (lineDash) {\r\n          var lineScale_2 = style.strokeNoScale && el.getLineScale ? el.getLineScale() : 1;\r\n\r\n          if (lineScale_2 && lineScale_2 !== 1) {\r\n            lineDash = map(lineDash, function (rawVal) {\r\n              return rawVal / lineScale_2;\r\n            });\r\n            lineDashOffset /= lineScale_2;\r\n          }\r\n\r\n          ctx.setLineDash(lineDash);\r\n          ctx.lineDashOffset = lineDashOffset;\r\n          hasLineDash = true;\r\n        }\r\n      }\r\n\r\n      if (style.strokeFirst) {\r\n        if (styleHasStroke(style)) {\r\n          ctx.strokeText(text, style.x, style.y);\r\n        }\r\n\r\n        if (styleHasFill(style)) {\r\n          ctx.fillText(text, style.x, style.y);\r\n        }\r\n      } else {\r\n        if (styleHasFill(style)) {\r\n          ctx.fillText(text, style.x, style.y);\r\n        }\r\n\r\n        if (styleHasStroke(style)) {\r\n          ctx.strokeText(text, style.x, style.y);\r\n        }\r\n      }\r\n\r\n      if (hasLineDash) {\r\n        ctx.setLineDash([]);\r\n      }\r\n    }\r\n  }\r\n\r\n  var SHADOW_NUMBER_PROPS = ['shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\r\n  var STROKE_PROPS = [['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]];\r\n\r\n  function bindCommonProps(ctx, style, prevStyle, forceSetAll, scope) {\r\n    var styleChanged = false;\r\n\r\n    if (!forceSetAll) {\r\n      prevStyle = prevStyle || {};\r\n\r\n      if (style === prevStyle) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (forceSetAll || style.opacity !== prevStyle.opacity) {\r\n      if (!styleChanged) {\r\n        flushPathDrawn(ctx, scope);\r\n        styleChanged = true;\r\n      }\r\n\r\n      ctx.globalAlpha = style.opacity == null ? DEFAULT_COMMON_STYLE.opacity : style.opacity;\r\n    }\r\n\r\n    if (forceSetAll || style.blend !== prevStyle.blend) {\r\n      if (!styleChanged) {\r\n        flushPathDrawn(ctx, scope);\r\n        styleChanged = true;\r\n      }\r\n\r\n      ctx.globalCompositeOperation = style.blend || DEFAULT_COMMON_STYLE.blend;\r\n    }\r\n\r\n    for (var i = 0; i < SHADOW_NUMBER_PROPS.length; i++) {\r\n      var propName = SHADOW_NUMBER_PROPS[i];\r\n\r\n      if (forceSetAll || style[propName] !== prevStyle[propName]) {\r\n        if (!styleChanged) {\r\n          flushPathDrawn(ctx, scope);\r\n          styleChanged = true;\r\n        }\r\n\r\n        ctx[propName] = ctx.dpr * (style[propName] || 0);\r\n      }\r\n    }\r\n\r\n    if (forceSetAll || style.shadowColor !== prevStyle.shadowColor) {\r\n      if (!styleChanged) {\r\n        flushPathDrawn(ctx, scope);\r\n        styleChanged = true;\r\n      }\r\n\r\n      ctx.shadowColor = style.shadowColor || DEFAULT_COMMON_STYLE.shadowColor;\r\n    }\r\n\r\n    return styleChanged;\r\n  }\r\n\r\n  function bindPathAndTextCommonStyle(ctx, el, prevEl, forceSetAll, scope) {\r\n    var style = getStyle(el, scope.inHover);\r\n    var prevStyle = forceSetAll ? null : prevEl && getStyle(prevEl, scope.inHover) || {};\r\n\r\n    if (style === prevStyle) {\r\n      return false;\r\n    }\r\n\r\n    var styleChanged = bindCommonProps(ctx, style, prevStyle, forceSetAll, scope);\r\n\r\n    if (forceSetAll || style.fill !== prevStyle.fill) {\r\n      if (!styleChanged) {\r\n        flushPathDrawn(ctx, scope);\r\n        styleChanged = true;\r\n      }\r\n\r\n      ctx.fillStyle = style.fill;\r\n    }\r\n\r\n    if (forceSetAll || style.stroke !== prevStyle.stroke) {\r\n      if (!styleChanged) {\r\n        flushPathDrawn(ctx, scope);\r\n        styleChanged = true;\r\n      }\r\n\r\n      ctx.strokeStyle = style.stroke;\r\n    }\r\n\r\n    if (forceSetAll || style.opacity !== prevStyle.opacity) {\r\n      if (!styleChanged) {\r\n        flushPathDrawn(ctx, scope);\r\n        styleChanged = true;\r\n      }\r\n\r\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\r\n    }\r\n\r\n    if (el.hasStroke()) {\r\n      var lineWidth = style.lineWidth;\r\n      var newLineWidth = lineWidth / (style.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\r\n\r\n      if (ctx.lineWidth !== newLineWidth) {\r\n        if (!styleChanged) {\r\n          flushPathDrawn(ctx, scope);\r\n          styleChanged = true;\r\n        }\r\n\r\n        ctx.lineWidth = newLineWidth;\r\n      }\r\n    }\r\n\r\n    for (var i = 0; i < STROKE_PROPS.length; i++) {\r\n      var prop = STROKE_PROPS[i];\r\n      var propName = prop[0];\r\n\r\n      if (forceSetAll || style[propName] !== prevStyle[propName]) {\r\n        if (!styleChanged) {\r\n          flushPathDrawn(ctx, scope);\r\n          styleChanged = true;\r\n        }\r\n\r\n        ctx[propName] = style[propName] || prop[1];\r\n      }\r\n    }\r\n\r\n    return styleChanged;\r\n  }\r\n\r\n  function bindImageStyle(ctx, el, prevEl, forceSetAll, scope) {\r\n    return bindCommonProps(ctx, getStyle(el, scope.inHover), prevEl && getStyle(prevEl, scope.inHover), forceSetAll, scope);\r\n  }\r\n\r\n  function setContextTransform(ctx, el) {\r\n    var m = el.transform;\r\n    var dpr = ctx.dpr || 1;\r\n\r\n    if (m) {\r\n      ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\r\n    } else {\r\n      ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\r\n    }\r\n  }\r\n\r\n  function updateClipStatus(clipPaths, ctx, scope) {\r\n    var allClipped = false;\r\n\r\n    for (var i = 0; i < clipPaths.length; i++) {\r\n      var clipPath = clipPaths[i];\r\n      allClipped = allClipped || clipPath.isZeroArea();\r\n      setContextTransform(ctx, clipPath);\r\n      ctx.beginPath();\r\n      clipPath.buildPath(ctx, clipPath.shape);\r\n      ctx.clip();\r\n    }\r\n\r\n    scope.allClipped = allClipped;\r\n  }\r\n\r\n  function isTransformChanged(m0, m1) {\r\n    if (m0 && m1) {\r\n      return m0[0] !== m1[0] || m0[1] !== m1[1] || m0[2] !== m1[2] || m0[3] !== m1[3] || m0[4] !== m1[4] || m0[5] !== m1[5];\r\n    } else if (!m0 && !m1) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  var DRAW_TYPE_PATH = 1;\r\n  var DRAW_TYPE_IMAGE = 2;\r\n  var DRAW_TYPE_TEXT = 3;\r\n  var DRAW_TYPE_INCREMENTAL = 4;\r\n\r\n  function canPathBatch(style) {\r\n    var hasFill = styleHasFill(style);\r\n    var hasStroke = styleHasStroke(style);\r\n    return !(style.lineDash || !(+hasFill ^ +hasStroke) || hasFill && typeof style.fill !== 'string' || hasStroke && typeof style.stroke !== 'string' || style.strokePercent < 1 || style.strokeOpacity < 1 || style.fillOpacity < 1);\r\n  }\r\n\r\n  function flushPathDrawn(ctx, scope) {\r\n    scope.batchFill && ctx.fill();\r\n    scope.batchStroke && ctx.stroke();\r\n    scope.batchFill = '';\r\n    scope.batchStroke = '';\r\n  }\r\n\r\n  function getStyle(el, inHover) {\r\n    return inHover ? el.__hoverStyle || el.style : el.style;\r\n  }\r\n\r\n  function brushSingle(ctx, el) {\r\n    brush(ctx, el, {\r\n      inHover: false,\r\n      viewWidth: 0,\r\n      viewHeight: 0\r\n    }, true);\r\n  }\r\n\r\n  function brush(ctx, el, scope, isLast) {\r\n    var m = el.transform;\r\n\r\n    if (!el.shouldBePainted(scope.viewWidth, scope.viewHeight, false, false)) {\r\n      el.__dirty &= ~Element.REDARAW_BIT;\r\n      el.__isRendered = false;\r\n      return;\r\n    }\r\n\r\n    var clipPaths = el.__clipPaths;\r\n    var prevElClipPaths = scope.prevElClipPaths;\r\n    var forceSetTransform = false;\r\n    var forceSetStyle = false;\r\n\r\n    if (!prevElClipPaths || isClipPathChanged(clipPaths, prevElClipPaths)) {\r\n      if (prevElClipPaths && prevElClipPaths.length) {\r\n        flushPathDrawn(ctx, scope);\r\n        ctx.restore();\r\n        forceSetStyle = forceSetTransform = true;\r\n        scope.prevElClipPaths = null;\r\n        scope.allClipped = false;\r\n        scope.prevEl = null;\r\n      }\r\n\r\n      if (clipPaths && clipPaths.length) {\r\n        flushPathDrawn(ctx, scope);\r\n        ctx.save();\r\n        updateClipStatus(clipPaths, ctx, scope);\r\n        forceSetTransform = true;\r\n      }\r\n\r\n      scope.prevElClipPaths = clipPaths;\r\n    }\r\n\r\n    if (scope.allClipped) {\r\n      el.__isRendered = false;\r\n      return;\r\n    }\r\n\r\n    el.beforeBrush && el.beforeBrush();\r\n    el.innerBeforeBrush();\r\n    var prevEl = scope.prevEl;\r\n\r\n    if (!prevEl) {\r\n      forceSetStyle = forceSetTransform = true;\r\n    }\r\n\r\n    var canBatchPath = el instanceof Path && el.autoBatch && canPathBatch(el.style);\r\n\r\n    if (forceSetTransform || isTransformChanged(m, prevEl.transform)) {\r\n      flushPathDrawn(ctx, scope);\r\n      setContextTransform(ctx, el);\r\n    } else if (!canBatchPath) {\r\n      flushPathDrawn(ctx, scope);\r\n    }\r\n\r\n    var style = getStyle(el, scope.inHover);\r\n\r\n    if (el instanceof Path) {\r\n      if (scope.lastDrawType !== DRAW_TYPE_PATH) {\r\n        forceSetStyle = true;\r\n        scope.lastDrawType = DRAW_TYPE_PATH;\r\n      }\r\n\r\n      bindPathAndTextCommonStyle(ctx, el, prevEl, forceSetStyle, scope);\r\n\r\n      if (!canBatchPath || !scope.batchFill && !scope.batchStroke) {\r\n        ctx.beginPath();\r\n      }\r\n\r\n      brushPath(ctx, el, style, canBatchPath);\r\n\r\n      if (canBatchPath) {\r\n        scope.batchFill = style.fill || '';\r\n        scope.batchStroke = style.stroke || '';\r\n      }\r\n    } else {\r\n      if (el instanceof TSpan) {\r\n        if (scope.lastDrawType !== DRAW_TYPE_TEXT) {\r\n          forceSetStyle = true;\r\n          scope.lastDrawType = DRAW_TYPE_TEXT;\r\n        }\r\n\r\n        bindPathAndTextCommonStyle(ctx, el, prevEl, forceSetStyle, scope);\r\n        brushText(ctx, el, style);\r\n      } else if (el instanceof ZRImage) {\r\n        if (scope.lastDrawType !== DRAW_TYPE_IMAGE) {\r\n          forceSetStyle = true;\r\n          scope.lastDrawType = DRAW_TYPE_IMAGE;\r\n        }\r\n\r\n        bindImageStyle(ctx, el, prevEl, forceSetStyle, scope);\r\n        brushImage(ctx, el, style);\r\n      } else if (el instanceof IncrementalDisplayable) {\r\n        if (scope.lastDrawType !== DRAW_TYPE_INCREMENTAL) {\r\n          forceSetStyle = true;\r\n          scope.lastDrawType = DRAW_TYPE_INCREMENTAL;\r\n        }\r\n\r\n        brushIncremental(ctx, el, scope);\r\n      }\r\n    }\r\n\r\n    if (canBatchPath && isLast) {\r\n      flushPathDrawn(ctx, scope);\r\n    }\r\n\r\n    el.innerAfterBrush();\r\n    el.afterBrush && el.afterBrush();\r\n    scope.prevEl = el;\r\n    el.__dirty = 0;\r\n    el.__isRendered = true;\r\n  }\r\n\r\n  function brushIncremental(ctx, el, scope) {\r\n    var displayables = el.getDisplayables();\r\n    var temporalDisplayables = el.getTemporalDisplayables();\r\n    ctx.save();\r\n    var innerScope = {\r\n      prevElClipPaths: null,\r\n      prevEl: null,\r\n      allClipped: false,\r\n      viewWidth: scope.viewWidth,\r\n      viewHeight: scope.viewHeight,\r\n      inHover: scope.inHover\r\n    };\r\n    var i;\r\n    var len;\r\n\r\n    for (i = el.getCursor(), len = displayables.length; i < len; i++) {\r\n      var displayable = displayables[i];\r\n      displayable.beforeBrush && displayable.beforeBrush();\r\n      displayable.innerBeforeBrush();\r\n      brush(ctx, displayable, innerScope, i === len - 1);\r\n      displayable.innerAfterBrush();\r\n      displayable.afterBrush && displayable.afterBrush();\r\n      innerScope.prevEl = displayable;\r\n    }\r\n\r\n    for (var i_1 = 0, len_1 = temporalDisplayables.length; i_1 < len_1; i_1++) {\r\n      var displayable = temporalDisplayables[i_1];\r\n      displayable.beforeBrush && displayable.beforeBrush();\r\n      displayable.innerBeforeBrush();\r\n      brush(ctx, displayable, innerScope, i_1 === len_1 - 1);\r\n      displayable.innerAfterBrush();\r\n      displayable.afterBrush && displayable.afterBrush();\r\n      innerScope.prevEl = displayable;\r\n    }\r\n\r\n    el.clearTemporalDisplayables();\r\n    el.notClear = true;\r\n    ctx.restore();\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var decalMap = new WeakMap();\r\n  var decalCache = new LRU(100);\r\n  var decalKeys = ['symbol', 'symbolSize', 'symbolKeepAspect', 'color', 'backgroundColor', 'dashArrayX', 'dashArrayY', 'maxTileWidth', 'maxTileHeight'];\r\n  /**\r\n   * Create or update pattern image from decal options\r\n   *\r\n   * @param {InnerDecalObject | 'none'} decalObject decal options, 'none' if no decal\r\n   * @return {Pattern} pattern with generated image, null if no decal\r\n   */\r\n\r\n  function createOrUpdatePatternFromDecal(decalObject, api) {\r\n    if (decalObject === 'none') {\r\n      return null;\r\n    }\r\n\r\n    var dpr = api.getDevicePixelRatio();\r\n    var zr = api.getZr();\r\n    var isSVG = zr.painter.type === 'svg';\r\n\r\n    if (decalObject.dirty) {\r\n      decalMap[\"delete\"](decalObject);\r\n    }\r\n\r\n    var oldPattern = decalMap.get(decalObject);\r\n\r\n    if (oldPattern) {\r\n      return oldPattern;\r\n    }\r\n\r\n    var decalOpt = defaults(decalObject, {\r\n      symbol: 'rect',\r\n      symbolSize: 1,\r\n      symbolKeepAspect: true,\r\n      color: 'rgba(0, 0, 0, 0.2)',\r\n      backgroundColor: null,\r\n      dashArrayX: 5,\r\n      dashArrayY: 5,\r\n      rotation: 0,\r\n      maxTileWidth: 512,\r\n      maxTileHeight: 512\r\n    });\r\n\r\n    if (decalOpt.backgroundColor === 'none') {\r\n      decalOpt.backgroundColor = null;\r\n    }\r\n\r\n    var pattern = {\r\n      repeat: 'repeat'\r\n    };\r\n    setPatternnSource(pattern);\r\n    pattern.rotation = decalOpt.rotation;\r\n    pattern.scaleX = pattern.scaleY = isSVG ? 1 : 1 / dpr;\r\n    decalMap.set(decalObject, pattern);\r\n    decalObject.dirty = false;\r\n    return pattern;\r\n\r\n    function setPatternnSource(pattern) {\r\n      var keys$$1 = [dpr];\r\n      var isValidKey = true;\r\n\r\n      for (var i = 0; i < decalKeys.length; ++i) {\r\n        var value = decalOpt[decalKeys[i]];\r\n        var valueType = typeof value;\r\n\r\n        if (value != null && !isArray(value) && valueType !== 'string' && valueType !== 'number' && valueType !== 'boolean') {\r\n          isValidKey = false;\r\n          break;\r\n        }\r\n\r\n        keys$$1.push(value);\r\n      }\r\n\r\n      var cacheKey;\r\n\r\n      if (isValidKey) {\r\n        cacheKey = keys$$1.join(',') + (isSVG ? '-svg' : '');\r\n        var cache = decalCache.get(cacheKey);\r\n\r\n        if (cache) {\r\n          isSVG ? pattern.svgElement = cache : pattern.image = cache;\r\n        }\r\n      }\r\n\r\n      var dashArrayX = normalizeDashArrayX(decalOpt.dashArrayX);\r\n      var dashArrayY = normalizeDashArrayY(decalOpt.dashArrayY);\r\n      var symbolArray = normalizeSymbolArray(decalOpt.symbol);\r\n      var lineBlockLengthsX = getLineBlockLengthX(dashArrayX);\r\n      var lineBlockLengthY = getLineBlockLengthY(dashArrayY);\r\n      var canvas = !isSVG && createCanvas();\r\n      var svgRoot = isSVG && zr.painter.createSVGElement('g');\r\n      var pSize = getPatternSize();\r\n      var ctx;\r\n\r\n      if (canvas) {\r\n        canvas.width = pSize.width * dpr;\r\n        canvas.height = pSize.height * dpr;\r\n        ctx = canvas.getContext('2d');\r\n      }\r\n\r\n      brushDecal();\r\n\r\n      if (isValidKey) {\r\n        decalCache.put(cacheKey, canvas || svgRoot);\r\n      }\r\n\r\n      pattern.image = canvas;\r\n      pattern.svgElement = svgRoot;\r\n      pattern.svgWidth = pSize.width;\r\n      pattern.svgHeight = pSize.height;\r\n      /**\r\n       * Get minumum length that can make a repeatable pattern.\r\n       *\r\n       * @return {Object} pattern width and height\r\n       */\r\n\r\n      function getPatternSize() {\r\n        /**\r\n         * For example, if dash is [[3, 2], [2, 1]] for X, it looks like\r\n         * |---  ---  ---  ---  --- ...\r\n         * |-- -- -- -- -- -- -- -- ...\r\n         * |---  ---  ---  ---  --- ...\r\n         * |-- -- -- -- -- -- -- -- ...\r\n         * So the minumum length of X is 15,\r\n         * which is the least common multiple of `3 + 2` and `2 + 1`\r\n         * |---  ---  ---  |---  --- ...\r\n         * |-- -- -- -- -- |-- -- -- ...\r\n         */\r\n        var width = 1;\r\n\r\n        for (var i = 0, xlen = lineBlockLengthsX.length; i < xlen; ++i) {\r\n          width = getLeastCommonMultiple(width, lineBlockLengthsX[i]);\r\n        }\r\n\r\n        var symbolRepeats = 1;\r\n\r\n        for (var i = 0, xlen = symbolArray.length; i < xlen; ++i) {\r\n          symbolRepeats = getLeastCommonMultiple(symbolRepeats, symbolArray[i].length);\r\n        }\r\n\r\n        width *= symbolRepeats;\r\n        var height = lineBlockLengthY * lineBlockLengthsX.length * symbolArray.length;\r\n        {\r\n          var warn = function (attrName) {\r\n            /* eslint-disable-next-line */\r\n            console.warn(\"Calculated decal size is greater than \" + attrName + \" due to decal option settings so \" + attrName + \" is used for the decal size. Please consider changing the decal option to make a smaller decal or set \" + attrName + \" to be larger to avoid incontinuity.\");\r\n          };\r\n\r\n          if (width > decalOpt.maxTileWidth) {\r\n            warn('maxTileWidth');\r\n          }\r\n\r\n          if (height > decalOpt.maxTileHeight) {\r\n            warn('maxTileHeight');\r\n          }\r\n        }\r\n        return {\r\n          width: Math.max(1, Math.min(width, decalOpt.maxTileWidth)),\r\n          height: Math.max(1, Math.min(height, decalOpt.maxTileHeight))\r\n        };\r\n      }\r\n\r\n      function brushDecal() {\r\n        if (ctx) {\r\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n          if (decalOpt.backgroundColor) {\r\n            ctx.fillStyle = decalOpt.backgroundColor;\r\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n          }\r\n        }\r\n\r\n        var ySum = 0;\r\n\r\n        for (var i = 0; i < dashArrayY.length; ++i) {\r\n          ySum += dashArrayY[i];\r\n        }\r\n\r\n        if (ySum <= 0) {\r\n          // dashArrayY is 0, draw nothing\r\n          return;\r\n        }\r\n\r\n        var y = -lineBlockLengthY;\r\n        var yId = 0;\r\n        var yIdTotal = 0;\r\n        var xId0 = 0;\r\n\r\n        while (y < pSize.height) {\r\n          if (yId % 2 === 0) {\r\n            var symbolYId = yIdTotal / 2 % symbolArray.length;\r\n            var x = 0;\r\n            var xId1 = 0;\r\n            var xId1Total = 0;\r\n\r\n            while (x < pSize.width * 2) {\r\n              var xSum = 0;\r\n\r\n              for (var i = 0; i < dashArrayX[xId0].length; ++i) {\r\n                xSum += dashArrayX[xId0][i];\r\n              }\r\n\r\n              if (xSum <= 0) {\r\n                // Skip empty line\r\n                break;\r\n              } // E.g., [15, 5, 20, 5] draws only for 15 and 20\r\n\r\n\r\n              if (xId1 % 2 === 0) {\r\n                var size = (1 - decalOpt.symbolSize) * 0.5;\r\n                var left = x + dashArrayX[xId0][xId1] * size;\r\n                var top_1 = y + dashArrayY[yId] * size;\r\n                var width = dashArrayX[xId0][xId1] * decalOpt.symbolSize;\r\n                var height = dashArrayY[yId] * decalOpt.symbolSize;\r\n                var symbolXId = xId1Total / 2 % symbolArray[symbolYId].length;\r\n                brushSymbol(left, top_1, width, height, symbolArray[symbolYId][symbolXId]);\r\n              }\r\n\r\n              x += dashArrayX[xId0][xId1];\r\n              ++xId1Total;\r\n              ++xId1;\r\n\r\n              if (xId1 === dashArrayX[xId0].length) {\r\n                xId1 = 0;\r\n              }\r\n            }\r\n\r\n            ++xId0;\r\n\r\n            if (xId0 === dashArrayX.length) {\r\n              xId0 = 0;\r\n            }\r\n          }\r\n\r\n          y += dashArrayY[yId];\r\n          ++yIdTotal;\r\n          ++yId;\r\n\r\n          if (yId === dashArrayY.length) {\r\n            yId = 0;\r\n          }\r\n        }\r\n\r\n        function brushSymbol(x, y, width, height, symbolType) {\r\n          var scale = isSVG ? 1 : dpr;\r\n          var symbol = createSymbol(symbolType, x * scale, y * scale, width * scale, height * scale, decalOpt.color, decalOpt.symbolKeepAspect);\r\n\r\n          if (isSVG) {\r\n            svgRoot.appendChild(zr.painter.paintOne(symbol));\r\n          } else {\r\n            // Paint to canvas for all other renderers.\r\n            brushSingle(ctx, symbol);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Convert symbol array into normalized array\r\n   *\r\n   * @param {string | (string | string[])[]} symbol symbol input\r\n   * @return {string[][]} normolized symbol array\r\n   */\r\n\r\n\r\n  function normalizeSymbolArray(symbol) {\r\n    if (!symbol || symbol.length === 0) {\r\n      return [['rect']];\r\n    }\r\n\r\n    if (typeof symbol === 'string') {\r\n      return [[symbol]];\r\n    }\r\n\r\n    var isAllString = true;\r\n\r\n    for (var i = 0; i < symbol.length; ++i) {\r\n      if (typeof symbol[i] !== 'string') {\r\n        isAllString = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (isAllString) {\r\n      return normalizeSymbolArray([symbol]);\r\n    }\r\n\r\n    var result = [];\r\n\r\n    for (var i = 0; i < symbol.length; ++i) {\r\n      if (typeof symbol[i] === 'string') {\r\n        result.push([symbol[i]]);\r\n      } else {\r\n        result.push(symbol[i]);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n  /**\r\n   * Convert dash input into dashArray\r\n   *\r\n   * @param {DecalDashArrayX} dash dash input\r\n   * @return {number[][]} normolized dash array\r\n   */\r\n\r\n\r\n  function normalizeDashArrayX(dash) {\r\n    if (!dash || dash.length === 0) {\r\n      return [[0, 0]];\r\n    }\r\n\r\n    if (typeof dash === 'number') {\r\n      var dashValue = Math.ceil(dash);\r\n      return [[dashValue, dashValue]];\r\n    }\r\n    /**\r\n     * [20, 5] should be normalized into [[20, 5]],\r\n     * while [20, [5, 10]] should be normalized into [[20, 20], [5, 10]]\r\n     */\r\n\r\n\r\n    var isAllNumber = true;\r\n\r\n    for (var i = 0; i < dash.length; ++i) {\r\n      if (typeof dash[i] !== 'number') {\r\n        isAllNumber = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (isAllNumber) {\r\n      return normalizeDashArrayX([dash]);\r\n    }\r\n\r\n    var result = [];\r\n\r\n    for (var i = 0; i < dash.length; ++i) {\r\n      if (typeof dash[i] === 'number') {\r\n        var dashValue = Math.ceil(dash[i]);\r\n        result.push([dashValue, dashValue]);\r\n      } else {\r\n        var dashValue = map(dash[i], function (n) {\r\n          return Math.ceil(n);\r\n        });\r\n\r\n        if (dashValue.length % 2 === 1) {\r\n          // [4, 2, 1] means |----  -    -- |----  -    -- |\r\n          // so normalize it to be [4, 2, 1, 4, 2, 1]\r\n          result.push(dashValue.concat(dashValue));\r\n        } else {\r\n          result.push(dashValue);\r\n        }\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n  /**\r\n   * Convert dash input into dashArray\r\n   *\r\n   * @param {DecalDashArrayY} dash dash input\r\n   * @return {number[]} normolized dash array\r\n   */\r\n\r\n\r\n  function normalizeDashArrayY(dash) {\r\n    if (!dash || typeof dash === 'object' && dash.length === 0) {\r\n      return [0, 0];\r\n    }\r\n\r\n    if (typeof dash === 'number') {\r\n      var dashValue_1 = Math.ceil(dash);\r\n      return [dashValue_1, dashValue_1];\r\n    }\r\n\r\n    var dashValue = map(dash, function (n) {\r\n      return Math.ceil(n);\r\n    });\r\n    return dash.length % 2 ? dashValue.concat(dashValue) : dashValue;\r\n  }\r\n  /**\r\n   * Get block length of each line. A block is the length of dash line and space.\r\n   * For example, a line with [4, 1] has a dash line of 4 and a space of 1 after\r\n   * that, so the block length of this line is 5.\r\n   *\r\n   * @param {number[][]} dash dash arrary of X or Y\r\n   * @return {number[]} block length of each line\r\n   */\r\n\r\n\r\n  function getLineBlockLengthX(dash) {\r\n    return map(dash, function (line) {\r\n      return getLineBlockLengthY(line);\r\n    });\r\n  }\r\n\r\n  function getLineBlockLengthY(dash) {\r\n    var blockLength = 0;\r\n\r\n    for (var i = 0; i < dash.length; ++i) {\r\n      blockLength += dash[i];\r\n    }\r\n\r\n    if (dash.length % 2 === 1) {\r\n      // [4, 2, 1] means |----  -    -- |----  -    -- |\r\n      // So total length is (4 + 2 + 1) * 2\r\n      return blockLength * 2;\r\n    }\r\n\r\n    return blockLength;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function decalVisual(ecModel, api) {\r\n    ecModel.eachRawSeries(function (seriesModel) {\r\n      if (ecModel.isSeriesFiltered(seriesModel)) {\r\n        return;\r\n      }\r\n\r\n      var data = seriesModel.getData();\r\n\r\n      if (data.hasItemVisual()) {\r\n        data.each(function (idx) {\r\n          var decal = data.getItemVisual(idx, 'decal');\r\n\r\n          if (decal) {\r\n            var itemStyle = data.ensureUniqueItemVisual(idx, 'style');\r\n            itemStyle.decal = createOrUpdatePatternFromDecal(decal, api);\r\n          }\r\n        });\r\n      }\r\n\r\n      var decal = data.getVisual('decal');\r\n\r\n      if (decal) {\r\n        var style = data.getVisual('style');\r\n        style.decal = createOrUpdatePatternFromDecal(decal, api);\r\n      }\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var assert = assert$1;\r\n  var each = each$1;\r\n  var isFunction = isFunction$1;\r\n  var isObject = isObject$1;\r\n  var indexOf = indexOf$1;\r\n  var hasWindow = typeof window !== 'undefined';\r\n  var version = '5.0.2';\r\n  var dependencies = {\r\n    zrender: '5.0.4'\r\n  };\r\n  var TEST_FRAME_REMAIN_TIME = 1;\r\n  var PRIORITY_PROCESSOR_SERIES_FILTER = 800; // Some data processors depends on the stack result dimension (to calculate data extent).\r\n  // So data stack stage should be in front of data processing stage.\r\n\r\n  var PRIORITY_PROCESSOR_DATASTACK = 900; // \"Data filter\" will block the stream, so it should be\r\n  // put at the begining of data processing.\r\n\r\n  var PRIORITY_PROCESSOR_FILTER = 1000;\r\n  var PRIORITY_PROCESSOR_DEFAULT = 2000;\r\n  var PRIORITY_PROCESSOR_STATISTIC = 5000;\r\n  var PRIORITY_VISUAL_LAYOUT = 1000;\r\n  var PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\r\n  var PRIORITY_VISUAL_GLOBAL = 2000;\r\n  var PRIORITY_VISUAL_CHART = 3000;\r\n  var PRIORITY_VISUAL_COMPONENT = 4000; // Visual property in data. Greater than `PRIORITY_VISUAL_COMPONENT` to enable to\r\n  // overwrite the viusal result of component (like `visualMap`)\r\n  // using data item specific setting (like itemStyle.xxx on data item)\r\n\r\n  var PRIORITY_VISUAL_CHART_DATA_CUSTOM = 4500; // Greater than `PRIORITY_VISUAL_CHART_DATA_CUSTOM` to enable to layout based on\r\n  // visual result like `symbolSize`.\r\n\r\n  var PRIORITY_VISUAL_POST_CHART_LAYOUT = 4600;\r\n  var PRIORITY_VISUAL_BRUSH = 5000;\r\n  var PRIORITY_VISUAL_ARIA = 6000;\r\n  var PRIORITY_VISUAL_DECAL = 7000;\r\n  var PRIORITY = {\r\n    PROCESSOR: {\r\n      FILTER: PRIORITY_PROCESSOR_FILTER,\r\n      SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\r\n      STATISTIC: PRIORITY_PROCESSOR_STATISTIC\r\n    },\r\n    VISUAL: {\r\n      LAYOUT: PRIORITY_VISUAL_LAYOUT,\r\n      PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\r\n      GLOBAL: PRIORITY_VISUAL_GLOBAL,\r\n      CHART: PRIORITY_VISUAL_CHART,\r\n      POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\r\n      COMPONENT: PRIORITY_VISUAL_COMPONENT,\r\n      BRUSH: PRIORITY_VISUAL_BRUSH,\r\n      CHART_ITEM: PRIORITY_VISUAL_CHART_DATA_CUSTOM,\r\n      ARIA: PRIORITY_VISUAL_ARIA,\r\n      DECAL: PRIORITY_VISUAL_DECAL\r\n    }\r\n  }; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\r\n  // where they must not be invoked nestedly, except the only case: invoke\r\n  // dispatchAction with updateMethod \"none\" in main process.\r\n  // This flag is used to carry out this rule.\r\n  // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\r\n\r\n  var IN_MAIN_PROCESS_KEY = '__flagInMainProcess';\r\n  var OPTION_UPDATED_KEY = '__optionUpdated';\r\n  var STATUS_NEEDS_UPDATE_KEY = '__needsUpdateStatus';\r\n  var ACTION_REG = /^[a-zA-Z0-9_]+$/;\r\n  var CONNECT_STATUS_KEY = '__connectUpdateStatus';\r\n  var CONNECT_STATUS_PENDING = 0;\r\n  var CONNECT_STATUS_UPDATING = 1;\r\n  var CONNECT_STATUS_UPDATED = 2;\r\n\r\n  function createRegisterEventWithLowercaseECharts(method) {\r\n    return function () {\r\n      var args = [];\r\n\r\n      for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n      }\r\n\r\n      if (this.isDisposed()) {\r\n        disposedWarning(this.id);\r\n        return;\r\n      }\r\n\r\n      return toLowercaseNameAndCallEventful(this, method, args);\r\n    };\r\n  }\r\n\r\n  function createRegisterEventWithLowercaseMessageCenter(method) {\r\n    return function () {\r\n      var args = [];\r\n\r\n      for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n      }\r\n\r\n      return toLowercaseNameAndCallEventful(this, method, args);\r\n    };\r\n  }\r\n\r\n  function toLowercaseNameAndCallEventful(host, method, args) {\r\n    // `args[0]` is event name. Event name is all lowercase.\r\n    args[0] = args[0] && args[0].toLowerCase();\r\n    return Eventful.prototype[method].apply(host, args);\r\n  }\r\n\r\n  var MessageCenter =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(MessageCenter, _super);\r\n\r\n    function MessageCenter() {\r\n      return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n\r\n    return MessageCenter;\r\n  }(Eventful);\r\n\r\n  var messageCenterProto = MessageCenter.prototype;\r\n  messageCenterProto.on = createRegisterEventWithLowercaseMessageCenter('on');\r\n  messageCenterProto.off = createRegisterEventWithLowercaseMessageCenter('off'); // ---------------------------------------\r\n  // Internal method names for class ECharts\r\n  // ---------------------------------------\r\n\r\n  var prepare;\r\n  var prepareView;\r\n  var updateDirectly;\r\n  var updateMethods;\r\n  var doConvertPixel;\r\n  var updateStreamModes;\r\n  var doDispatchAction;\r\n  var flushPendingActions;\r\n  var triggerUpdatedEvent;\r\n  var bindRenderedEvent;\r\n  var bindMouseEvent;\r\n  var clearColorPalette;\r\n  var render;\r\n  var renderComponents;\r\n  var renderSeries;\r\n  var performPostUpdateFuncs;\r\n  var createExtensionAPI;\r\n  var enableConnect;\r\n  var setTransitionOpt;\r\n  var markStatusToUpdate;\r\n  var applyChangedStates;\r\n\r\n  var ECharts =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(ECharts, _super);\r\n\r\n    function ECharts(dom, // Theme name or themeOption.\r\n    theme$$1, opts) {\r\n      var _this = _super.call(this, new ECEventProcessor()) || this;\r\n\r\n      _this._chartsViews = [];\r\n      _this._chartsMap = {};\r\n      _this._componentsViews = [];\r\n      _this._componentsMap = {}; // Can't dispatch action during rendering procedure\r\n\r\n      _this._pendingActions = [];\r\n      opts = opts || {}; // Get theme by name\r\n\r\n      if (typeof theme$$1 === 'string') {\r\n        theme$$1 = themeStorage[theme$$1];\r\n      }\r\n\r\n      _this._dom = dom;\r\n      var defaultRenderer = 'canvas';\r\n      var defaultUseDirtyRect = false;\r\n      {\r\n        var root =\r\n        /* eslint-disable-next-line */\r\n        hasWindow ? window : __webpack_require__.g;\r\n        defaultRenderer = root.__ECHARTS__DEFAULT__RENDERER__ || defaultRenderer;\r\n        var devUseDirtyRect = root.__ECHARTS__DEFAULT__USE_DIRTY_RECT__;\r\n        defaultUseDirtyRect = devUseDirtyRect == null ? defaultUseDirtyRect : devUseDirtyRect;\r\n      }\r\n      var zr = _this._zr = init$1(dom, {\r\n        renderer: opts.renderer || defaultRenderer,\r\n        devicePixelRatio: opts.devicePixelRatio,\r\n        width: opts.width,\r\n        height: opts.height,\r\n        useDirtyRect: opts.useDirtyRect == null ? defaultUseDirtyRect : opts.useDirtyRect\r\n      }); // Expect 60 fps.\r\n\r\n      _this._throttledZrFlush = throttle(bind(zr.flush, zr), 17);\r\n      theme$$1 = clone(theme$$1);\r\n      theme$$1 && globalBackwardCompat(theme$$1, true);\r\n      _this._theme = theme$$1;\r\n      _this._locale = createLocaleObject(opts.locale || SYSTEM_LANG);\r\n      _this._coordSysMgr = new CoordinateSystemManager();\r\n      var api = _this._api = createExtensionAPI(_this); // Sort on demand\r\n\r\n      function prioritySortFunc(a, b) {\r\n        return a.__prio - b.__prio;\r\n      }\r\n\r\n      sort(visualFuncs, prioritySortFunc);\r\n      sort(dataProcessorFuncs, prioritySortFunc);\r\n      _this._scheduler = new Scheduler(_this, api, dataProcessorFuncs, visualFuncs);\r\n      _this._messageCenter = new MessageCenter();\r\n      _this._labelManager = new LabelManager(); // Init mouse events\r\n\r\n      _this._initEvents(); // In case some people write `window.onresize = chart.resize`\r\n\r\n\r\n      _this.resize = bind(_this.resize, _this);\r\n      zr.animation.on('frame', _this._onframe, _this);\r\n      bindRenderedEvent(zr, _this);\r\n      bindMouseEvent(zr, _this); // ECharts instance can be used as value.\r\n\r\n      setAsPrimitive(_this);\r\n      return _this;\r\n    }\r\n\r\n    ECharts.prototype._onframe = function () {\r\n      if (this._disposed) {\r\n        return;\r\n      }\r\n\r\n      applyChangedStates(this);\r\n      var scheduler = this._scheduler; // Lazy update\r\n\r\n      if (this[OPTION_UPDATED_KEY]) {\r\n        var silent = this[OPTION_UPDATED_KEY].silent;\r\n        this[IN_MAIN_PROCESS_KEY] = true;\r\n        prepare(this);\r\n        updateMethods.update.call(this); // At present, in each frame, zrender performs:\r\n        //   (1) animation step forward.\r\n        //   (2) trigger('frame') (where this `_onframe` is called)\r\n        //   (3) zrender flush (render).\r\n        // If we do nothing here, since we use `setToFinal: true`, the step (3) above\r\n        // will render the final state of the elements before the real animation started.\r\n\r\n        this._zr.flush();\r\n\r\n        this[IN_MAIN_PROCESS_KEY] = false;\r\n        this[OPTION_UPDATED_KEY] = false;\r\n        flushPendingActions.call(this, silent);\r\n        triggerUpdatedEvent.call(this, silent);\r\n      } // Avoid do both lazy update and progress in one frame.\r\n      else if (scheduler.unfinished) {\r\n          // Stream progress.\r\n          var remainTime = TEST_FRAME_REMAIN_TIME;\r\n          var ecModel = this._model;\r\n          var api = this._api;\r\n          scheduler.unfinished = false;\r\n\r\n          do {\r\n            var startTime = +new Date();\r\n            scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\r\n\r\n            scheduler.performDataProcessorTasks(ecModel);\r\n            updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\r\n            // each frame is not a good user experience. So we follow the rule that\r\n            // the extent of the coordinate system is determin in the first frame (the\r\n            // frame is executed immedietely after task reset.\r\n            // this._coordSysMgr.update(ecModel, api);\r\n            // console.log('--- ec frame visual ---', remainTime);\r\n\r\n            scheduler.performVisualTasks(ecModel);\r\n            renderSeries(this, this._model, api, 'remain');\r\n            remainTime -= +new Date() - startTime;\r\n          } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\r\n\r\n\r\n          if (!scheduler.unfinished) {\r\n            this._zr.flush();\r\n          } // Else, zr flushing be ensue within the same frame,\r\n          // because zr flushing is after onframe event.\r\n\r\n        }\r\n    };\r\n\r\n    ECharts.prototype.getDom = function () {\r\n      return this._dom;\r\n    };\r\n\r\n    ECharts.prototype.getId = function () {\r\n      return this.id;\r\n    };\r\n\r\n    ECharts.prototype.getZr = function () {\r\n      return this._zr;\r\n    };\r\n    /* eslint-disable-next-line */\r\n\r\n\r\n    ECharts.prototype.setOption = function (option, notMerge, lazyUpdate) {\r\n      {\r\n        assert(!this[IN_MAIN_PROCESS_KEY], '`setOption` should not be called during main process.');\r\n      }\r\n\r\n      if (this._disposed) {\r\n        disposedWarning(this.id);\r\n        return;\r\n      }\r\n\r\n      var silent;\r\n      var replaceMerge;\r\n      var transitionOpt;\r\n\r\n      if (isObject(notMerge)) {\r\n        lazyUpdate = notMerge.lazyUpdate;\r\n        silent = notMerge.silent;\r\n        replaceMerge = notMerge.replaceMerge;\r\n        transitionOpt = notMerge.transition;\r\n        notMerge = notMerge.notMerge;\r\n      }\r\n\r\n      this[IN_MAIN_PROCESS_KEY] = true;\r\n\r\n      if (!this._model || notMerge) {\r\n        var optionManager = new OptionManager(this._api);\r\n        var theme$$1 = this._theme;\r\n        var ecModel = this._model = new GlobalModel();\r\n        ecModel.scheduler = this._scheduler;\r\n        ecModel.init(null, null, null, theme$$1, this._locale, optionManager);\r\n      }\r\n\r\n      this._model.setOption(option, {\r\n        replaceMerge: replaceMerge\r\n      }, optionPreprocessorFuncs);\r\n\r\n      setTransitionOpt(this, transitionOpt);\r\n\r\n      if (lazyUpdate) {\r\n        this[OPTION_UPDATED_KEY] = {\r\n          silent: silent\r\n        };\r\n        this[IN_MAIN_PROCESS_KEY] = false; // `setOption(option, {lazyMode: true})` may be called when zrender has been slept.\r\n        // It should wake it up to make sure zrender start to render at the next frame.\r\n\r\n        this.getZr().wakeUp();\r\n      } else {\r\n        prepare(this);\r\n        updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\r\n        // fetched after `setOption`.\r\n\r\n        this._zr.flush();\r\n\r\n        this[OPTION_UPDATED_KEY] = false;\r\n        this[IN_MAIN_PROCESS_KEY] = false;\r\n        flushPendingActions.call(this, silent);\r\n        triggerUpdatedEvent.call(this, silent);\r\n      }\r\n    };\r\n    /**\r\n     * @DEPRECATED\r\n     */\r\n\r\n\r\n    ECharts.prototype.setTheme = function () {\r\n      console.error('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\r\n    }; // We don't want developers to use getModel directly.\r\n\r\n\r\n    ECharts.prototype.getModel = function () {\r\n      return this._model;\r\n    };\r\n\r\n    ECharts.prototype.getOption = function () {\r\n      return this._model && this._model.getOption();\r\n    };\r\n\r\n    ECharts.prototype.getWidth = function () {\r\n      return this._zr.getWidth();\r\n    };\r\n\r\n    ECharts.prototype.getHeight = function () {\r\n      return this._zr.getHeight();\r\n    };\r\n\r\n    ECharts.prototype.getDevicePixelRatio = function () {\r\n      return this._zr.painter.dpr\r\n      /* eslint-disable-next-line */\r\n      || hasWindow && window.devicePixelRatio || 1;\r\n    };\r\n    /**\r\n     * Get canvas which has all thing rendered\r\n     */\r\n\r\n\r\n    ECharts.prototype.getRenderedCanvas = function (opts) {\r\n      if (!env.canvasSupported) {\r\n        return;\r\n      }\r\n\r\n      opts = extend({}, opts || {});\r\n      opts.pixelRatio = opts.pixelRatio || this.getDevicePixelRatio();\r\n      opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\r\n      var zr = this._zr; // let list = zr.storage.getDisplayList();\r\n      // Stop animations\r\n      // Never works before in init animation, so remove it.\r\n      // zrUtil.each(list, function (el) {\r\n      //     el.stopAnimation(true);\r\n      // });\r\n\r\n      return zr.painter.getRenderedCanvas(opts);\r\n    };\r\n    /**\r\n     * Get svg data url\r\n     */\r\n\r\n\r\n    ECharts.prototype.getSvgDataURL = function () {\r\n      if (!env.svgSupported) {\r\n        return;\r\n      }\r\n\r\n      var zr = this._zr;\r\n      var list = zr.storage.getDisplayList(); // Stop animations\r\n\r\n      each$1(list, function (el) {\r\n        el.stopAnimation(null, true);\r\n      });\r\n      return zr.painter.toDataURL();\r\n    };\r\n\r\n    ECharts.prototype.getDataURL = function (opts) {\r\n      if (this._disposed) {\r\n        disposedWarning(this.id);\r\n        return;\r\n      }\r\n\r\n      opts = opts || {};\r\n      var excludeComponents = opts.excludeComponents;\r\n      var ecModel = this._model;\r\n      var excludesComponentViews = [];\r\n      var self = this;\r\n      each(excludeComponents, function (componentType) {\r\n        ecModel.eachComponent({\r\n          mainType: componentType\r\n        }, function (component) {\r\n          var view = self._componentsMap[component.__viewId];\r\n\r\n          if (!view.group.ignore) {\r\n            excludesComponentViews.push(view);\r\n            view.group.ignore = true;\r\n          }\r\n        });\r\n      });\r\n      var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\r\n      each(excludesComponentViews, function (view) {\r\n        view.group.ignore = false;\r\n      });\r\n      return url;\r\n    };\r\n\r\n    ECharts.prototype.getConnectedDataURL = function (opts) {\r\n      if (this._disposed) {\r\n        disposedWarning(this.id);\r\n        return;\r\n      }\r\n\r\n      if (!env.canvasSupported) {\r\n        return;\r\n      }\r\n\r\n      var isSvg = opts.type === 'svg';\r\n      var groupId = this.group;\r\n      var mathMin = Math.min;\r\n      var mathMax = Math.max;\r\n      var MAX_NUMBER = Infinity;\r\n\r\n      if (connectedGroups[groupId]) {\r\n        var left_1 = MAX_NUMBER;\r\n        var top_1 = MAX_NUMBER;\r\n        var right_1 = -MAX_NUMBER;\r\n        var bottom_1 = -MAX_NUMBER;\r\n        var canvasList_1 = [];\r\n        var dpr_1 = opts && opts.pixelRatio || this.getDevicePixelRatio();\r\n        each$1(instances, function (chart, id) {\r\n          if (chart.group === groupId) {\r\n            var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.getRenderedCanvas(clone(opts));\r\n            var boundingRect = chart.getDom().getBoundingClientRect();\r\n            left_1 = mathMin(boundingRect.left, left_1);\r\n            top_1 = mathMin(boundingRect.top, top_1);\r\n            right_1 = mathMax(boundingRect.right, right_1);\r\n            bottom_1 = mathMax(boundingRect.bottom, bottom_1);\r\n            canvasList_1.push({\r\n              dom: canvas,\r\n              left: boundingRect.left,\r\n              top: boundingRect.top\r\n            });\r\n          }\r\n        });\r\n        left_1 *= dpr_1;\r\n        top_1 *= dpr_1;\r\n        right_1 *= dpr_1;\r\n        bottom_1 *= dpr_1;\r\n        var width = right_1 - left_1;\r\n        var height = bottom_1 - top_1;\r\n        var targetCanvas = createCanvas();\r\n        var zr_1 = init$1(targetCanvas, {\r\n          renderer: isSvg ? 'svg' : 'canvas'\r\n        });\r\n        zr_1.resize({\r\n          width: width,\r\n          height: height\r\n        });\r\n\r\n        if (isSvg) {\r\n          var content_1 = '';\r\n          each(canvasList_1, function (item) {\r\n            var x = item.left - left_1;\r\n            var y = item.top - top_1;\r\n            content_1 += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\r\n          });\r\n          zr_1.painter.getSvgRoot().innerHTML = content_1;\r\n\r\n          if (opts.connectedBackgroundColor) {\r\n            zr_1.painter.setBackgroundColor(opts.connectedBackgroundColor);\r\n          }\r\n\r\n          zr_1.refreshImmediately();\r\n          return zr_1.painter.toDataURL();\r\n        } else {\r\n          // Background between the charts\r\n          if (opts.connectedBackgroundColor) {\r\n            zr_1.add(new Rect({\r\n              shape: {\r\n                x: 0,\r\n                y: 0,\r\n                width: width,\r\n                height: height\r\n              },\r\n              style: {\r\n                fill: opts.connectedBackgroundColor\r\n              }\r\n            }));\r\n          }\r\n\r\n          each(canvasList_1, function (item) {\r\n            var img = new ZRImage({\r\n              style: {\r\n                x: item.left * dpr_1 - left_1,\r\n                y: item.top * dpr_1 - top_1,\r\n                image: item.dom\r\n              }\r\n            });\r\n            zr_1.add(img);\r\n          });\r\n          zr_1.refreshImmediately();\r\n          return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\r\n        }\r\n      } else {\r\n        return this.getDataURL(opts);\r\n      }\r\n    };\r\n\r\n    ECharts.prototype.convertToPixel = function (finder, value) {\r\n      return doConvertPixel(this, 'convertToPixel', finder, value);\r\n    };\r\n\r\n    ECharts.prototype.convertFromPixel = function (finder, value) {\r\n      return doConvertPixel(this, 'convertFromPixel', finder, value);\r\n    };\r\n    /**\r\n     * Is the specified coordinate systems or components contain the given pixel point.\r\n     * @param {Array|number} value\r\n     * @return {boolean} result\r\n     */\r\n\r\n\r\n    ECharts.prototype.containPixel = function (finder, value) {\r\n      if (this._disposed) {\r\n        disposedWarning(this.id);\r\n        return;\r\n      }\r\n\r\n      var ecModel = this._model;\r\n      var result;\r\n      var findResult = parseFinder(ecModel, finder);\r\n      each$1(findResult, function (models, key) {\r\n        key.indexOf('Models') >= 0 && each$1(models, function (model) {\r\n          var coordSys = model.coordinateSystem;\r\n\r\n          if (coordSys && coordSys.containPoint) {\r\n            result = result || !!coordSys.containPoint(value);\r\n          } else if (key === 'seriesModels') {\r\n            var view = this._chartsMap[model.__viewId];\r\n\r\n            if (view && view.containPoint) {\r\n              result = result || view.containPoint(value, model);\r\n            } else {\r\n              {\r\n                console.warn(key + ': ' + (view ? 'The found component do not support containPoint.' : 'No view mapping to the found component.'));\r\n              }\r\n            }\r\n          } else {\r\n            {\r\n              console.warn(key + ': containPoint is not supported');\r\n            }\r\n          }\r\n        }, this);\r\n      }, this);\r\n      return !!result;\r\n    };\r\n    /**\r\n     * Get visual from series or data.\r\n     * @param finder\r\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\r\n     *        If Object, could contain some of these properties below:\r\n     *        {\r\n     *            seriesIndex / seriesId / seriesName,\r\n     *            dataIndex / dataIndexInside\r\n     *        }\r\n     *        If dataIndex is not specified, series visual will be fetched,\r\n     *        but not data item visual.\r\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\r\n     *        visual will be fetched from first series.\r\n     * @param visualType 'color', 'symbol', 'symbolSize'\r\n     */\r\n\r\n\r\n    ECharts.prototype.getVisual = function (finder, visualType) {\r\n      var ecModel = this._model;\r\n      var parsedFinder = parseFinder(ecModel, finder, {\r\n        defaultMainType: 'series'\r\n      });\r\n      var seriesModel = parsedFinder.seriesModel;\r\n      {\r\n        if (!seriesModel) {\r\n          console.warn('There is no specified seires model');\r\n        }\r\n      }\r\n      var data = seriesModel.getData();\r\n      var dataIndexInside = parsedFinder.hasOwnProperty('dataIndexInside') ? parsedFinder.dataIndexInside : parsedFinder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(parsedFinder.dataIndex) : null;\r\n      return dataIndexInside != null ? getItemVisualFromData(data, dataIndexInside, visualType) : getVisualFromData(data, visualType);\r\n    };\r\n    /**\r\n     * Get view of corresponding component model\r\n     */\r\n\r\n\r\n    ECharts.prototype.getViewOfComponentModel = function (componentModel) {\r\n      return this._componentsMap[componentModel.__viewId];\r\n    };\r\n    /**\r\n     * Get view of corresponding series model\r\n     */\r\n\r\n\r\n    ECharts.prototype.getViewOfSeriesModel = function (seriesModel) {\r\n      return this._chartsMap[seriesModel.__viewId];\r\n    };\r\n\r\n    ECharts.prototype._initEvents = function () {\r\n      var _this = this;\r\n\r\n      each(MOUSE_EVENT_NAMES, function (eveName) {\r\n        var handler = function (e) {\r\n          var ecModel = _this.getModel();\r\n\r\n          var el = e.target;\r\n          var params;\r\n          var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\r\n\r\n          if (isGlobalOut) {\r\n            params = {};\r\n          } else {\r\n            el && findEventDispatcher(el, function (parent) {\r\n              var ecData = getECData(parent);\r\n\r\n              if (ecData && ecData.dataIndex != null) {\r\n                var dataModel = ecData.dataModel || ecModel.getSeriesByIndex(ecData.seriesIndex);\r\n                params = dataModel && dataModel.getDataParams(ecData.dataIndex, ecData.dataType) || {};\r\n                return true;\r\n              } // If element has custom eventData of components\r\n              else if (ecData.eventData) {\r\n                  params = extend({}, ecData.eventData);\r\n                  return true;\r\n                }\r\n            }, true);\r\n          } // Contract: if params prepared in mouse event,\r\n          // these properties must be specified:\r\n          // {\r\n          //    componentType: string (component main type)\r\n          //    componentIndex: number\r\n          // }\r\n          // Otherwise event query can not work.\r\n\r\n\r\n          if (params) {\r\n            var componentType = params.componentType;\r\n            var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\r\n            // markLine/markPoint/markArea, the componentType is\r\n            // 'markLine'/'markPoint'/'markArea', but we should better\r\n            // enable them to be queried by seriesIndex, since their\r\n            // option is set in each series.\r\n\r\n            if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\r\n              componentType = 'series';\r\n              componentIndex = params.seriesIndex;\r\n            }\r\n\r\n            var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\r\n            var view = model && _this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\r\n            {\r\n              // `event.componentType` and `event[componentTpype + 'Index']` must not\r\n              // be missed, otherwise there is no way to distinguish source component.\r\n              // See `dataFormat.getDataParams`.\r\n              if (!isGlobalOut && !(model && view)) {\r\n                console.warn('model or view can not be found by params');\r\n              }\r\n            }\r\n            params.event = e;\r\n            params.type = eveName;\r\n            _this._$eventProcessor.eventInfo = {\r\n              targetEl: el,\r\n              packedEvent: params,\r\n              model: model,\r\n              view: view\r\n            };\r\n\r\n            _this.trigger(eveName, params);\r\n          }\r\n        }; // Consider that some component (like tooltip, brush, ...)\r\n        // register zr event handler, but user event handler might\r\n        // do anything, such as call `setOption` or `dispatchAction`,\r\n        // which probably update any of the content and probably\r\n        // cause problem if it is called previous other inner handlers.\r\n\r\n\r\n        handler.zrEventfulCallAtLast = true;\r\n\r\n        _this._zr.on(eveName, handler, _this);\r\n      });\r\n      each(eventActionMap, function (actionType, eventType) {\r\n        _this._messageCenter.on(eventType, function (event) {\r\n          this.trigger(eventType, event);\r\n        }, _this);\r\n      }); // Extra events\r\n      // TODO register?\r\n\r\n      each(['selectchanged'], function (eventType) {\r\n        _this._messageCenter.on(eventType, function (event) {\r\n          this.trigger(eventType, event);\r\n        }, _this);\r\n      });\r\n      handleLegacySelectEvents(this._messageCenter, this, this._api);\r\n    };\r\n\r\n    ECharts.prototype.isDisposed = function () {\r\n      return this._disposed;\r\n    };\r\n\r\n    ECharts.prototype.clear = function () {\r\n      if (this._disposed) {\r\n        disposedWarning(this.id);\r\n        return;\r\n      }\r\n\r\n      this.setOption({\r\n        series: []\r\n      }, true);\r\n    };\r\n\r\n    ECharts.prototype.dispose = function () {\r\n      if (this._disposed) {\r\n        disposedWarning(this.id);\r\n        return;\r\n      }\r\n\r\n      this._disposed = true;\r\n      setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\r\n      var api = this._api;\r\n      var ecModel = this._model;\r\n      each(this._componentsViews, function (component) {\r\n        component.dispose(ecModel, api);\r\n      });\r\n      each(this._chartsViews, function (chart) {\r\n        chart.dispose(ecModel, api);\r\n      }); // Dispose after all views disposed\r\n\r\n      this._zr.dispose();\r\n\r\n      delete instances[this.id];\r\n    };\r\n    /**\r\n     * Resize the chart\r\n     */\r\n\r\n\r\n    ECharts.prototype.resize = function (opts) {\r\n      {\r\n        assert(!this[IN_MAIN_PROCESS_KEY], '`resize` should not be called during main process.');\r\n      }\r\n\r\n      if (this._disposed) {\r\n        disposedWarning(this.id);\r\n        return;\r\n      }\r\n\r\n      this._zr.resize(opts);\r\n\r\n      var ecModel = this._model; // Resize loading effect\r\n\r\n      this._loadingFX && this._loadingFX.resize();\r\n\r\n      if (!ecModel) {\r\n        return;\r\n      }\r\n\r\n      var optionChanged = ecModel.resetOption('media');\r\n      var silent = opts && opts.silent;\r\n      this[IN_MAIN_PROCESS_KEY] = true;\r\n      optionChanged && prepare(this);\r\n      updateMethods.update.call(this, {\r\n        type: 'resize',\r\n        animation: {\r\n          // Disable animation\r\n          duration: 0\r\n        }\r\n      });\r\n      this[IN_MAIN_PROCESS_KEY] = false;\r\n      flushPendingActions.call(this, silent);\r\n      triggerUpdatedEvent.call(this, silent);\r\n    };\r\n\r\n    ECharts.prototype.showLoading = function (name, cfg) {\r\n      if (this._disposed) {\r\n        disposedWarning(this.id);\r\n        return;\r\n      }\r\n\r\n      if (isObject(name)) {\r\n        cfg = name;\r\n        name = '';\r\n      }\r\n\r\n      name = name || 'default';\r\n      this.hideLoading();\r\n\r\n      if (!loadingEffects[name]) {\r\n        {\r\n          console.warn('Loading effects ' + name + ' not exists.');\r\n        }\r\n        return;\r\n      }\r\n\r\n      var el = loadingEffects[name](this._api, cfg);\r\n      var zr = this._zr;\r\n      this._loadingFX = el;\r\n      zr.add(el);\r\n    };\r\n    /**\r\n     * Hide loading effect\r\n     */\r\n\r\n\r\n    ECharts.prototype.hideLoading = function () {\r\n      if (this._disposed) {\r\n        disposedWarning(this.id);\r\n        return;\r\n      }\r\n\r\n      this._loadingFX && this._zr.remove(this._loadingFX);\r\n      this._loadingFX = null;\r\n    };\r\n\r\n    ECharts.prototype.makeActionFromEvent = function (eventObj) {\r\n      var payload = extend({}, eventObj);\r\n      payload.type = eventActionMap[eventObj.type];\r\n      return payload;\r\n    };\r\n    /**\r\n     * @param opt If pass boolean, means opt.silent\r\n     * @param opt.silent Default `false`. Whether trigger events.\r\n     * @param opt.flush Default `undefined`.\r\n     *        true: Flush immediately, and then pixel in canvas can be fetched\r\n     *            immediately. Caution: it might affect performance.\r\n     *        false: Not flush.\r\n     *        undefined: Auto decide whether perform flush.\r\n     */\r\n\r\n\r\n    ECharts.prototype.dispatchAction = function (payload, opt) {\r\n      if (this._disposed) {\r\n        disposedWarning(this.id);\r\n        return;\r\n      }\r\n\r\n      if (!isObject(opt)) {\r\n        opt = {\r\n          silent: !!opt\r\n        };\r\n      }\r\n\r\n      if (!actions[payload.type]) {\r\n        return;\r\n      } // Avoid dispatch action before setOption. Especially in `connect`.\r\n\r\n\r\n      if (!this._model) {\r\n        return;\r\n      } // May dispatchAction in rendering procedure\r\n\r\n\r\n      if (this[IN_MAIN_PROCESS_KEY]) {\r\n        this._pendingActions.push(payload);\r\n\r\n        return;\r\n      }\r\n\r\n      var silent = opt.silent;\r\n      doDispatchAction.call(this, payload, silent);\r\n      var flush = opt.flush;\r\n\r\n      if (flush) {\r\n        this._zr.flush();\r\n      } else if (flush !== false && env.browser.weChat) {\r\n        // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\r\n        // hang when sliding page (on touch event), which cause that zr does not\r\n        // refresh util user interaction finished, which is not expected.\r\n        // But `dispatchAction` may be called too frequently when pan on touch\r\n        // screen, which impacts performance if do not throttle them.\r\n        this._throttledZrFlush();\r\n      }\r\n\r\n      flushPendingActions.call(this, silent);\r\n      triggerUpdatedEvent.call(this, silent);\r\n    };\r\n\r\n    ECharts.prototype.updateLabelLayout = function () {\r\n      var labelManager = this._labelManager;\r\n      labelManager.updateLayoutConfig(this._api);\r\n      labelManager.layout(this._api);\r\n      labelManager.processLabelsOverall();\r\n    };\r\n\r\n    ECharts.prototype.appendData = function (params) {\r\n      if (this._disposed) {\r\n        disposedWarning(this.id);\r\n        return;\r\n      }\r\n\r\n      var seriesIndex = params.seriesIndex;\r\n      var ecModel = this.getModel();\r\n      var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\r\n      {\r\n        assert(params.data && seriesModel);\r\n      }\r\n      seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\r\n      // system, util some scenario require that. In the expected usage of\r\n      // `appendData`, the initial extent of coordinate system should better\r\n      // be fixed by axis `min`/`max` setting or initial data, otherwise if\r\n      // the extent changed while `appendData`, the location of the painted\r\n      // graphic elements have to be changed, which make the usage of\r\n      // `appendData` meaningless.\r\n\r\n      this._scheduler.unfinished = true;\r\n      this.getZr().wakeUp();\r\n    }; // A work around for no `internal` modifier in ts yet but\r\n    // need to strictly hide private methods to JS users.\r\n\r\n\r\n    ECharts.internalField = function () {\r\n      prepare = function (ecIns) {\r\n        var scheduler = ecIns._scheduler;\r\n        scheduler.restorePipelines(ecIns._model);\r\n        scheduler.prepareStageTasks();\r\n        prepareView(ecIns, true);\r\n        prepareView(ecIns, false);\r\n        scheduler.plan();\r\n      };\r\n      /**\r\n       * Prepare view instances of charts and components\r\n       */\r\n\r\n\r\n      prepareView = function (ecIns, isComponent) {\r\n        var ecModel = ecIns._model;\r\n        var scheduler = ecIns._scheduler;\r\n        var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\r\n        var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\r\n        var zr = ecIns._zr;\r\n        var api = ecIns._api;\r\n\r\n        for (var i = 0; i < viewList.length; i++) {\r\n          viewList[i].__alive = false;\r\n        }\r\n\r\n        isComponent ? ecModel.eachComponent(function (componentType, model) {\r\n          componentType !== 'series' && doPrepare(model);\r\n        }) : ecModel.eachSeries(doPrepare);\r\n\r\n        function doPrepare(model) {\r\n          // By defaut view will be reused if possible for the case that `setOption` with \"notMerge\"\r\n          // mode and need to enable transition animation. (Usually, when they have the same id, or\r\n          // especially no id but have the same type & name & index. See the `model.id` generation\r\n          // rule in `makeIdAndName` and `viewId` generation rule here).\r\n          // But in `replaceMerge` mode, this feature should be able to disabled when it is clear that\r\n          // the new model has nothing to do with the old model.\r\n          var requireNewView = model.__requireNewView; // This command should not work twice.\r\n\r\n          model.__requireNewView = false; // Consider: id same and type changed.\r\n\r\n          var viewId = '_ec_' + model.id + '_' + model.type;\r\n          var view = !requireNewView && viewMap[viewId];\r\n\r\n          if (!view) {\r\n            var classType = parseClassType(model.type);\r\n            var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : // FIXME:TS\r\n            // (ChartView as ChartViewConstructor).getClass('series', classType.sub)\r\n            // For backward compat, still support a chart type declared as only subType\r\n            // like \"liquidfill\", but recommend \"series.liquidfill\"\r\n            // But need a base class to make a type series.\r\n            ChartView.getClass(classType.sub);\r\n            {\r\n              assert(Clazz, classType.sub + ' does not exist.');\r\n            }\r\n            view = new Clazz();\r\n            view.init(ecModel, api);\r\n            viewMap[viewId] = view;\r\n            viewList.push(view);\r\n            zr.add(view.group);\r\n          }\r\n\r\n          model.__viewId = view.__id = viewId;\r\n          view.__alive = true;\r\n          view.__model = model;\r\n          view.group.__ecComponentInfo = {\r\n            mainType: model.mainType,\r\n            index: model.componentIndex\r\n          };\r\n          !isComponent && scheduler.prepareView(view, model, ecModel, api);\r\n        }\r\n\r\n        for (var i = 0; i < viewList.length;) {\r\n          var view = viewList[i];\r\n\r\n          if (!view.__alive) {\r\n            !isComponent && view.renderTask.dispose();\r\n            zr.remove(view.group);\r\n            view.dispose(ecModel, api);\r\n            viewList.splice(i, 1);\r\n\r\n            if (viewMap[view.__id] === view) {\r\n              delete viewMap[view.__id];\r\n            }\r\n\r\n            view.__id = view.group.__ecComponentInfo = null;\r\n          } else {\r\n            i++;\r\n          }\r\n        }\r\n      };\r\n\r\n      updateDirectly = function (ecIns, method, payload, mainType, subType) {\r\n        var ecModel = ecIns._model;\r\n        ecModel.setUpdatePayload(payload); // broadcast\r\n\r\n        if (!mainType) {\r\n          // FIXME\r\n          // Chart will not be update directly here, except set dirty.\r\n          // But there is no such scenario now.\r\n          each([].concat(ecIns._componentsViews).concat(ecIns._chartsViews), callView);\r\n          return;\r\n        }\r\n\r\n        var query = {};\r\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\r\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\r\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\r\n        var condition = {\r\n          mainType: mainType,\r\n          query: query\r\n        };\r\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\r\n\r\n        var excludeSeriesId = payload.excludeSeriesId;\r\n        var excludeSeriesIdMap;\r\n\r\n        if (excludeSeriesId != null) {\r\n          excludeSeriesIdMap = createHashMap();\r\n          each(normalizeToArray(excludeSeriesId), function (id) {\r\n            var modelId = convertOptionIdName(id, null);\r\n\r\n            if (modelId != null) {\r\n              excludeSeriesIdMap.set(modelId, true);\r\n            }\r\n          });\r\n        } // If dispatchAction before setOption, do nothing.\r\n\r\n\r\n        ecModel && ecModel.eachComponent(condition, function (model) {\r\n          if (!excludeSeriesIdMap || excludeSeriesIdMap.get(model.id) == null) {\r\n            if (isHighDownPayload(payload) && !payload.notBlur) {\r\n              if (model instanceof SeriesModel) {\r\n                toggleSeriesBlurStateFromPayload(model, payload, ecIns._api);\r\n              }\r\n            } else if (isSelectChangePayload(payload)) {\r\n              // TODO geo\r\n              if (model instanceof SeriesModel) {\r\n                toggleSelectionFromPayload(model, payload, ecIns._api);\r\n                updateSeriesElementSelection(model);\r\n                markStatusToUpdate(ecIns);\r\n              }\r\n            }\r\n\r\n            callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\r\n          }\r\n        }, ecIns);\r\n\r\n        function callView(view) {\r\n          view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\r\n        }\r\n      };\r\n\r\n      updateMethods = {\r\n        prepareAndUpdate: function (payload) {\r\n          prepare(this);\r\n          updateMethods.update.call(this, payload);\r\n        },\r\n        update: function (payload) {\r\n          // console.profile && console.profile('update');\r\n          var ecModel = this._model;\r\n          var api = this._api;\r\n          var zr = this._zr;\r\n          var coordSysMgr = this._coordSysMgr;\r\n          var scheduler = this._scheduler; // update before setOption\r\n\r\n          if (!ecModel) {\r\n            return;\r\n          }\r\n\r\n          ecModel.setUpdatePayload(payload);\r\n          scheduler.restoreData(ecModel, payload);\r\n          scheduler.performSeriesTasks(ecModel); // TODO\r\n          // Save total ecModel here for undo/redo (after restoring data and before processing data).\r\n          // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\r\n          // Create new coordinate system each update\r\n          // In LineView may save the old coordinate system and use it to get the orignal point\r\n\r\n          coordSysMgr.create(ecModel, api);\r\n          scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\r\n          // stream modes after data processing, where the filtered data is used to\r\n          // deteming whether use progressive rendering.\r\n\r\n          updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\r\n          // can be fetched when coord sys updating (consider the barGrid extent fix). But\r\n          // the drawback is the full coord info can not be fetched. Fortunately this full\r\n          // coord is not requied in stream mode updater currently.\r\n\r\n          coordSysMgr.update(ecModel, api);\r\n          clearColorPalette(ecModel);\r\n          scheduler.performVisualTasks(ecModel, payload);\r\n          render(this, ecModel, api, payload); // Set background\r\n\r\n          var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\r\n          var darkMode = ecModel.get('darkMode'); // In IE8\r\n\r\n          if (!env.canvasSupported) {\r\n            var colorArr = parse(backgroundColor);\r\n            backgroundColor = stringify(colorArr, 'rgb');\r\n\r\n            if (colorArr[3] === 0) {\r\n              backgroundColor = 'transparent';\r\n            }\r\n          } else {\r\n            zr.setBackgroundColor(backgroundColor); // Force set dark mode.\r\n\r\n            if (darkMode != null && darkMode !== 'auto') {\r\n              zr.setDarkMode(darkMode);\r\n            }\r\n          }\r\n\r\n          performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\r\n        },\r\n        updateTransform: function (payload) {\r\n          var _this = this;\r\n\r\n          var ecModel = this._model;\r\n          var api = this._api; // update before setOption\r\n\r\n          if (!ecModel) {\r\n            return;\r\n          }\r\n\r\n          ecModel.setUpdatePayload(payload); // ChartView.markUpdateMethod(payload, 'updateTransform');\r\n\r\n          var componentDirtyList = [];\r\n          ecModel.eachComponent(function (componentType, componentModel) {\r\n            if (componentType === 'series') {\r\n              return;\r\n            }\r\n\r\n            var componentView = _this.getViewOfComponentModel(componentModel);\r\n\r\n            if (componentView && componentView.__alive) {\r\n              if (componentView.updateTransform) {\r\n                var result = componentView.updateTransform(componentModel, ecModel, api, payload);\r\n                result && result.update && componentDirtyList.push(componentView);\r\n              } else {\r\n                componentDirtyList.push(componentView);\r\n              }\r\n            }\r\n          });\r\n          var seriesDirtyMap = createHashMap();\r\n          ecModel.eachSeries(function (seriesModel) {\r\n            var chartView = _this._chartsMap[seriesModel.__viewId];\r\n\r\n            if (chartView.updateTransform) {\r\n              var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\r\n              result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\r\n            } else {\r\n              seriesDirtyMap.set(seriesModel.uid, 1);\r\n            }\r\n          });\r\n          clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\r\n          // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\r\n\r\n          this._scheduler.performVisualTasks(ecModel, payload, {\r\n            setDirty: true,\r\n            dirtyMap: seriesDirtyMap\r\n          }); // Currently, not call render of components. Geo render cost a lot.\r\n          // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\r\n\r\n\r\n          renderSeries(this, ecModel, api, payload, seriesDirtyMap);\r\n          performPostUpdateFuncs(ecModel, this._api);\r\n        },\r\n        updateView: function (payload) {\r\n          var ecModel = this._model; // update before setOption\r\n\r\n          if (!ecModel) {\r\n            return;\r\n          }\r\n\r\n          ecModel.setUpdatePayload(payload);\r\n          ChartView.markUpdateMethod(payload, 'updateView');\r\n          clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\r\n\r\n          this._scheduler.performVisualTasks(ecModel, payload, {\r\n            setDirty: true\r\n          });\r\n\r\n          render(this, this._model, this._api, payload);\r\n          performPostUpdateFuncs(ecModel, this._api);\r\n        },\r\n        updateVisual: function (payload) {\r\n          // updateMethods.update.call(this, payload);\r\n          var _this = this;\r\n\r\n          var ecModel = this._model; // update before setOption\r\n\r\n          if (!ecModel) {\r\n            return;\r\n          }\r\n\r\n          ecModel.setUpdatePayload(payload); // clear all visual\r\n\r\n          ecModel.eachSeries(function (seriesModel) {\r\n            seriesModel.getData().clearAllVisual();\r\n          }); // Perform visual\r\n\r\n          ChartView.markUpdateMethod(payload, 'updateVisual');\r\n          clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\r\n\r\n          this._scheduler.performVisualTasks(ecModel, payload, {\r\n            visualType: 'visual',\r\n            setDirty: true\r\n          });\r\n\r\n          ecModel.eachComponent(function (componentType, componentModel) {\r\n            if (componentType !== 'series') {\r\n              var componentView = _this.getViewOfComponentModel(componentModel);\r\n\r\n              componentView && componentView.__alive && componentView.updateVisual(componentModel, ecModel, _this._api, payload);\r\n            }\r\n          });\r\n          ecModel.eachSeries(function (seriesModel) {\r\n            var chartView = _this._chartsMap[seriesModel.__viewId];\r\n            chartView.updateVisual(seriesModel, ecModel, _this._api, payload);\r\n          });\r\n          performPostUpdateFuncs(ecModel, this._api);\r\n        },\r\n        updateLayout: function (payload) {\r\n          updateMethods.update.call(this, payload);\r\n        }\r\n      };\r\n\r\n      doConvertPixel = function (ecIns, methodName, finder, value) {\r\n        if (ecIns._disposed) {\r\n          disposedWarning(ecIns.id);\r\n          return;\r\n        }\r\n\r\n        var ecModel = ecIns._model;\r\n\r\n        var coordSysList = ecIns._coordSysMgr.getCoordinateSystems();\r\n\r\n        var result;\r\n        var parsedFinder = parseFinder(ecModel, finder);\r\n\r\n        for (var i = 0; i < coordSysList.length; i++) {\r\n          var coordSys = coordSysList[i];\r\n\r\n          if (coordSys[methodName] && (result = coordSys[methodName](ecModel, parsedFinder, value)) != null) {\r\n            return result;\r\n          }\r\n        }\r\n\r\n        {\r\n          console.warn('No coordinate system that supports ' + methodName + ' found by the given finder.');\r\n        }\r\n      };\r\n\r\n      updateStreamModes = function (ecIns, ecModel) {\r\n        var chartsMap = ecIns._chartsMap;\r\n        var scheduler = ecIns._scheduler;\r\n        ecModel.eachSeries(function (seriesModel) {\r\n          scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\r\n        });\r\n      };\r\n\r\n      doDispatchAction = function (payload, silent) {\r\n        var _this = this;\r\n\r\n        var ecModel = this.getModel();\r\n        var payloadType = payload.type;\r\n        var escapeConnect = payload.escapeConnect;\r\n        var actionWrap = actions[payloadType];\r\n        var actionInfo = actionWrap.actionInfo;\r\n        var cptTypeTmp = (actionInfo.update || 'update').split(':');\r\n        var updateMethod = cptTypeTmp.pop();\r\n        var cptType = cptTypeTmp[0] != null && parseClassType(cptTypeTmp[0]);\r\n        this[IN_MAIN_PROCESS_KEY] = true;\r\n        var payloads = [payload];\r\n        var batched = false; // Batch action\r\n\r\n        if (payload.batch) {\r\n          batched = true;\r\n          payloads = map(payload.batch, function (item) {\r\n            item = defaults(extend({}, item), payload);\r\n            item.batch = null;\r\n            return item;\r\n          });\r\n        }\r\n\r\n        var eventObjBatch = [];\r\n        var eventObj;\r\n        var isSelectChange = isSelectChangePayload(payload);\r\n        var isStatusChange = isHighDownPayload(payload) || isSelectChange;\r\n        each(payloads, function (batchItem) {\r\n          // Action can specify the event by return it.\r\n          eventObj = actionWrap.action(batchItem, _this._model, _this._api); // Emit event outside\r\n\r\n          eventObj = eventObj || extend({}, batchItem); // Convert type to eventType\r\n\r\n          eventObj.type = actionInfo.event || eventObj.type;\r\n          eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\r\n\r\n          if (isStatusChange) {\r\n            // method, payload, mainType, subType\r\n            updateDirectly(_this, updateMethod, batchItem, 'series'); // Mark status to update\r\n\r\n            markStatusToUpdate(_this);\r\n          } else if (cptType) {\r\n            updateDirectly(_this, updateMethod, batchItem, cptType.main, cptType.sub);\r\n          }\r\n        });\r\n\r\n        if (updateMethod !== 'none' && !isStatusChange && !cptType) {\r\n          // Still dirty\r\n          if (this[OPTION_UPDATED_KEY]) {\r\n            prepare(this);\r\n            updateMethods.update.call(this, payload);\r\n            this[OPTION_UPDATED_KEY] = false;\r\n          } else {\r\n            updateMethods[updateMethod].call(this, payload);\r\n          }\r\n        } // Follow the rule of action batch\r\n\r\n\r\n        if (batched) {\r\n          eventObj = {\r\n            type: actionInfo.event || payloadType,\r\n            escapeConnect: escapeConnect,\r\n            batch: eventObjBatch\r\n          };\r\n        } else {\r\n          eventObj = eventObjBatch[0];\r\n        }\r\n\r\n        this[IN_MAIN_PROCESS_KEY] = false;\r\n\r\n        if (!silent) {\r\n          var messageCenter = this._messageCenter;\r\n          messageCenter.trigger(eventObj.type, eventObj); // Extra triggered 'selectchanged' event\r\n\r\n          if (isSelectChange) {\r\n            var newObj = {\r\n              type: 'selectchanged',\r\n              escapeConnect: escapeConnect,\r\n              selected: getAllSelectedIndices(ecModel),\r\n              isFromClick: payload.isFromClick || false,\r\n              fromAction: payload.type,\r\n              fromActionPayload: payload\r\n            };\r\n            messageCenter.trigger(newObj.type, newObj);\r\n          }\r\n        }\r\n      };\r\n\r\n      flushPendingActions = function (silent) {\r\n        var pendingActions = this._pendingActions;\r\n\r\n        while (pendingActions.length) {\r\n          var payload = pendingActions.shift();\r\n          doDispatchAction.call(this, payload, silent);\r\n        }\r\n      };\r\n\r\n      triggerUpdatedEvent = function (silent) {\r\n        !silent && this.trigger('updated');\r\n      };\r\n      /**\r\n       * Event `rendered` is triggered when zr\r\n       * rendered. It is useful for realtime\r\n       * snapshot (reflect animation).\r\n       *\r\n       * Event `finished` is triggered when:\r\n       * (1) zrender rendering finished.\r\n       * (2) initial animation finished.\r\n       * (3) progressive rendering finished.\r\n       * (4) no pending action.\r\n       * (5) no delayed setOption needs to be processed.\r\n       */\r\n\r\n\r\n      bindRenderedEvent = function (zr, ecIns) {\r\n        zr.on('rendered', function (params) {\r\n          ecIns.trigger('rendered', params); // The `finished` event should not be triggered repeatly,\r\n          // so it should only be triggered when rendering indeed happend\r\n          // in zrender. (Consider the case that dipatchAction is keep\r\n          // triggering when mouse move).\r\n\r\n          if ( // Although zr is dirty if initial animation is not finished\r\n          // and this checking is called on frame, we also check\r\n          // animation finished for robustness.\r\n          zr.animation.isFinished() && !ecIns[OPTION_UPDATED_KEY] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\r\n            ecIns.trigger('finished');\r\n          }\r\n        });\r\n      };\r\n\r\n      bindMouseEvent = function (zr, ecIns) {\r\n        zr.on('mouseover', function (e) {\r\n          var el = e.target;\r\n          var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\r\n\r\n          if (dispatcher) {\r\n            var ecData = getECData(dispatcher); // Try blur all in the related series. Then emphasis the hoverred.\r\n            // TODO. progressive mode.\r\n\r\n            toggleSeriesBlurState(ecData.seriesIndex, ecData.focus, ecData.blurScope, ecIns._api, true);\r\n            enterEmphasisWhenMouseOver(dispatcher, e);\r\n            markStatusToUpdate(ecIns);\r\n          }\r\n        }).on('mouseout', function (e) {\r\n          var el = e.target;\r\n          var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\r\n\r\n          if (dispatcher) {\r\n            var ecData = getECData(dispatcher);\r\n            toggleSeriesBlurState(ecData.seriesIndex, ecData.focus, ecData.blurScope, ecIns._api, false);\r\n            leaveEmphasisWhenMouseOut(dispatcher, e);\r\n            markStatusToUpdate(ecIns);\r\n          }\r\n        }).on('click', function (e) {\r\n          var el = e.target;\r\n          var dispatcher = findEventDispatcher(el, function (target) {\r\n            return getECData(target).dataIndex != null;\r\n          }, true);\r\n\r\n          if (dispatcher) {\r\n            var actionType = dispatcher.selected ? 'unselect' : 'select';\r\n            var ecData = getECData(dispatcher);\r\n\r\n            ecIns._api.dispatchAction({\r\n              type: actionType,\r\n              dataType: ecData.dataType,\r\n              dataIndexInside: ecData.dataIndex,\r\n              seriesIndex: ecData.seriesIndex,\r\n              isFromClick: true\r\n            });\r\n          }\r\n        });\r\n      };\r\n\r\n      clearColorPalette = function (ecModel) {\r\n        ecModel.clearColorPalette();\r\n        ecModel.eachSeries(function (seriesModel) {\r\n          seriesModel.clearColorPalette();\r\n        });\r\n      };\r\n\r\n      render = function (ecIns, ecModel, api, payload) {\r\n        renderComponents(ecIns, ecModel, api, payload);\r\n        each(ecIns._chartsViews, function (chart) {\r\n          chart.__alive = false;\r\n        });\r\n        renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\r\n\r\n        each(ecIns._chartsViews, function (chart) {\r\n          if (!chart.__alive) {\r\n            chart.remove(ecModel, api);\r\n          }\r\n        });\r\n      };\r\n\r\n      renderComponents = function (ecIns, ecModel, api, payload, dirtyList) {\r\n        each(dirtyList || ecIns._componentsViews, function (componentView) {\r\n          var componentModel = componentView.__model;\r\n          clearStates$$1(componentModel, componentView);\r\n          componentView.render(componentModel, ecModel, api, payload);\r\n          updateZ(componentModel, componentView);\r\n          updateStates(componentModel, componentView);\r\n        });\r\n      };\r\n      /**\r\n       * Render each chart and component\r\n       */\r\n\r\n\r\n      renderSeries = function (ecIns, ecModel, api, payload, dirtyMap) {\r\n        // Render all charts\r\n        var scheduler = ecIns._scheduler;\r\n        var labelManager = ecIns._labelManager;\r\n        labelManager.clearLabels();\r\n        var unfinished = false;\r\n        ecModel.eachSeries(function (seriesModel) {\r\n          var chartView = ecIns._chartsMap[seriesModel.__viewId];\r\n          chartView.__alive = true;\r\n          var renderTask = chartView.renderTask;\r\n          scheduler.updatePayload(renderTask, payload); // TODO states on marker.\r\n\r\n          clearStates$$1(seriesModel, chartView);\r\n\r\n          if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\r\n            renderTask.dirty();\r\n          }\r\n\r\n          if (renderTask.perform(scheduler.getPerformArgs(renderTask))) {\r\n            unfinished = true;\r\n          }\r\n\r\n          seriesModel.__transientTransitionOpt = null;\r\n          chartView.group.silent = !!seriesModel.get('silent'); // Should not call markRedraw on group, because it will disable zrender\r\n          // increamental render (alway render from the __startIndex each frame)\r\n          // chartView.group.markRedraw();\r\n\r\n          updateBlend(seriesModel, chartView);\r\n          updateSeriesElementSelection(seriesModel); // Add labels.\r\n\r\n          labelManager.addLabelsOfSeries(chartView);\r\n        });\r\n        scheduler.unfinished = unfinished || scheduler.unfinished;\r\n        labelManager.updateLayoutConfig(api);\r\n        labelManager.layout(api);\r\n        labelManager.processLabelsOverall();\r\n        ecModel.eachSeries(function (seriesModel) {\r\n          var chartView = ecIns._chartsMap[seriesModel.__viewId]; // Update Z after labels updated. Before applying states.\r\n\r\n          updateZ(seriesModel, chartView); // NOTE: Update states after label is updated.\r\n          // label should be in normal status when layouting.\r\n\r\n          updateStates(seriesModel, chartView);\r\n        }); // If use hover layer\r\n\r\n        updateHoverLayerStatus(ecIns, ecModel);\r\n      };\r\n\r\n      performPostUpdateFuncs = function (ecModel, api) {\r\n        each(postUpdateFuncs, function (func) {\r\n          func(ecModel, api);\r\n        });\r\n      };\r\n\r\n      markStatusToUpdate = function (ecIns) {\r\n        ecIns[STATUS_NEEDS_UPDATE_KEY] = true; // Wake up zrender if it's sleep. Let it update states in the next frame.\r\n\r\n        ecIns.getZr().wakeUp();\r\n      };\r\n\r\n      applyChangedStates = function (ecIns) {\r\n        if (!ecIns[STATUS_NEEDS_UPDATE_KEY]) {\r\n          return;\r\n        }\r\n\r\n        ecIns.getZr().storage.traverse(function (el) {\r\n          // Not applied on removed elements, it may still in fading.\r\n          if (isElementRemoved(el)) {\r\n            return;\r\n          }\r\n\r\n          applyElementStates(el);\r\n        });\r\n        ecIns[STATUS_NEEDS_UPDATE_KEY] = false;\r\n      };\r\n\r\n      function applyElementStates(el) {\r\n        var newStates = [];\r\n        var oldStates = el.currentStates; // Keep other states.\r\n\r\n        for (var i = 0; i < oldStates.length; i++) {\r\n          var stateName = oldStates[i];\r\n\r\n          if (!(stateName === 'emphasis' || stateName === 'blur' || stateName === 'select')) {\r\n            newStates.push(stateName);\r\n          }\r\n        } // Only use states when it's exists.\r\n\r\n\r\n        if (el.selected && el.states.select) {\r\n          newStates.push('select');\r\n        }\r\n\r\n        if (el.hoverState === HOVER_STATE_EMPHASIS && el.states.emphasis) {\r\n          newStates.push('emphasis');\r\n        } else if (el.hoverState === HOVER_STATE_BLUR && el.states.blur) {\r\n          newStates.push('blur');\r\n        }\r\n\r\n        el.useStates(newStates);\r\n      }\r\n\r\n      function updateHoverLayerStatus(ecIns, ecModel) {\r\n        var zr = ecIns._zr;\r\n        var storage = zr.storage;\r\n        var elCount = 0;\r\n        storage.traverse(function (el) {\r\n          if (!el.isGroup) {\r\n            elCount++;\r\n          }\r\n        });\r\n\r\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node && !env.worker) {\r\n          ecModel.eachSeries(function (seriesModel) {\r\n            if (seriesModel.preventUsingHoverLayer) {\r\n              return;\r\n            }\r\n\r\n            var chartView = ecIns._chartsMap[seriesModel.__viewId];\r\n\r\n            if (chartView.__alive) {\r\n              chartView.group.traverse(function (el) {\r\n                if (el.states.emphasis) {\r\n                  el.states.emphasis.hoverLayer = true;\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n      /**\r\n       * Update chart and blend.\r\n       */\r\n\r\n\r\n      function updateBlend(seriesModel, chartView) {\r\n        var blendMode = seriesModel.get('blendMode') || null;\r\n        {\r\n          if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\r\n            console.warn('Only canvas support blendMode');\r\n          }\r\n        }\r\n        chartView.group.traverse(function (el) {\r\n          // FIXME marker and other components\r\n          if (!el.isGroup) {\r\n            // DONT mark the element dirty. In case element is incremental and don't wan't to rerender.\r\n            el.style.blend = blendMode;\r\n          }\r\n\r\n          if (el.eachPendingDisplayable) {\r\n            el.eachPendingDisplayable(function (displayable) {\r\n              displayable.style.blend = blendMode;\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      function updateZ(model, view) {\r\n        if (model.preventAutoZ) {\r\n          return;\r\n        }\r\n\r\n        var z = model.get('z');\r\n        var zlevel = model.get('zlevel'); // Set z and zlevel\r\n\r\n        view.group.traverse(function (el) {\r\n          if (!el.isGroup) {\r\n            z != null && (el.z = z);\r\n            zlevel != null && (el.zlevel = zlevel); // TODO if textContent is on group.\r\n\r\n            var label = el.getTextContent();\r\n            var labelLine = el.getTextGuideLine();\r\n\r\n            if (label) {\r\n              label.z = el.z;\r\n              label.zlevel = el.zlevel; // lift z2 of text content\r\n              // TODO if el.emphasis.z2 is spcefied, what about textContent.\r\n\r\n              label.z2 = el.z2 + 2;\r\n            }\r\n\r\n            if (labelLine) {\r\n              var showAbove = el.textGuideLineConfig && el.textGuideLineConfig.showAbove;\r\n              labelLine.z = el.z;\r\n              labelLine.zlevel = el.zlevel;\r\n              labelLine.z2 = el.z2 + (showAbove ? 1 : -1);\r\n            }\r\n          }\r\n        });\r\n      } // Clear states without animation.\r\n      // TODO States on component.\r\n\r\n\r\n      function clearStates$$1(model, view) {\r\n        view.group.traverse(function (el) {\r\n          // Not applied on removed elements, it may still in fading.\r\n          if (isElementRemoved(el)) {\r\n            return;\r\n          }\r\n\r\n          var textContent = el.getTextContent();\r\n          var textGuide = el.getTextGuideLine();\r\n\r\n          if (el.stateTransition) {\r\n            el.stateTransition = null;\r\n          }\r\n\r\n          if (textContent && textContent.stateTransition) {\r\n            textContent.stateTransition = null;\r\n          }\r\n\r\n          if (textGuide && textGuide.stateTransition) {\r\n            textGuide.stateTransition = null;\r\n          } // TODO If el is incremental.\r\n\r\n\r\n          if (el.hasState()) {\r\n            el.prevStates = el.currentStates;\r\n            el.clearStates();\r\n          } else if (el.prevStates) {\r\n            el.prevStates = null;\r\n          }\r\n        });\r\n      }\r\n\r\n      function updateStates(model, view) {\r\n        var stateAnimationModel = model.getModel('stateAnimation');\r\n        var enableAnimation = model.isAnimationEnabled();\r\n        var duration = stateAnimationModel.get('duration');\r\n        var stateTransition = duration > 0 ? {\r\n          duration: duration,\r\n          delay: stateAnimationModel.get('delay'),\r\n          easing: stateAnimationModel.get('easing') // additive: stateAnimationModel.get('additive')\r\n\r\n        } : null;\r\n        view.group.traverse(function (el) {\r\n          if (el.states && el.states.emphasis) {\r\n            // Not applied on removed elements, it may still in fading.\r\n            if (isElementRemoved(el)) {\r\n              return;\r\n            }\r\n\r\n            if (el instanceof Path) {\r\n              savePathStates(el);\r\n            } // Only updated on changed element. In case element is incremental and don't wan't to rerender.\r\n            // TODO, a more proper way?\r\n\r\n\r\n            if (el.__dirty) {\r\n              var prevStates = el.prevStates; // Restore states without animation\r\n\r\n              if (prevStates) {\r\n                el.useStates(prevStates);\r\n              }\r\n            } // Update state transition and enable animation again.\r\n\r\n\r\n            if (enableAnimation) {\r\n              el.stateTransition = stateTransition;\r\n              var textContent = el.getTextContent();\r\n              var textGuide = el.getTextGuideLine(); // TODO Is it necessary to animate label?\r\n\r\n              if (textContent) {\r\n                textContent.stateTransition = stateTransition;\r\n              }\r\n\r\n              if (textGuide) {\r\n                textGuide.stateTransition = stateTransition;\r\n              }\r\n            } // The use higlighted and selected flag to toggle states.\r\n\r\n\r\n            if (el.__dirty) {\r\n              applyElementStates(el);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      createExtensionAPI = function (ecIns) {\r\n        return new (\r\n        /** @class */\r\n        function (_super) {\r\n          __extends(class_1, _super);\r\n\r\n          function class_1() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n          }\r\n\r\n          class_1.prototype.getCoordinateSystems = function () {\r\n            return ecIns._coordSysMgr.getCoordinateSystems();\r\n          };\r\n\r\n          class_1.prototype.getComponentByElement = function (el) {\r\n            while (el) {\r\n              var modelInfo = el.__ecComponentInfo;\r\n\r\n              if (modelInfo != null) {\r\n                return ecIns._model.getComponent(modelInfo.mainType, modelInfo.index);\r\n              }\r\n\r\n              el = el.parent;\r\n            }\r\n          };\r\n\r\n          class_1.prototype.enterEmphasis = function (el, highlightDigit) {\r\n            enterEmphasis(el, highlightDigit);\r\n            markStatusToUpdate(ecIns);\r\n          };\r\n\r\n          class_1.prototype.leaveEmphasis = function (el, highlightDigit) {\r\n            leaveEmphasis(el, highlightDigit);\r\n            markStatusToUpdate(ecIns);\r\n          };\r\n\r\n          class_1.prototype.enterBlur = function (el) {\r\n            enterBlur(el);\r\n            markStatusToUpdate(ecIns);\r\n          };\r\n\r\n          class_1.prototype.leaveBlur = function (el) {\r\n            leaveBlur(el);\r\n            markStatusToUpdate(ecIns);\r\n          };\r\n\r\n          class_1.prototype.enterSelect = function (el) {\r\n            enterSelect(el);\r\n            markStatusToUpdate(ecIns);\r\n          };\r\n\r\n          class_1.prototype.leaveSelect = function (el) {\r\n            leaveSelect(el);\r\n            markStatusToUpdate(ecIns);\r\n          };\r\n\r\n          class_1.prototype.getModel = function () {\r\n            return ecIns.getModel();\r\n          };\r\n\r\n          class_1.prototype.getViewOfComponentModel = function (componentModel) {\r\n            return ecIns.getViewOfComponentModel(componentModel);\r\n          };\r\n\r\n          class_1.prototype.getViewOfSeriesModel = function (seriesModel) {\r\n            return ecIns.getViewOfSeriesModel(seriesModel);\r\n          };\r\n\r\n          return class_1;\r\n        }(ExtensionAPI))(ecIns);\r\n      };\r\n\r\n      enableConnect = function (chart) {\r\n        function updateConnectedChartsStatus(charts, status) {\r\n          for (var i = 0; i < charts.length; i++) {\r\n            var otherChart = charts[i];\r\n            otherChart[CONNECT_STATUS_KEY] = status;\r\n          }\r\n        }\r\n\r\n        each(eventActionMap, function (actionType, eventType) {\r\n          chart._messageCenter.on(eventType, function (event) {\r\n            if (connectedGroups[chart.group] && chart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_PENDING) {\r\n              if (event && event.escapeConnect) {\r\n                return;\r\n              }\r\n\r\n              var action_1 = chart.makeActionFromEvent(event);\r\n              var otherCharts_1 = [];\r\n              each(instances, function (otherChart) {\r\n                if (otherChart !== chart && otherChart.group === chart.group) {\r\n                  otherCharts_1.push(otherChart);\r\n                }\r\n              });\r\n              updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_PENDING);\r\n              each(otherCharts_1, function (otherChart) {\r\n                if (otherChart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_UPDATING) {\r\n                  otherChart.dispatchAction(action_1);\r\n                }\r\n              });\r\n              updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_UPDATED);\r\n            }\r\n          });\r\n        });\r\n      };\r\n\r\n      setTransitionOpt = function (chart, transitionOpt) {\r\n        var ecModel = chart._model;\r\n        each$1(normalizeToArray(transitionOpt), function (transOpt) {\r\n          var errMsg;\r\n          var fromOpt = transOpt.from;\r\n          var toOpt = transOpt.to;\r\n\r\n          if (toOpt == null) {\r\n            {\r\n              errMsg = '`transition.to` must be specified.';\r\n            }\r\n            throwError(errMsg);\r\n          }\r\n\r\n          var finderOpt = {\r\n            includeMainTypes: ['series'],\r\n            enableAll: false,\r\n            enableNone: false\r\n          };\r\n          var fromResult = fromOpt ? parseFinder(ecModel, fromOpt, finderOpt) : null;\r\n          var toResult = parseFinder(ecModel, toOpt, finderOpt);\r\n          var toSeries = toResult.seriesModel;\r\n\r\n          if (toSeries == null) {\r\n            errMsg = '';\r\n            {\r\n              errMsg = '`transition` is only supported on series.';\r\n            }\r\n          }\r\n\r\n          if (fromResult && fromResult.seriesModel !== toSeries) {\r\n            errMsg = '';\r\n            {\r\n              errMsg = '`transition.from` and `transition.to` must be specified to the same series.';\r\n            }\r\n          }\r\n\r\n          if (errMsg != null) {\r\n            throwError(errMsg);\r\n          } // Just a temp solution: mount them on series.\r\n\r\n\r\n          toSeries.__transientTransitionOpt = {\r\n            from: fromOpt ? fromOpt.dimension : null,\r\n            to: toOpt.dimension,\r\n            dividingMethod: transOpt.dividingMethod\r\n          };\r\n        });\r\n      };\r\n    }();\r\n\r\n    return ECharts;\r\n  }(Eventful);\r\n\r\n  var echartsProto = ECharts.prototype;\r\n  echartsProto.on = createRegisterEventWithLowercaseECharts('on');\r\n  echartsProto.off = createRegisterEventWithLowercaseECharts('off');\r\n  /**\r\n   * @deprecated\r\n   */\r\n  // @ts-ignore\r\n\r\n  echartsProto.one = function (eventName, cb, ctx) {\r\n    var self = this;\r\n    deprecateLog('ECharts#one is deprecated.');\r\n\r\n    function wrapped() {\r\n      var args2 = [];\r\n\r\n      for (var _i = 0; _i < arguments.length; _i++) {\r\n        args2[_i] = arguments[_i];\r\n      }\r\n\r\n      cb && cb.apply && cb.apply(this, args2); // @ts-ignore\r\n\r\n      self.off(eventName, wrapped);\r\n    } // @ts-ignore\r\n\r\n\r\n    this.on.call(this, eventName, wrapped, ctx);\r\n  }; // /**\r\n  //  * Encode visual infomation from data after data processing\r\n  //  *\r\n  //  * @param {module:echarts/model/Global} ecModel\r\n  //  * @param {object} layout\r\n  //  * @param {boolean} [layoutFilter] `true`: only layout,\r\n  //  *                                 `false`: only not layout,\r\n  //  *                                 `null`/`undefined`: all.\r\n  //  * @param {string} taskBaseTag\r\n  //  * @private\r\n  //  */\r\n  // function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\r\n  //     each(visualFuncs, function (visual, index) {\r\n  //         let isLayout = visual.isLayout;\r\n  //         if (layoutFilter == null\r\n  //             || (layoutFilter === false && !isLayout)\r\n  //             || (layoutFilter === true && isLayout)\r\n  //         ) {\r\n  //             visual.func(ecModel, api, payload);\r\n  //         }\r\n  //     });\r\n  // }\r\n\r\n\r\n  var MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\r\n\r\n  function disposedWarning(id) {\r\n    {\r\n      console.warn('Instance ' + id + ' has been disposed');\r\n    }\r\n  }\r\n\r\n  var actions = {};\r\n  /**\r\n   * Map eventType to actionType\r\n   */\r\n\r\n  var eventActionMap = {};\r\n  var dataProcessorFuncs = [];\r\n  var optionPreprocessorFuncs = [];\r\n  var postInitFuncs = [];\r\n  var postUpdateFuncs = [];\r\n  var visualFuncs = [];\r\n  var themeStorage = {};\r\n  var loadingEffects = {};\r\n  var instances = {};\r\n  var connectedGroups = {};\r\n  var idBase = +new Date() - 0;\r\n  var groupIdBase = +new Date() - 0;\r\n  var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\r\n  /**\r\n   * @param opts.devicePixelRatio Use window.devicePixelRatio by default\r\n   * @param opts.renderer Can choose 'canvas' or 'svg' to render the chart.\r\n   * @param opts.width Use clientWidth of the input `dom` by default.\r\n   *        Can be 'auto' (the same as null/undefined)\r\n   * @param opts.height Use clientHeight of the input `dom` by default.\r\n   *        Can be 'auto' (the same as null/undefined)\r\n   */\r\n\r\n  function init(dom, theme$$1, opts) {\r\n    {\r\n      if (!dom) {\r\n        throw new Error('Initialize failed: invalid dom.');\r\n      }\r\n    }\r\n    var existInstance = getInstanceByDom(dom);\r\n\r\n    if (existInstance) {\r\n      {\r\n        console.warn('There is a chart instance already initialized on the dom.');\r\n      }\r\n      return existInstance;\r\n    }\r\n\r\n    {\r\n      if (isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth && (!opts || opts.width == null) || !dom.clientHeight && (!opts || opts.height == null))) {\r\n        console.warn('Can\\'t get DOM width or height. Please check ' + 'dom.clientWidth and dom.clientHeight. They should not be 0.' + 'For example, you may need to call this in the callback ' + 'of window.onload.');\r\n      }\r\n    }\r\n    var chart = new ECharts(dom, theme$$1, opts);\r\n    chart.id = 'ec_' + idBase++;\r\n    instances[chart.id] = chart;\r\n    setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\r\n    enableConnect(chart);\r\n    each(postInitFuncs, function (postInitFunc) {\r\n      postInitFunc(chart);\r\n    });\r\n    return chart;\r\n  }\r\n  /**\r\n   * @usage\r\n   * (A)\r\n   * ```js\r\n   * let chart1 = echarts.init(dom1);\r\n   * let chart2 = echarts.init(dom2);\r\n   * chart1.group = 'xxx';\r\n   * chart2.group = 'xxx';\r\n   * echarts.connect('xxx');\r\n   * ```\r\n   * (B)\r\n   * ```js\r\n   * let chart1 = echarts.init(dom1);\r\n   * let chart2 = echarts.init(dom2);\r\n   * echarts.connect('xxx', [chart1, chart2]);\r\n   * ```\r\n   */\r\n\r\n\r\n  function connect(groupId) {\r\n    // Is array of charts\r\n    if (isArray(groupId)) {\r\n      var charts = groupId;\r\n      groupId = null; // If any chart has group\r\n\r\n      each(charts, function (chart) {\r\n        if (chart.group != null) {\r\n          groupId = chart.group;\r\n        }\r\n      });\r\n      groupId = groupId || 'g_' + groupIdBase++;\r\n      each(charts, function (chart) {\r\n        chart.group = groupId;\r\n      });\r\n    }\r\n\r\n    connectedGroups[groupId] = true;\r\n    return groupId;\r\n  }\r\n  /**\r\n   * @deprecated\r\n   */\r\n\r\n\r\n  function disConnect(groupId) {\r\n    connectedGroups[groupId] = false;\r\n  }\r\n  /**\r\n   * Alias and backword compat\r\n   */\r\n\r\n\r\n  var disconnect = disConnect;\r\n  /**\r\n   * Dispose a chart instance\r\n   */\r\n\r\n  function dispose(chart) {\r\n    if (typeof chart === 'string') {\r\n      chart = instances[chart];\r\n    } else if (!(chart instanceof ECharts)) {\r\n      // Try to treat as dom\r\n      chart = getInstanceByDom(chart);\r\n    }\r\n\r\n    if (chart instanceof ECharts && !chart.isDisposed()) {\r\n      chart.dispose();\r\n    }\r\n  }\r\n\r\n  function getInstanceByDom(dom) {\r\n    return instances[getAttribute(dom, DOM_ATTRIBUTE_KEY)];\r\n  }\r\n\r\n  function getInstanceById(key) {\r\n    return instances[key];\r\n  }\r\n  /**\r\n   * Register theme\r\n   */\r\n\r\n\r\n  function registerTheme(name, theme$$1) {\r\n    themeStorage[name] = theme$$1;\r\n  }\r\n  /**\r\n   * Register option preprocessor\r\n   */\r\n\r\n\r\n  function registerPreprocessor(preprocessorFunc) {\r\n    if (indexOf(optionPreprocessorFuncs, preprocessorFunc) < 0) {\r\n      optionPreprocessorFuncs.push(preprocessorFunc);\r\n    }\r\n  }\r\n\r\n  function registerProcessor(priority, processor) {\r\n    normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_DEFAULT);\r\n  }\r\n  /**\r\n   * Register postIniter\r\n   * @param {Function} postInitFunc\r\n   */\r\n\r\n\r\n  function registerPostInit(postInitFunc) {\r\n    if (indexOf(postInitFuncs, postInitFunc) < 0) {\r\n      postInitFunc && postInitFuncs.push(postInitFunc);\r\n    }\r\n  }\r\n  /**\r\n   * Register postUpdater\r\n   * @param {Function} postUpdateFunc\r\n   */\r\n\r\n\r\n  function registerPostUpdate(postUpdateFunc) {\r\n    if (indexOf(postUpdateFuncs, postUpdateFunc) < 0) {\r\n      postUpdateFunc && postUpdateFuncs.push(postUpdateFunc);\r\n    }\r\n  }\r\n\r\n  function registerAction(actionInfo, eventName, action) {\r\n    if (typeof eventName === 'function') {\r\n      action = eventName;\r\n      eventName = '';\r\n    }\r\n\r\n    var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\r\n      event: eventName\r\n    }][0]; // Event name is all lowercase\r\n\r\n    actionInfo.event = (actionInfo.event || actionType).toLowerCase();\r\n    eventName = actionInfo.event;\r\n\r\n    if (eventActionMap[eventName]) {\r\n      // Already registered.\r\n      return;\r\n    } // Validate action type and event name.\r\n\r\n\r\n    assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\r\n\r\n    if (!actions[actionType]) {\r\n      actions[actionType] = {\r\n        action: action,\r\n        actionInfo: actionInfo\r\n      };\r\n    }\r\n\r\n    eventActionMap[eventName] = actionType;\r\n  }\r\n\r\n  function registerCoordinateSystem(type, coordSysCreator) {\r\n    CoordinateSystemManager.register(type, coordSysCreator);\r\n  }\r\n  /**\r\n   * Get dimensions of specified coordinate system.\r\n   * @param {string} type\r\n   * @return {Array.<string|Object>}\r\n   */\r\n\r\n\r\n  function getCoordinateSystemDimensions(type) {\r\n    var coordSysCreator = CoordinateSystemManager.get(type);\r\n\r\n    if (coordSysCreator) {\r\n      return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\r\n    }\r\n  }\r\n\r\n  function registerLayout(priority, layoutTask) {\r\n    normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\r\n  }\r\n\r\n  function registerVisual(priority, visualTask) {\r\n    normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\r\n  }\r\n\r\n  var registeredTasks = [];\r\n\r\n  function normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\r\n    if (isFunction(priority) || isObject(priority)) {\r\n      fn = priority;\r\n      priority = defaultPriority;\r\n    }\r\n\r\n    {\r\n      if (isNaN(priority) || priority == null) {\r\n        throw new Error('Illegal priority');\r\n      } // Check duplicate\r\n\r\n\r\n      each(targetList, function (wrap) {\r\n        assert(wrap.__raw !== fn);\r\n      });\r\n    } // Already registered\r\n\r\n    if (indexOf(registeredTasks, fn) >= 0) {\r\n      return;\r\n    }\r\n\r\n    registeredTasks.push(fn);\r\n    var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\r\n    stageHandler.__prio = priority;\r\n    stageHandler.__raw = fn;\r\n    targetList.push(stageHandler);\r\n  }\r\n\r\n  function registerLoading(name, loadingFx) {\r\n    loadingEffects[name] = loadingFx;\r\n  }\r\n  /**\r\n   * ZRender need a canvas context to do measureText.\r\n   * But in node environment canvas may be created by node-canvas.\r\n   * So we need to specify how to create a canvas instead of using document.createElement('canvas')\r\n   *\r\n   * Be careful of using it in the browser.\r\n   *\r\n   * @example\r\n   *     let Canvas = require('canvas');\r\n   *     let echarts = require('echarts');\r\n   *     echarts.setCanvasCreator(function () {\r\n   *         // Small size is enough.\r\n   *         return new Canvas(32, 32);\r\n   *     });\r\n   */\r\n\r\n\r\n  function setCanvasCreator(creator) {\r\n    $override('createCanvas', creator);\r\n  }\r\n  /**\r\n   * The parameters and usage: see `mapDataStorage.registerMap`.\r\n   * Compatible with previous `echarts.registerMap`.\r\n   */\r\n\r\n\r\n  function registerMap(mapName, geoJson, specialAreas) {\r\n    mapDataStorage.registerMap(mapName, geoJson, specialAreas);\r\n  }\r\n\r\n  function getMap(mapName) {\r\n    // For backward compatibility, only return the first one.\r\n    var records = mapDataStorage.retrieveMap(mapName); // FIXME support SVG, where return not only records[0].\r\n\r\n    return records && records[0] && {\r\n      // @ts-ignore\r\n      geoJson: records[0].geoJSON,\r\n      specialAreas: records[0].specialAreas\r\n    };\r\n  }\r\n\r\n  var registerTransform = registerExternalTransform;\r\n  /**\r\n   * Globa dispatchAction to a specified chart instance.\r\n   */\r\n  // export function dispatchAction(payload: { chartId: string } & Payload, opt?: Parameters<ECharts['dispatchAction']>[1]) {\r\n  //     if (!payload || !payload.chartId) {\r\n  //         // Must have chartId to find chart\r\n  //         return;\r\n  //     }\r\n  //     const chart = instances[payload.chartId];\r\n  //     if (chart) {\r\n  //         chart.dispatchAction(payload, opt);\r\n  //     }\r\n  // }\r\n  // Buitlin global visual\r\n\r\n  registerVisual(PRIORITY_VISUAL_GLOBAL, seriesStyleTask);\r\n  registerVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataStyleTask);\r\n  registerVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataColorPaletteTask);\r\n  registerVisual(PRIORITY_VISUAL_GLOBAL, seriesSymbolTask);\r\n  registerVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataSymbolTask);\r\n  registerVisual(PRIORITY_VISUAL_DECAL, decalVisual);\r\n  registerPreprocessor(globalBackwardCompat);\r\n  registerProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\r\n  registerLoading('default', defaultLoading); // Default actions\r\n\r\n  registerAction({\r\n    type: HIGHLIGHT_ACTION_TYPE,\r\n    event: HIGHLIGHT_ACTION_TYPE,\r\n    update: HIGHLIGHT_ACTION_TYPE\r\n  }, noop);\r\n  registerAction({\r\n    type: DOWNPLAY_ACTION_TYPE,\r\n    event: DOWNPLAY_ACTION_TYPE,\r\n    update: DOWNPLAY_ACTION_TYPE\r\n  }, noop);\r\n  registerAction({\r\n    type: SELECT_ACTION_TYPE,\r\n    event: SELECT_ACTION_TYPE,\r\n    update: SELECT_ACTION_TYPE\r\n  }, noop);\r\n  registerAction({\r\n    type: UNSELECT_ACTION_TYPE,\r\n    event: UNSELECT_ACTION_TYPE,\r\n    update: UNSELECT_ACTION_TYPE\r\n  }, noop);\r\n  registerAction({\r\n    type: TOGGLE_SELECT_ACTION_TYPE,\r\n    event: TOGGLE_SELECT_ACTION_TYPE,\r\n    update: TOGGLE_SELECT_ACTION_TYPE\r\n  }, noop); // Default theme\r\n\r\n  registerTheme('light', lightTheme);\r\n  registerTheme('dark', theme); // For backward compatibility, where the namespace `dataTool` will\r\n  // be mounted on `echarts` is the extension `dataTool` is imported.\r\n\r\n  var dataTool = {};\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  function dataIndexMapValueLength(valNumOrArrLengthMoreThan2) {\r\n    return valNumOrArrLengthMoreThan2 == null ? 0 : valNumOrArrLengthMoreThan2.length || 1;\r\n  }\r\n\r\n  function defaultKeyGetter(item) {\r\n    return item;\r\n  }\r\n\r\n  var DataDiffer =\r\n  /** @class */\r\n  function () {\r\n    /**\r\n     * @param context Can be visited by this.context in callback.\r\n     */\r\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context, // By default: 'oneToOne'.\r\n    diffMode) {\r\n      this._old = oldArr;\r\n      this._new = newArr;\r\n      this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\r\n      this._newKeyGetter = newKeyGetter || defaultKeyGetter; // Visible in callback via `this.context`;\r\n\r\n      this.context = context;\r\n      this._diffModeMultiple = diffMode === 'multiple';\r\n    }\r\n    /**\r\n     * Callback function when add a data\r\n     */\r\n\r\n\r\n    DataDiffer.prototype.add = function (func) {\r\n      this._add = func;\r\n      return this;\r\n    };\r\n    /**\r\n     * Callback function when update a data\r\n     */\r\n\r\n\r\n    DataDiffer.prototype.update = function (func) {\r\n      this._update = func;\r\n      return this;\r\n    };\r\n    /**\r\n     * Callback function when update a data and only work in `cbMode: 'byKey'`.\r\n     */\r\n\r\n\r\n    DataDiffer.prototype.updateManyToOne = function (func) {\r\n      this._updateManyToOne = func;\r\n      return this;\r\n    };\r\n    /**\r\n     * Callback function when update a data and only work in `cbMode: 'byKey'`.\r\n     */\r\n\r\n\r\n    DataDiffer.prototype.updateOneToMany = function (func) {\r\n      this._updateOneToMany = func;\r\n      return this;\r\n    };\r\n    /**\r\n     * Callback function when remove a data\r\n     */\r\n\r\n\r\n    DataDiffer.prototype.remove = function (func) {\r\n      this._remove = func;\r\n      return this;\r\n    };\r\n\r\n    DataDiffer.prototype.execute = function () {\r\n      this[this._diffModeMultiple ? '_executeMultiple' : '_executeOneToOne']();\r\n    };\r\n\r\n    DataDiffer.prototype._executeOneToOne = function () {\r\n      var oldArr = this._old;\r\n      var newArr = this._new;\r\n      var newDataIndexMap = {};\r\n      var oldDataKeyArr = new Array(oldArr.length);\r\n      var newDataKeyArr = new Array(newArr.length);\r\n\r\n      this._initIndexMap(oldArr, null, oldDataKeyArr, '_oldKeyGetter');\r\n\r\n      this._initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter');\r\n\r\n      for (var i = 0; i < oldArr.length; i++) {\r\n        var oldKey = oldDataKeyArr[i];\r\n        var newIdxMapVal = newDataIndexMap[oldKey];\r\n        var newIdxMapValLen = dataIndexMapValueLength(newIdxMapVal); // idx can never be empty array here. see 'set null' logic below.\r\n\r\n        if (newIdxMapValLen > 1) {\r\n          // Consider there is duplicate key (for example, use dataItem.name as key).\r\n          // We should make sure every item in newArr and oldArr can be visited.\r\n          var newIdx = newIdxMapVal.shift();\r\n\r\n          if (newIdxMapVal.length === 1) {\r\n            newDataIndexMap[oldKey] = newIdxMapVal[0];\r\n          }\r\n\r\n          this._update && this._update(newIdx, i);\r\n        } else if (newIdxMapValLen === 1) {\r\n          newDataIndexMap[oldKey] = null;\r\n          this._update && this._update(newIdxMapVal, i);\r\n        } else {\r\n          this._remove && this._remove(i);\r\n        }\r\n      }\r\n\r\n      this._performRestAdd(newDataKeyArr, newDataIndexMap);\r\n    };\r\n    /**\r\n     * For example, consider the case:\r\n     * oldData: [o0, o1, o2, o3, o4, o5, o6, o7],\r\n     * newData: [n0, n1, n2, n3, n4, n5, n6, n7, n8],\r\n     * Where:\r\n     *     o0, o1, n0 has key 'a' (many to one)\r\n     *     o5, n4, n5, n6 has key 'b' (one to many)\r\n     *     o2, n1 has key 'c' (one to one)\r\n     *     n2, n3 has key 'd' (add)\r\n     *     o3, o4 has key 'e' (remove)\r\n     *     o6, o7, n7, n8 has key 'f' (many to many, treated as add and remove)\r\n     * Then:\r\n     *     (The order of the following directives are not ensured.)\r\n     *     this._updateManyToOne(n0, [o0, o1]);\r\n     *     this._updateOneToMany([n4, n5, n6], o5);\r\n     *     this._update(n1, o2);\r\n     *     this._remove(o3);\r\n     *     this._remove(o4);\r\n     *     this._remove(o6);\r\n     *     this._remove(o7);\r\n     *     this._add(n2);\r\n     *     this._add(n3);\r\n     *     this._add(n7);\r\n     *     this._add(n8);\r\n     */\r\n\r\n\r\n    DataDiffer.prototype._executeMultiple = function () {\r\n      var oldArr = this._old;\r\n      var newArr = this._new;\r\n      var oldDataIndexMap = {};\r\n      var newDataIndexMap = {};\r\n      var oldDataKeyArr = [];\r\n      var newDataKeyArr = [];\r\n\r\n      this._initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter');\r\n\r\n      this._initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter');\r\n\r\n      for (var i = 0; i < oldDataKeyArr.length; i++) {\r\n        var oldKey = oldDataKeyArr[i];\r\n        var oldIdxMapVal = oldDataIndexMap[oldKey];\r\n        var newIdxMapVal = newDataIndexMap[oldKey];\r\n        var oldIdxMapValLen = dataIndexMapValueLength(oldIdxMapVal);\r\n        var newIdxMapValLen = dataIndexMapValueLength(newIdxMapVal);\r\n\r\n        if (oldIdxMapValLen > 1 && newIdxMapValLen === 1) {\r\n          this._updateManyToOne && this._updateManyToOne(newIdxMapVal, oldIdxMapVal);\r\n          newDataIndexMap[oldKey] = null;\r\n        } else if (oldIdxMapValLen === 1 && newIdxMapValLen > 1) {\r\n          this._updateOneToMany && this._updateOneToMany(newIdxMapVal, oldIdxMapVal);\r\n          newDataIndexMap[oldKey] = null;\r\n        } else if (oldIdxMapValLen === 1 && newIdxMapValLen === 1) {\r\n          this._update && this._update(newIdxMapVal, oldIdxMapVal);\r\n          newDataIndexMap[oldKey] = null;\r\n        } else if (oldIdxMapValLen > 1) {\r\n          for (var i_1 = 0; i_1 < oldIdxMapValLen; i_1++) {\r\n            this._remove && this._remove(oldIdxMapVal[i_1]);\r\n          }\r\n        } else {\r\n          this._remove && this._remove(oldIdxMapVal);\r\n        }\r\n      }\r\n\r\n      this._performRestAdd(newDataKeyArr, newDataIndexMap);\r\n    };\r\n\r\n    DataDiffer.prototype._performRestAdd = function (newDataKeyArr, newDataIndexMap) {\r\n      for (var i = 0; i < newDataKeyArr.length; i++) {\r\n        var newKey = newDataKeyArr[i];\r\n        var newIdxMapVal = newDataIndexMap[newKey];\r\n        var idxMapValLen = dataIndexMapValueLength(newIdxMapVal);\r\n\r\n        if (idxMapValLen > 1) {\r\n          for (var j = 0; j < idxMapValLen; j++) {\r\n            this._add && this._add(newIdxMapVal[j]);\r\n          }\r\n        } else if (idxMapValLen === 1) {\r\n          this._add && this._add(newIdxMapVal);\r\n        } // Support both `newDataKeyArr` are duplication removed or not removed.\r\n\r\n\r\n        newDataIndexMap[newKey] = null;\r\n      }\r\n    };\r\n\r\n    DataDiffer.prototype._initIndexMap = function (arr, // Can be null.\r\n    map, // In 'byKey', the output `keyArr` is duplication removed.\r\n    // In 'byIndex', the output `keyArr` is not duplication removed and\r\n    //     its indices are accurately corresponding to `arr`.\r\n    keyArr, keyGetterName) {\r\n      var cbModeMultiple = this._diffModeMultiple;\r\n\r\n      for (var i = 0; i < arr.length; i++) {\r\n        // Add prefix to avoid conflict with Object.prototype.\r\n        var key = '_ec_' + this[keyGetterName](arr[i], i);\r\n\r\n        if (!cbModeMultiple) {\r\n          keyArr[i] = key;\r\n        }\r\n\r\n        if (!map) {\r\n          continue;\r\n        }\r\n\r\n        var idxMapVal = map[key];\r\n        var idxMapValLen = dataIndexMapValueLength(idxMapVal);\r\n\r\n        if (idxMapValLen === 0) {\r\n          // Simple optimize: in most cases, one index has one key,\r\n          // do not need array.\r\n          map[key] = i;\r\n\r\n          if (cbModeMultiple) {\r\n            keyArr.push(key);\r\n          }\r\n        } else if (idxMapValLen === 1) {\r\n          map[key] = [idxMapVal, i];\r\n        } else {\r\n          idxMapVal.push(i);\r\n        }\r\n      }\r\n    };\r\n\r\n    return DataDiffer;\r\n  }();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function summarizeDimensions(data) {\r\n    var summary = {};\r\n    var encode = summary.encode = {};\r\n    var notExtraCoordDimMap = createHashMap();\r\n    var defaultedLabel = [];\r\n    var defaultedTooltip = []; // See the comment of `List.js#userOutput`.\r\n\r\n    var userOutput = summary.userOutput = {\r\n      dimensionNames: data.dimensions.slice(),\r\n      encode: {}\r\n    };\r\n    each$1(data.dimensions, function (dimName) {\r\n      var dimItem = data.getDimensionInfo(dimName);\r\n      var coordDim = dimItem.coordDim;\r\n\r\n      if (coordDim) {\r\n        {\r\n          assert$1(VISUAL_DIMENSIONS.get(coordDim) == null);\r\n        }\r\n        var coordDimIndex = dimItem.coordDimIndex;\r\n        getOrCreateEncodeArr(encode, coordDim)[coordDimIndex] = dimName;\r\n\r\n        if (!dimItem.isExtraCoord) {\r\n          notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\r\n          // because when dataset is used, it is hard to guess which dimension\r\n          // can be value dimension. If both show x, y on label is not look good,\r\n          // and conventionally y axis is focused more.\r\n\r\n          if (mayLabelDimType(dimItem.type)) {\r\n            defaultedLabel[0] = dimName;\r\n          } // User output encode do not contain generated coords.\r\n          // And it only has index. User can use index to retrieve value from the raw item array.\r\n\r\n\r\n          getOrCreateEncodeArr(userOutput.encode, coordDim)[coordDimIndex] = dimItem.index;\r\n        }\r\n\r\n        if (dimItem.defaultTooltip) {\r\n          defaultedTooltip.push(dimName);\r\n        }\r\n      }\r\n\r\n      VISUAL_DIMENSIONS.each(function (v, otherDim) {\r\n        var encodeArr = getOrCreateEncodeArr(encode, otherDim);\r\n        var dimIndex = dimItem.otherDims[otherDim];\r\n\r\n        if (dimIndex != null && dimIndex !== false) {\r\n          encodeArr[dimIndex] = dimItem.name;\r\n        }\r\n      });\r\n    });\r\n    var dataDimsOnCoord = [];\r\n    var encodeFirstDimNotExtra = {};\r\n    notExtraCoordDimMap.each(function (v, coordDim) {\r\n      var dimArr = encode[coordDim];\r\n      encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\r\n      // dim canot on more than one coordDim.\r\n\r\n      dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\r\n    });\r\n    summary.dataDimsOnCoord = dataDimsOnCoord;\r\n    summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\r\n    var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\r\n    // in this way. Use label.formatter instead. May be remove this approach someday.\r\n\r\n    if (encodeLabel && encodeLabel.length) {\r\n      defaultedLabel = encodeLabel.slice();\r\n    }\r\n\r\n    var encodeTooltip = encode.tooltip;\r\n\r\n    if (encodeTooltip && encodeTooltip.length) {\r\n      defaultedTooltip = encodeTooltip.slice();\r\n    } else if (!defaultedTooltip.length) {\r\n      defaultedTooltip = defaultedLabel.slice();\r\n    }\r\n\r\n    encode.defaultedLabel = defaultedLabel;\r\n    encode.defaultedTooltip = defaultedTooltip;\r\n    return summary;\r\n  }\r\n\r\n  function getOrCreateEncodeArr(encode, dim) {\r\n    if (!encode.hasOwnProperty(dim)) {\r\n      encode[dim] = [];\r\n    }\r\n\r\n    return encode[dim];\r\n  } // FIXME:TS should be type `AxisType`\r\n\r\n\r\n  function getDimensionTypeByAxis(axisType) {\r\n    return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\r\n  }\r\n\r\n  function mayLabelDimType(dimType) {\r\n    // In most cases, ordinal and time do not suitable for label.\r\n    // Ordinal info can be displayed on axis. Time is too long.\r\n    return !(dimType === 'ordinal' || dimType === 'time');\r\n  } // function findTheLastDimMayLabel(data) {\r\n  //     // Get last value dim\r\n  //     let dimensions = data.dimensions.slice();\r\n  //     let valueType;\r\n  //     let valueDim;\r\n  //     while (dimensions.length && (\r\n  //         valueDim = dimensions.pop(),\r\n  //         valueType = data.getDimensionInfo(valueDim).type,\r\n  //         valueType === 'ordinal' || valueType === 'time'\r\n  //     )) {} // jshint ignore:line\r\n  //     return valueDim;\r\n  // }\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var DataDimensionInfo =\r\n  /** @class */\r\n  function () {\r\n    /**\r\n     * @param opt All of the fields will be shallow copied.\r\n     */\r\n    function DataDimensionInfo(opt) {\r\n      /**\r\n       * The format of `otherDims` is:\r\n       * ```js\r\n       * {\r\n       *     tooltip: number optional,\r\n       *     label: number optional,\r\n       *     itemName: number optional,\r\n       *     seriesName: number optional,\r\n       * }\r\n       * ```\r\n       *\r\n       * A `series.encode` can specified these fields:\r\n       * ```js\r\n       * encode: {\r\n       *     // \"3, 1, 5\" is the index of data dimension.\r\n       *     tooltip: [3, 1, 5],\r\n       *     label: [0, 3],\r\n       *     ...\r\n       * }\r\n       * ```\r\n       * `otherDims` is the parse result of the `series.encode` above, like:\r\n       * ```js\r\n       * // Suppose the index of this data dimension is `3`.\r\n       * this.otherDims = {\r\n       *     // `3` is at the index `0` of the `encode.tooltip`\r\n       *     tooltip: 0,\r\n       *     // `3` is at the index `1` of the `encode.tooltip`\r\n       *     label: 1\r\n       * };\r\n       * ```\r\n       *\r\n       * This prop should never be `null`/`undefined` after initialized.\r\n       */\r\n      this.otherDims = {};\r\n\r\n      if (opt != null) {\r\n        extend(this, opt);\r\n      }\r\n    }\r\n\r\n    return DataDimensionInfo;\r\n  }();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /* global Float64Array, Int32Array, Uint32Array, Uint16Array */\r\n\r\n  /**\r\n   * List for data storage\r\n   */\r\n\r\n\r\n  var mathFloor = Math.floor;\r\n  var isObject$3 = isObject$1;\r\n  var map$1 = map;\r\n  var UNDEFINED = 'undefined';\r\n  var INDEX_NOT_FOUND = -1; // Use prefix to avoid index to be the same as otherIdList[idx],\r\n  // which will cause weird udpate animation.\r\n\r\n  var ID_PREFIX = 'e\\0\\0';\r\n  var dataCtors = {\r\n    'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\r\n    'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\r\n    // Ordinal data type can be string or int\r\n    'ordinal': Array,\r\n    'number': Array,\r\n    'time': Array\r\n  }; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\r\n  // different from the Ctor of typed array.\r\n\r\n  var CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\r\n  var CtorInt32Array = typeof Int32Array === UNDEFINED ? Array : Int32Array;\r\n  var CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\r\n  var TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx', '_nameRepeatCount'];\r\n  var CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent']; // -----------------------------\r\n  // Internal method declarations:\r\n  // -----------------------------\r\n\r\n  var defaultDimValueGetters;\r\n  var prepareInvertedIndex;\r\n  var getIndicesCtor;\r\n  var prepareStorage;\r\n  var getRawIndexWithoutIndices;\r\n  var getRawIndexWithIndices;\r\n  var getId;\r\n  var getIdNameFromStore;\r\n  var makeIdFromName;\r\n  var normalizeDimensions;\r\n  var validateDimensions;\r\n  var cloneListForMapAndSample;\r\n  var getInitialExtent;\r\n  var setItemDataAndSeriesIndex;\r\n  var transferProperties;\r\n\r\n  var List =\r\n  /** @class */\r\n  function () {\r\n    /**\r\n     * @param dimensions\r\n     *        For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\r\n     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\r\n     */\r\n    function List(dimensions, hostModel) {\r\n      this.type = 'list';\r\n      this._count = 0;\r\n      this._rawCount = 0;\r\n      this._storage = {}; // We have an extra array store here. It's faster to be acessed than KV structured `_storage`.\r\n      // We profile the code `storage[dim]` and it seems to be KeyedLoadIC_Megamorphic instead of fast property access.\r\n      // Not sure why this happens. But using an extra array seems leads to faster `initData`\r\n      // See https://github.com/apache/incubator-echarts/pull/13314 for more explanation.\r\n\r\n      this._storageArr = [];\r\n      this._nameList = [];\r\n      this._idList = []; // Models of data option is stored sparse for optimizing memory cost\r\n      // Never used yet (not used yet).\r\n      // private _optionModels: Model[] = [];\r\n      // Global visual properties after visual coding\r\n\r\n      this._visual = {}; // Globel layout properties.\r\n\r\n      this._layout = {}; // Item visual properties after visual coding\r\n\r\n      this._itemVisuals = []; // Item layout properties after layout\r\n\r\n      this._itemLayouts = []; // Graphic elemnents\r\n\r\n      this._graphicEls = []; // Raw extent will not be cloned, but only transfered.\r\n      // It will not be calculated util needed.\r\n\r\n      this._rawExtent = {};\r\n      this._extent = {}; // key: dim, value: extent\r\n\r\n      this._approximateExtent = {};\r\n      this._calculationInfo = {}; // Having detected that there is data item is non primitive type\r\n      // (in type `OptionDataItemObject`).\r\n      // Like `data: [ { value: xx, itemStyle: {...} }, ...]`\r\n      // At present it only happen in `SOURCE_FORMAT_ORIGINAL`.\r\n\r\n      this.hasItemOption = true; // Methods that create a new list based on this list should be listed here.\r\n      // Notice that those method should `RETURN` the new list.\r\n\r\n      this.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'lttbDownSample', 'map']; // Methods that change indices of this list should be listed here.\r\n\r\n      this.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\r\n      this.DOWNSAMPLE_METHODS = ['downSample', 'lttbDownSample'];\r\n      /**\r\n       * Get raw data index.\r\n       * Do not initialize.\r\n       * Default `getRawIndex`. And it can be changed.\r\n       */\r\n\r\n      this.getRawIndex = getRawIndexWithoutIndices;\r\n      dimensions = dimensions || ['x', 'y'];\r\n      var dimensionInfos = {};\r\n      var dimensionNames = [];\r\n      var invertedIndicesMap = {};\r\n\r\n      for (var i = 0; i < dimensions.length; i++) {\r\n        // Use the original dimensions[i], where other flag props may exists.\r\n        var dimInfoInput = dimensions[i];\r\n        var dimensionInfo = isString(dimInfoInput) ? new DataDimensionInfo({\r\n          name: dimInfoInput\r\n        }) : !(dimInfoInput instanceof DataDimensionInfo) ? new DataDimensionInfo(dimInfoInput) : dimInfoInput;\r\n        var dimensionName = dimensionInfo.name;\r\n        dimensionInfo.type = dimensionInfo.type || 'float';\r\n\r\n        if (!dimensionInfo.coordDim) {\r\n          dimensionInfo.coordDim = dimensionName;\r\n          dimensionInfo.coordDimIndex = 0;\r\n        }\r\n\r\n        var otherDims = dimensionInfo.otherDims = dimensionInfo.otherDims || {};\r\n        dimensionNames.push(dimensionName);\r\n        dimensionInfos[dimensionName] = dimensionInfo;\r\n        dimensionInfo.index = i;\r\n\r\n        if (dimensionInfo.createInvertedIndices) {\r\n          invertedIndicesMap[dimensionName] = [];\r\n        }\r\n\r\n        if (otherDims.itemName === 0) {\r\n          this._nameDimIdx = i;\r\n          this._nameOrdinalMeta = dimensionInfo.ordinalMeta;\r\n        }\r\n\r\n        if (otherDims.itemId === 0) {\r\n          this._idDimIdx = i;\r\n          this._idOrdinalMeta = dimensionInfo.ordinalMeta;\r\n        }\r\n      }\r\n\r\n      this.dimensions = dimensionNames;\r\n      this._dimensionInfos = dimensionInfos;\r\n      this.hostModel = hostModel; // Cache summary info for fast visit. See \"dimensionHelper\".\r\n\r\n      this._dimensionsSummary = summarizeDimensions(this);\r\n      this._invertedIndicesMap = invertedIndicesMap;\r\n      this.userOutput = this._dimensionsSummary.userOutput;\r\n    }\r\n    /**\r\n     * The meanings of the input parameter `dim`:\r\n     *\r\n     * + If dim is a number (e.g., `1`), it means the index of the dimension.\r\n     *   For example, `getDimension(0)` will return 'x' or 'lng' or 'radius'.\r\n     * + If dim is a number-like string (e.g., `\"1\"`):\r\n     *     + If there is the same concrete dim name defined in `this.dimensions`, it means that concrete name.\r\n     *     + If not, it will be converted to a number, which means the index of the dimension.\r\n     *        (why? because of the backward compatbility. We have been tolerating number-like string in\r\n     *        dimension setting, although now it seems that it is not a good idea.)\r\n     *     For example, `visualMap[i].dimension: \"1\"` is the same meaning as `visualMap[i].dimension: 1`,\r\n     *     if no dimension name is defined as `\"1\"`.\r\n     * + If dim is a not-number-like string, it means the concrete dim name.\r\n     *   For example, it can be be default name `\"x\"`, `\"y\"`, `\"z\"`, `\"lng\"`, `\"lat\"`, `\"angle\"`, `\"radius\"`,\r\n     *   or customized in `dimensions` property of option like `\"age\"`.\r\n     *\r\n     * Get dimension name\r\n     * @param dim See above.\r\n     * @return Concrete dim name.\r\n     */\r\n\r\n\r\n    List.prototype.getDimension = function (dim) {\r\n      if (typeof dim === 'number' // If being a number-like string but not being defined a dimension name.\r\n      || !isNaN(dim) && !this._dimensionInfos.hasOwnProperty(dim)) {\r\n        dim = this.dimensions[dim];\r\n      }\r\n\r\n      return dim;\r\n    };\r\n    /**\r\n     * Get type and calculation info of particular dimension\r\n     * @param dim\r\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\r\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\r\n     */\r\n\r\n\r\n    List.prototype.getDimensionInfo = function (dim) {\r\n      // Do not clone, because there may be categories in dimInfo.\r\n      return this._dimensionInfos[this.getDimension(dim)];\r\n    };\r\n    /**\r\n     * concrete dimension name list on coord.\r\n     */\r\n\r\n\r\n    List.prototype.getDimensionsOnCoord = function () {\r\n      return this._dimensionsSummary.dataDimsOnCoord.slice();\r\n    };\r\n\r\n    List.prototype.mapDimension = function (coordDim, idx) {\r\n      var dimensionsSummary = this._dimensionsSummary;\r\n\r\n      if (idx == null) {\r\n        return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\r\n      }\r\n\r\n      var dims = dimensionsSummary.encode[coordDim];\r\n      return dims ? dims[idx] : null;\r\n    };\r\n\r\n    List.prototype.mapDimensionsAll = function (coordDim) {\r\n      var dimensionsSummary = this._dimensionsSummary;\r\n      var dims = dimensionsSummary.encode[coordDim];\r\n      return (dims || []).slice();\r\n    };\r\n    /**\r\n     * Initialize from data\r\n     * @param data source or data or data provider.\r\n     * @param nameList The name of a datum is used on data diff and\r\n     *        default label/tooltip.\r\n     *        A name can be specified in encode.itemName,\r\n     *        or dataItem.name (only for series option data),\r\n     *        or provided in nameList from outside.\r\n     */\r\n\r\n\r\n    List.prototype.initData = function (data, nameList, dimValueGetter) {\r\n      var notProvider = isSourceInstance(data) || isArrayLike(data);\r\n      var provider = notProvider ? new DefaultDataProvider(data, this.dimensions.length) : data;\r\n      {\r\n        assert$1(notProvider || isFunction$1(provider.getItem) && isFunction$1(provider.count), 'Inavlid data provider.');\r\n      }\r\n      this._rawData = provider;\r\n      var sourceFormat = provider.getSource().sourceFormat; // Clear\r\n\r\n      this._storage = {};\r\n      this._indices = null;\r\n      this._dontMakeIdFromName = this._idDimIdx != null || sourceFormat === SOURCE_FORMAT_TYPED_ARRAY // Cosndier performance.\r\n      || !!provider.fillStorage;\r\n      this._nameList = (nameList || []).slice();\r\n      this._idList = [];\r\n      this._nameRepeatCount = {};\r\n\r\n      if (!dimValueGetter) {\r\n        this.hasItemOption = false;\r\n      }\r\n\r\n      this.defaultDimValueGetter = defaultDimValueGetters[sourceFormat]; // Default dim value getter\r\n\r\n      this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter;\r\n      this._dimValueGetterArrayRows = defaultDimValueGetters.arrayRows; // Reset raw extent.\r\n\r\n      this._rawExtent = {};\r\n\r\n      this._initDataFromProvider(0, provider.count()); // If data has no item option.\r\n\r\n\r\n      if (provider.pure) {\r\n        this.hasItemOption = false;\r\n      }\r\n    };\r\n\r\n    List.prototype.getProvider = function () {\r\n      return this._rawData;\r\n    };\r\n    /**\r\n     * Caution: Can be only called on raw data (before `this._indices` created).\r\n     */\r\n\r\n\r\n    List.prototype.appendData = function (data) {\r\n      {\r\n        assert$1(!this._indices, 'appendData can only be called on raw data.');\r\n      }\r\n      var rawData = this._rawData;\r\n      var start = this.count();\r\n      rawData.appendData(data);\r\n      var end = rawData.count();\r\n\r\n      if (!rawData.persistent) {\r\n        end += start;\r\n      }\r\n\r\n      this._initDataFromProvider(start, end, true);\r\n    };\r\n    /**\r\n     * Caution: Can be only called on raw data (before `this._indices` created).\r\n     * This method does not modify `rawData` (`dataProvider`), but only\r\n     * add values to storage.\r\n     *\r\n     * The final count will be increased by `Math.max(values.length, names.length)`.\r\n     *\r\n     * @param values That is the SourceType: 'arrayRows', like\r\n     *        [\r\n     *            [12, 33, 44],\r\n     *            [NaN, 43, 1],\r\n     *            ['-', 'asdf', 0]\r\n     *        ]\r\n     *        Each item is exaclty cooresponding to a dimension.\r\n     */\r\n\r\n\r\n    List.prototype.appendValues = function (values, names) {\r\n      var storage = this._storage;\r\n      var dimensions = this.dimensions;\r\n      var dimLen = dimensions.length;\r\n      var rawExtent = this._rawExtent;\r\n      var start = this.count();\r\n      var end = start + Math.max(values.length, names ? names.length : 0);\r\n\r\n      for (var i = 0; i < dimLen; i++) {\r\n        var dim = dimensions[i];\r\n\r\n        if (!rawExtent[dim]) {\r\n          rawExtent[dim] = getInitialExtent();\r\n        }\r\n\r\n        prepareStorage(storage, this._dimensionInfos[dim], end, true);\r\n      }\r\n\r\n      var rawExtentArr = map$1(dimensions, function (dim) {\r\n        return rawExtent[dim];\r\n      });\r\n      var storageArr = this._storageArr = map$1(dimensions, function (dim) {\r\n        return storage[dim];\r\n      });\r\n      var emptyDataItem = [];\r\n\r\n      for (var idx = start; idx < end; idx++) {\r\n        var sourceIdx = idx - start; // Store the data by dimensions\r\n\r\n        for (var dimIdx = 0; dimIdx < dimLen; dimIdx++) {\r\n          var dim = dimensions[dimIdx];\r\n\r\n          var val = this._dimValueGetterArrayRows(values[sourceIdx] || emptyDataItem, dim, sourceIdx, dimIdx);\r\n\r\n          storageArr[dimIdx][idx] = val;\r\n          var dimRawExtent = rawExtentArr[dimIdx];\r\n          val < dimRawExtent[0] && (dimRawExtent[0] = val);\r\n          val > dimRawExtent[1] && (dimRawExtent[1] = val);\r\n        }\r\n\r\n        if (names) {\r\n          this._nameList[idx] = names[sourceIdx];\r\n\r\n          if (!this._dontMakeIdFromName) {\r\n            makeIdFromName(this, idx);\r\n          }\r\n        }\r\n      }\r\n\r\n      this._rawCount = this._count = end; // Reset data extent\r\n\r\n      this._extent = {};\r\n      prepareInvertedIndex(this);\r\n    };\r\n\r\n    List.prototype._initDataFromProvider = function (start, end, append) {\r\n      if (start >= end) {\r\n        return;\r\n      }\r\n\r\n      var rawData = this._rawData;\r\n      var storage = this._storage;\r\n      var dimensions = this.dimensions;\r\n      var dimLen = dimensions.length;\r\n      var dimensionInfoMap = this._dimensionInfos;\r\n      var nameList = this._nameList;\r\n      var idList = this._idList;\r\n      var rawExtent = this._rawExtent;\r\n      var sourceFormat = rawData.getSource().sourceFormat;\r\n      var isFormatOriginal = sourceFormat === SOURCE_FORMAT_ORIGINAL;\r\n\r\n      for (var i = 0; i < dimLen; i++) {\r\n        var dim = dimensions[i];\r\n\r\n        if (!rawExtent[dim]) {\r\n          rawExtent[dim] = getInitialExtent();\r\n        }\r\n\r\n        prepareStorage(storage, dimensionInfoMap[dim], end, append);\r\n      }\r\n\r\n      var storageArr = this._storageArr = map$1(dimensions, function (dim) {\r\n        return storage[dim];\r\n      });\r\n      var rawExtentArr = map$1(dimensions, function (dim) {\r\n        return rawExtent[dim];\r\n      });\r\n\r\n      if (rawData.fillStorage) {\r\n        rawData.fillStorage(start, end, storageArr, rawExtentArr);\r\n      } else {\r\n        var dataItem = [];\r\n\r\n        for (var idx = start; idx < end; idx++) {\r\n          // NOTICE: Try not to write things into dataItem\r\n          dataItem = rawData.getItem(idx, dataItem); // Each data item is value\r\n          // [1, 2]\r\n          // 2\r\n          // Bar chart, line chart which uses category axis\r\n          // only gives the 'y' value. 'x' value is the indices of category\r\n          // Use a tempValue to normalize the value to be a (x, y) value\r\n          // Store the data by dimensions\r\n\r\n          for (var dimIdx = 0; dimIdx < dimLen; dimIdx++) {\r\n            var dim = dimensions[dimIdx];\r\n            var dimStorage = storageArr[dimIdx]; // PENDING NULL is empty or zero\r\n\r\n            var val = this._dimValueGetter(dataItem, dim, idx, dimIdx);\r\n\r\n            dimStorage[idx] = val;\r\n            var dimRawExtent = rawExtentArr[dimIdx];\r\n            val < dimRawExtent[0] && (dimRawExtent[0] = val);\r\n            val > dimRawExtent[1] && (dimRawExtent[1] = val);\r\n          } // If dataItem is {name: ...} or {id: ...}, it has highest priority.\r\n          // This kind of ids and names are always stored `_nameList` and `_idList`.\r\n\r\n\r\n          if (isFormatOriginal && !rawData.pure && dataItem) {\r\n            var itemName = dataItem.name;\r\n\r\n            if (nameList[idx] == null && itemName != null) {\r\n              nameList[idx] = convertOptionIdName(itemName, null);\r\n            }\r\n\r\n            var itemId = dataItem.id;\r\n\r\n            if (idList[idx] == null && itemId != null) {\r\n              idList[idx] = convertOptionIdName(itemId, null);\r\n            }\r\n          }\r\n\r\n          if (!this._dontMakeIdFromName) {\r\n            makeIdFromName(this, idx);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!rawData.persistent && rawData.clean) {\r\n        // Clean unused data if data source is typed array.\r\n        rawData.clean();\r\n      }\r\n\r\n      this._rawCount = this._count = end; // Reset data extent\r\n\r\n      this._extent = {};\r\n      prepareInvertedIndex(this);\r\n    };\r\n\r\n    List.prototype.count = function () {\r\n      return this._count;\r\n    };\r\n\r\n    List.prototype.getIndices = function () {\r\n      var newIndices;\r\n      var indices = this._indices;\r\n\r\n      if (indices) {\r\n        var Ctor = indices.constructor;\r\n        var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\r\n\r\n        if (Ctor === Array) {\r\n          newIndices = new Ctor(thisCount);\r\n\r\n          for (var i = 0; i < thisCount; i++) {\r\n            newIndices[i] = indices[i];\r\n          }\r\n        } else {\r\n          newIndices = new Ctor(indices.buffer, 0, thisCount);\r\n        }\r\n      } else {\r\n        var Ctor = getIndicesCtor(this);\r\n        newIndices = new Ctor(this.count());\r\n\r\n        for (var i = 0; i < newIndices.length; i++) {\r\n          newIndices[i] = i;\r\n        }\r\n      }\r\n\r\n      return newIndices;\r\n    }; // Get data by index of dimension.\r\n    // Because in v8 access array by number variable is faster than access object by string variable\r\n    // Not sure why but the optimization just works.\r\n\r\n\r\n    List.prototype.getByDimIdx = function (dimIdx, idx) {\r\n      if (!(idx >= 0 && idx < this._count)) {\r\n        return NaN;\r\n      }\r\n\r\n      var dimStore = this._storageArr[dimIdx];\r\n      return dimStore ? dimStore[this.getRawIndex(idx)] : NaN;\r\n    };\r\n    /**\r\n     * Get value. Return NaN if idx is out of range.\r\n     * @param dim Dim must be concrete name.\r\n     */\r\n\r\n\r\n    List.prototype.get = function (dim, idx) {\r\n      if (!(idx >= 0 && idx < this._count)) {\r\n        return NaN;\r\n      }\r\n\r\n      var dimStore = this._storage[dim];\r\n      return dimStore ? dimStore[this.getRawIndex(idx)] : NaN;\r\n    };\r\n    /**\r\n     * @param dim concrete dim\r\n     */\r\n\r\n\r\n    List.prototype.getByRawIndex = function (dim, rawIdx) {\r\n      if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\r\n        return NaN;\r\n      }\r\n\r\n      var dimStore = this._storage[dim];\r\n      return dimStore ? dimStore[rawIdx] : NaN;\r\n    };\r\n\r\n    List.prototype.getValues = function (dimensions, idx) {\r\n      var values = [];\r\n\r\n      if (!isArray(dimensions)) {\r\n        // stack = idx;\r\n        idx = dimensions;\r\n        dimensions = this.dimensions;\r\n      }\r\n\r\n      for (var i = 0, len = dimensions.length; i < len; i++) {\r\n        values.push(this.get(dimensions[i], idx\r\n        /*, stack */\r\n        ));\r\n      }\r\n\r\n      return values;\r\n    };\r\n    /**\r\n     * If value is NaN. Inlcuding '-'\r\n     * Only check the coord dimensions.\r\n     */\r\n\r\n\r\n    List.prototype.hasValue = function (idx) {\r\n      var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\r\n\r\n      for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\r\n        // Ordinal type originally can be string or number.\r\n        // But when an ordinal type is used on coord, it can\r\n        // not be string but only number. So we can also use isNaN.\r\n        if (isNaN(this.get(dataDimsOnCoord[i], idx))) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    };\r\n    /**\r\n     * Get extent of data in one dimension\r\n     */\r\n\r\n\r\n    List.prototype.getDataExtent = function (dim) {\r\n      // Make sure use concrete dim as cache name.\r\n      dim = this.getDimension(dim);\r\n      var dimData = this._storage[dim];\r\n      var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\r\n\r\n      if (!dimData) {\r\n        return initialExtent;\r\n      } // Make more strict checkings to ensure hitting cache.\r\n\r\n\r\n      var currEnd = this.count(); // let cacheName = [dim, !!stack].join('_');\r\n      // let cacheName = dim;\r\n      // Consider the most cases when using data zoom, `getDataExtent`\r\n      // happened before filtering. We cache raw extent, which is not\r\n      // necessary to be cleared and recalculated when restore data.\r\n\r\n      var useRaw = !this._indices; // && !stack;\r\n\r\n      var dimExtent;\r\n\r\n      if (useRaw) {\r\n        return this._rawExtent[dim].slice();\r\n      }\r\n\r\n      dimExtent = this._extent[dim];\r\n\r\n      if (dimExtent) {\r\n        return dimExtent.slice();\r\n      }\r\n\r\n      dimExtent = initialExtent;\r\n      var min = dimExtent[0];\r\n      var max = dimExtent[1];\r\n\r\n      for (var i = 0; i < currEnd; i++) {\r\n        var rawIdx = this.getRawIndex(i);\r\n        var value = dimData[rawIdx];\r\n        value < min && (min = value);\r\n        value > max && (max = value);\r\n      }\r\n\r\n      dimExtent = [min, max];\r\n      this._extent[dim] = dimExtent;\r\n      return dimExtent;\r\n    };\r\n    /**\r\n     * PENDING: In fact currently this function is only used to short-circuit\r\n     * the calling of `scale.unionExtentFromData` when data have been filtered by modules\r\n     * like \"dataZoom\". `scale.unionExtentFromData` is used to calculate data extent for series on\r\n     * an axis, but if a \"axis related data filter module\" is used, the extent of the axis have\r\n     * been fixed and no need to calling `scale.unionExtentFromData` actually.\r\n     * But if we add \"custom data filter\" in future, which is not \"axis related\", this method may\r\n     * be still needed.\r\n     *\r\n     * Optimize for the scenario that data is filtered by a given extent.\r\n     * Consider that if data amount is more than hundreds of thousand,\r\n     * extent calculation will cost more than 10ms and the cache will\r\n     * be erased because of the filtering.\r\n     */\r\n\r\n\r\n    List.prototype.getApproximateExtent = function (dim) {\r\n      dim = this.getDimension(dim);\r\n      return this._approximateExtent[dim] || this.getDataExtent(dim);\r\n    };\r\n    /**\r\n     * Calculate extent on a filtered data might be time consuming.\r\n     * Approximate extent is only used for: calculte extent of filtered data outside.\r\n     */\r\n\r\n\r\n    List.prototype.setApproximateExtent = function (extent, dim) {\r\n      dim = this.getDimension(dim);\r\n      this._approximateExtent[dim] = extent.slice();\r\n    };\r\n\r\n    List.prototype.getCalculationInfo = function (key) {\r\n      return this._calculationInfo[key];\r\n    };\r\n\r\n    List.prototype.setCalculationInfo = function (key, value) {\r\n      isObject$3(key) ? extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\r\n    };\r\n    /**\r\n     * Get sum of data in one dimension\r\n     */\r\n\r\n\r\n    List.prototype.getSum = function (dim) {\r\n      var dimData = this._storage[dim];\r\n      var sum = 0;\r\n\r\n      if (dimData) {\r\n        for (var i = 0, len = this.count(); i < len; i++) {\r\n          var value = this.get(dim, i);\r\n\r\n          if (!isNaN(value)) {\r\n            sum += value;\r\n          }\r\n        }\r\n      }\r\n\r\n      return sum;\r\n    };\r\n    /**\r\n     * Get median of data in one dimension\r\n     */\r\n\r\n\r\n    List.prototype.getMedian = function (dim) {\r\n      var dimDataArray = []; // map all data of one dimension\r\n\r\n      this.each(dim, function (val) {\r\n        if (!isNaN(val)) {\r\n          dimDataArray.push(val);\r\n        }\r\n      }); // TODO\r\n      // Use quick select?\r\n\r\n      var sortedDimDataArray = dimDataArray.sort(function (a, b) {\r\n        return a - b;\r\n      });\r\n      var len = this.count(); // calculate median\r\n\r\n      return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\r\n    }; // /**\r\n    //  * Retreive the index with given value\r\n    //  * @param {string} dim Concrete dimension.\r\n    //  * @param {number} value\r\n    //  * @return {number}\r\n    //  */\r\n    // Currently incorrect: should return dataIndex but not rawIndex.\r\n    // Do not fix it until this method is to be used somewhere.\r\n    // FIXME Precision of float value\r\n    // indexOf(dim, value) {\r\n    //     let storage = this._storage;\r\n    //     let dimData = storage[dim];\r\n    //     let chunkSize = this._chunkSize;\r\n    //     if (dimData) {\r\n    //         for (let i = 0, len = this.count(); i < len; i++) {\r\n    //             let chunkIndex = mathFloor(i / chunkSize);\r\n    //             let chunkOffset = i % chunkSize;\r\n    //             if (dimData[chunkIndex][chunkOffset] === value) {\r\n    //                 return i;\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     return -1;\r\n    // }\r\n\r\n    /**\r\n     * Only support the dimension which inverted index created.\r\n     * Do not support other cases until required.\r\n     * @param dim concrete dim\r\n     * @param value ordinal index\r\n     * @return rawIndex\r\n     */\r\n\r\n\r\n    List.prototype.rawIndexOf = function (dim, value) {\r\n      var invertedIndices = dim && this._invertedIndicesMap[dim];\r\n      {\r\n        if (!invertedIndices) {\r\n          throw new Error('Do not supported yet');\r\n        }\r\n      }\r\n      var rawIndex = invertedIndices[value];\r\n\r\n      if (rawIndex == null || isNaN(rawIndex)) {\r\n        return INDEX_NOT_FOUND;\r\n      }\r\n\r\n      return rawIndex;\r\n    };\r\n    /**\r\n     * Retreive the index with given name\r\n     */\r\n\r\n\r\n    List.prototype.indexOfName = function (name) {\r\n      for (var i = 0, len = this.count(); i < len; i++) {\r\n        if (this.getName(i) === name) {\r\n          return i;\r\n        }\r\n      }\r\n\r\n      return -1;\r\n    };\r\n    /**\r\n     * Retreive the index with given raw data index\r\n     */\r\n\r\n\r\n    List.prototype.indexOfRawIndex = function (rawIndex) {\r\n      if (rawIndex >= this._rawCount || rawIndex < 0) {\r\n        return -1;\r\n      }\r\n\r\n      if (!this._indices) {\r\n        return rawIndex;\r\n      } // Indices are ascending\r\n\r\n\r\n      var indices = this._indices; // If rawIndex === dataIndex\r\n\r\n      var rawDataIndex = indices[rawIndex];\r\n\r\n      if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\r\n        return rawIndex;\r\n      }\r\n\r\n      var left = 0;\r\n      var right = this._count - 1;\r\n\r\n      while (left <= right) {\r\n        var mid = (left + right) / 2 | 0;\r\n\r\n        if (indices[mid] < rawIndex) {\r\n          left = mid + 1;\r\n        } else if (indices[mid] > rawIndex) {\r\n          right = mid - 1;\r\n        } else {\r\n          return mid;\r\n        }\r\n      }\r\n\r\n      return -1;\r\n    };\r\n    /**\r\n     * Retreive the index of nearest value\r\n     * @param dim\r\n     * @param value\r\n     * @param [maxDistance=Infinity]\r\n     * @return If and only if multiple indices has\r\n     *         the same value, they are put to the result.\r\n     */\r\n\r\n\r\n    List.prototype.indicesOfNearest = function (dim, value, maxDistance) {\r\n      var storage = this._storage;\r\n      var dimData = storage[dim];\r\n      var nearestIndices = [];\r\n\r\n      if (!dimData) {\r\n        return nearestIndices;\r\n      }\r\n\r\n      if (maxDistance == null) {\r\n        maxDistance = Infinity;\r\n      }\r\n\r\n      var minDist = Infinity;\r\n      var minDiff = -1;\r\n      var nearestIndicesLen = 0; // Check the test case of `test/ut/spec/data/List.js`.\r\n\r\n      for (var i = 0, len = this.count(); i < len; i++) {\r\n        var dataIndex = this.getRawIndex(i);\r\n        var diff = value - dimData[dataIndex];\r\n        var dist = Math.abs(diff);\r\n\r\n        if (dist <= maxDistance) {\r\n          // When the `value` is at the middle of `this.get(dim, i)` and `this.get(dim, i+1)`,\r\n          // we'd better not push both of them to `nearestIndices`, otherwise it is easy to\r\n          // get more than one item in `nearestIndices` (more specifically, in `tooltip`).\r\n          // So we chose the one that `diff >= 0` in this csae.\r\n          // But if `this.get(dim, i)` and `this.get(dim, j)` get the same value, both of them\r\n          // should be push to `nearestIndices`.\r\n          if (dist < minDist || dist === minDist && diff >= 0 && minDiff < 0) {\r\n            minDist = dist;\r\n            minDiff = diff;\r\n            nearestIndicesLen = 0;\r\n          }\r\n\r\n          if (diff === minDiff) {\r\n            nearestIndices[nearestIndicesLen++] = i;\r\n          }\r\n        }\r\n      }\r\n\r\n      nearestIndices.length = nearestIndicesLen;\r\n      return nearestIndices;\r\n    };\r\n    /**\r\n     * Get raw data item\r\n     */\r\n\r\n\r\n    List.prototype.getRawDataItem = function (idx) {\r\n      if (!this._rawData.persistent) {\r\n        var val = [];\r\n\r\n        for (var i = 0; i < this.dimensions.length; i++) {\r\n          var dim = this.dimensions[i];\r\n          val.push(this.get(dim, idx));\r\n        }\r\n\r\n        return val;\r\n      } else {\r\n        return this._rawData.getItem(this.getRawIndex(idx));\r\n      }\r\n    };\r\n    /**\r\n     * @return Never be null/undefined. `number` will be converted to string. Becuase:\r\n     * In most cases, name is used in display, where returning a string is more convenient.\r\n     * In other cases, name is used in query (see `indexOfName`), where we can keep the\r\n     * rule that name `2` equals to name `'2'`.\r\n     */\r\n\r\n\r\n    List.prototype.getName = function (idx) {\r\n      var rawIndex = this.getRawIndex(idx);\r\n      var name = this._nameList[rawIndex];\r\n\r\n      if (name == null && this._nameDimIdx != null) {\r\n        name = getIdNameFromStore(this, this._nameDimIdx, this._nameOrdinalMeta, rawIndex);\r\n      }\r\n\r\n      if (name == null) {\r\n        name = '';\r\n      }\r\n\r\n      return name;\r\n    };\r\n    /**\r\n     * @return Never null/undefined. `number` will be converted to string. Becuase:\r\n     * In all cases having encountered at present, id is used in making diff comparison, which\r\n     * are usually based on hash map. We can keep the rule that the internal id are always string\r\n     * (treat `2` is the same as `'2'`) to make the related logic simple.\r\n     */\r\n\r\n\r\n    List.prototype.getId = function (idx) {\r\n      return getId(this, this.getRawIndex(idx));\r\n    };\r\n\r\n    List.prototype.each = function (dims, cb, ctx, ctxCompat) {\r\n      'use strict';\r\n\r\n      var _this = this;\r\n\r\n      if (!this._count) {\r\n        return;\r\n      }\r\n\r\n      if (typeof dims === 'function') {\r\n        ctxCompat = ctx;\r\n        ctx = cb;\r\n        cb = dims;\r\n        dims = [];\r\n      } // ctxCompat just for compat echarts3\r\n\r\n\r\n      var fCtx = ctx || ctxCompat || this;\r\n      var dimNames = map$1(normalizeDimensions(dims), this.getDimension, this);\r\n      {\r\n        validateDimensions(this, dimNames);\r\n      }\r\n      var dimSize = dimNames.length;\r\n      var dimIndices = map$1(dimNames, function (dimName) {\r\n        return _this._dimensionInfos[dimName].index;\r\n      });\r\n      var storageArr = this._storageArr;\r\n\r\n      for (var i = 0, len = this.count(); i < len; i++) {\r\n        var rawIdx = this.getRawIndex(i); // Simple optimization\r\n\r\n        switch (dimSize) {\r\n          case 0:\r\n            cb.call(fCtx, i);\r\n            break;\r\n\r\n          case 1:\r\n            cb.call(fCtx, storageArr[dimIndices[0]][rawIdx], i);\r\n            break;\r\n\r\n          case 2:\r\n            cb.call(fCtx, storageArr[dimIndices[0]][rawIdx], storageArr[dimIndices[1]][rawIdx], i);\r\n            break;\r\n\r\n          default:\r\n            var k = 0;\r\n            var value = [];\r\n\r\n            for (; k < dimSize; k++) {\r\n              value[k] = storageArr[dimIndices[k]][rawIdx];\r\n            } // Index\r\n\r\n\r\n            value[k] = i;\r\n            cb.apply(fCtx, value);\r\n        }\r\n      }\r\n    };\r\n\r\n    List.prototype.filterSelf = function (dims, cb, ctx, ctxCompat) {\r\n      'use strict';\r\n\r\n      var _this = this;\r\n\r\n      if (!this._count) {\r\n        return;\r\n      }\r\n\r\n      if (typeof dims === 'function') {\r\n        ctxCompat = ctx;\r\n        ctx = cb;\r\n        cb = dims;\r\n        dims = [];\r\n      } // ctxCompat just for compat echarts3\r\n\r\n\r\n      var fCtx = ctx || ctxCompat || this;\r\n      var dimNames = map$1(normalizeDimensions(dims), this.getDimension, this);\r\n      {\r\n        validateDimensions(this, dimNames);\r\n      }\r\n      var count = this.count();\r\n      var Ctor = getIndicesCtor(this);\r\n      var newIndices = new Ctor(count);\r\n      var value = [];\r\n      var dimSize = dimNames.length;\r\n      var offset = 0;\r\n      var dimIndices = map$1(dimNames, function (dimName) {\r\n        return _this._dimensionInfos[dimName].index;\r\n      });\r\n      var dim0 = dimIndices[0];\r\n      var storageArr = this._storageArr;\r\n\r\n      for (var i = 0; i < count; i++) {\r\n        var keep = void 0;\r\n        var rawIdx = this.getRawIndex(i); // Simple optimization\r\n\r\n        if (dimSize === 0) {\r\n          keep = cb.call(fCtx, i);\r\n        } else if (dimSize === 1) {\r\n          var val = storageArr[dim0][rawIdx];\r\n          keep = cb.call(fCtx, val, i);\r\n        } else {\r\n          var k = 0;\r\n\r\n          for (; k < dimSize; k++) {\r\n            value[k] = storageArr[dimIndices[k]][rawIdx];\r\n          }\r\n\r\n          value[k] = i;\r\n          keep = cb.apply(fCtx, value);\r\n        }\r\n\r\n        if (keep) {\r\n          newIndices[offset++] = rawIdx;\r\n        }\r\n      } // Set indices after filtered.\r\n\r\n\r\n      if (offset < count) {\r\n        this._indices = newIndices;\r\n      }\r\n\r\n      this._count = offset; // Reset data extent\r\n\r\n      this._extent = {};\r\n      this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\r\n      return this;\r\n    };\r\n    /**\r\n     * Select data in range. (For optimization of filter)\r\n     * (Manually inline code, support 5 million data filtering in data zoom.)\r\n     */\r\n\r\n\r\n    List.prototype.selectRange = function (range) {\r\n      'use strict';\r\n\r\n      var _this = this;\r\n\r\n      var len = this._count;\r\n\r\n      if (!len) {\r\n        return;\r\n      }\r\n\r\n      var dimensions = [];\r\n\r\n      for (var dim in range) {\r\n        if (range.hasOwnProperty(dim)) {\r\n          dimensions.push(dim);\r\n        }\r\n      }\r\n\r\n      {\r\n        validateDimensions(this, dimensions);\r\n      }\r\n      var dimSize = dimensions.length;\r\n\r\n      if (!dimSize) {\r\n        return;\r\n      }\r\n\r\n      var originalCount = this.count();\r\n      var Ctor = getIndicesCtor(this);\r\n      var newIndices = new Ctor(originalCount);\r\n      var offset = 0;\r\n      var dim0 = dimensions[0];\r\n      var dimIndices = map$1(dimensions, function (dimName) {\r\n        return _this._dimensionInfos[dimName].index;\r\n      });\r\n      var min = range[dim0][0];\r\n      var max = range[dim0][1];\r\n      var storageArr = this._storageArr;\r\n      var quickFinished = false;\r\n\r\n      if (!this._indices) {\r\n        // Extreme optimization for common case. About 2x faster in chrome.\r\n        var idx = 0;\r\n\r\n        if (dimSize === 1) {\r\n          var dimStorage = storageArr[dimIndices[0]];\r\n\r\n          for (var i = 0; i < len; i++) {\r\n            var val = dimStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\r\n            // value indicates the line should be broken. But for the case like\r\n            // scatter plot, a data item with empty value will not be rendered,\r\n            // but the axis extent may be effected if some other dim of the data\r\n            // item has value. Fortunately it is not a significant negative effect.\r\n\r\n            if (val >= min && val <= max || isNaN(val)) {\r\n              newIndices[offset++] = idx;\r\n            }\r\n\r\n            idx++;\r\n          }\r\n\r\n          quickFinished = true;\r\n        } else if (dimSize === 2) {\r\n          var dimStorage = storageArr[dimIndices[0]];\r\n          var dimStorage2 = storageArr[dimIndices[1]];\r\n          var min2 = range[dimensions[1]][0];\r\n          var max2 = range[dimensions[1]][1];\r\n\r\n          for (var i = 0; i < len; i++) {\r\n            var val = dimStorage[i];\r\n            var val2 = dimStorage2[i]; // Do not filter NaN, see comment above.\r\n\r\n            if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\r\n              newIndices[offset++] = idx;\r\n            }\r\n\r\n            idx++;\r\n          }\r\n\r\n          quickFinished = true;\r\n        }\r\n      }\r\n\r\n      if (!quickFinished) {\r\n        if (dimSize === 1) {\r\n          for (var i = 0; i < originalCount; i++) {\r\n            var rawIndex = this.getRawIndex(i);\r\n            var val = storageArr[dimIndices[0]][rawIndex]; // Do not filter NaN, see comment above.\r\n\r\n            if (val >= min && val <= max || isNaN(val)) {\r\n              newIndices[offset++] = rawIndex;\r\n            }\r\n          }\r\n        } else {\r\n          for (var i = 0; i < originalCount; i++) {\r\n            var keep = true;\r\n            var rawIndex = this.getRawIndex(i);\r\n\r\n            for (var k = 0; k < dimSize; k++) {\r\n              var dimk = dimensions[k];\r\n              var val = storageArr[dimIndices[k]][rawIndex]; // Do not filter NaN, see comment above.\r\n\r\n              if (val < range[dimk][0] || val > range[dimk][1]) {\r\n                keep = false;\r\n              }\r\n            }\r\n\r\n            if (keep) {\r\n              newIndices[offset++] = this.getRawIndex(i);\r\n            }\r\n          }\r\n        }\r\n      } // Set indices after filtered.\r\n\r\n\r\n      if (offset < originalCount) {\r\n        this._indices = newIndices;\r\n      }\r\n\r\n      this._count = offset; // Reset data extent\r\n\r\n      this._extent = {};\r\n      this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\r\n      return this;\r\n    };\r\n    /* eslint-enable */\r\n\r\n\r\n    List.prototype.mapArray = function (dims, cb, ctx, ctxCompat) {\r\n      'use strict';\r\n\r\n      if (typeof dims === 'function') {\r\n        ctxCompat = ctx;\r\n        ctx = cb;\r\n        cb = dims;\r\n        dims = [];\r\n      } // ctxCompat just for compat echarts3\r\n\r\n\r\n      ctx = ctx || ctxCompat || this;\r\n      var result = [];\r\n      this.each(dims, function () {\r\n        result.push(cb && cb.apply(this, arguments));\r\n      }, ctx);\r\n      return result;\r\n    };\r\n\r\n    List.prototype.map = function (dims, cb, ctx, ctxCompat) {\r\n      'use strict'; // ctxCompat just for compat echarts3\r\n\r\n      var fCtx = ctx || ctxCompat || this;\r\n      var dimNames = map$1(normalizeDimensions(dims), this.getDimension, this);\r\n      {\r\n        validateDimensions(this, dimNames);\r\n      }\r\n      var list = cloneListForMapAndSample(this, dimNames);\r\n      var storage = list._storage; // Following properties are all immutable.\r\n      // So we can reference to the same value\r\n\r\n      list._indices = this._indices;\r\n      list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\r\n      var tmpRetValue = [];\r\n      var dimSize = dimNames.length;\r\n      var dataCount = this.count();\r\n      var values = [];\r\n      var rawExtent = list._rawExtent;\r\n\r\n      for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\r\n        for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\r\n          values[dimIndex] = this.get(dimNames[dimIndex], dataIndex);\r\n        }\r\n\r\n        values[dimSize] = dataIndex;\r\n        var retValue = cb && cb.apply(fCtx, values);\r\n\r\n        if (retValue != null) {\r\n          // a number or string (in oridinal dimension)?\r\n          if (typeof retValue !== 'object') {\r\n            tmpRetValue[0] = retValue;\r\n            retValue = tmpRetValue;\r\n          }\r\n\r\n          var rawIndex = this.getRawIndex(dataIndex);\r\n\r\n          for (var i = 0; i < retValue.length; i++) {\r\n            var dim = dimNames[i];\r\n            var val = retValue[i];\r\n            var rawExtentOnDim = rawExtent[dim];\r\n            var dimStore = storage[dim];\r\n\r\n            if (dimStore) {\r\n              dimStore[rawIndex] = val;\r\n            }\r\n\r\n            if (val < rawExtentOnDim[0]) {\r\n              rawExtentOnDim[0] = val;\r\n            }\r\n\r\n            if (val > rawExtentOnDim[1]) {\r\n              rawExtentOnDim[1] = val;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return list;\r\n    };\r\n    /**\r\n     * Large data down sampling on given dimension\r\n     * @param sampleIndex Sample index for name and id\r\n     */\r\n\r\n\r\n    List.prototype.downSample = function (dimension, rate, sampleValue, sampleIndex) {\r\n      var list = cloneListForMapAndSample(this, [dimension]);\r\n      var targetStorage = list._storage;\r\n      var frameValues = [];\r\n      var frameSize = mathFloor(1 / rate);\r\n      var dimStore = targetStorage[dimension];\r\n      var len = this.count();\r\n      var rawExtentOnDim = list._rawExtent[dimension];\r\n      var newIndices = new (getIndicesCtor(this))(len);\r\n      var offset = 0;\r\n\r\n      for (var i = 0; i < len; i += frameSize) {\r\n        // Last frame\r\n        if (frameSize > len - i) {\r\n          frameSize = len - i;\r\n          frameValues.length = frameSize;\r\n        }\r\n\r\n        for (var k = 0; k < frameSize; k++) {\r\n          var dataIdx = this.getRawIndex(i + k);\r\n          frameValues[k] = dimStore[dataIdx];\r\n        }\r\n\r\n        var value = sampleValue(frameValues);\r\n        var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1)); // Only write value on the filtered data\r\n\r\n        dimStore[sampleFrameIdx] = value;\r\n\r\n        if (value < rawExtentOnDim[0]) {\r\n          rawExtentOnDim[0] = value;\r\n        }\r\n\r\n        if (value > rawExtentOnDim[1]) {\r\n          rawExtentOnDim[1] = value;\r\n        }\r\n\r\n        newIndices[offset++] = sampleFrameIdx;\r\n      }\r\n\r\n      list._count = offset;\r\n      list._indices = newIndices;\r\n      list.getRawIndex = getRawIndexWithIndices;\r\n      return list;\r\n    };\r\n    /**\r\n     * Large data down sampling using largest-triangle-three-buckets\r\n     * @param {string} valueDimension\r\n     * @param {number} targetCount\r\n     */\r\n\r\n\r\n    List.prototype.lttbDownSample = function (valueDimension, rate) {\r\n      var list = cloneListForMapAndSample(this, []);\r\n      var targetStorage = list._storage;\r\n      var dimStore = targetStorage[valueDimension];\r\n      var len = this.count();\r\n      var newIndices = new (getIndicesCtor(this))(len);\r\n      var sampledIndex = 0;\r\n      var frameSize = mathFloor(1 / rate);\r\n      var currentRawIndex = this.getRawIndex(0);\r\n      var maxArea;\r\n      var area;\r\n      var nextRawIndex; // First frame use the first data.\r\n\r\n      newIndices[sampledIndex++] = currentRawIndex;\r\n\r\n      for (var i = 1; i < len - 1; i += frameSize) {\r\n        var nextFrameStart = Math.min(i + frameSize, len - 1);\r\n        var nextFrameEnd = Math.min(i + frameSize * 2, len);\r\n        var avgX = (nextFrameEnd + nextFrameStart) / 2;\r\n        var avgY = 0;\r\n\r\n        for (var idx = nextFrameStart; idx < nextFrameEnd; idx++) {\r\n          var rawIndex = this.getRawIndex(idx);\r\n          var y = dimStore[rawIndex];\r\n\r\n          if (isNaN(y)) {\r\n            continue;\r\n          }\r\n\r\n          avgY += y;\r\n        }\r\n\r\n        avgY /= nextFrameEnd - nextFrameStart;\r\n        var frameStart = i;\r\n        var frameEnd = Math.min(i + frameSize, len);\r\n        var pointAX = i - 1;\r\n        var pointAY = dimStore[currentRawIndex];\r\n        maxArea = -1;\r\n        nextRawIndex = frameStart; // Find a point from current frame that construct a triangel with largest area with previous selected point\r\n        // And the average of next frame.\r\n\r\n        for (var idx = frameStart; idx < frameEnd; idx++) {\r\n          var rawIndex = this.getRawIndex(idx);\r\n          var y = dimStore[rawIndex];\r\n\r\n          if (isNaN(y)) {\r\n            continue;\r\n          } // Calculate triangle area over three buckets\r\n\r\n\r\n          area = Math.abs((pointAX - avgX) * (y - pointAY) - (pointAX - idx) * (avgY - pointAY));\r\n\r\n          if (area > maxArea) {\r\n            maxArea = area;\r\n            nextRawIndex = rawIndex; // Next a is this b\r\n          }\r\n        }\r\n\r\n        newIndices[sampledIndex++] = nextRawIndex;\r\n        currentRawIndex = nextRawIndex; // This a is the next a (chosen b)\r\n      } // First frame use the last data.\r\n\r\n\r\n      newIndices[sampledIndex++] = this.getRawIndex(len - 1);\r\n      list._count = sampledIndex;\r\n      list._indices = newIndices;\r\n      list.getRawIndex = getRawIndexWithIndices;\r\n      return list;\r\n    };\r\n    /**\r\n     * Get model of one data item.\r\n     */\r\n    // TODO: Type of data item\r\n\r\n\r\n    List.prototype.getItemModel = function (idx) {\r\n      var hostModel = this.hostModel;\r\n      var dataItem = this.getRawDataItem(idx);\r\n      return new Model(dataItem, hostModel, hostModel && hostModel.ecModel);\r\n    };\r\n    /**\r\n     * Create a data differ\r\n     */\r\n\r\n\r\n    List.prototype.diff = function (otherList) {\r\n      var thisList = this;\r\n      return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\r\n        return getId(otherList, idx);\r\n      }, function (idx) {\r\n        return getId(thisList, idx);\r\n      });\r\n    };\r\n    /**\r\n     * Get visual property.\r\n     */\r\n\r\n\r\n    List.prototype.getVisual = function (key) {\r\n      var visual = this._visual;\r\n      return visual && visual[key];\r\n    };\r\n\r\n    List.prototype.setVisual = function (kvObj, val) {\r\n      this._visual = this._visual || {};\r\n\r\n      if (isObject$3(kvObj)) {\r\n        extend(this._visual, kvObj);\r\n      } else {\r\n        this._visual[kvObj] = val;\r\n      }\r\n    };\r\n    /**\r\n     * Get visual property of single data item\r\n     */\r\n    // eslint-disable-next-line\r\n\r\n\r\n    List.prototype.getItemVisual = function (idx, key) {\r\n      var itemVisual = this._itemVisuals[idx];\r\n      var val = itemVisual && itemVisual[key];\r\n\r\n      if (val == null) {\r\n        // Use global visual property\r\n        return this.getVisual(key);\r\n      }\r\n\r\n      return val;\r\n    };\r\n    /**\r\n     * If exists visual property of single data item\r\n     */\r\n\r\n\r\n    List.prototype.hasItemVisual = function () {\r\n      return this._itemVisuals.length > 0;\r\n    };\r\n    /**\r\n     * Make sure itemVisual property is unique\r\n     */\r\n    // TODO: use key to save visual to reduce memory.\r\n\r\n\r\n    List.prototype.ensureUniqueItemVisual = function (idx, key) {\r\n      var itemVisuals = this._itemVisuals;\r\n      var itemVisual = itemVisuals[idx];\r\n\r\n      if (!itemVisual) {\r\n        itemVisual = itemVisuals[idx] = {};\r\n      }\r\n\r\n      var val = itemVisual[key];\r\n\r\n      if (val == null) {\r\n        val = this.getVisual(key); // TODO Performance?\r\n\r\n        if (isArray(val)) {\r\n          val = val.slice();\r\n        } else if (isObject$3(val)) {\r\n          val = extend({}, val);\r\n        }\r\n\r\n        itemVisual[key] = val;\r\n      }\r\n\r\n      return val;\r\n    }; // eslint-disable-next-line\r\n\r\n\r\n    List.prototype.setItemVisual = function (idx, key, value) {\r\n      var itemVisual = this._itemVisuals[idx] || {};\r\n      this._itemVisuals[idx] = itemVisual;\r\n\r\n      if (isObject$3(key)) {\r\n        extend(itemVisual, key);\r\n      } else {\r\n        itemVisual[key] = value;\r\n      }\r\n    };\r\n    /**\r\n     * Clear itemVisuals and list visual.\r\n     */\r\n\r\n\r\n    List.prototype.clearAllVisual = function () {\r\n      this._visual = {};\r\n      this._itemVisuals = [];\r\n    };\r\n\r\n    List.prototype.setLayout = function (key, val) {\r\n      if (isObject$3(key)) {\r\n        for (var name_1 in key) {\r\n          if (key.hasOwnProperty(name_1)) {\r\n            this.setLayout(name_1, key[name_1]);\r\n          }\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      this._layout[key] = val;\r\n    };\r\n    /**\r\n     * Get layout property.\r\n     */\r\n\r\n\r\n    List.prototype.getLayout = function (key) {\r\n      return this._layout[key];\r\n    };\r\n    /**\r\n     * Get layout of single data item\r\n     */\r\n\r\n\r\n    List.prototype.getItemLayout = function (idx) {\r\n      return this._itemLayouts[idx];\r\n    };\r\n    /**\r\n     * Set layout of single data item\r\n     */\r\n\r\n\r\n    List.prototype.setItemLayout = function (idx, layout, merge$$1) {\r\n      this._itemLayouts[idx] = merge$$1 ? extend(this._itemLayouts[idx] || {}, layout) : layout;\r\n    };\r\n    /**\r\n     * Clear all layout of single data item\r\n     */\r\n\r\n\r\n    List.prototype.clearItemLayouts = function () {\r\n      this._itemLayouts.length = 0;\r\n    };\r\n    /**\r\n     * Set graphic element relative to data. It can be set as null\r\n     */\r\n\r\n\r\n    List.prototype.setItemGraphicEl = function (idx, el) {\r\n      var hostModel = this.hostModel;\r\n\r\n      if (el) {\r\n        var ecData = getECData(el); // Add data index and series index for indexing the data by element\r\n        // Useful in tooltip\r\n\r\n        ecData.dataIndex = idx;\r\n        ecData.dataType = this.dataType;\r\n        ecData.seriesIndex = hostModel && hostModel.seriesIndex; // TODO: not store dataIndex on children.\r\n\r\n        if (el.type === 'group') {\r\n          el.traverse(setItemDataAndSeriesIndex, el);\r\n        }\r\n      }\r\n\r\n      this._graphicEls[idx] = el;\r\n    };\r\n\r\n    List.prototype.getItemGraphicEl = function (idx) {\r\n      return this._graphicEls[idx];\r\n    };\r\n\r\n    List.prototype.eachItemGraphicEl = function (cb, context) {\r\n      each$1(this._graphicEls, function (el, idx) {\r\n        if (el) {\r\n          cb && cb.call(context, el, idx);\r\n        }\r\n      });\r\n    };\r\n    /**\r\n     * Shallow clone a new list except visual and layout properties, and graph elements.\r\n     * New list only change the indices.\r\n     */\r\n\r\n\r\n    List.prototype.cloneShallow = function (list) {\r\n      if (!list) {\r\n        var dimensionInfoList = map$1(this.dimensions, this.getDimensionInfo, this);\r\n        list = new List(dimensionInfoList, this.hostModel);\r\n      } // FIXME\r\n\r\n\r\n      list._storage = this._storage;\r\n      list._storageArr = this._storageArr;\r\n      transferProperties(list, this); // Clone will not change the data extent and indices\r\n\r\n      if (this._indices) {\r\n        var Ctor = this._indices.constructor;\r\n\r\n        if (Ctor === Array) {\r\n          var thisCount = this._indices.length;\r\n          list._indices = new Ctor(thisCount);\r\n\r\n          for (var i = 0; i < thisCount; i++) {\r\n            list._indices[i] = this._indices[i];\r\n          }\r\n        } else {\r\n          list._indices = new Ctor(this._indices);\r\n        }\r\n      } else {\r\n        list._indices = null;\r\n      }\r\n\r\n      list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\r\n      return list;\r\n    };\r\n    /**\r\n     * Wrap some method to add more feature\r\n     */\r\n\r\n\r\n    List.prototype.wrapMethod = function (methodName, injectFunction) {\r\n      var originalMethod = this[methodName];\r\n\r\n      if (typeof originalMethod !== 'function') {\r\n        return;\r\n      }\r\n\r\n      this.__wrappedMethods = this.__wrappedMethods || [];\r\n\r\n      this.__wrappedMethods.push(methodName);\r\n\r\n      this[methodName] = function () {\r\n        var res = originalMethod.apply(this, arguments);\r\n        return injectFunction.apply(this, [res].concat(slice(arguments)));\r\n      };\r\n    }; // ----------------------------------------------------------\r\n    // A work around for internal method visiting private member.\r\n    // ----------------------------------------------------------\r\n\r\n\r\n    List.internalField = function () {\r\n      defaultDimValueGetters = {\r\n        arrayRows: getDimValueSimply,\r\n        objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\r\n          return parseDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\r\n        },\r\n        keyedColumns: getDimValueSimply,\r\n        original: function (dataItem, dimName, dataIndex, dimIndex) {\r\n          // Performance sensitive, do not use modelUtil.getDataItemValue.\r\n          // If dataItem is an plain object with no value field, the let `value`\r\n          // will be assigned with the object, but it will be tread correctly\r\n          // in the `convertValue`.\r\n          var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\r\n\r\n          if (!this._rawData.pure && isDataItemOption(dataItem)) {\r\n            this.hasItemOption = true;\r\n          }\r\n\r\n          return parseDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\r\n          : value, this._dimensionInfos[dimName]);\r\n        },\r\n        typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\r\n          return dataItem[dimIndex];\r\n        }\r\n      };\r\n\r\n      function getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\r\n        return parseDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\r\n      }\r\n\r\n      prepareInvertedIndex = function (list) {\r\n        var invertedIndicesMap = list._invertedIndicesMap;\r\n        each$1(invertedIndicesMap, function (invertedIndices, dim) {\r\n          var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\r\n\r\n          var ordinalMeta = dimInfo.ordinalMeta;\r\n\r\n          if (ordinalMeta) {\r\n            invertedIndices = invertedIndicesMap[dim] = new CtorInt32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\r\n            // mapping to 0, we should set it as INDEX_NOT_FOUND.\r\n\r\n            for (var i = 0; i < invertedIndices.length; i++) {\r\n              invertedIndices[i] = INDEX_NOT_FOUND;\r\n            }\r\n\r\n            for (var i = 0; i < list._count; i++) {\r\n              // Only support the case that all values are distinct.\r\n              invertedIndices[list.get(dim, i)] = i;\r\n            }\r\n          }\r\n        });\r\n      };\r\n\r\n      getIdNameFromStore = function (list, dimIdx, ordinalMeta, rawIndex) {\r\n        var val;\r\n        var chunk = list._storageArr[dimIdx];\r\n\r\n        if (chunk) {\r\n          val = chunk[rawIndex];\r\n\r\n          if (ordinalMeta && ordinalMeta.categories.length) {\r\n            val = ordinalMeta.categories[val];\r\n          }\r\n        }\r\n\r\n        return convertOptionIdName(val, null);\r\n      };\r\n\r\n      getIndicesCtor = function (list) {\r\n        // The possible max value in this._indicies is always this._rawCount despite of filtering.\r\n        return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\r\n      };\r\n\r\n      prepareStorage = function (storage, dimInfo, end, append) {\r\n        var DataCtor = dataCtors[dimInfo.type];\r\n        var dim = dimInfo.name;\r\n\r\n        if (append) {\r\n          var oldStore = storage[dim];\r\n          var oldLen = oldStore && oldStore.length;\r\n\r\n          if (!(oldLen === end)) {\r\n            var newStore = new DataCtor(end); // The cost of the copy is probably inconsiderable\r\n            // within the initial chunkSize.\r\n\r\n            for (var j = 0; j < oldLen; j++) {\r\n              newStore[j] = oldStore[j];\r\n            }\r\n\r\n            storage[dim] = newStore;\r\n          }\r\n        } else {\r\n          storage[dim] = new DataCtor(end);\r\n        }\r\n      };\r\n\r\n      getRawIndexWithoutIndices = function (idx) {\r\n        return idx;\r\n      };\r\n\r\n      getRawIndexWithIndices = function (idx) {\r\n        if (idx < this._count && idx >= 0) {\r\n          return this._indices[idx];\r\n        }\r\n\r\n        return -1;\r\n      };\r\n      /**\r\n       * @see the comment of `List['getId']`.\r\n       */\r\n\r\n\r\n      getId = function (list, rawIndex) {\r\n        var id = list._idList[rawIndex];\r\n\r\n        if (id == null && list._idDimIdx != null) {\r\n          id = getIdNameFromStore(list, list._idDimIdx, list._idOrdinalMeta, rawIndex);\r\n        }\r\n\r\n        if (id == null) {\r\n          id = ID_PREFIX + rawIndex;\r\n        }\r\n\r\n        return id;\r\n      };\r\n\r\n      normalizeDimensions = function (dimensions) {\r\n        if (!isArray(dimensions)) {\r\n          dimensions = dimensions != null ? [dimensions] : [];\r\n        }\r\n\r\n        return dimensions;\r\n      };\r\n\r\n      validateDimensions = function (list, dims) {\r\n        for (var i = 0; i < dims.length; i++) {\r\n          // stroage may be empty when no data, so use\r\n          // dimensionInfos to check.\r\n          if (!list._dimensionInfos[dims[i]]) {\r\n            console.error('Unkown dimension ' + dims[i]);\r\n          }\r\n        }\r\n      }; // Data in excludeDimensions is copied, otherwise transfered.\r\n\r\n\r\n      cloneListForMapAndSample = function (original, excludeDimensions) {\r\n        var allDimensions = original.dimensions;\r\n        var list = new List(map$1(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\r\n\r\n        transferProperties(list, original);\r\n        var storage = list._storage = {};\r\n        var originalStorage = original._storage;\r\n        var storageArr = list._storageArr = []; // Init storage\r\n\r\n        for (var i = 0; i < allDimensions.length; i++) {\r\n          var dim = allDimensions[i];\r\n\r\n          if (originalStorage[dim]) {\r\n            // Notice that we do not reset invertedIndicesMap here, becuase\r\n            // there is no scenario of mapping or sampling ordinal dimension.\r\n            if (indexOf$1(excludeDimensions, dim) >= 0) {\r\n              storage[dim] = cloneChunk(originalStorage[dim]);\r\n              list._rawExtent[dim] = getInitialExtent();\r\n              list._extent[dim] = null;\r\n            } else {\r\n              // Direct reference for other dimensions\r\n              storage[dim] = originalStorage[dim];\r\n            }\r\n\r\n            storageArr.push(storage[dim]);\r\n          }\r\n        }\r\n\r\n        return list;\r\n      };\r\n\r\n      function cloneChunk(originalChunk) {\r\n        var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\r\n\r\n        return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\r\n      }\r\n\r\n      getInitialExtent = function () {\r\n        return [Infinity, -Infinity];\r\n      };\r\n\r\n      setItemDataAndSeriesIndex = function (child) {\r\n        var childECData = getECData(child);\r\n        var thisECData = getECData(this);\r\n        childECData.seriesIndex = thisECData.seriesIndex;\r\n        childECData.dataIndex = thisECData.dataIndex;\r\n        childECData.dataType = thisECData.dataType;\r\n      };\r\n\r\n      transferProperties = function (target, source) {\r\n        each$1(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\r\n          if (source.hasOwnProperty(propName)) {\r\n            target[propName] = source[propName];\r\n          }\r\n        });\r\n        target.__wrappedMethods = source.__wrappedMethods;\r\n        each$1(CLONE_PROPERTIES, function (propName) {\r\n          target[propName] = clone(source[propName]);\r\n        });\r\n        target._calculationInfo = extend({}, source._calculationInfo);\r\n      };\r\n\r\n      makeIdFromName = function (list, idx) {\r\n        var nameList = list._nameList;\r\n        var idList = list._idList;\r\n        var nameDimIdx = list._nameDimIdx;\r\n        var idDimIdx = list._idDimIdx;\r\n        var name = nameList[idx];\r\n        var id = idList[idx];\r\n\r\n        if (name == null && nameDimIdx != null) {\r\n          nameList[idx] = name = getIdNameFromStore(list, nameDimIdx, list._nameOrdinalMeta, idx);\r\n        }\r\n\r\n        if (id == null && idDimIdx != null) {\r\n          idList[idx] = id = getIdNameFromStore(list, idDimIdx, list._idOrdinalMeta, idx);\r\n        }\r\n\r\n        if (id == null && name != null) {\r\n          var nameRepeatCount = list._nameRepeatCount;\r\n          var nmCnt = nameRepeatCount[name] = (nameRepeatCount[name] || 0) + 1;\r\n          id = name;\r\n\r\n          if (nmCnt > 1) {\r\n            id += '__ec__' + nmCnt;\r\n          }\r\n\r\n          idList[idx] = id;\r\n        }\r\n      };\r\n    }();\r\n\r\n    return List;\r\n  }();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * @deprecated\r\n   * Use `echarts/data/helper/createDimensions` instead.\r\n   */\r\n\r\n  /**\r\n   * @see {module:echarts/test/ut/spec/data/completeDimensions}\r\n   *\r\n   * This method builds the relationship between:\r\n   * + \"what the coord sys or series requires (see `sysDims`)\",\r\n   * + \"what the user defines (in `encode` and `dimensions`, see `opt.dimsDef` and `opt.encodeDef`)\"\r\n   * + \"what the data source provids (see `source`)\".\r\n   *\r\n   * Some guess strategy will be adapted if user does not define something.\r\n   * If no 'value' dimension specified, the first no-named dimension will be\r\n   * named as 'value'.\r\n   *\r\n   * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\r\n   *      provides not only dim template, but also default order.\r\n   *      properties: 'name', 'type', 'displayName'.\r\n   *      `name` of each item provides default coord name.\r\n   *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\r\n   *                                    provide dims count that the sysDim required.\r\n   *      [{ordinalMeta}] can be specified.\r\n   * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\r\n   * @param {Object} [opt]\r\n   * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\r\n   *      For example: ['asdf', {name, type}, ...].\r\n   * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\r\n   * @param {Function} [opt.encodeDefaulter] Called if no `opt.encodeDef` exists.\r\n   *      If not specified, auto find the next available data dim.\r\n   *      param source {module:data/Source}\r\n   *      param dimCount {number}\r\n   *      return {Object} encode Never be `null/undefined`.\r\n   * @param {string} [opt.generateCoord] Generate coord dim with the given name.\r\n   *      If not specified, extra dim names will be:\r\n   *      'value', 'value0', 'value1', ...\r\n   * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\r\n   *      If `generateCoordCount` specified, the generated dim names will be:\r\n   *      `generateCoord` + 0, `generateCoord` + 1, ...\r\n   *      can be Infinity, indicate that use all of the remain columns.\r\n   * @param {number} [opt.dimCount] If not specified, guess by the first data item.\r\n   * @return {Array.<module:data/DataDimensionInfo>}\r\n   */\r\n\r\n\r\n  function completeDimensions(sysDims, source, opt) {\r\n    if (!isSourceInstance(source)) {\r\n      source = createSourceFromSeriesDataOption(source);\r\n    }\r\n\r\n    opt = opt || {};\r\n    sysDims = (sysDims || []).slice();\r\n    var dimsDef = (opt.dimsDef || []).slice();\r\n    var dataDimNameMap = createHashMap();\r\n    var coordDimNameMap = createHashMap(); // let valueCandidate;\r\n\r\n    var result = [];\r\n    var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\r\n\r\n    for (var i = 0; i < dimCount; i++) {\r\n      var dimDefItemRaw = dimsDef[i];\r\n      var dimDefItem = dimsDef[i] = extend({}, isObject$1(dimDefItemRaw) ? dimDefItemRaw : {\r\n        name: dimDefItemRaw\r\n      });\r\n      var userDimName = dimDefItem.name;\r\n      var resultItem = result[i] = new DataDimensionInfo(); // Name will be applied later for avoiding duplication.\r\n\r\n      if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\r\n        // Only if `series.dimensions` is defined in option\r\n        // displayName, will be set, and dimension will be diplayed vertically in\r\n        // tooltip by default.\r\n        resultItem.name = resultItem.displayName = userDimName;\r\n        dataDimNameMap.set(userDimName, i);\r\n      }\r\n\r\n      dimDefItem.type != null && (resultItem.type = dimDefItem.type);\r\n      dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\r\n    }\r\n\r\n    var encodeDef = opt.encodeDef;\r\n\r\n    if (!encodeDef && opt.encodeDefaulter) {\r\n      encodeDef = opt.encodeDefaulter(source, dimCount);\r\n    }\r\n\r\n    var encodeDefMap = createHashMap(encodeDef); // Set `coordDim` and `coordDimIndex` by `encodeDefMap` and normalize `encodeDefMap`.\r\n\r\n    encodeDefMap.each(function (dataDimsRaw, coordDim) {\r\n      var dataDims = normalizeToArray(dataDimsRaw).slice(); // Note: It is allowed that `dataDims.length` is `0`, e.g., options is\r\n      // `{encode: {x: -1, y: 1}}`. Should not filter anything in\r\n      // this case.\r\n\r\n      if (dataDims.length === 1 && !isString(dataDims[0]) && dataDims[0] < 0) {\r\n        encodeDefMap.set(coordDim, false);\r\n        return;\r\n      }\r\n\r\n      var validDataDims = encodeDefMap.set(coordDim, []);\r\n      each$1(dataDims, function (resultDimIdxOrName, idx) {\r\n        // The input resultDimIdx can be dim name or index.\r\n        var resultDimIdx = isString(resultDimIdxOrName) ? dataDimNameMap.get(resultDimIdxOrName) : resultDimIdxOrName;\r\n\r\n        if (resultDimIdx != null && resultDimIdx < dimCount) {\r\n          validDataDims[idx] = resultDimIdx;\r\n          applyDim(result[resultDimIdx], coordDim, idx);\r\n        }\r\n      });\r\n    }); // Apply templetes and default order from `sysDims`.\r\n\r\n    var availDimIdx = 0;\r\n    each$1(sysDims, function (sysDimItemRaw) {\r\n      var coordDim;\r\n      var sysDimItemDimsDef;\r\n      var sysDimItemOtherDims;\r\n      var sysDimItem;\r\n\r\n      if (isString(sysDimItemRaw)) {\r\n        coordDim = sysDimItemRaw;\r\n        sysDimItem = {};\r\n      } else {\r\n        sysDimItem = sysDimItemRaw;\r\n        coordDim = sysDimItem.name;\r\n        var ordinalMeta = sysDimItem.ordinalMeta;\r\n        sysDimItem.ordinalMeta = null;\r\n        sysDimItem = clone(sysDimItem);\r\n        sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\r\n\r\n        sysDimItemDimsDef = sysDimItem.dimsDef;\r\n        sysDimItemOtherDims = sysDimItem.otherDims;\r\n        sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\r\n      }\r\n\r\n      var dataDims = encodeDefMap.get(coordDim); // negative resultDimIdx means no need to mapping.\r\n\r\n      if (dataDims === false) {\r\n        return;\r\n      }\r\n\r\n      dataDims = normalizeToArray(dataDims); // dimensions provides default dim sequences.\r\n\r\n      if (!dataDims.length) {\r\n        for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\r\n          while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\r\n            availDimIdx++;\r\n          }\r\n\r\n          availDimIdx < result.length && dataDims.push(availDimIdx++);\r\n        }\r\n      } // Apply templates.\r\n\r\n\r\n      each$1(dataDims, function (resultDimIdx, coordDimIndex) {\r\n        var resultItem = result[resultDimIdx];\r\n        applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\r\n\r\n        if (resultItem.name == null && sysDimItemDimsDef) {\r\n          var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\r\n          !isObject$1(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\r\n            name: sysDimItemDimsDefItem\r\n          });\r\n          resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\r\n          resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\r\n        } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\r\n\r\n\r\n        sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\r\n      });\r\n    });\r\n\r\n    function applyDim(resultItem, coordDim, coordDimIndex) {\r\n      if (VISUAL_DIMENSIONS.get(coordDim) != null) {\r\n        resultItem.otherDims[coordDim] = coordDimIndex;\r\n      } else {\r\n        resultItem.coordDim = coordDim;\r\n        resultItem.coordDimIndex = coordDimIndex;\r\n        coordDimNameMap.set(coordDim, true);\r\n      }\r\n    } // Make sure the first extra dim is 'value'.\r\n\r\n\r\n    var generateCoord = opt.generateCoord;\r\n    var generateCoordCount = opt.generateCoordCount;\r\n    var fromZero = generateCoordCount != null;\r\n    generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\r\n    var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\r\n\r\n    for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\r\n      var resultItem = result[resultDimIdx] = result[resultDimIdx] || new DataDimensionInfo();\r\n      var coordDim = resultItem.coordDim;\r\n\r\n      if (coordDim == null) {\r\n        resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\r\n        resultItem.coordDimIndex = 0;\r\n\r\n        if (!generateCoord || generateCoordCount <= 0) {\r\n          resultItem.isExtraCoord = true;\r\n        }\r\n\r\n        generateCoordCount--;\r\n      }\r\n\r\n      resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap, false));\r\n\r\n      if (resultItem.type == null && (guessOrdinal(source, resultDimIdx) === BE_ORDINAL.Must // Consider the case:\r\n      // {\r\n      //    dataset: {source: [\r\n      //        ['2001', 123],\r\n      //        ['2002', 456],\r\n      //        ...\r\n      //        ['The others', 987],\r\n      //    ]},\r\n      //    series: {type: 'pie'}\r\n      // }\r\n      // The first colum should better be treated as a \"ordinal\" although it\r\n      // might not able to be detected as an \"ordinal\" by `guessOrdinal`.\r\n      || resultItem.isExtraCoord && (resultItem.otherDims.itemName != null || resultItem.otherDims.seriesName != null))) {\r\n        resultItem.type = 'ordinal';\r\n      }\r\n    }\r\n\r\n    return result;\r\n  } // ??? TODO\r\n  // Originally detect dimCount by data[0]. Should we\r\n  // optimize it to only by sysDims and dimensions and encode.\r\n  // So only necessary dims will be initialized.\r\n  // But\r\n  // (1) custom series should be considered. where other dims\r\n  // may be visited.\r\n  // (2) sometimes user need to calcualte bubble size or use visualMap\r\n  // on other dimensions besides coordSys needed.\r\n  // So, dims that is not used by system, should be shared in storage?\r\n\r\n\r\n  function getDimCount(source, sysDims, dimsDef, optDimCount) {\r\n    // Note that the result dimCount should not small than columns count\r\n    // of data, otherwise `dataDimNameMap` checking will be incorrect.\r\n    var dimCount = Math.max(source.dimensionsDetectedCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\r\n    each$1(sysDims, function (sysDimItem) {\r\n      var sysDimItemDimsDef;\r\n\r\n      if (isObject$1(sysDimItem) && (sysDimItemDimsDef = sysDimItem.dimsDef)) {\r\n        dimCount = Math.max(dimCount, sysDimItemDimsDef.length);\r\n      }\r\n    });\r\n    return dimCount;\r\n  }\r\n\r\n  function genName(name, map$$1, fromZero) {\r\n    if (fromZero || map$$1.get(name) != null) {\r\n      var i = 0;\r\n\r\n      while (map$$1.get(name + i) != null) {\r\n        i++;\r\n      }\r\n\r\n      name += i;\r\n    }\r\n\r\n    map$$1.set(name, true);\r\n    return name;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Substitute `completeDimensions`.\r\n   * `completeDimensions` is to be deprecated.\r\n   */\r\n\r\n  /**\r\n   * @param opt.coordDimensions\r\n   * @param opt.dimensionsDefine By default `source.dimensionsDefine` Overwrite source define.\r\n   * @param opt.encodeDefine By default `source.encodeDefine` Overwrite source define.\r\n   * @param opt.encodeDefaulter Make default encode if user not specified.\r\n   */\r\n\r\n\r\n  function createDimensions( // TODO: TYPE completeDimensions type\r\n  source, opt) {\r\n    opt = opt || {};\r\n    return completeDimensions(opt.coordDimensions || [], source, {\r\n      // FIXME:TS detect whether source then call `.dimensionsDefine` and `.encodeDefine`?\r\n      dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\r\n      encodeDef: opt.encodeDefine || source.encodeDefine,\r\n      dimCount: opt.dimensionsCount,\r\n      encodeDefaulter: opt.encodeDefaulter,\r\n      generateCoord: opt.generateCoord,\r\n      generateCoordCount: opt.generateCoordCount\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Helper for model references.\r\n   * There are many manners to refer axis/coordSys.\r\n   */\r\n  // TODO\r\n  // merge relevant logic to this file?\r\n  // check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\r\n\r\n  /**\r\n   * @class\r\n   * For example:\r\n   * {\r\n   *     coordSysName: 'cartesian2d',\r\n   *     coordSysDims: ['x', 'y', ...],\r\n   *     axisMap: HashMap({\r\n   *         x: xAxisModel,\r\n   *         y: yAxisModel\r\n   *     }),\r\n   *     categoryAxisMap: HashMap({\r\n   *         x: xAxisModel,\r\n   *         y: undefined\r\n   *     }),\r\n   *     // The index of the first category axis in `coordSysDims`.\r\n   *     // `null/undefined` means no category axis exists.\r\n   *     firstCategoryDimIndex: 1,\r\n   *     // To replace user specified encode.\r\n   * }\r\n   */\r\n\r\n\r\n  var CoordSysInfo =\r\n  /** @class */\r\n  function () {\r\n    function CoordSysInfo(coordSysName) {\r\n      this.coordSysDims = [];\r\n      this.axisMap = createHashMap();\r\n      this.categoryAxisMap = createHashMap();\r\n      this.coordSysName = coordSysName;\r\n    }\r\n\r\n    return CoordSysInfo;\r\n  }();\r\n\r\n  function getCoordSysInfoBySeries(seriesModel) {\r\n    var coordSysName = seriesModel.get('coordinateSystem');\r\n    var result = new CoordSysInfo(coordSysName);\r\n    var fetch = fetchers[coordSysName];\r\n\r\n    if (fetch) {\r\n      fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\r\n      return result;\r\n    }\r\n  }\r\n\r\n  var fetchers = {\r\n    cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\r\n      var xAxisModel = seriesModel.getReferringComponents('xAxis', SINGLE_REFERRING).models[0];\r\n      var yAxisModel = seriesModel.getReferringComponents('yAxis', SINGLE_REFERRING).models[0];\r\n      {\r\n        if (!xAxisModel) {\r\n          throw new Error('xAxis \"' + retrieve(seriesModel.get('xAxisIndex'), seriesModel.get('xAxisId'), 0) + '\" not found');\r\n        }\r\n\r\n        if (!yAxisModel) {\r\n          throw new Error('yAxis \"' + retrieve(seriesModel.get('xAxisIndex'), seriesModel.get('yAxisId'), 0) + '\" not found');\r\n        }\r\n      }\r\n      result.coordSysDims = ['x', 'y'];\r\n      axisMap.set('x', xAxisModel);\r\n      axisMap.set('y', yAxisModel);\r\n\r\n      if (isCategory(xAxisModel)) {\r\n        categoryAxisMap.set('x', xAxisModel);\r\n        result.firstCategoryDimIndex = 0;\r\n      }\r\n\r\n      if (isCategory(yAxisModel)) {\r\n        categoryAxisMap.set('y', yAxisModel);\r\n        result.firstCategoryDimIndex == null && (result.firstCategoryDimIndex = 1);\r\n      }\r\n    },\r\n    singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\r\n      var singleAxisModel = seriesModel.getReferringComponents('singleAxis', SINGLE_REFERRING).models[0];\r\n      {\r\n        if (!singleAxisModel) {\r\n          throw new Error('singleAxis should be specified.');\r\n        }\r\n      }\r\n      result.coordSysDims = ['single'];\r\n      axisMap.set('single', singleAxisModel);\r\n\r\n      if (isCategory(singleAxisModel)) {\r\n        categoryAxisMap.set('single', singleAxisModel);\r\n        result.firstCategoryDimIndex = 0;\r\n      }\r\n    },\r\n    polar: function (seriesModel, result, axisMap, categoryAxisMap) {\r\n      var polarModel = seriesModel.getReferringComponents('polar', SINGLE_REFERRING).models[0];\r\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\r\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\r\n      {\r\n        if (!angleAxisModel) {\r\n          throw new Error('angleAxis option not found');\r\n        }\r\n\r\n        if (!radiusAxisModel) {\r\n          throw new Error('radiusAxis option not found');\r\n        }\r\n      }\r\n      result.coordSysDims = ['radius', 'angle'];\r\n      axisMap.set('radius', radiusAxisModel);\r\n      axisMap.set('angle', angleAxisModel);\r\n\r\n      if (isCategory(radiusAxisModel)) {\r\n        categoryAxisMap.set('radius', radiusAxisModel);\r\n        result.firstCategoryDimIndex = 0;\r\n      }\r\n\r\n      if (isCategory(angleAxisModel)) {\r\n        categoryAxisMap.set('angle', angleAxisModel);\r\n        result.firstCategoryDimIndex == null && (result.firstCategoryDimIndex = 1);\r\n      }\r\n    },\r\n    geo: function (seriesModel, result, axisMap, categoryAxisMap) {\r\n      result.coordSysDims = ['lng', 'lat'];\r\n    },\r\n    parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\r\n      var ecModel = seriesModel.ecModel;\r\n      var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\r\n      var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\r\n      each$1(parallelModel.parallelAxisIndex, function (axisIndex, index) {\r\n        var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\r\n        var axisDim = coordSysDims[index];\r\n        axisMap.set(axisDim, axisModel);\r\n\r\n        if (isCategory(axisModel)) {\r\n          categoryAxisMap.set(axisDim, axisModel);\r\n\r\n          if (result.firstCategoryDimIndex == null) {\r\n            result.firstCategoryDimIndex = index;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  function isCategory(axisModel) {\r\n    return axisModel.get('type') === 'category';\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Note that it is too complicated to support 3d stack by value\r\n   * (have to create two-dimension inverted index), so in 3d case\r\n   * we just support that stacked by index.\r\n   *\r\n   * @param seriesModel\r\n   * @param dimensionInfoList The same as the input of <module:echarts/data/List>.\r\n   *        The input dimensionInfoList will be modified.\r\n   * @param opt\r\n   * @param opt.stackedCoordDimension Specify a coord dimension if needed.\r\n   * @param opt.byIndex=false\r\n   * @return calculationInfo\r\n   * {\r\n   *     stackedDimension: string\r\n   *     stackedByDimension: string\r\n   *     isStackedByIndex: boolean\r\n   *     stackedOverDimension: string\r\n   *     stackResultDimension: string\r\n   * }\r\n   */\r\n\r\n\r\n  function enableDataStack(seriesModel, dimensionInfoList, opt) {\r\n    opt = opt || {};\r\n    var byIndex = opt.byIndex;\r\n    var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\r\n\r\n    var mayStack = !!(seriesModel && seriesModel.get('stack'));\r\n    var stackedByDimInfo;\r\n    var stackedDimInfo;\r\n    var stackResultDimension;\r\n    var stackedOverDimension;\r\n    each$1(dimensionInfoList, function (dimensionInfo, index) {\r\n      if (isString(dimensionInfo)) {\r\n        dimensionInfoList[index] = dimensionInfo = {\r\n          name: dimensionInfo\r\n        };\r\n      }\r\n\r\n      if (mayStack && !dimensionInfo.isExtraCoord) {\r\n        // Find the first ordinal dimension as the stackedByDimInfo.\r\n        if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\r\n          stackedByDimInfo = dimensionInfo;\r\n        } // Find the first stackable dimension as the stackedDimInfo.\r\n\r\n\r\n        if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\r\n          stackedDimInfo = dimensionInfo;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\r\n      // Compatible with previous design, value axis (time axis) only stack by index.\r\n      // It may make sense if the user provides elaborately constructed data.\r\n      byIndex = true;\r\n    } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\r\n    // That put stack logic in List is for using conveniently in echarts extensions, but it\r\n    // might not be a good way.\r\n\r\n\r\n    if (stackedDimInfo) {\r\n      // Use a weird name that not duplicated with other names.\r\n      stackResultDimension = '__\\0ecstackresult';\r\n      stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\r\n\r\n      if (stackedByDimInfo) {\r\n        stackedByDimInfo.createInvertedIndices = true;\r\n      }\r\n\r\n      var stackedDimCoordDim_1 = stackedDimInfo.coordDim;\r\n      var stackedDimType = stackedDimInfo.type;\r\n      var stackedDimCoordIndex_1 = 0;\r\n      each$1(dimensionInfoList, function (dimensionInfo) {\r\n        if (dimensionInfo.coordDim === stackedDimCoordDim_1) {\r\n          stackedDimCoordIndex_1++;\r\n        }\r\n      });\r\n      dimensionInfoList.push({\r\n        name: stackResultDimension,\r\n        coordDim: stackedDimCoordDim_1,\r\n        coordDimIndex: stackedDimCoordIndex_1,\r\n        type: stackedDimType,\r\n        isExtraCoord: true,\r\n        isCalculationCoord: true\r\n      });\r\n      stackedDimCoordIndex_1++;\r\n      dimensionInfoList.push({\r\n        name: stackedOverDimension,\r\n        // This dimension contains stack base (generally, 0), so do not set it as\r\n        // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\r\n        coordDim: stackedOverDimension,\r\n        coordDimIndex: stackedDimCoordIndex_1,\r\n        type: stackedDimType,\r\n        isExtraCoord: true,\r\n        isCalculationCoord: true\r\n      });\r\n    }\r\n\r\n    return {\r\n      stackedDimension: stackedDimInfo && stackedDimInfo.name,\r\n      stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\r\n      isStackedByIndex: byIndex,\r\n      stackedOverDimension: stackedOverDimension,\r\n      stackResultDimension: stackResultDimension\r\n    };\r\n  }\r\n\r\n  function isDimensionStacked(data, stackedDim\r\n  /*, stackedByDim*/\r\n  ) {\r\n    // Each single series only maps to one pair of axis. So we do not need to\r\n    // check stackByDim, whatever stacked by a dimension or stacked by index.\r\n    return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\r\n    //     stackedByDim != null\r\n    //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\r\n    //         : data.getCalculationInfo('isStackedByIndex')\r\n    // );\r\n  }\r\n\r\n  function getStackedDimension(data, targetDim) {\r\n    return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function createListFromArray(source, seriesModel, opt) {\r\n    opt = opt || {};\r\n\r\n    if (!isSourceInstance(source)) {\r\n      source = createSourceFromSeriesDataOption(source);\r\n    }\r\n\r\n    var coordSysName = seriesModel.get('coordinateSystem');\r\n    var registeredCoordSys = CoordinateSystemManager.get(coordSysName);\r\n    var coordSysInfo = getCoordSysInfoBySeries(seriesModel);\r\n    var coordSysDimDefs;\r\n\r\n    if (coordSysInfo && coordSysInfo.coordSysDims) {\r\n      coordSysDimDefs = map(coordSysInfo.coordSysDims, function (dim) {\r\n        var dimInfo = {\r\n          name: dim\r\n        };\r\n        var axisModel = coordSysInfo.axisMap.get(dim);\r\n\r\n        if (axisModel) {\r\n          var axisType = axisModel.get('type');\r\n          dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\r\n        }\r\n\r\n        return dimInfo;\r\n      });\r\n    }\r\n\r\n    if (!coordSysDimDefs) {\r\n      // Get dimensions from registered coordinate system\r\n      coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\r\n    }\r\n\r\n    var useEncodeDefaulter = opt.useEncodeDefaulter;\r\n    var dimInfoList = createDimensions(source, {\r\n      coordDimensions: coordSysDimDefs,\r\n      generateCoord: opt.generateCoord,\r\n      encodeDefaulter: isFunction$1(useEncodeDefaulter) ? useEncodeDefaulter : useEncodeDefaulter ? curry(makeSeriesEncodeForAxisCoordSys, coordSysDimDefs, seriesModel) : null\r\n    });\r\n    var firstCategoryDimIndex;\r\n    var hasNameEncode;\r\n    coordSysInfo && each$1(dimInfoList, function (dimInfo, dimIndex) {\r\n      var coordDim = dimInfo.coordDim;\r\n      var categoryAxisModel = coordSysInfo.categoryAxisMap.get(coordDim);\r\n\r\n      if (categoryAxisModel) {\r\n        if (firstCategoryDimIndex == null) {\r\n          firstCategoryDimIndex = dimIndex;\r\n        }\r\n\r\n        dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\r\n\r\n        if (opt.createInvertedIndices) {\r\n          dimInfo.createInvertedIndices = true;\r\n        }\r\n      }\r\n\r\n      if (dimInfo.otherDims.itemName != null) {\r\n        hasNameEncode = true;\r\n      }\r\n    });\r\n\r\n    if (!hasNameEncode && firstCategoryDimIndex != null) {\r\n      dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\r\n    }\r\n\r\n    var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\r\n    var list = new List(dimInfoList, seriesModel);\r\n    list.setCalculationInfo(stackCalculationInfo);\r\n    var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\r\n      // Use dataIndex as ordinal value in categoryAxis\r\n      return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\r\n    } : null;\r\n    list.hasItemOption = false;\r\n    list.initData(source, null, dimValueGetter);\r\n    return list;\r\n  }\r\n\r\n  function isNeedCompleteOrdinalData(source) {\r\n    if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\r\n      var sampleItem = firstDataNotNull(source.data || []);\r\n      return sampleItem != null && !isArray(getDataItemValue(sampleItem));\r\n    }\r\n  }\r\n\r\n  function firstDataNotNull(data) {\r\n    var i = 0;\r\n\r\n    while (i < data.length && data[i] == null) {\r\n      i++;\r\n    }\r\n\r\n    return data[i];\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var Scale =\r\n  /** @class */\r\n  function () {\r\n    function Scale(setting) {\r\n      this._setting = setting || {};\r\n      this._extent = [Infinity, -Infinity];\r\n    }\r\n\r\n    Scale.prototype.getSetting = function (name) {\r\n      return this._setting[name];\r\n    };\r\n    /**\r\n     * Set extent from data\r\n     */\r\n\r\n\r\n    Scale.prototype.unionExtent = function (other) {\r\n      var extent = this._extent;\r\n      other[0] < extent[0] && (extent[0] = other[0]);\r\n      other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\r\n      // this.setExtent(extent[0], extent[1]);\r\n    };\r\n    /**\r\n     * Set extent from data\r\n     */\r\n\r\n\r\n    Scale.prototype.unionExtentFromData = function (data, dim) {\r\n      this.unionExtent(data.getApproximateExtent(dim));\r\n    };\r\n    /**\r\n     * Get extent\r\n     *\r\n     * Extent is always in increase order.\r\n     */\r\n\r\n\r\n    Scale.prototype.getExtent = function () {\r\n      return this._extent.slice();\r\n    };\r\n    /**\r\n     * Set extent\r\n     */\r\n\r\n\r\n    Scale.prototype.setExtent = function (start, end) {\r\n      var thisExtent = this._extent;\r\n\r\n      if (!isNaN(start)) {\r\n        thisExtent[0] = start;\r\n      }\r\n\r\n      if (!isNaN(end)) {\r\n        thisExtent[1] = end;\r\n      }\r\n    };\r\n    /**\r\n     * If value is in extent range\r\n     */\r\n\r\n\r\n    Scale.prototype.isInExtentRange = function (value) {\r\n      return this._extent[0] <= value && this._extent[1] >= value;\r\n    };\r\n    /**\r\n     * When axis extent depends on data and no data exists,\r\n     * axis ticks should not be drawn, which is named 'blank'.\r\n     */\r\n\r\n\r\n    Scale.prototype.isBlank = function () {\r\n      return this._isBlank;\r\n    };\r\n    /**\r\n     * When axis extent depends on data and no data exists,\r\n     * axis ticks should not be drawn, which is named 'blank'.\r\n     */\r\n\r\n\r\n    Scale.prototype.setBlank = function (isBlank) {\r\n      this._isBlank = isBlank;\r\n    };\r\n\r\n    return Scale;\r\n  }();\r\n\r\n  enableClassManagement(Scale);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var OrdinalMeta =\r\n  /** @class */\r\n  function () {\r\n    function OrdinalMeta(opt) {\r\n      this.categories = opt.categories || [];\r\n      this._needCollect = opt.needCollect;\r\n      this._deduplication = opt.deduplication;\r\n    }\r\n\r\n    OrdinalMeta.createByAxisModel = function (axisModel) {\r\n      var option = axisModel.option;\r\n      var data = option.data;\r\n      var categories = data && map(data, getName);\r\n      return new OrdinalMeta({\r\n        categories: categories,\r\n        needCollect: !categories,\r\n        // deduplication is default in axis.\r\n        deduplication: option.dedplication !== false\r\n      });\r\n    };\r\n\r\n    OrdinalMeta.prototype.getOrdinal = function (category) {\r\n      // @ts-ignore\r\n      return this._getOrCreateMap().get(category);\r\n    };\r\n    /**\r\n     * @return The ordinal. If not found, return NaN.\r\n     */\r\n\r\n\r\n    OrdinalMeta.prototype.parseAndCollect = function (category) {\r\n      var index;\r\n      var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\r\n      // This feature is only supported when !needCollect, because we should\r\n      // consider a common case: a value is 2017, which is a number but is\r\n      // expected to be tread as a category. This case usually happen in dataset,\r\n      // where it happent to be no need of the index feature.\r\n\r\n      if (typeof category !== 'string' && !needCollect) {\r\n        return category;\r\n      } // Optimize for the scenario:\r\n      // category is ['2012-01-01', '2012-01-02', ...], where the input\r\n      // data has been ensured not duplicate and is large data.\r\n      // Notice, if a dataset dimension provide categroies, usually echarts\r\n      // should remove duplication except user tell echarts dont do that\r\n      // (set axis.deduplication = false), because echarts do not know whether\r\n      // the values in the category dimension has duplication (consider the\r\n      // parallel-aqi example)\r\n\r\n\r\n      if (needCollect && !this._deduplication) {\r\n        index = this.categories.length;\r\n        this.categories[index] = category;\r\n        return index;\r\n      }\r\n\r\n      var map$$1 = this._getOrCreateMap(); // @ts-ignore\r\n\r\n\r\n      index = map$$1.get(category);\r\n\r\n      if (index == null) {\r\n        if (needCollect) {\r\n          index = this.categories.length;\r\n          this.categories[index] = category; // @ts-ignore\r\n\r\n          map$$1.set(category, index);\r\n        } else {\r\n          index = NaN;\r\n        }\r\n      }\r\n\r\n      return index;\r\n    }; // Consider big data, do not create map until needed.\r\n\r\n\r\n    OrdinalMeta.prototype._getOrCreateMap = function () {\r\n      return this._map || (this._map = createHashMap(this.categories));\r\n    };\r\n\r\n    return OrdinalMeta;\r\n  }();\r\n\r\n  function getName(obj) {\r\n    if (isObject$1(obj) && obj.value != null) {\r\n      return obj.value;\r\n    } else {\r\n      return obj + '';\r\n    }\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var roundNumber = round;\r\n  /**\r\n   * @param extent Both extent[0] and extent[1] should be valid number.\r\n   *               Should be extent[0] < extent[1].\r\n   * @param splitNumber splitNumber should be >= 1.\r\n   */\r\n\r\n  function intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\r\n    var result = {};\r\n    var span = extent[1] - extent[0];\r\n    var interval = result.interval = nice(span / splitNumber, true);\r\n\r\n    if (minInterval != null && interval < minInterval) {\r\n      interval = result.interval = minInterval;\r\n    }\r\n\r\n    if (maxInterval != null && interval > maxInterval) {\r\n      interval = result.interval = maxInterval;\r\n    } // Tow more digital for tick.\r\n\r\n\r\n    var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\r\n\r\n    var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\r\n    fixExtent(niceTickExtent, extent);\r\n    return result;\r\n  }\r\n  /**\r\n   * @return interval precision\r\n   */\r\n\r\n\r\n  function getIntervalPrecision(interval) {\r\n    // Tow more digital for tick.\r\n    return getPrecisionSafe(interval) + 2;\r\n  }\r\n\r\n  function clamp(niceTickExtent, idx, extent) {\r\n    niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\r\n  } // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\r\n\r\n\r\n  function fixExtent(niceTickExtent, extent) {\r\n    !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\r\n    !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\r\n    clamp(niceTickExtent, 0, extent);\r\n    clamp(niceTickExtent, 1, extent);\r\n\r\n    if (niceTickExtent[0] > niceTickExtent[1]) {\r\n      niceTickExtent[0] = niceTickExtent[1];\r\n    }\r\n  }\r\n\r\n  function contain$1(val, extent) {\r\n    return val >= extent[0] && val <= extent[1];\r\n  }\r\n\r\n  function normalize$1(val, extent) {\r\n    if (extent[1] === extent[0]) {\r\n      return 0.5;\r\n    }\r\n\r\n    return (val - extent[0]) / (extent[1] - extent[0]);\r\n  }\r\n\r\n  function scale$2(val, extent) {\r\n    return val * (extent[1] - extent[0]) + extent[0];\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Linear continuous scale\r\n   * http://en.wikipedia.org/wiki/Level_of_measurement\r\n   */\r\n  // FIXME only one data\r\n\r\n\r\n  var OrdinalScale =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(OrdinalScale, _super);\r\n\r\n    function OrdinalScale(setting) {\r\n      var _this = _super.call(this, setting) || this;\r\n\r\n      _this.type = 'ordinal';\r\n\r\n      var ordinalMeta = _this.getSetting('ordinalMeta'); // Caution: Should not use instanceof, consider ec-extensions using\r\n      // import approach to get OrdinalMeta class.\r\n\r\n\r\n      if (!ordinalMeta) {\r\n        ordinalMeta = new OrdinalMeta({});\r\n      }\r\n\r\n      if (isArray(ordinalMeta)) {\r\n        ordinalMeta = new OrdinalMeta({\r\n          categories: map(ordinalMeta, function (item) {\r\n            return isObject$1(item) ? item.value : item;\r\n          })\r\n        });\r\n      }\r\n\r\n      _this._ordinalMeta = ordinalMeta;\r\n      _this._extent = _this.getSetting('extent') || [0, ordinalMeta.categories.length - 1];\r\n      return _this;\r\n    }\r\n\r\n    OrdinalScale.prototype.parse = function (val) {\r\n      return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\r\n      : Math.round(val);\r\n    };\r\n\r\n    OrdinalScale.prototype.contain = function (rank) {\r\n      rank = this.parse(rank);\r\n      return contain$1(rank, this._extent) && this._ordinalMeta.categories[rank] != null;\r\n    };\r\n    /**\r\n     * Normalize given rank or name to linear [0, 1]\r\n     * @param val raw ordinal number.\r\n     * @return normalized value in [0, 1].\r\n     */\r\n\r\n\r\n    OrdinalScale.prototype.normalize = function (val) {\r\n      val = this._getTickNumber(this.parse(val));\r\n      return normalize$1(val, this._extent);\r\n    };\r\n    /**\r\n     * @param val normalized value in [0, 1].\r\n     * @return raw ordinal number.\r\n     */\r\n\r\n\r\n    OrdinalScale.prototype.scale = function (val) {\r\n      val = Math.round(scale$2(val, this._extent));\r\n      return this.getRawOrdinalNumber(val);\r\n    };\r\n\r\n    OrdinalScale.prototype.getTicks = function () {\r\n      var ticks = [];\r\n      var extent = this._extent;\r\n      var rank = extent[0];\r\n\r\n      while (rank <= extent[1]) {\r\n        ticks.push({\r\n          value: rank\r\n        });\r\n        rank++;\r\n      }\r\n\r\n      return ticks;\r\n    };\r\n\r\n    OrdinalScale.prototype.getMinorTicks = function (splitNumber) {\r\n      // Not support.\r\n      return;\r\n    };\r\n    /**\r\n     * @see `Ordinal['_ordinalNumbersByTick']`\r\n     */\r\n\r\n\r\n    OrdinalScale.prototype.setSortInfo = function (info) {\r\n      if (info == null) {\r\n        this._ordinalNumbersByTick = this._ticksByOrdinalNumber = null;\r\n        return;\r\n      }\r\n\r\n      var infoOrdinalNumbers = info.ordinalNumbers;\r\n      var ordinalsByTick = this._ordinalNumbersByTick = [];\r\n      var ticksByOrdinal = this._ticksByOrdinalNumber = []; // Unnecessary support negative tick in `realtimeSort`.\r\n\r\n      var tickNum = 0;\r\n      var allCategoryLen = this._ordinalMeta.categories.length;\r\n\r\n      for (var len = Math.min(allCategoryLen, infoOrdinalNumbers.length); tickNum < len; ++tickNum) {\r\n        var ordinalNumber = infoOrdinalNumbers[tickNum];\r\n        ordinalsByTick[tickNum] = ordinalNumber;\r\n        ticksByOrdinal[ordinalNumber] = tickNum;\r\n      } // Handle that `series.data` only covers part of the `axis.category.data`.\r\n\r\n\r\n      var unusedOrdinal = 0;\r\n\r\n      for (; tickNum < allCategoryLen; ++tickNum) {\r\n        while (ticksByOrdinal[unusedOrdinal] != null) {\r\n          unusedOrdinal++;\r\n        }\r\n\r\n        ordinalsByTick.push(unusedOrdinal);\r\n        ticksByOrdinal[unusedOrdinal] = tickNum;\r\n      }\r\n    };\r\n\r\n    OrdinalScale.prototype._getTickNumber = function (ordinal) {\r\n      var ticksByOrdinalNumber = this._ticksByOrdinalNumber; // also support ordinal out of range of `ordinalMeta.categories.length`,\r\n      // where ordinal numbers are used as tick value directly.\r\n\r\n      return ticksByOrdinalNumber && ordinal >= 0 && ordinal < ticksByOrdinalNumber.length ? ticksByOrdinalNumber[ordinal] : ordinal;\r\n    };\r\n    /**\r\n     * @usage\r\n     * ```js\r\n     * const ordinalNumber = ordinalScale.getRawOrdinalNumber(tickVal);\r\n     *\r\n     * // case0\r\n     * const rawOrdinalValue = axisModel.getCategories()[ordinalNumber];\r\n     * // case1\r\n     * const rawOrdinalValue = this._ordinalMeta.categories[ordinalNumber];\r\n     * // case2\r\n     * const coord = axis.dataToCoord(ordinalNumber);\r\n     * ```\r\n     *\r\n     * @param {OrdinalNumber} tickNumber index of display\r\n     */\r\n\r\n\r\n    OrdinalScale.prototype.getRawOrdinalNumber = function (tickNumber) {\r\n      var ordinalNumbersByTick = this._ordinalNumbersByTick; // tickNumber may be out of range, e.g., when axis max is larger than `ordinalMeta.categories.length`.,\r\n      // where ordinal numbers are used as tick value directly.\r\n\r\n      return ordinalNumbersByTick && tickNumber >= 0 && tickNumber < ordinalNumbersByTick.length ? ordinalNumbersByTick[tickNumber] : tickNumber;\r\n    };\r\n    /**\r\n     * Get item on tick\r\n     */\r\n\r\n\r\n    OrdinalScale.prototype.getLabel = function (tick) {\r\n      if (!this.isBlank()) {\r\n        var ordinalNumber = this.getRawOrdinalNumber(tick.value);\r\n        var cateogry = this._ordinalMeta.categories[ordinalNumber]; // Note that if no data, ordinalMeta.categories is an empty array.\r\n        // Return empty if it's not exist.\r\n\r\n        return cateogry == null ? '' : cateogry + '';\r\n      }\r\n    };\r\n\r\n    OrdinalScale.prototype.count = function () {\r\n      return this._extent[1] - this._extent[0] + 1;\r\n    };\r\n\r\n    OrdinalScale.prototype.unionExtentFromData = function (data, dim) {\r\n      this.unionExtent(data.getApproximateExtent(dim));\r\n    };\r\n    /**\r\n     * @override\r\n     * If value is in extent range\r\n     */\r\n\r\n\r\n    OrdinalScale.prototype.isInExtentRange = function (value) {\r\n      value = this._getTickNumber(value);\r\n      return this._extent[0] <= value && this._extent[1] >= value;\r\n    };\r\n\r\n    OrdinalScale.prototype.getOrdinalMeta = function () {\r\n      return this._ordinalMeta;\r\n    };\r\n\r\n    OrdinalScale.prototype.niceTicks = function () {};\r\n\r\n    OrdinalScale.prototype.niceExtent = function () {};\r\n\r\n    OrdinalScale.type = 'ordinal';\r\n    return OrdinalScale;\r\n  }(Scale);\r\n\r\n  Scale.registerClass(OrdinalScale);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var roundNumber$1 = round;\r\n\r\n  var IntervalScale =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(IntervalScale, _super);\r\n\r\n    function IntervalScale() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = 'interval'; // Step is calculated in adjustExtent.\r\n\r\n      _this._interval = 0;\r\n      _this._intervalPrecision = 2;\r\n      return _this;\r\n    }\r\n\r\n    IntervalScale.prototype.parse = function (val) {\r\n      return val;\r\n    };\r\n\r\n    IntervalScale.prototype.contain = function (val) {\r\n      return contain$1(val, this._extent);\r\n    };\r\n\r\n    IntervalScale.prototype.normalize = function (val) {\r\n      return normalize$1(val, this._extent);\r\n    };\r\n\r\n    IntervalScale.prototype.scale = function (val) {\r\n      return scale$2(val, this._extent);\r\n    };\r\n\r\n    IntervalScale.prototype.setExtent = function (start, end) {\r\n      var thisExtent = this._extent; // start,end may be a Number like '25',so...\r\n\r\n      if (!isNaN(start)) {\r\n        thisExtent[0] = parseFloat(start);\r\n      }\r\n\r\n      if (!isNaN(end)) {\r\n        thisExtent[1] = parseFloat(end);\r\n      }\r\n    };\r\n\r\n    IntervalScale.prototype.unionExtent = function (other) {\r\n      var extent = this._extent;\r\n      other[0] < extent[0] && (extent[0] = other[0]);\r\n      other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\r\n\r\n      this.setExtent(extent[0], extent[1]);\r\n    };\r\n\r\n    IntervalScale.prototype.getInterval = function () {\r\n      return this._interval;\r\n    };\r\n\r\n    IntervalScale.prototype.setInterval = function (interval) {\r\n      this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\r\n      // We assume user wan't to set both interval, min, max to get a better result\r\n\r\n      this._niceExtent = this._extent.slice();\r\n      this._intervalPrecision = getIntervalPrecision(interval);\r\n    };\r\n    /**\r\n     * @param expandToNicedExtent Whether expand the ticks to niced extent.\r\n     */\r\n\r\n\r\n    IntervalScale.prototype.getTicks = function (expandToNicedExtent) {\r\n      var interval = this._interval;\r\n      var extent = this._extent;\r\n      var niceTickExtent = this._niceExtent;\r\n      var intervalPrecision = this._intervalPrecision;\r\n      var ticks = []; // If interval is 0, return [];\r\n\r\n      if (!interval) {\r\n        return ticks;\r\n      } // Consider this case: using dataZoom toolbox, zoom and zoom.\r\n\r\n\r\n      var safeLimit = 10000;\r\n\r\n      if (extent[0] < niceTickExtent[0]) {\r\n        if (expandToNicedExtent) {\r\n          ticks.push({\r\n            value: roundNumber$1(niceTickExtent[0] - interval, intervalPrecision)\r\n          });\r\n        } else {\r\n          ticks.push({\r\n            value: extent[0]\r\n          });\r\n        }\r\n      }\r\n\r\n      var tick = niceTickExtent[0];\r\n\r\n      while (tick <= niceTickExtent[1]) {\r\n        ticks.push({\r\n          value: tick\r\n        }); // Avoid rounding error\r\n\r\n        tick = roundNumber$1(tick + interval, intervalPrecision);\r\n\r\n        if (tick === ticks[ticks.length - 1].value) {\r\n          // Consider out of safe float point, e.g.,\r\n          // -3711126.9907707 + 2e-10 === -3711126.9907707\r\n          break;\r\n        }\r\n\r\n        if (ticks.length > safeLimit) {\r\n          return [];\r\n        }\r\n      } // Consider this case: the last item of ticks is smaller\r\n      // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\r\n\r\n\r\n      var lastNiceTick = ticks.length ? ticks[ticks.length - 1].value : niceTickExtent[1];\r\n\r\n      if (extent[1] > lastNiceTick) {\r\n        if (expandToNicedExtent) {\r\n          ticks.push({\r\n            value: roundNumber$1(lastNiceTick + interval, intervalPrecision)\r\n          });\r\n        } else {\r\n          ticks.push({\r\n            value: extent[1]\r\n          });\r\n        }\r\n      }\r\n\r\n      return ticks;\r\n    };\r\n\r\n    IntervalScale.prototype.getMinorTicks = function (splitNumber) {\r\n      var ticks = this.getTicks(true);\r\n      var minorTicks = [];\r\n      var extent = this.getExtent();\r\n\r\n      for (var i = 1; i < ticks.length; i++) {\r\n        var nextTick = ticks[i];\r\n        var prevTick = ticks[i - 1];\r\n        var count = 0;\r\n        var minorTicksGroup = [];\r\n        var interval = nextTick.value - prevTick.value;\r\n        var minorInterval = interval / splitNumber;\r\n\r\n        while (count < splitNumber - 1) {\r\n          var minorTick = roundNumber$1(prevTick.value + (count + 1) * minorInterval); // For the first and last interval. The count may be less than splitNumber.\r\n\r\n          if (minorTick > extent[0] && minorTick < extent[1]) {\r\n            minorTicksGroup.push(minorTick);\r\n          }\r\n\r\n          count++;\r\n        }\r\n\r\n        minorTicks.push(minorTicksGroup);\r\n      }\r\n\r\n      return minorTicks;\r\n    };\r\n    /**\r\n     * @param opt.precision If 'auto', use nice presision.\r\n     * @param opt.pad returns 1.50 but not 1.5 if precision is 2.\r\n     */\r\n\r\n\r\n    IntervalScale.prototype.getLabel = function (data, opt) {\r\n      if (data == null) {\r\n        return '';\r\n      }\r\n\r\n      var precision = opt && opt.precision;\r\n\r\n      if (precision == null) {\r\n        precision = getPrecisionSafe(data.value) || 0;\r\n      } else if (precision === 'auto') {\r\n        // Should be more precise then tick.\r\n        precision = this._intervalPrecision;\r\n      } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\r\n      // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\r\n\r\n\r\n      var dataNum = roundNumber$1(data.value, precision, true);\r\n      return addCommas(dataNum);\r\n    };\r\n    /**\r\n     * @param splitNumber By default `5`.\r\n     */\r\n\r\n\r\n    IntervalScale.prototype.niceTicks = function (splitNumber, minInterval, maxInterval) {\r\n      splitNumber = splitNumber || 5;\r\n      var extent = this._extent;\r\n      var span = extent[1] - extent[0];\r\n\r\n      if (!isFinite(span)) {\r\n        return;\r\n      } // User may set axis min 0 and data are all negative\r\n      // FIXME If it needs to reverse ?\r\n\r\n\r\n      if (span < 0) {\r\n        span = -span;\r\n        extent.reverse();\r\n      }\r\n\r\n      var result = intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\r\n      this._intervalPrecision = result.intervalPrecision;\r\n      this._interval = result.interval;\r\n      this._niceExtent = result.niceTickExtent;\r\n    };\r\n\r\n    IntervalScale.prototype.niceExtent = function (opt) {\r\n      var extent = this._extent; // If extent start and end are same, expand them\r\n\r\n      if (extent[0] === extent[1]) {\r\n        if (extent[0] !== 0) {\r\n          // Expand extent\r\n          var expandSize = extent[0]; // In the fowllowing case\r\n          //      Axis has been fixed max 100\r\n          //      Plus data are all 100 and axis extent are [100, 100].\r\n          // Extend to the both side will cause expanded max is larger than fixed max.\r\n          // So only expand to the smaller side.\r\n\r\n          if (!opt.fixMax) {\r\n            extent[1] += expandSize / 2;\r\n            extent[0] -= expandSize / 2;\r\n          } else {\r\n            extent[0] -= expandSize / 2;\r\n          }\r\n        } else {\r\n          extent[1] = 1;\r\n        }\r\n      }\r\n\r\n      var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\r\n\r\n      if (!isFinite(span)) {\r\n        extent[0] = 0;\r\n        extent[1] = 1;\r\n      }\r\n\r\n      this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // let extent = this._extent;\r\n\r\n      var interval = this._interval;\r\n\r\n      if (!opt.fixMin) {\r\n        extent[0] = roundNumber$1(Math.floor(extent[0] / interval) * interval);\r\n      }\r\n\r\n      if (!opt.fixMax) {\r\n        extent[1] = roundNumber$1(Math.ceil(extent[1] / interval) * interval);\r\n      }\r\n    };\r\n\r\n    IntervalScale.type = 'interval';\r\n    return IntervalScale;\r\n  }(Scale);\r\n\r\n  Scale.registerClass(IntervalScale);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /* global Float32Array */\r\n\r\n  var STACK_PREFIX = '__ec_stack_';\r\n  var LARGE_BAR_MIN_WIDTH = 0.5;\r\n  var LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\n\r\n  function getSeriesStackId(seriesModel) {\r\n    return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\r\n  }\r\n\r\n  function getAxisKey(axis) {\r\n    return axis.dim + axis.index;\r\n  }\r\n  /**\r\n   * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\r\n   */\r\n\r\n\r\n  function prepareLayoutBarSeries(seriesType, ecModel) {\r\n    var seriesModels = [];\r\n    ecModel.eachSeriesByType(seriesType, function (seriesModel) {\r\n      // Check series coordinate, do layout for cartesian2d only\r\n      if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {\r\n        seriesModels.push(seriesModel);\r\n      }\r\n    });\r\n    return seriesModels;\r\n  }\r\n  /**\r\n   * Map from (baseAxis.dim + '_' + baseAxis.index) to min gap of two adjacent\r\n   * values.\r\n   * This works for time axes, value axes, and log axes.\r\n   * For a single time axis, return value is in the form like\r\n   * {'x_0': [1000000]}.\r\n   * The value of 1000000 is in milliseconds.\r\n   */\r\n\r\n\r\n  function getValueAxesMinGaps(barSeries) {\r\n    /**\r\n     * Map from axis.index to values.\r\n     * For a single time axis, axisValues is in the form like\r\n     * {'x_0': [1495555200000, 1495641600000, 1495728000000]}.\r\n     * Items in axisValues[x], e.g. 1495555200000, are time values of all\r\n     * series.\r\n     */\r\n    var axisValues = {};\r\n    each$1(barSeries, function (seriesModel) {\r\n      var cartesian = seriesModel.coordinateSystem;\r\n      var baseAxis = cartesian.getBaseAxis();\r\n\r\n      if (baseAxis.type !== 'time' && baseAxis.type !== 'value') {\r\n        return;\r\n      }\r\n\r\n      var data = seriesModel.getData();\r\n      var key = baseAxis.dim + '_' + baseAxis.index;\r\n      var dim = data.mapDimension(baseAxis.dim);\r\n\r\n      for (var i = 0, cnt = data.count(); i < cnt; ++i) {\r\n        var value = data.get(dim, i);\r\n\r\n        if (!axisValues[key]) {\r\n          // No previous data for the axis\r\n          axisValues[key] = [value];\r\n        } else {\r\n          // No value in previous series\r\n          axisValues[key].push(value);\r\n        } // Ignore duplicated time values in the same axis\r\n\r\n      }\r\n    });\r\n    var axisMinGaps = {};\r\n\r\n    for (var key in axisValues) {\r\n      if (axisValues.hasOwnProperty(key)) {\r\n        var valuesInAxis = axisValues[key];\r\n\r\n        if (valuesInAxis) {\r\n          // Sort axis values into ascending order to calculate gaps\r\n          valuesInAxis.sort(function (a, b) {\r\n            return a - b;\r\n          });\r\n          var min = null;\r\n\r\n          for (var j = 1; j < valuesInAxis.length; ++j) {\r\n            var delta = valuesInAxis[j] - valuesInAxis[j - 1];\r\n\r\n            if (delta > 0) {\r\n              // Ignore 0 delta because they are of the same axis value\r\n              min = min === null ? delta : Math.min(min, delta);\r\n            }\r\n          } // Set to null if only have one data\r\n\r\n\r\n          axisMinGaps[key] = min;\r\n        }\r\n      }\r\n    }\r\n\r\n    return axisMinGaps;\r\n  }\r\n\r\n  function makeColumnLayout(barSeries) {\r\n    var axisMinGaps = getValueAxesMinGaps(barSeries);\r\n    var seriesInfoList = [];\r\n    each$1(barSeries, function (seriesModel) {\r\n      var cartesian = seriesModel.coordinateSystem;\r\n      var baseAxis = cartesian.getBaseAxis();\r\n      var axisExtent = baseAxis.getExtent();\r\n      var bandWidth;\r\n\r\n      if (baseAxis.type === 'category') {\r\n        bandWidth = baseAxis.getBandWidth();\r\n      } else if (baseAxis.type === 'value' || baseAxis.type === 'time') {\r\n        var key = baseAxis.dim + '_' + baseAxis.index;\r\n        var minGap = axisMinGaps[key];\r\n        var extentSpan = Math.abs(axisExtent[1] - axisExtent[0]);\r\n        var scale = baseAxis.scale.getExtent();\r\n        var scaleSpan = Math.abs(scale[1] - scale[0]);\r\n        bandWidth = minGap ? extentSpan / scaleSpan * minGap : extentSpan; // When there is only one data value\r\n      } else {\r\n        var data = seriesModel.getData();\r\n        bandWidth = Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\r\n      }\r\n\r\n      var barWidth = parsePercent$1(seriesModel.get('barWidth'), bandWidth);\r\n      var barMaxWidth = parsePercent$1(seriesModel.get('barMaxWidth'), bandWidth);\r\n      var barMinWidth = parsePercent$1( // barMinWidth by default is 1 in cartesian. Because in value axis,\r\n      // the auto-calculated bar width might be less than 1.\r\n      seriesModel.get('barMinWidth') || 1, bandWidth);\r\n      var barGap = seriesModel.get('barGap');\r\n      var barCategoryGap = seriesModel.get('barCategoryGap');\r\n      seriesInfoList.push({\r\n        bandWidth: bandWidth,\r\n        barWidth: barWidth,\r\n        barMaxWidth: barMaxWidth,\r\n        barMinWidth: barMinWidth,\r\n        barGap: barGap,\r\n        barCategoryGap: barCategoryGap,\r\n        axisKey: getAxisKey(baseAxis),\r\n        stackId: getSeriesStackId(seriesModel)\r\n      });\r\n    });\r\n    return doCalBarWidthAndOffset(seriesInfoList);\r\n  }\r\n\r\n  function doCalBarWidthAndOffset(seriesInfoList) {\r\n    // Columns info on each category axis. Key is cartesian name\r\n    var columnsMap = {};\r\n    each$1(seriesInfoList, function (seriesInfo, idx) {\r\n      var axisKey = seriesInfo.axisKey;\r\n      var bandWidth = seriesInfo.bandWidth;\r\n      var columnsOnAxis = columnsMap[axisKey] || {\r\n        bandWidth: bandWidth,\r\n        remainedWidth: bandWidth,\r\n        autoWidthCount: 0,\r\n        categoryGap: null,\r\n        gap: '20%',\r\n        stacks: {}\r\n      };\r\n      var stacks = columnsOnAxis.stacks;\r\n      columnsMap[axisKey] = columnsOnAxis;\r\n      var stackId = seriesInfo.stackId;\r\n\r\n      if (!stacks[stackId]) {\r\n        columnsOnAxis.autoWidthCount++;\r\n      }\r\n\r\n      stacks[stackId] = stacks[stackId] || {\r\n        width: 0,\r\n        maxWidth: 0\r\n      }; // Caution: In a single coordinate system, these barGrid attributes\r\n      // will be shared by series. Consider that they have default values,\r\n      // only the attributes set on the last series will work.\r\n      // Do not change this fact unless there will be a break change.\r\n\r\n      var barWidth = seriesInfo.barWidth;\r\n\r\n      if (barWidth && !stacks[stackId].width) {\r\n        // See #6312, do not restrict width.\r\n        stacks[stackId].width = barWidth;\r\n        barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\r\n        columnsOnAxis.remainedWidth -= barWidth;\r\n      }\r\n\r\n      var barMaxWidth = seriesInfo.barMaxWidth;\r\n      barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\r\n      var barMinWidth = seriesInfo.barMinWidth;\r\n      barMinWidth && (stacks[stackId].minWidth = barMinWidth);\r\n      var barGap = seriesInfo.barGap;\r\n      barGap != null && (columnsOnAxis.gap = barGap);\r\n      var barCategoryGap = seriesInfo.barCategoryGap;\r\n      barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\r\n    });\r\n    var result = {};\r\n    each$1(columnsMap, function (columnsOnAxis, coordSysName) {\r\n      result[coordSysName] = {};\r\n      var stacks = columnsOnAxis.stacks;\r\n      var bandWidth = columnsOnAxis.bandWidth;\r\n      var categoryGapPercent = columnsOnAxis.categoryGap;\r\n\r\n      if (categoryGapPercent == null) {\r\n        var columnCount = keys(stacks).length; // More columns in one group\r\n        // the spaces between group is smaller. Or the column will be too thin.\r\n\r\n        categoryGapPercent = Math.max(35 - columnCount * 4, 15) + '%';\r\n      }\r\n\r\n      var categoryGap = parsePercent$1(categoryGapPercent, bandWidth);\r\n      var barGapPercent = parsePercent$1(columnsOnAxis.gap, 1);\r\n      var remainedWidth = columnsOnAxis.remainedWidth;\r\n      var autoWidthCount = columnsOnAxis.autoWidthCount;\r\n      var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\r\n      autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\r\n\r\n      each$1(stacks, function (column) {\r\n        var maxWidth = column.maxWidth;\r\n        var minWidth = column.minWidth;\r\n\r\n        if (!column.width) {\r\n          var finalWidth = autoWidth;\r\n\r\n          if (maxWidth && maxWidth < finalWidth) {\r\n            finalWidth = Math.min(maxWidth, remainedWidth);\r\n          } // `minWidth` has higher priority. `minWidth` decide that wheter the\r\n          // bar is able to be visible. So `minWidth` should not be restricted\r\n          // by `maxWidth` or `remainedWidth` (which is from `bandWidth`). In\r\n          // the extreme cases for `value` axis, bars are allowed to overlap\r\n          // with each other if `minWidth` specified.\r\n\r\n\r\n          if (minWidth && minWidth > finalWidth) {\r\n            finalWidth = minWidth;\r\n          }\r\n\r\n          if (finalWidth !== autoWidth) {\r\n            column.width = finalWidth;\r\n            remainedWidth -= finalWidth + barGapPercent * finalWidth;\r\n            autoWidthCount--;\r\n          }\r\n        } else {\r\n          // `barMinWidth/barMaxWidth` has higher priority than `barWidth`, as\r\n          // CSS does. Becuase barWidth can be a percent value, where\r\n          // `barMaxWidth` can be used to restrict the final width.\r\n          var finalWidth = column.width;\r\n\r\n          if (maxWidth) {\r\n            finalWidth = Math.min(finalWidth, maxWidth);\r\n          } // `minWidth` has higher priority, as described above\r\n\r\n\r\n          if (minWidth) {\r\n            finalWidth = Math.max(finalWidth, minWidth);\r\n          }\r\n\r\n          column.width = finalWidth;\r\n          remainedWidth -= finalWidth + barGapPercent * finalWidth;\r\n          autoWidthCount--;\r\n        }\r\n      }); // Recalculate width again\r\n\r\n      autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\r\n      autoWidth = Math.max(autoWidth, 0);\r\n      var widthSum = 0;\r\n      var lastColumn;\r\n      each$1(stacks, function (column, idx) {\r\n        if (!column.width) {\r\n          column.width = autoWidth;\r\n        }\r\n\r\n        lastColumn = column;\r\n        widthSum += column.width * (1 + barGapPercent);\r\n      });\r\n\r\n      if (lastColumn) {\r\n        widthSum -= lastColumn.width * barGapPercent;\r\n      }\r\n\r\n      var offset = -widthSum / 2;\r\n      each$1(stacks, function (column, stackId) {\r\n        result[coordSysName][stackId] = result[coordSysName][stackId] || {\r\n          bandWidth: bandWidth,\r\n          offset: offset,\r\n          width: column.width\r\n        };\r\n        offset += column.width * (1 + barGapPercent);\r\n      });\r\n    });\r\n    return result;\r\n  }\r\n\r\n  function retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {\r\n    if (barWidthAndOffset && axis) {\r\n      var result = barWidthAndOffset[getAxisKey(axis)];\r\n\r\n      if (result != null && seriesModel != null) {\r\n        return result[getSeriesStackId(seriesModel)];\r\n      }\r\n\r\n      return result;\r\n    }\r\n  } // TODO: Do not support stack in large mode yet.\r\n\r\n\r\n  var largeLayout = {\r\n    seriesType: 'bar',\r\n    plan: createRenderPlanner(),\r\n    reset: function (seriesModel) {\r\n      if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {\r\n        return;\r\n      }\r\n\r\n      var data = seriesModel.getData();\r\n      var cartesian = seriesModel.coordinateSystem;\r\n      var coordLayout = cartesian.master.getRect();\r\n      var baseAxis = cartesian.getBaseAxis();\r\n      var valueAxis = cartesian.getOtherAxis(baseAxis);\r\n      var valueDim = data.mapDimension(valueAxis.dim);\r\n      var baseDim = data.mapDimension(baseAxis.dim);\r\n      var valueAxisHorizontal = valueAxis.isHorizontal();\r\n      var valueDimIdx = valueAxisHorizontal ? 0 : 1;\r\n      var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;\r\n\r\n      if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {\r\n        // jshint ignore:line\r\n        barWidth = LARGE_BAR_MIN_WIDTH;\r\n      }\r\n\r\n      return {\r\n        progress: function (params, data) {\r\n          var count = params.count;\r\n          var largePoints = new LargeArr(count * 2);\r\n          var largeBackgroundPoints = new LargeArr(count * 2);\r\n          var largeDataIndices = new LargeArr(count);\r\n          var dataIndex;\r\n          var coord = [];\r\n          var valuePair = [];\r\n          var pointsOffset = 0;\r\n          var idxOffset = 0;\r\n\r\n          while ((dataIndex = params.next()) != null) {\r\n            valuePair[valueDimIdx] = data.get(valueDim, dataIndex);\r\n            valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);\r\n            coord = cartesian.dataToPoint(valuePair, null, coord); // Data index might not be in order, depends on `progressiveChunkMode`.\r\n\r\n            largeBackgroundPoints[pointsOffset] = valueAxisHorizontal ? coordLayout.x + coordLayout.width : coord[0];\r\n            largePoints[pointsOffset++] = coord[0];\r\n            largeBackgroundPoints[pointsOffset] = valueAxisHorizontal ? coord[1] : coordLayout.y + coordLayout.height;\r\n            largePoints[pointsOffset++] = coord[1];\r\n            largeDataIndices[idxOffset++] = dataIndex;\r\n          }\r\n\r\n          data.setLayout({\r\n            largePoints: largePoints,\r\n            largeDataIndices: largeDataIndices,\r\n            largeBackgroundPoints: largeBackgroundPoints,\r\n            barWidth: barWidth,\r\n            valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),\r\n            backgroundStart: valueAxisHorizontal ? coordLayout.x : coordLayout.y,\r\n            valueAxisHorizontal: valueAxisHorizontal\r\n          });\r\n        }\r\n      };\r\n    }\r\n  };\r\n\r\n  function isOnCartesian(seriesModel) {\r\n    return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\r\n  }\r\n\r\n  function isInLargeMode(seriesModel) {\r\n    return seriesModel.pipelineContext && seriesModel.pipelineContext.large;\r\n  } // See cases in `test/bar-start.html` and `#7412`, `#8747`.\r\n\r\n\r\n  function getValueAxisStart(baseAxis, valueAxis, stacked) {\r\n    return valueAxis.toGlobalCoord(valueAxis.dataToCoord(valueAxis.type === 'log' ? 1 : 0));\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /*\r\n  * A third-party license is embeded for some of the code in this file:\r\n  * The \"scaleLevels\" was originally copied from \"d3.js\" with some\r\n  * modifications made for this project.\r\n  * (See more details in the comment on the definition of \"scaleLevels\" below.)\r\n  * The use of the source code of this file is also subject to the terms\r\n  * and consitions of the license of \"d3.js\" (BSD-3Clause, see\r\n  * </licenses/LICENSE-d3>).\r\n  */\r\n  // [About UTC and local time zone]:\r\n  // In most cases, `number.parseDate` will treat input data string as local time\r\n  // (except time zone is specified in time string). And `format.formateTime` returns\r\n  // local time by default. option.useUTC is false by default. This design have\r\n  // concidered these common case:\r\n  // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\r\n  // in local time by default.\r\n  // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\r\n  // as its original time, without any time difference.\r\n\r\n\r\n  var bisect = function (a, x, lo, hi) {\r\n    while (lo < hi) {\r\n      var mid = lo + hi >>> 1;\r\n\r\n      if (a[mid][1] < x) {\r\n        lo = mid + 1;\r\n      } else {\r\n        hi = mid;\r\n      }\r\n    }\r\n\r\n    return lo;\r\n  };\r\n\r\n  var TimeScale =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(TimeScale, _super);\r\n\r\n    function TimeScale(settings) {\r\n      var _this = _super.call(this, settings) || this;\r\n\r\n      _this.type = 'time';\r\n      return _this;\r\n    }\r\n    /**\r\n     * Get label is mainly for other components like dataZoom, tooltip.\r\n     */\r\n\r\n\r\n    TimeScale.prototype.getLabel = function (tick) {\r\n      var useUTC = this.getSetting('useUTC');\r\n      return format(tick.value, fullLeveledFormatter[getDefaultFormatPrecisionOfInterval(getPrimaryTimeUnit(this._minLevelUnit))] || fullLeveledFormatter.second, useUTC, this.getSetting('locale'));\r\n    };\r\n\r\n    TimeScale.prototype.getFormattedLabel = function (tick, idx, labelFormatter) {\r\n      var isUTC = this.getSetting('useUTC');\r\n      var lang = this.getSetting('locale');\r\n      return leveledFormat(tick, idx, labelFormatter, lang, isUTC);\r\n    };\r\n    /**\r\n     * @override\r\n     * @param expandToNicedExtent Whether expand the ticks to niced extent.\r\n     */\r\n\r\n\r\n    TimeScale.prototype.getTicks = function (expandToNicedExtent) {\r\n      var interval = this._interval;\r\n      var extent = this._extent;\r\n      var ticks = []; // If interval is 0, return [];\r\n\r\n      if (!interval) {\r\n        return ticks;\r\n      }\r\n\r\n      ticks.push({\r\n        value: extent[0],\r\n        level: 0\r\n      });\r\n      var useUTC = this.getSetting('useUTC');\r\n      var innerTicks = getIntervalTicks(this._minLevelUnit, this._approxInterval, useUTC, extent);\r\n      ticks = ticks.concat(innerTicks);\r\n      ticks.push({\r\n        value: extent[1],\r\n        level: 0\r\n      });\r\n      return ticks;\r\n    };\r\n\r\n    TimeScale.prototype.niceExtent = function (opt) {\r\n      var extent = this._extent; // If extent start and end are same, expand them\r\n\r\n      if (extent[0] === extent[1]) {\r\n        // Expand extent\r\n        extent[0] -= ONE_DAY;\r\n        extent[1] += ONE_DAY;\r\n      } // If there are no data and extent are [Infinity, -Infinity]\r\n\r\n\r\n      if (extent[1] === -Infinity && extent[0] === Infinity) {\r\n        var d = new Date();\r\n        extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\r\n        extent[0] = extent[1] - ONE_DAY;\r\n      }\r\n\r\n      this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\r\n    };\r\n\r\n    TimeScale.prototype.niceTicks = function (approxTickNum, minInterval, maxInterval) {\r\n      approxTickNum = approxTickNum || 10;\r\n      var extent = this._extent;\r\n      var span = extent[1] - extent[0];\r\n      this._approxInterval = span / approxTickNum;\r\n\r\n      if (minInterval != null && this._approxInterval < minInterval) {\r\n        this._approxInterval = minInterval;\r\n      }\r\n\r\n      if (maxInterval != null && this._approxInterval > maxInterval) {\r\n        this._approxInterval = maxInterval;\r\n      }\r\n\r\n      var scaleIntervalsLen = scaleIntervals.length;\r\n      var idx = Math.min(bisect(scaleIntervals, this._approxInterval, 0, scaleIntervalsLen), scaleIntervalsLen - 1); // Interval that can be used to calculate ticks\r\n\r\n      this._interval = scaleIntervals[idx][1]; // Min level used when picking ticks from top down.\r\n      // We check one more level to avoid the ticks are to sparse in some case.\r\n\r\n      this._minLevelUnit = scaleIntervals[Math.max(idx - 1, 0)][0];\r\n    };\r\n\r\n    TimeScale.prototype.parse = function (val) {\r\n      // val might be float.\r\n      return typeof val === 'number' ? val : +parseDate(val);\r\n    };\r\n\r\n    TimeScale.prototype.contain = function (val) {\r\n      return contain$1(this.parse(val), this._extent);\r\n    };\r\n\r\n    TimeScale.prototype.normalize = function (val) {\r\n      return normalize$1(this.parse(val), this._extent);\r\n    };\r\n\r\n    TimeScale.prototype.scale = function (val) {\r\n      return scale$2(val, this._extent);\r\n    };\r\n\r\n    TimeScale.type = 'time';\r\n    return TimeScale;\r\n  }(IntervalScale);\r\n  /**\r\n   * This implementation was originally copied from \"d3.js\"\r\n   * <https://github.com/d3/d3/blob/b516d77fb8566b576088e73410437494717ada26/src/time/scale.js>\r\n   * with some modifications made for this program.\r\n   * See the license statement at the head of this file.\r\n   */\r\n\r\n\r\n  var scaleIntervals = [// Format                           interval\r\n  ['second', ONE_SECOND], ['minute', ONE_MINUTE], ['hour', ONE_HOUR], ['quarter-day', ONE_HOUR * 6], ['half-day', ONE_HOUR * 12], ['day', ONE_DAY * 1.2], ['half-week', ONE_DAY * 3.5], ['week', ONE_DAY * 7], ['month', ONE_DAY * 31], ['quarter', ONE_DAY * 95], ['half-year', ONE_YEAR / 2], ['year', ONE_YEAR] // 1Y\r\n  ];\r\n\r\n  function isUnitValueSame(unit, valueA, valueB, isUTC) {\r\n    var dateA = parseDate(valueA);\r\n    var dateB = parseDate(valueB);\r\n\r\n    var isSame = function (unit) {\r\n      return getUnitValue(dateA, unit, isUTC) === getUnitValue(dateB, unit, isUTC);\r\n    };\r\n\r\n    var isSameYear = function () {\r\n      return isSame('year');\r\n    }; // const isSameHalfYear = () => isSameYear() && isSame('half-year');\r\n    // const isSameQuater = () => isSameYear() && isSame('quarter');\r\n\r\n\r\n    var isSameMonth = function () {\r\n      return isSameYear() && isSame('month');\r\n    };\r\n\r\n    var isSameDay = function () {\r\n      return isSameMonth() && isSame('day');\r\n    }; // const isSameHalfDay = () => isSameDay() && isSame('half-day');\r\n\r\n\r\n    var isSameHour = function () {\r\n      return isSameDay() && isSame('hour');\r\n    };\r\n\r\n    var isSameMinute = function () {\r\n      return isSameHour() && isSame('minute');\r\n    };\r\n\r\n    var isSameSecond = function () {\r\n      return isSameMinute() && isSame('second');\r\n    };\r\n\r\n    var isSameMilliSecond = function () {\r\n      return isSameSecond() && isSame('millisecond');\r\n    };\r\n\r\n    switch (unit) {\r\n      case 'year':\r\n        return isSameYear();\r\n\r\n      case 'month':\r\n        return isSameMonth();\r\n\r\n      case 'day':\r\n        return isSameDay();\r\n\r\n      case 'hour':\r\n        return isSameHour();\r\n\r\n      case 'minute':\r\n        return isSameMinute();\r\n\r\n      case 'second':\r\n        return isSameSecond();\r\n\r\n      case 'millisecond':\r\n        return isSameMilliSecond();\r\n    }\r\n  } // const primaryUnitGetters = {\r\n  //     year: fullYearGetterName(),\r\n  //     month: monthGetterName(),\r\n  //     day: dateGetterName(),\r\n  //     hour: hoursGetterName(),\r\n  //     minute: minutesGetterName(),\r\n  //     second: secondsGetterName(),\r\n  //     millisecond: millisecondsGetterName()\r\n  // };\r\n  // const primaryUnitUTCGetters = {\r\n  //     year: fullYearGetterName(true),\r\n  //     month: monthGetterName(true),\r\n  //     day: dateGetterName(true),\r\n  //     hour: hoursGetterName(true),\r\n  //     minute: minutesGetterName(true),\r\n  //     second: secondsGetterName(true),\r\n  //     millisecond: millisecondsGetterName(true)\r\n  // };\r\n  // function moveTick(date: Date, unitName: TimeUnit, step: number, isUTC: boolean) {\r\n  //     step = step || 1;\r\n  //     switch (getPrimaryTimeUnit(unitName)) {\r\n  //         case 'year':\r\n  //             date[fullYearSetterName(isUTC)](date[fullYearGetterName(isUTC)]() + step);\r\n  //             break;\r\n  //         case 'month':\r\n  //             date[monthSetterName(isUTC)](date[monthGetterName(isUTC)]() + step);\r\n  //             break;\r\n  //         case 'day':\r\n  //             date[dateSetterName(isUTC)](date[dateGetterName(isUTC)]() + step);\r\n  //             break;\r\n  //         case 'hour':\r\n  //             date[hoursSetterName(isUTC)](date[hoursGetterName(isUTC)]() + step);\r\n  //             break;\r\n  //         case 'minute':\r\n  //             date[minutesSetterName(isUTC)](date[minutesGetterName(isUTC)]() + step);\r\n  //             break;\r\n  //         case 'second':\r\n  //             date[secondsSetterName(isUTC)](date[secondsGetterName(isUTC)]() + step);\r\n  //             break;\r\n  //         case 'millisecond':\r\n  //             date[millisecondsSetterName(isUTC)](date[millisecondsGetterName(isUTC)]() + step);\r\n  //             break;\r\n  //     }\r\n  //     return date.getTime();\r\n  // }\r\n  // const DATE_INTERVALS = [[8, 7.5], [4, 3.5], [2, 1.5]];\r\n  // const MONTH_INTERVALS = [[6, 5.5], [3, 2.5], [2, 1.5]];\r\n  // const MINUTES_SECONDS_INTERVALS = [[30, 30], [20, 20], [15, 15], [10, 10], [5, 5], [2, 2]];\r\n\r\n\r\n  function getDateInterval(approxInterval, daysInMonth) {\r\n    approxInterval /= ONE_DAY;\r\n    return approxInterval > 16 ? 16 // Math.floor(daysInMonth / 2) + 1  // In this case we only want one tick betwen two month.\r\n    : approxInterval > 7.5 ? 7 // TODO week 7 or day 8?\r\n    : approxInterval > 3.5 ? 4 : approxInterval > 1.5 ? 2 : 1;\r\n  }\r\n\r\n  function getMonthInterval(approxInterval) {\r\n    var APPROX_ONE_MONTH = 30 * ONE_DAY;\r\n    approxInterval /= APPROX_ONE_MONTH;\r\n    return approxInterval > 6 ? 6 : approxInterval > 3 ? 3 : approxInterval > 2 ? 2 : 1;\r\n  }\r\n\r\n  function getHourInterval(approxInterval) {\r\n    approxInterval /= ONE_HOUR;\r\n    return approxInterval > 12 ? 12 : approxInterval > 6 ? 6 : approxInterval > 3.5 ? 4 : approxInterval > 2 ? 2 : 1;\r\n  }\r\n\r\n  function getMinutesAndSecondsInterval(approxInterval, isMinutes) {\r\n    approxInterval /= isMinutes ? ONE_MINUTE : ONE_SECOND;\r\n    return approxInterval > 30 ? 30 : approxInterval > 20 ? 20 : approxInterval > 15 ? 15 : approxInterval > 10 ? 10 : approxInterval > 5 ? 5 : approxInterval > 2 ? 2 : 1;\r\n  }\r\n\r\n  function getMillisecondsInterval(approxInterval) {\r\n    return nice(approxInterval, true);\r\n  }\r\n\r\n  function getFirstTimestampOfUnit(date, unitName, isUTC) {\r\n    var outDate = new Date(date);\r\n\r\n    switch (getPrimaryTimeUnit(unitName)) {\r\n      case 'year':\r\n      case 'month':\r\n        outDate[monthSetterName(isUTC)](0);\r\n\r\n      case 'day':\r\n        outDate[dateSetterName(isUTC)](1);\r\n\r\n      case 'hour':\r\n        outDate[hoursSetterName(isUTC)](0);\r\n\r\n      case 'minute':\r\n        outDate[minutesSetterName(isUTC)](0);\r\n\r\n      case 'second':\r\n        outDate[secondsSetterName(isUTC)](0);\r\n        outDate[millisecondsSetterName(isUTC)](0);\r\n    }\r\n\r\n    return outDate.getTime();\r\n  }\r\n\r\n  function getIntervalTicks(bottomUnitName, approxInterval, isUTC, extent) {\r\n    var safeLimit = 10000;\r\n    var unitNames = timeUnits;\r\n    var iter = 0;\r\n\r\n    function addTicksInSpan(interval, minTimestamp, maxTimestamp, getMethodName, setMethodName, isDate, out) {\r\n      var date = new Date(minTimestamp);\r\n      var dateTime = minTimestamp;\r\n      var d = date[getMethodName](); // if (isDate) {\r\n      //     d -= 1; // Starts with 0;   PENDING\r\n      // }\r\n\r\n      while (dateTime < maxTimestamp && dateTime <= extent[1]) {\r\n        out.push({\r\n          value: dateTime\r\n        });\r\n        d += interval;\r\n        date[setMethodName](d);\r\n        dateTime = date.getTime();\r\n      } // This extra tick is for calcuating ticks of next level. Will not been added to the final result\r\n\r\n\r\n      out.push({\r\n        value: dateTime,\r\n        notAdd: true\r\n      });\r\n    }\r\n\r\n    function addLevelTicks(unitName, lastLevelTicks, levelTicks) {\r\n      var newAddedTicks = [];\r\n      var isFirstLevel = !lastLevelTicks.length;\r\n\r\n      if (isUnitValueSame(getPrimaryTimeUnit(unitName), extent[0], extent[1], isUTC)) {\r\n        return;\r\n      }\r\n\r\n      if (isFirstLevel) {\r\n        lastLevelTicks = [{\r\n          // TODO Optimize. Not include so may ticks.\r\n          value: getFirstTimestampOfUnit(new Date(extent[0]), unitName, isUTC)\r\n        }, {\r\n          value: extent[1]\r\n        }];\r\n      }\r\n\r\n      for (var i = 0; i < lastLevelTicks.length - 1; i++) {\r\n        var startTick = lastLevelTicks[i].value;\r\n        var endTick = lastLevelTicks[i + 1].value;\r\n\r\n        if (startTick === endTick) {\r\n          continue;\r\n        }\r\n\r\n        var interval = void 0;\r\n        var getterName = void 0;\r\n        var setterName = void 0;\r\n        var isDate = false;\r\n\r\n        switch (unitName) {\r\n          case 'year':\r\n            interval = Math.max(1, Math.round(approxInterval / ONE_DAY / 365));\r\n            getterName = fullYearGetterName(isUTC);\r\n            setterName = fullYearSetterName(isUTC);\r\n            break;\r\n\r\n          case 'half-year':\r\n          case 'quarter':\r\n          case 'month':\r\n            interval = getMonthInterval(approxInterval);\r\n            getterName = monthGetterName(isUTC);\r\n            setterName = monthSetterName(isUTC);\r\n            break;\r\n\r\n          case 'week': // PENDING If week is added. Ignore day.\r\n\r\n          case 'half-week':\r\n          case 'day':\r\n            interval = getDateInterval(approxInterval, 31); // Use 32 days and let interval been 16\r\n\r\n            getterName = dateGetterName(isUTC);\r\n            setterName = dateSetterName(isUTC);\r\n            isDate = true;\r\n            break;\r\n\r\n          case 'half-day':\r\n          case 'quarter-day':\r\n          case 'hour':\r\n            interval = getHourInterval(approxInterval);\r\n            getterName = hoursGetterName(isUTC);\r\n            setterName = hoursSetterName(isUTC);\r\n            break;\r\n\r\n          case 'minute':\r\n            interval = getMinutesAndSecondsInterval(approxInterval, true);\r\n            getterName = minutesGetterName(isUTC);\r\n            setterName = minutesSetterName(isUTC);\r\n            break;\r\n\r\n          case 'second':\r\n            interval = getMinutesAndSecondsInterval(approxInterval, false);\r\n            getterName = secondsGetterName(isUTC);\r\n            setterName = secondsSetterName(isUTC);\r\n            break;\r\n\r\n          case 'millisecond':\r\n            interval = getMillisecondsInterval(approxInterval);\r\n            getterName = millisecondsGetterName(isUTC);\r\n            setterName = millisecondsSetterName(isUTC);\r\n            break;\r\n        }\r\n\r\n        addTicksInSpan(interval, startTick, endTick, getterName, setterName, isDate, newAddedTicks);\r\n\r\n        if (unitName === 'year' && levelTicks.length > 1 && i === 0) {\r\n          // Add nearest years to the left extent.\r\n          levelTicks.unshift({\r\n            value: levelTicks[0].value - interval\r\n          });\r\n        }\r\n      }\r\n\r\n      for (var i = 0; i < newAddedTicks.length; i++) {\r\n        levelTicks.push(newAddedTicks[i]);\r\n      } // newAddedTicks.length && console.log(unitName, newAddedTicks);\r\n\r\n\r\n      return newAddedTicks;\r\n    }\r\n\r\n    var levelsTicks = [];\r\n    var currentLevelTicks = [];\r\n    var tickCount = 0;\r\n    var lastLevelTickCount = 0;\r\n\r\n    for (var i = 0; i < unitNames.length && iter++ < safeLimit; ++i) {\r\n      var primaryTimeUnit = getPrimaryTimeUnit(unitNames[i]);\r\n\r\n      if (!isPrimaryTimeUnit(unitNames[i])) {\r\n        // TODO\r\n        continue;\r\n      }\r\n\r\n      addLevelTicks(unitNames[i], levelsTicks[levelsTicks.length - 1] || [], currentLevelTicks);\r\n      var nextPrimaryTimeUnit = unitNames[i + 1] ? getPrimaryTimeUnit(unitNames[i + 1]) : null;\r\n\r\n      if (primaryTimeUnit !== nextPrimaryTimeUnit) {\r\n        if (currentLevelTicks.length) {\r\n          lastLevelTickCount = tickCount; // Remove the duplicate so the tick count can be precisely.\r\n\r\n          currentLevelTicks.sort(function (a, b) {\r\n            return a.value - b.value;\r\n          });\r\n          var levelTicksRemoveDuplicated = [];\r\n\r\n          for (var i_1 = 0; i_1 < currentLevelTicks.length; ++i_1) {\r\n            var tickValue = currentLevelTicks[i_1].value;\r\n\r\n            if (i_1 === 0 || currentLevelTicks[i_1 - 1].value !== tickValue) {\r\n              levelTicksRemoveDuplicated.push(currentLevelTicks[i_1]);\r\n\r\n              if (tickValue >= extent[0] && tickValue <= extent[1]) {\r\n                tickCount++;\r\n              }\r\n            }\r\n          }\r\n\r\n          var targetTickNum = (extent[1] - extent[0]) / approxInterval; // Added too much in this level and not too less in last level\r\n\r\n          if (tickCount > targetTickNum * 1.5 && lastLevelTickCount > targetTickNum / 1.5) {\r\n            break;\r\n          } // Only treat primary time unit as one level.\r\n\r\n\r\n          levelsTicks.push(levelTicksRemoveDuplicated);\r\n\r\n          if (tickCount > targetTickNum || bottomUnitName === unitNames[i]) {\r\n            break;\r\n          }\r\n        } // Reset if next unitName is primary\r\n\r\n\r\n        currentLevelTicks = [];\r\n      }\r\n    }\r\n\r\n    {\r\n      if (iter >= safeLimit) {\r\n        warn('Exceed safe limit.');\r\n      }\r\n    }\r\n    var levelsTicksInExtent = filter(map(levelsTicks, function (levelTicks) {\r\n      return filter(levelTicks, function (tick) {\r\n        return tick.value >= extent[0] && tick.value <= extent[1] && !tick.notAdd;\r\n      });\r\n    }), function (levelTicks) {\r\n      return levelTicks.length > 0;\r\n    });\r\n    var ticks = [];\r\n    var maxLevel = levelsTicksInExtent.length - 1;\r\n\r\n    for (var i = 0; i < levelsTicksInExtent.length; ++i) {\r\n      var levelTicks = levelsTicksInExtent[i];\r\n\r\n      for (var k = 0; k < levelTicks.length; ++k) {\r\n        ticks.push({\r\n          value: levelTicks[k].value,\r\n          level: maxLevel - i\r\n        });\r\n      }\r\n    }\r\n\r\n    ticks.sort(function (a, b) {\r\n      return a.value - b.value;\r\n    }); // Remove duplicates\r\n\r\n    var result = [];\r\n\r\n    for (var i = 0; i < ticks.length; ++i) {\r\n      if (i === 0 || ticks[i].value !== ticks[i - 1].value) {\r\n        result.push(ticks[i]);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  Scale.registerClass(TimeScale);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var scaleProto = Scale.prototype; // FIXME:TS refactor: not good to call it directly with `this`?\r\n\r\n  var intervalScaleProto = IntervalScale.prototype;\r\n  var getPrecisionSafe$1 = getPrecisionSafe;\r\n  var roundingErrorFix = round;\r\n  var mathFloor$1 = Math.floor;\r\n  var mathCeil = Math.ceil;\r\n  var mathPow$1 = Math.pow;\r\n  var mathLog = Math.log;\r\n\r\n  var LogScale =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(LogScale, _super);\r\n\r\n    function LogScale() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = 'log';\r\n      _this.base = 10;\r\n      _this._originalScale = new IntervalScale(); // FIXME:TS actually used by `IntervalScale`\r\n\r\n      _this._interval = 0;\r\n      return _this;\r\n    }\r\n    /**\r\n     * @param Whether expand the ticks to niced extent.\r\n     */\r\n\r\n\r\n    LogScale.prototype.getTicks = function (expandToNicedExtent) {\r\n      var originalScale = this._originalScale;\r\n      var extent = this._extent;\r\n      var originalExtent = originalScale.getExtent();\r\n      var ticks = intervalScaleProto.getTicks.call(this, expandToNicedExtent);\r\n      return map(ticks, function (tick) {\r\n        var val = tick.value;\r\n        var powVal = round(mathPow$1(this.base, val)); // Fix #4158\r\n\r\n        powVal = val === extent[0] && this._fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\r\n        powVal = val === extent[1] && this._fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\r\n        return {\r\n          value: powVal\r\n        };\r\n      }, this);\r\n    };\r\n\r\n    LogScale.prototype.setExtent = function (start, end) {\r\n      var base = this.base;\r\n      start = mathLog(start) / mathLog(base);\r\n      end = mathLog(end) / mathLog(base);\r\n      intervalScaleProto.setExtent.call(this, start, end);\r\n    };\r\n    /**\r\n     * @return {number} end\r\n     */\r\n\r\n\r\n    LogScale.prototype.getExtent = function () {\r\n      var base = this.base;\r\n      var extent = scaleProto.getExtent.call(this);\r\n      extent[0] = mathPow$1(base, extent[0]);\r\n      extent[1] = mathPow$1(base, extent[1]); // Fix #4158\r\n\r\n      var originalScale = this._originalScale;\r\n      var originalExtent = originalScale.getExtent();\r\n      this._fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\r\n      this._fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\r\n      return extent;\r\n    };\r\n\r\n    LogScale.prototype.unionExtent = function (extent) {\r\n      this._originalScale.unionExtent(extent);\r\n\r\n      var base = this.base;\r\n      extent[0] = mathLog(extent[0]) / mathLog(base);\r\n      extent[1] = mathLog(extent[1]) / mathLog(base);\r\n      scaleProto.unionExtent.call(this, extent);\r\n    };\r\n\r\n    LogScale.prototype.unionExtentFromData = function (data, dim) {\r\n      // TODO\r\n      // filter value that <= 0\r\n      this.unionExtent(data.getApproximateExtent(dim));\r\n    };\r\n    /**\r\n     * Update interval and extent of intervals for nice ticks\r\n     * @param approxTickNum default 10 Given approx tick number\r\n     */\r\n\r\n\r\n    LogScale.prototype.niceTicks = function (approxTickNum) {\r\n      approxTickNum = approxTickNum || 10;\r\n      var extent = this._extent;\r\n      var span = extent[1] - extent[0];\r\n\r\n      if (span === Infinity || span <= 0) {\r\n        return;\r\n      }\r\n\r\n      var interval = quantity(span);\r\n      var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\r\n\r\n      if (err <= 0.5) {\r\n        interval *= 10;\r\n      } // Interval should be integer\r\n\r\n\r\n      while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\r\n        interval *= 10;\r\n      }\r\n\r\n      var niceExtent = [round(mathCeil(extent[0] / interval) * interval), round(mathFloor$1(extent[1] / interval) * interval)];\r\n      this._interval = interval;\r\n      this._niceExtent = niceExtent;\r\n    };\r\n\r\n    LogScale.prototype.niceExtent = function (opt) {\r\n      intervalScaleProto.niceExtent.call(this, opt);\r\n      this._fixMin = opt.fixMin;\r\n      this._fixMax = opt.fixMax;\r\n    };\r\n\r\n    LogScale.prototype.parse = function (val) {\r\n      return val;\r\n    };\r\n\r\n    LogScale.prototype.contain = function (val) {\r\n      val = mathLog(val) / mathLog(this.base);\r\n      return contain$1(val, this._extent);\r\n    };\r\n\r\n    LogScale.prototype.normalize = function (val) {\r\n      val = mathLog(val) / mathLog(this.base);\r\n      return normalize$1(val, this._extent);\r\n    };\r\n\r\n    LogScale.prototype.scale = function (val) {\r\n      val = scale$2(val, this._extent);\r\n      return mathPow$1(this.base, val);\r\n    };\r\n\r\n    LogScale.type = 'log';\r\n    return LogScale;\r\n  }(Scale);\r\n\r\n  var proto = LogScale.prototype;\r\n  proto.getMinorTicks = intervalScaleProto.getMinorTicks;\r\n  proto.getLabel = intervalScaleProto.getLabel;\r\n\r\n  function fixRoundingError(val, originalVal) {\r\n    return roundingErrorFix(val, getPrecisionSafe$1(originalVal));\r\n  }\r\n\r\n  Scale.registerClass(LogScale);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var ScaleRawExtentInfo =\r\n  /** @class */\r\n  function () {\r\n    function ScaleRawExtentInfo(scale, model, // Usually: data extent from all series on this axis.\r\n    originalExtent) {\r\n      this._prepareParams(scale, model, originalExtent);\r\n    }\r\n    /**\r\n     * Parameters depending on ouside (like model, user callback)\r\n     * are prepared and fixed here.\r\n     */\r\n\r\n\r\n    ScaleRawExtentInfo.prototype._prepareParams = function (scale, model, // Usually: data extent from all series on this axis.\r\n    dataExtent) {\r\n      if (dataExtent[1] < dataExtent[0]) {\r\n        dataExtent = [NaN, NaN];\r\n      }\r\n\r\n      this._dataMin = dataExtent[0];\r\n      this._dataMax = dataExtent[1];\r\n      var isOrdinal = this._isOrdinal = scale.type === 'ordinal';\r\n      this._needCrossZero = model.getNeedCrossZero && model.getNeedCrossZero();\r\n      var modelMinRaw = this._modelMinRaw = model.get('min', true);\r\n\r\n      if (isFunction$1(modelMinRaw)) {\r\n        // This callback alway provide users the full data extent (before data filtered).\r\n        this._modelMinNum = parseAxisModelMinMax(scale, modelMinRaw({\r\n          min: dataExtent[0],\r\n          max: dataExtent[1]\r\n        }));\r\n      } else if (modelMinRaw !== 'dataMin') {\r\n        this._modelMinNum = parseAxisModelMinMax(scale, modelMinRaw);\r\n      }\r\n\r\n      var modelMaxRaw = this._modelMaxRaw = model.get('max', true);\r\n\r\n      if (isFunction$1(modelMaxRaw)) {\r\n        // This callback alway provide users the full data extent (before data filtered).\r\n        this._modelMaxNum = parseAxisModelMinMax(scale, modelMaxRaw({\r\n          min: dataExtent[0],\r\n          max: dataExtent[1]\r\n        }));\r\n      } else if (modelMaxRaw !== 'dataMax') {\r\n        this._modelMaxNum = parseAxisModelMinMax(scale, modelMaxRaw);\r\n      }\r\n\r\n      if (isOrdinal) {\r\n        // FIXME: there is a flaw here: if there is no \"block\" data processor like `dataZoom`,\r\n        // and progressive rendering is using, here the category result might just only contain\r\n        // the processed chunk rather than the entire result.\r\n        this._axisDataLen = model.getCategories().length;\r\n      } else {\r\n        var boundaryGap = model.get('boundaryGap');\r\n        var boundaryGapArr = isArray(boundaryGap) ? boundaryGap : [boundaryGap || 0, boundaryGap || 0];\r\n\r\n        if (typeof boundaryGapArr[0] === 'boolean' || typeof boundaryGapArr[1] === 'boolean') {\r\n          {\r\n            console.warn('Boolean type for boundaryGap is only ' + 'allowed for ordinal axis. Please use string in ' + 'percentage instead, e.g., \"20%\". Currently, ' + 'boundaryGap is set to be 0.');\r\n          }\r\n          this._boundaryGapInner = [0, 0];\r\n        } else {\r\n          this._boundaryGapInner = [parsePercent(boundaryGapArr[0], 1), parsePercent(boundaryGapArr[1], 1)];\r\n        }\r\n      }\r\n    };\r\n    /**\r\n     * Calculate extent by prepared parameters.\r\n     * This method has no external dependency and can be called duplicatedly,\r\n     * getting the same result.\r\n     * If parameters changed, should call this method to recalcuate.\r\n     */\r\n\r\n\r\n    ScaleRawExtentInfo.prototype.calculate = function () {\r\n      // Notice: When min/max is not set (that is, when there are null/undefined,\r\n      // which is the most common case), these cases should be ensured:\r\n      // (1) For 'ordinal', show all axis.data.\r\n      // (2) For others:\r\n      //      + `boundaryGap` is applied (if min/max set, boundaryGap is\r\n      //      disabled).\r\n      //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\r\n      //      be the result that originalExtent enlarged by boundaryGap.\r\n      // (3) If no data, it should be ensured that `scale.setBlank` is set.\r\n      var isOrdinal = this._isOrdinal;\r\n      var dataMin = this._dataMin;\r\n      var dataMax = this._dataMax;\r\n      var axisDataLen = this._axisDataLen;\r\n      var boundaryGapInner = this._boundaryGapInner;\r\n      var span = !isOrdinal ? dataMax - dataMin || Math.abs(dataMin) : null; // Currently if a `'value'` axis model min is specified as 'dataMin'/'dataMax',\r\n      // `boundaryGap` will not be used. It's the different from specifying as `null`/`undefined`.\r\n\r\n      var min = this._modelMinRaw === 'dataMin' ? dataMin : this._modelMinNum;\r\n      var max = this._modelMaxRaw === 'dataMax' ? dataMax : this._modelMaxNum; // If `_modelMinNum`/`_modelMaxNum` is `null`/`undefined`, should not be fixed.\r\n\r\n      var minFixed = min != null;\r\n      var maxFixed = max != null;\r\n\r\n      if (min == null) {\r\n        min = isOrdinal ? axisDataLen ? 0 : NaN : dataMin - boundaryGapInner[0] * span;\r\n      }\r\n\r\n      if (max == null) {\r\n        max = isOrdinal ? axisDataLen ? axisDataLen - 1 : NaN : dataMax + boundaryGapInner[1] * span;\r\n      }\r\n\r\n      (min == null || !isFinite(min)) && (min = NaN);\r\n      (max == null || !isFinite(max)) && (max = NaN);\r\n\r\n      if (min > max) {\r\n        min = NaN;\r\n        max = NaN;\r\n      }\r\n\r\n      var isBlank = eqNaN(min) || eqNaN(max) || isOrdinal && !axisDataLen; // If data extent modified, need to recalculated to ensure cross zero.\r\n\r\n      if (this._needCrossZero) {\r\n        // Axis is over zero and min is not set\r\n        if (min > 0 && max > 0 && !minFixed) {\r\n          min = 0; // minFixed = true;\r\n        } // Axis is under zero and max is not set\r\n\r\n\r\n        if (min < 0 && max < 0 && !maxFixed) {\r\n          max = 0; // maxFixed = true;\r\n        } // PENDING:\r\n        // When `needCrossZero` and all data is positive/negative, should it be ensured\r\n        // that the results processed by boundaryGap are positive/negative?\r\n        // If so, here `minFixed`/`maxFixed` need to be set.\r\n\r\n      }\r\n\r\n      var determinedMin = this._determinedMin;\r\n      var determinedMax = this._determinedMax;\r\n\r\n      if (determinedMin != null) {\r\n        min = determinedMin;\r\n        minFixed = true;\r\n      }\r\n\r\n      if (determinedMax != null) {\r\n        max = determinedMax;\r\n        maxFixed = true;\r\n      } // Ensure min/max be finite number or NaN here. (not to be null/undefined)\r\n      // `NaN` means min/max axis is blank.\r\n\r\n\r\n      return {\r\n        min: min,\r\n        max: max,\r\n        minFixed: minFixed,\r\n        maxFixed: maxFixed,\r\n        isBlank: isBlank\r\n      };\r\n    };\r\n\r\n    ScaleRawExtentInfo.prototype.modifyDataMinMax = function (minMaxName, val) {\r\n      {\r\n        assert$1(!this.frozen);\r\n      }\r\n      this[DATA_MIN_MAX_ATTR[minMaxName]] = val;\r\n    };\r\n\r\n    ScaleRawExtentInfo.prototype.setDeterminedMinMax = function (minMaxName, val) {\r\n      var attr = DETERMINED_MIN_MAX_ATTR[minMaxName];\r\n      {\r\n        assert$1(!this.frozen // Earse them usually means logic flaw.\r\n        && this[attr] == null);\r\n      }\r\n      this[attr] = val;\r\n    };\r\n\r\n    ScaleRawExtentInfo.prototype.freeze = function () {\r\n      // @ts-ignore\r\n      this.frozen = true;\r\n    };\r\n\r\n    return ScaleRawExtentInfo;\r\n  }();\r\n\r\n  var DETERMINED_MIN_MAX_ATTR = {\r\n    min: '_determinedMin',\r\n    max: '_determinedMax'\r\n  };\r\n  var DATA_MIN_MAX_ATTR = {\r\n    min: '_dataMin',\r\n    max: '_dataMax'\r\n  };\r\n  /**\r\n   * Get scale min max and related info only depends on model settings.\r\n   * This method can be called after coordinate system created.\r\n   * For example, in data processing stage.\r\n   *\r\n   * Scale extent info probably be required multiple times during a workflow.\r\n   * For example:\r\n   * (1) `dataZoom` depends it to get the axis extent in \"100%\" state.\r\n   * (2) `processor/extentCalculator` depends it to make sure whether axis extent is specified.\r\n   * (3) `coordSys.update` use it to finally decide the scale extent.\r\n   * But the callback of `min`/`max` should not be called multiple times.\r\n   * The code below should not be implemented repeatedly either.\r\n   * So we cache the result in the scale instance, which will be recreated at the begining\r\n   * of the workflow (because `scale` instance will be recreated each round of the workflow).\r\n   */\r\n\r\n  function ensureScaleRawExtentInfo(scale, model, // Usually: data extent from all series on this axis.\r\n  originalExtent) {\r\n    // Do not permit to recreate.\r\n    var rawExtentInfo = scale.rawExtentInfo;\r\n\r\n    if (rawExtentInfo) {\r\n      return rawExtentInfo;\r\n    }\r\n\r\n    rawExtentInfo = new ScaleRawExtentInfo(scale, model, originalExtent); // @ts-ignore\r\n\r\n    scale.rawExtentInfo = rawExtentInfo;\r\n    return rawExtentInfo;\r\n  }\r\n\r\n  function parseAxisModelMinMax(scale, minMax) {\r\n    return minMax == null ? null : eqNaN(minMax) ? NaN : scale.parse(minMax);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Get axis scale extent before niced.\r\n   * Item of returned array can only be number (including Infinity and NaN).\r\n   *\r\n   * Caution:\r\n   * Precondition of calling this method:\r\n   * The scale extent has been initialized using series data extent via\r\n   * `scale.setExtent` or `scale.unionExtentFromData`;\r\n   */\r\n\r\n\r\n  function getScaleExtent(scale, model) {\r\n    var scaleType = scale.type;\r\n    var rawExtentResult = ensureScaleRawExtentInfo(scale, model, scale.getExtent()).calculate();\r\n    scale.setBlank(rawExtentResult.isBlank);\r\n    var min = rawExtentResult.min;\r\n    var max = rawExtentResult.max; // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\r\n    // is base axis\r\n    // FIXME\r\n    // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\r\n    // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\r\n    //     Should not depend on series type `bar`?\r\n    // (3) Fix that might overlap when using dataZoom.\r\n    // (4) Consider other chart types using `barGrid`?\r\n    // See #6728, #4862, `test/bar-overflow-time-plot.html`\r\n\r\n    var ecModel = model.ecModel;\r\n\r\n    if (ecModel && scaleType === 'time'\r\n    /*|| scaleType === 'interval' */\r\n    ) {\r\n        var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\r\n        var isBaseAxisAndHasBarSeries_1 = false;\r\n        each$1(barSeriesModels, function (seriesModel) {\r\n          isBaseAxisAndHasBarSeries_1 = isBaseAxisAndHasBarSeries_1 || seriesModel.getBaseAxis() === model.axis;\r\n        });\r\n\r\n        if (isBaseAxisAndHasBarSeries_1) {\r\n          // Calculate placement of bars on axis. TODO should be decoupled\r\n          // with barLayout\r\n          var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\r\n\r\n          var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\r\n          min = adjustedScale.min;\r\n          max = adjustedScale.max;\r\n        }\r\n      }\r\n\r\n    return {\r\n      extent: [min, max],\r\n      // \"fix\" means \"fixed\", the value should not be\r\n      // changed in the subsequent steps.\r\n      fixMin: rawExtentResult.minFixed,\r\n      fixMax: rawExtentResult.maxFixed\r\n    };\r\n  }\r\n\r\n  function adjustScaleForOverflow(min, max, model, // Only support cartesian coord yet.\r\n  barWidthAndOffset) {\r\n    // Get Axis Length\r\n    var axisExtent = model.axis.getExtent();\r\n    var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\r\n\r\n    var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\r\n\r\n    if (barsOnCurrentAxis === undefined) {\r\n      return {\r\n        min: min,\r\n        max: max\r\n      };\r\n    }\r\n\r\n    var minOverflow = Infinity;\r\n    each$1(barsOnCurrentAxis, function (item) {\r\n      minOverflow = Math.min(item.offset, minOverflow);\r\n    });\r\n    var maxOverflow = -Infinity;\r\n    each$1(barsOnCurrentAxis, function (item) {\r\n      maxOverflow = Math.max(item.offset + item.width, maxOverflow);\r\n    });\r\n    minOverflow = Math.abs(minOverflow);\r\n    maxOverflow = Math.abs(maxOverflow);\r\n    var totalOverFlow = minOverflow + maxOverflow; // Calculate required buffer based on old range and overflow\r\n\r\n    var oldRange = max - min;\r\n    var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\r\n    var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\r\n    max += overflowBuffer * (maxOverflow / totalOverFlow);\r\n    min -= overflowBuffer * (minOverflow / totalOverFlow);\r\n    return {\r\n      min: min,\r\n      max: max\r\n    };\r\n  } // Precondition of calling this method:\r\n  // The scale extent has been initailized using series data extent via\r\n  // `scale.setExtent` or `scale.unionExtentFromData`;\r\n\r\n\r\n  function niceScaleExtent(scale, model) {\r\n    var extentInfo = getScaleExtent(scale, model);\r\n    var extent = extentInfo.extent;\r\n    var splitNumber = model.get('splitNumber');\r\n\r\n    if (scale instanceof LogScale) {\r\n      scale.base = model.get('logBase');\r\n    }\r\n\r\n    var scaleType = scale.type;\r\n    scale.setExtent(extent[0], extent[1]);\r\n    scale.niceExtent({\r\n      splitNumber: splitNumber,\r\n      fixMin: extentInfo.fixMin,\r\n      fixMax: extentInfo.fixMax,\r\n      minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\r\n      maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\r\n    }); // If some one specified the min, max. And the default calculated interval\r\n    // is not good enough. He can specify the interval. It is often appeared\r\n    // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\r\n    // to be 60.\r\n    // FIXME\r\n\r\n    var interval = model.get('interval');\r\n\r\n    if (interval != null) {\r\n      scale.setInterval && scale.setInterval(interval);\r\n    }\r\n  }\r\n  /**\r\n   * @param axisType Default retrieve from model.type\r\n   */\r\n\r\n\r\n  function createScaleByModel(model, axisType) {\r\n    axisType = axisType || model.get('type');\r\n\r\n    if (axisType) {\r\n      switch (axisType) {\r\n        // Buildin scale\r\n        case 'category':\r\n          return new OrdinalScale({\r\n            ordinalMeta: model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(),\r\n            extent: [Infinity, -Infinity]\r\n          });\r\n\r\n        case 'time':\r\n          return new TimeScale({\r\n            locale: model.ecModel.getLocaleModel(),\r\n            useUTC: model.ecModel.get('useUTC')\r\n          });\r\n\r\n        default:\r\n          // case 'value'/'interval', 'log', or others.\r\n          return new (Scale.getClass(axisType) || IntervalScale)();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Check if the axis cross 0\r\n   */\r\n\r\n\r\n  function ifAxisCrossZero(axis) {\r\n    var dataExtent = axis.scale.getExtent();\r\n    var min = dataExtent[0];\r\n    var max = dataExtent[1];\r\n    return !(min > 0 && max > 0 || min < 0 && max < 0);\r\n  }\r\n  /**\r\n   * @param axis\r\n   * @return Label formatter function.\r\n   *         param: {number} tickValue,\r\n   *         param: {number} idx, the index in all ticks.\r\n   *                         If category axis, this param is not required.\r\n   *         return: {string} label string.\r\n   */\r\n\r\n\r\n  function makeLabelFormatter(axis) {\r\n    var labelFormatter = axis.getLabelModel().get('formatter');\r\n    var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\r\n\r\n    if (axis.scale.type === 'time') {\r\n      return function (tpl) {\r\n        return function (tick, idx) {\r\n          return axis.scale.getFormattedLabel(tick, idx, tpl);\r\n        };\r\n      }(labelFormatter);\r\n    } else if (typeof labelFormatter === 'string') {\r\n      return function (tpl) {\r\n        return function (tick) {\r\n          // For category axis, get raw value; for numeric axis,\r\n          // get formatted label like '1,333,444'.\r\n          var label = axis.scale.getLabel(tick);\r\n          var text = tpl.replace('{value}', label != null ? label : '');\r\n          return text;\r\n        };\r\n      }(labelFormatter);\r\n    } else if (typeof labelFormatter === 'function') {\r\n      return function (cb) {\r\n        return function (tick, idx) {\r\n          // The original intention of `idx` is \"the index of the tick in all ticks\".\r\n          // But the previous implementation of category axis do not consider the\r\n          // `axisLabel.interval`, which cause that, for example, the `interval` is\r\n          // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\r\n          // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\r\n          // the definition here for back compatibility.\r\n          if (categoryTickStart != null) {\r\n            idx = tick.value - categoryTickStart;\r\n          }\r\n\r\n          return cb(getAxisRawValue(axis, tick), idx, tick.level != null ? {\r\n            level: tick.level\r\n          } : null);\r\n        };\r\n      }(labelFormatter);\r\n    } else {\r\n      return function (tick) {\r\n        return axis.scale.getLabel(tick);\r\n      };\r\n    }\r\n  }\r\n\r\n  function getAxisRawValue(axis, tick) {\r\n    // In category axis with data zoom, tick is not the original\r\n    // index of axis.data. So tick should not be exposed to user\r\n    // in category axis.\r\n    return axis.type === 'category' ? axis.scale.getLabel(tick) : tick.value;\r\n  }\r\n  /**\r\n   * @param axis\r\n   * @return Be null/undefined if no labels.\r\n   */\r\n\r\n\r\n  function estimateLabelUnionRect(axis) {\r\n    var axisModel = axis.model;\r\n    var scale = axis.scale;\r\n\r\n    if (!axisModel.get(['axisLabel', 'show']) || scale.isBlank()) {\r\n      return;\r\n    }\r\n\r\n    var realNumberScaleTicks;\r\n    var tickCount;\r\n    var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\r\n\r\n    if (scale instanceof OrdinalScale) {\r\n      tickCount = scale.count();\r\n    } else {\r\n      realNumberScaleTicks = scale.getTicks();\r\n      tickCount = realNumberScaleTicks.length;\r\n    }\r\n\r\n    var axisLabelModel = axis.getLabelModel();\r\n    var labelFormatter = makeLabelFormatter(axis);\r\n    var rect;\r\n    var step = 1; // Simple optimization for large amount of labels\r\n\r\n    if (tickCount > 40) {\r\n      step = Math.ceil(tickCount / 40);\r\n    }\r\n\r\n    for (var i = 0; i < tickCount; i += step) {\r\n      var tick = realNumberScaleTicks ? realNumberScaleTicks[i] : {\r\n        value: categoryScaleExtent[0] + i\r\n      };\r\n      var label = labelFormatter(tick, i);\r\n      var unrotatedSingleRect = axisLabelModel.getTextRect(label);\r\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\r\n      rect ? rect.union(singleRect) : rect = singleRect;\r\n    }\r\n\r\n    return rect;\r\n  }\r\n\r\n  function rotateTextRect(textRect, rotate) {\r\n    var rotateRadians = rotate * Math.PI;\r\n    var beforeWidth = textRect.width;\r\n    var beforeHeight = textRect.height;\r\n    var afterWidth = beforeWidth * Math.abs(Math.cos(rotateRadians)) + Math.abs(beforeHeight * Math.sin(rotateRadians));\r\n    var afterHeight = beforeWidth * Math.abs(Math.sin(rotateRadians)) + Math.abs(beforeHeight * Math.cos(rotateRadians));\r\n    var rotatedRect = new BoundingRect(textRect.x, textRect.y, afterWidth, afterHeight);\r\n    return rotatedRect;\r\n  }\r\n  /**\r\n   * @param model axisLabelModel or axisTickModel\r\n   * @return {number|String} Can be null|'auto'|number|function\r\n   */\r\n\r\n\r\n  function getOptionCategoryInterval(model) {\r\n    var interval = model.get('interval');\r\n    return interval == null ? 'auto' : interval;\r\n  }\r\n  /**\r\n   * Set `categoryInterval` as 0 implicitly indicates that\r\n   * show all labels reguardless of overlap.\r\n   * @param {Object} axis axisModel.axis\r\n   */\r\n\r\n\r\n  function shouldShowAllLabels(axis) {\r\n    return axis.type === 'category' && getOptionCategoryInterval(axis.getLabelModel()) === 0;\r\n  }\r\n\r\n  function getDataDimensionsOnAxis(data, axisDim) {\r\n    // Remove duplicated dat dimensions caused by `getStackedDimension`.\r\n    var dataDimMap = {}; // Currently `mapDimensionsAll` will contain stack result dimension ('__\\0ecstackresult').\r\n    // PENDING: is it reasonable? Do we need to remove the original dim from \"coord dim\" since\r\n    // there has been stacked result dim?\r\n\r\n    each$1(data.mapDimensionsAll(axisDim), function (dataDim) {\r\n      // For example, the extent of the original dimension\r\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\r\n      // is [7, 9], the final extent should NOT include [0.1, 0.5],\r\n      // because there is no graphic corresponding to [0.1, 0.5].\r\n      // See the case in `test/area-stack.html` `main1`, where area line\r\n      // stack needs `yAxis` not start from 0.\r\n      dataDimMap[getStackedDimension(data, dataDim)] = true;\r\n    });\r\n    return keys(dataDimMap);\r\n  }\r\n\r\n  function unionAxisExtentFromData(dataExtent, data, axisDim) {\r\n    if (data) {\r\n      each$1(getDataDimensionsOnAxis(data, axisDim), function (dim) {\r\n        var seriesExtent = data.getApproximateExtent(dim);\r\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\r\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\r\n      });\r\n    }\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var AxisModelCommonMixin =\r\n  /** @class */\r\n  function () {\r\n    function AxisModelCommonMixin() {}\r\n\r\n    AxisModelCommonMixin.prototype.getNeedCrossZero = function () {\r\n      var option = this.option;\r\n      return !option.scale;\r\n    };\r\n    /**\r\n     * Should be implemented by each axis model if necessary.\r\n     * @return coordinate system model\r\n     */\r\n\r\n\r\n    AxisModelCommonMixin.prototype.getCoordSysModel = function () {\r\n      return;\r\n    };\r\n\r\n    return AxisModelCommonMixin;\r\n  }();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * This module exposes helper functions for developing extensions.\r\n   */\r\n\r\n  /**\r\n   * Create a muti dimension List structure from seriesModel.\r\n   */\r\n\r\n\r\n  function createList(seriesModel) {\r\n    return createListFromArray(seriesModel.getSource(), seriesModel);\r\n  } // export function createGraph(seriesModel) {\r\n\r\n\r\n  var dataStack$1 = {\r\n    isDimensionStacked: isDimensionStacked,\r\n    enableDataStack: enableDataStack,\r\n    getStackedDimension: getStackedDimension\r\n  };\r\n  /**\r\n   * Create scale\r\n   * @param {Array.<number>} dataExtent\r\n   * @param {Object|module:echarts/Model} option If `optoin.type`\r\n   *        is secified, it can only be `'value'` currently.\r\n   */\r\n\r\n  function createScale(dataExtent, option) {\r\n    var axisModel = option;\r\n\r\n    if (!(option instanceof Model)) {\r\n      axisModel = new Model(option); // FIXME\r\n      // Currently AxisModelCommonMixin has nothing to do with the\r\n      // the requirements of `axisHelper.createScaleByModel`. For\r\n      // example the method `getCategories` and `getOrdinalMeta`\r\n      // are required for `'category'` axis, and ecModel are required\r\n      // for `'time'` axis. But occationally echarts-gl happened\r\n      // to only use `'value'` axis.\r\n      // zrUtil.mixin(axisModel, AxisModelCommonMixin);\r\n    }\r\n\r\n    var scale = createScaleByModel(axisModel);\r\n    scale.setExtent(dataExtent[0], dataExtent[1]);\r\n    niceScaleExtent(scale, axisModel);\r\n    return scale;\r\n  }\r\n  /**\r\n   * Mixin common methods to axis model,\r\n   *\r\n   * Inlcude methods\r\n   * `getFormattedLabels() => Array.<string>`\r\n   * `getCategories() => Array.<string>`\r\n   * `getMin(origin: boolean) => number`\r\n   * `getMax(origin: boolean) => number`\r\n   * `getNeedCrossZero() => boolean`\r\n   */\r\n\r\n\r\n  function mixinAxisModelCommonMethods(Model$$1) {\r\n    mixin(Model$$1, AxisModelCommonMixin);\r\n  }\r\n\r\n  function createTextStyle$1(textStyleModel, opts) {\r\n    opts = opts || {};\r\n    return createTextStyle(textStyleModel, null, null, opts.state !== 'normal');\r\n  }\r\n\r\n  var helper = (Object.freeze || Object)({\r\n    createList: createList,\r\n    getLayoutRect: getLayoutRect,\r\n    dataStack: dataStack$1,\r\n    createScale: createScale,\r\n    mixinAxisModelCommonMethods: mixinAxisModelCommonMethods,\r\n    getECData: getECData,\r\n    createTextStyle: createTextStyle$1,\r\n    createDimensions: createDimensions,\r\n    createSymbol: createSymbol,\r\n    enableHoverEmphasis: enableHoverEmphasis\r\n  });\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var extensions = [];\r\n  var extensionRegisters = {\r\n    registerPreprocessor: registerPreprocessor,\r\n    registerProcessor: registerProcessor,\r\n    registerPostInit: registerPostInit,\r\n    registerPostUpdate: registerPostUpdate,\r\n    registerAction: registerAction,\r\n    registerCoordinateSystem: registerCoordinateSystem,\r\n    registerLayout: registerLayout,\r\n    registerVisual: registerVisual,\r\n    registerTransform: registerTransform,\r\n    registerLoading: registerLoading,\r\n    registerMap: registerMap,\r\n    PRIORITY: PRIORITY,\r\n    ComponentModel: ComponentModel,\r\n    ComponentView: ComponentView,\r\n    SeriesModel: SeriesModel,\r\n    ChartView: ChartView,\r\n    // TODO Use ComponentModel and SeriesModel instead of Constructor\r\n    registerComponentModel: function (ComponentModelClass) {\r\n      ComponentModel.registerClass(ComponentModelClass);\r\n    },\r\n    registerComponentView: function (ComponentViewClass) {\r\n      ComponentView.registerClass(ComponentViewClass);\r\n    },\r\n    registerSeriesModel: function (SeriesModelClass) {\r\n      SeriesModel.registerClass(SeriesModelClass);\r\n    },\r\n    registerChartView: function (ChartViewClass) {\r\n      ChartView.registerClass(ChartViewClass);\r\n    },\r\n    registerSubTypeDefaulter: function (componentType, defaulter) {\r\n      ComponentModel.registerSubTypeDefaulter(componentType, defaulter);\r\n    },\r\n    registerPainter: function (painterType, PainterCtor) {\r\n      registerPainter(painterType, PainterCtor);\r\n    }\r\n  };\r\n\r\n  function use(ext) {\r\n    if (isArray(ext)) {\r\n      // use([ChartLine, ChartBar]);\r\n      each$1(ext, function (singleExt) {\r\n        use(singleExt);\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (indexOf$1(extensions, ext) >= 0) {\r\n      return;\r\n    }\r\n\r\n    extensions.push(ext);\r\n\r\n    if (isFunction$1(ext)) {\r\n      ext = {\r\n        install: ext\r\n      };\r\n    }\r\n\r\n    ext.install(extensionRegisters);\r\n  }\r\n\r\n  var EPSILON$3 = 1e-8;\r\n\r\n  function isAroundEqual$1(a, b) {\r\n    return Math.abs(a - b) < EPSILON$3;\r\n  }\r\n\r\n  function contain$2(points, x, y) {\r\n    var w = 0;\r\n    var p = points[0];\r\n\r\n    if (!p) {\r\n      return false;\r\n    }\r\n\r\n    for (var i = 1; i < points.length; i++) {\r\n      var p2 = points[i];\r\n      w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\r\n      p = p2;\r\n    }\r\n\r\n    var p0 = points[0];\r\n\r\n    if (!isAroundEqual$1(p[0], p0[0]) || !isAroundEqual$1(p[1], p0[1])) {\r\n      w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\r\n    }\r\n\r\n    return w !== 0;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var Region =\r\n  /** @class */\r\n  function () {\r\n    function Region(name, geometries, cp) {\r\n      this.name = name;\r\n      this.geometries = geometries;\r\n\r\n      if (!cp) {\r\n        var rect = this.getBoundingRect();\r\n        cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\r\n      } else {\r\n        cp = [cp[0], cp[1]];\r\n      }\r\n\r\n      this.center = cp;\r\n    }\r\n\r\n    Region.prototype.getBoundingRect = function () {\r\n      var rect = this._rect;\r\n\r\n      if (rect) {\r\n        return rect;\r\n      }\r\n\r\n      var MAX_NUMBER = Number.MAX_VALUE;\r\n      var min$$1 = [MAX_NUMBER, MAX_NUMBER];\r\n      var max$$1 = [-MAX_NUMBER, -MAX_NUMBER];\r\n      var min2 = [];\r\n      var max2 = [];\r\n      var geometries = this.geometries;\r\n      var i = 0;\r\n\r\n      for (; i < geometries.length; i++) {\r\n        // Only support polygon\r\n        if (geometries[i].type !== 'polygon') {\r\n          continue;\r\n        } // Doesn't consider hole\r\n\r\n\r\n        var exterior = geometries[i].exterior;\r\n        fromPoints(exterior, min2, max2);\r\n        min(min$$1, min$$1, min2);\r\n        max(max$$1, max$$1, max2);\r\n      } // No data\r\n\r\n\r\n      if (i === 0) {\r\n        min$$1[0] = min$$1[1] = max$$1[0] = max$$1[1] = 0;\r\n      }\r\n\r\n      return this._rect = new BoundingRect(min$$1[0], min$$1[1], max$$1[0] - min$$1[0], max$$1[1] - min$$1[1]);\r\n    };\r\n\r\n    Region.prototype.contain = function (coord) {\r\n      var rect = this.getBoundingRect();\r\n      var geometries = this.geometries;\r\n\r\n      if (!rect.contain(coord[0], coord[1])) {\r\n        return false;\r\n      }\r\n\r\n      loopGeo: for (var i = 0, len$$1 = geometries.length; i < len$$1; i++) {\r\n        // Only support polygon.\r\n        if (geometries[i].type !== 'polygon') {\r\n          continue;\r\n        }\r\n\r\n        var exterior = geometries[i].exterior;\r\n        var interiors = geometries[i].interiors;\r\n\r\n        if (contain$2(exterior, coord[0], coord[1])) {\r\n          // Not in the region if point is in the hole.\r\n          for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\r\n            if (contain$2(interiors[k], coord[0], coord[1])) {\r\n              continue loopGeo;\r\n            }\r\n          }\r\n\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    Region.prototype.transformTo = function (x, y, width, height) {\r\n      var rect = this.getBoundingRect();\r\n      var aspect = rect.width / rect.height;\r\n\r\n      if (!width) {\r\n        width = aspect * height;\r\n      } else if (!height) {\r\n        height = width / aspect;\r\n      }\r\n\r\n      var target = new BoundingRect(x, y, width, height);\r\n      var transform = rect.calculateTransform(target);\r\n      var geometries = this.geometries;\r\n\r\n      for (var i = 0; i < geometries.length; i++) {\r\n        // Only support polygon.\r\n        if (geometries[i].type !== 'polygon') {\r\n          continue;\r\n        }\r\n\r\n        var exterior = geometries[i].exterior;\r\n        var interiors = geometries[i].interiors;\r\n\r\n        for (var p = 0; p < exterior.length; p++) {\r\n          applyTransform(exterior[p], exterior[p], transform);\r\n        }\r\n\r\n        for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\r\n          for (var p = 0; p < interiors[h].length; p++) {\r\n            applyTransform(interiors[h][p], interiors[h][p], transform);\r\n          }\r\n        }\r\n      }\r\n\r\n      rect = this._rect;\r\n      rect.copy(target); // Update center\r\n\r\n      this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\r\n    };\r\n\r\n    Region.prototype.cloneShallow = function (name) {\r\n      name == null && (name = this.name);\r\n      var newRegion = new Region(name, this.geometries, this.center);\r\n      newRegion._rect = this._rect;\r\n      newRegion.transformTo = null; // Simply avoid to be called.\r\n\r\n      return newRegion;\r\n    };\r\n\r\n    return Region;\r\n  }();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Parse and decode geo json\r\n   */\r\n\r\n\r\n  function decode(json) {\r\n    if (!json.UTF8Encoding) {\r\n      return json;\r\n    }\r\n\r\n    var jsonCompressed = json;\r\n    var encodeScale = jsonCompressed.UTF8Scale;\r\n\r\n    if (encodeScale == null) {\r\n      encodeScale = 1024;\r\n    }\r\n\r\n    var features = jsonCompressed.features;\r\n\r\n    for (var f = 0; f < features.length; f++) {\r\n      var feature = features[f];\r\n      var geometry = feature.geometry;\r\n\r\n      if (geometry.type === 'Polygon') {\r\n        var coordinates = geometry.coordinates;\r\n\r\n        for (var c = 0; c < coordinates.length; c++) {\r\n          coordinates[c] = decodePolygon(coordinates[c], geometry.encodeOffsets[c], encodeScale);\r\n        }\r\n      } else if (geometry.type === 'MultiPolygon') {\r\n        var coordinates = geometry.coordinates;\r\n\r\n        for (var c = 0; c < coordinates.length; c++) {\r\n          var coordinate = coordinates[c];\r\n\r\n          for (var c2 = 0; c2 < coordinate.length; c2++) {\r\n            coordinate[c2] = decodePolygon(coordinate[c2], geometry.encodeOffsets[c][c2], encodeScale);\r\n          }\r\n        }\r\n      }\r\n    } // Has been decoded\r\n\r\n\r\n    jsonCompressed.UTF8Encoding = false;\r\n    return jsonCompressed;\r\n  }\r\n\r\n  function decodePolygon(coordinate, encodeOffsets, encodeScale) {\r\n    var result = [];\r\n    var prevX = encodeOffsets[0];\r\n    var prevY = encodeOffsets[1];\r\n\r\n    for (var i = 0; i < coordinate.length; i += 2) {\r\n      var x = coordinate.charCodeAt(i) - 64;\r\n      var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\r\n\r\n      x = x >> 1 ^ -(x & 1);\r\n      y = y >> 1 ^ -(y & 1); // Delta deocding\r\n\r\n      x += prevX;\r\n      y += prevY;\r\n      prevX = x;\r\n      prevY = y; // Dequantize\r\n\r\n      result.push([x / encodeScale, y / encodeScale]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  function parseGeoJSON(geoJson, nameProperty) {\r\n    geoJson = decode(geoJson);\r\n    return map(filter(geoJson.features, function (featureObj) {\r\n      // Output of mapshaper may have geometry null\r\n      return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\r\n    }), function (featureObj) {\r\n      var properties = featureObj.properties;\r\n      var geo = featureObj.geometry;\r\n      var geometries = [];\r\n\r\n      if (geo.type === 'Polygon') {\r\n        var coordinates = geo.coordinates;\r\n        geometries.push({\r\n          type: 'polygon',\r\n          // According to the GeoJSON specification.\r\n          // First must be exterior, and the rest are all interior(holes).\r\n          exterior: coordinates[0],\r\n          interiors: coordinates.slice(1)\r\n        });\r\n      }\r\n\r\n      if (geo.type === 'MultiPolygon') {\r\n        var coordinates = geo.coordinates;\r\n        each$1(coordinates, function (item) {\r\n          if (item[0]) {\r\n            geometries.push({\r\n              type: 'polygon',\r\n              exterior: item[0],\r\n              interiors: item.slice(1)\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      var region = new Region(properties[nameProperty || 'name'], geometries, properties.cp);\r\n      region.properties = properties;\r\n      return region;\r\n    });\r\n  }\r\n\r\n  var number = (Object.freeze || Object)({\r\n    linearMap: linearMap,\r\n    round: round,\r\n    asc: asc,\r\n    getPrecision: getPrecision,\r\n    getPrecisionSafe: getPrecisionSafe,\r\n    getPixelPrecision: getPixelPrecision,\r\n    getPercentWithPrecision: getPercentWithPrecision,\r\n    MAX_SAFE_INTEGER: MAX_SAFE_INTEGER,\r\n    remRadian: remRadian,\r\n    isRadianAroundZero: isRadianAroundZero,\r\n    parseDate: parseDate,\r\n    quantity: quantity,\r\n    quantityExponent: quantityExponent,\r\n    nice: nice,\r\n    quantile: quantile,\r\n    reformIntervals: reformIntervals,\r\n    isNumeric: isNumeric,\r\n    numericToNumber: numericToNumber\r\n  });\r\n  var time = (Object.freeze || Object)({\r\n    parse: parseDate,\r\n    format: format\r\n  });\r\n  var graphic$1 = (Object.freeze || Object)({\r\n    extendShape: extendShape,\r\n    extendPath: extendPath,\r\n    makePath: makePath,\r\n    makeImage: makeImage,\r\n    mergePath: mergePath,\r\n    resizePath: resizePath,\r\n    createIcon: createIcon,\r\n    updateProps: updateProps,\r\n    initProps: initProps,\r\n    getTransform: getTransform,\r\n    clipPointsByRect: clipPointsByRect,\r\n    clipRectByRect: clipRectByRect,\r\n    registerShape: registerShape,\r\n    getShapeClass: getShapeClass,\r\n    Group: Group,\r\n    Image: ZRImage,\r\n    Text: ZRText,\r\n    Circle: Circle,\r\n    Ellipse: Ellipse,\r\n    Sector: Sector,\r\n    Ring: Ring,\r\n    Polygon: Polygon,\r\n    Polyline: Polyline,\r\n    Rect: Rect,\r\n    Line: Line,\r\n    BezierCurve: BezierCurve,\r\n    Arc: Arc,\r\n    IncrementalDisplayable: IncrementalDisplayable,\r\n    CompoundPath: CompoundPath,\r\n    LinearGradient: LinearGradient,\r\n    RadialGradient: RadialGradient,\r\n    BoundingRect: BoundingRect\r\n  });\r\n  var format$1 = (Object.freeze || Object)({\r\n    addCommas: addCommas,\r\n    toCamelCase: toCamelCase,\r\n    normalizeCssArray: normalizeCssArray$1,\r\n    encodeHTML: encodeHTML,\r\n    formatTpl: formatTpl,\r\n    getTooltipMarker: getTooltipMarker,\r\n    formatTime: formatTime,\r\n    capitalFirst: capitalFirst,\r\n    truncateText: truncateText,\r\n    getTextRect: getTextRect\r\n  });\r\n  var util$1 = (Object.freeze || Object)({\r\n    map: map,\r\n    each: each$1,\r\n    indexOf: indexOf$1,\r\n    inherits: inherits,\r\n    reduce: reduce,\r\n    filter: filter,\r\n    bind: bind,\r\n    curry: curry,\r\n    isArray: isArray,\r\n    isString: isString,\r\n    isObject: isObject$1,\r\n    isFunction: isFunction$1,\r\n    extend: extend,\r\n    defaults: defaults,\r\n    clone: clone,\r\n    merge: merge\r\n  });\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var inner$4 = makeInner();\r\n\r\n  function createAxisLabels(axis) {\r\n    // Only ordinal scale support tick interval\r\n    return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\r\n  }\r\n  /**\r\n   * @param {module:echats/coord/Axis} axis\r\n   * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\r\n   * @return {Object} {\r\n   *     ticks: Array.<number>\r\n   *     tickCategoryInterval: number\r\n   * }\r\n   */\r\n\r\n\r\n  function createAxisTicks(axis, tickModel) {\r\n    // Only ordinal scale support tick interval\r\n    return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\r\n      ticks: map(axis.scale.getTicks(), function (tick) {\r\n        return tick.value;\r\n      })\r\n    };\r\n  }\r\n\r\n  function makeCategoryLabels(axis) {\r\n    var labelModel = axis.getLabelModel();\r\n    var result = makeCategoryLabelsActually(axis, labelModel);\r\n    return !labelModel.get('show') || axis.scale.isBlank() ? {\r\n      labels: [],\r\n      labelCategoryInterval: result.labelCategoryInterval\r\n    } : result;\r\n  }\r\n\r\n  function makeCategoryLabelsActually(axis, labelModel) {\r\n    var labelsCache = getListCache(axis, 'labels');\r\n    var optionLabelInterval = getOptionCategoryInterval(labelModel);\r\n    var result = listCacheGet(labelsCache, optionLabelInterval);\r\n\r\n    if (result) {\r\n      return result;\r\n    }\r\n\r\n    var labels;\r\n    var numericLabelInterval;\r\n\r\n    if (isFunction$1(optionLabelInterval)) {\r\n      labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\r\n    } else {\r\n      numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\r\n      labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\r\n    } // Cache to avoid calling interval function repeatly.\r\n\r\n\r\n    return listCacheSet(labelsCache, optionLabelInterval, {\r\n      labels: labels,\r\n      labelCategoryInterval: numericLabelInterval\r\n    });\r\n  }\r\n\r\n  function makeCategoryTicks(axis, tickModel) {\r\n    var ticksCache = getListCache(axis, 'ticks');\r\n    var optionTickInterval = getOptionCategoryInterval(tickModel);\r\n    var result = listCacheGet(ticksCache, optionTickInterval);\r\n\r\n    if (result) {\r\n      return result;\r\n    }\r\n\r\n    var ticks;\r\n    var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\r\n    // we should not return all ticks.\r\n\r\n    if (!tickModel.get('show') || axis.scale.isBlank()) {\r\n      ticks = [];\r\n    }\r\n\r\n    if (isFunction$1(optionTickInterval)) {\r\n      ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\r\n    } // Always use label interval by default despite label show. Consider this\r\n    // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\r\n    // labels. `splitLine` and `axisTick` should be consistent in this case.\r\n    else if (optionTickInterval === 'auto') {\r\n        var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\r\n        tickCategoryInterval = labelsResult.labelCategoryInterval;\r\n        ticks = map(labelsResult.labels, function (labelItem) {\r\n          return labelItem.tickValue;\r\n        });\r\n      } else {\r\n        tickCategoryInterval = optionTickInterval;\r\n        ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\r\n      } // Cache to avoid calling interval function repeatly.\r\n\r\n\r\n    return listCacheSet(ticksCache, optionTickInterval, {\r\n      ticks: ticks,\r\n      tickCategoryInterval: tickCategoryInterval\r\n    });\r\n  }\r\n\r\n  function makeRealNumberLabels(axis) {\r\n    var ticks = axis.scale.getTicks();\r\n    var labelFormatter = makeLabelFormatter(axis);\r\n    return {\r\n      labels: map(ticks, function (tick, idx) {\r\n        return {\r\n          formattedLabel: labelFormatter(tick, idx),\r\n          rawLabel: axis.scale.getLabel(tick),\r\n          tickValue: tick.value\r\n        };\r\n      })\r\n    };\r\n  }\r\n\r\n  function getListCache(axis, prop) {\r\n    // Because key can be funciton, and cache size always be small, we use array cache.\r\n    return inner$4(axis)[prop] || (inner$4(axis)[prop] = []);\r\n  }\r\n\r\n  function listCacheGet(cache, key) {\r\n    for (var i = 0; i < cache.length; i++) {\r\n      if (cache[i].key === key) {\r\n        return cache[i].value;\r\n      }\r\n    }\r\n  }\r\n\r\n  function listCacheSet(cache, key, value) {\r\n    cache.push({\r\n      key: key,\r\n      value: value\r\n    });\r\n    return value;\r\n  }\r\n\r\n  function makeAutoCategoryInterval(axis) {\r\n    var result = inner$4(axis).autoInterval;\r\n    return result != null ? result : inner$4(axis).autoInterval = axis.calculateCategoryInterval();\r\n  }\r\n  /**\r\n   * Calculate interval for category axis ticks and labels.\r\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\r\n   * should be implemented in axis.\r\n   */\r\n\r\n\r\n  function calculateCategoryInterval(axis) {\r\n    var params = fetchAutoCategoryIntervalCalculationParams(axis);\r\n    var labelFormatter = makeLabelFormatter(axis);\r\n    var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\r\n    var ordinalScale = axis.scale;\r\n    var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\r\n    // avoid generating a long array by `getTicks`\r\n    // in large category data case.\r\n\r\n    var tickCount = ordinalScale.count();\r\n\r\n    if (ordinalExtent[1] - ordinalExtent[0] < 1) {\r\n      return 0;\r\n    }\r\n\r\n    var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\r\n\r\n    if (tickCount > 40) {\r\n      step = Math.max(1, Math.floor(tickCount / 40));\r\n    }\r\n\r\n    var tickValue = ordinalExtent[0];\r\n    var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\r\n    var unitW = Math.abs(unitSpan * Math.cos(rotation));\r\n    var unitH = Math.abs(unitSpan * Math.sin(rotation));\r\n    var maxW = 0;\r\n    var maxH = 0; // Caution: Performance sensitive for large category data.\r\n    // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\r\n\r\n    for (; tickValue <= ordinalExtent[1]; tickValue += step) {\r\n      var width = 0;\r\n      var height = 0; // Not precise, do not consider align and vertical align\r\n      // and each distance from axis line yet.\r\n\r\n      var rect = getBoundingRect(labelFormatter({\r\n        value: tickValue\r\n      }), params.font, 'center', 'top'); // Magic number\r\n\r\n      width = rect.width * 1.3;\r\n      height = rect.height * 1.3; // Min size, void long loop.\r\n\r\n      maxW = Math.max(maxW, width, 7);\r\n      maxH = Math.max(maxH, height, 7);\r\n    }\r\n\r\n    var dw = maxW / unitW;\r\n    var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\r\n\r\n    isNaN(dw) && (dw = Infinity);\r\n    isNaN(dh) && (dh = Infinity);\r\n    var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\r\n    var cache = inner$4(axis.model);\r\n    var axisExtent = axis.getExtent();\r\n    var lastAutoInterval = cache.lastAutoInterval;\r\n    var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\r\n    // otherwise the calculated interval might jitter when the zoom\r\n    // window size is close to the interval-changing size.\r\n    // For example, if all of the axis labels are `a, b, c, d, e, f, g`.\r\n    // The jitter will cause that sometimes the displayed labels are\r\n    // `a, d, g` (interval: 2) sometimes `a, c, e`(interval: 1).\r\n\r\n    if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\r\n    // point is not the same when zooming in or zooming out.\r\n    && lastAutoInterval > interval // If the axis change is caused by chart resize, the cache should not\r\n    // be used. Otherwise some hiden labels might not be shown again.\r\n    && cache.axisExtent0 === axisExtent[0] && cache.axisExtent1 === axisExtent[1]) {\r\n      interval = lastAutoInterval;\r\n    } // Only update cache if cache not used, otherwise the\r\n    // changing of interval is too insensitive.\r\n    else {\r\n        cache.lastTickCount = tickCount;\r\n        cache.lastAutoInterval = interval;\r\n        cache.axisExtent0 = axisExtent[0];\r\n        cache.axisExtent1 = axisExtent[1];\r\n      }\r\n\r\n    return interval;\r\n  }\r\n\r\n  function fetchAutoCategoryIntervalCalculationParams(axis) {\r\n    var labelModel = axis.getLabelModel();\r\n    return {\r\n      axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\r\n      labelRotate: labelModel.get('rotate') || 0,\r\n      font: labelModel.getFont()\r\n    };\r\n  }\r\n\r\n  function makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\r\n    var labelFormatter = makeLabelFormatter(axis);\r\n    var ordinalScale = axis.scale;\r\n    var ordinalExtent = ordinalScale.getExtent();\r\n    var labelModel = axis.getLabelModel();\r\n    var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\r\n\r\n    var step = Math.max((categoryInterval || 0) + 1, 1);\r\n    var startTick = ordinalExtent[0];\r\n    var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\r\n    // while zooming and moving while interval > 0. Otherwise the selection\r\n    // of displayable ticks and symbols probably keep changing.\r\n    // 3 is empirical value.\r\n\r\n    if (startTick !== 0 && step > 1 && tickCount / step > 2) {\r\n      startTick = Math.round(Math.ceil(startTick / step) * step);\r\n    } // (1) Only add min max label here but leave overlap checking\r\n    // to render stage, which also ensure the returned list\r\n    // suitable for splitLine and splitArea rendering.\r\n    // (2) Scales except category always contain min max label so\r\n    // do not need to perform this process.\r\n\r\n\r\n    var showAllLabel = shouldShowAllLabels(axis);\r\n    var includeMinLabel = labelModel.get('showMinLabel') || showAllLabel;\r\n    var includeMaxLabel = labelModel.get('showMaxLabel') || showAllLabel;\r\n\r\n    if (includeMinLabel && startTick !== ordinalExtent[0]) {\r\n      addItem(ordinalExtent[0]);\r\n    } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\r\n\r\n\r\n    var tickValue = startTick;\r\n\r\n    for (; tickValue <= ordinalExtent[1]; tickValue += step) {\r\n      addItem(tickValue);\r\n    }\r\n\r\n    if (includeMaxLabel && tickValue - step !== ordinalExtent[1]) {\r\n      addItem(ordinalExtent[1]);\r\n    }\r\n\r\n    function addItem(tickValue) {\r\n      var tickObj = {\r\n        value: tickValue\r\n      };\r\n      result.push(onlyTick ? tickValue : {\r\n        formattedLabel: labelFormatter(tickObj),\r\n        rawLabel: ordinalScale.getLabel(tickObj),\r\n        tickValue: tickValue\r\n      });\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  function makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\r\n    var ordinalScale = axis.scale;\r\n    var labelFormatter = makeLabelFormatter(axis);\r\n    var result = [];\r\n    each$1(ordinalScale.getTicks(), function (tick) {\r\n      var rawLabel = ordinalScale.getLabel(tick);\r\n      var tickValue = tick.value;\r\n\r\n      if (categoryInterval(tick.value, rawLabel)) {\r\n        result.push(onlyTick ? tickValue : {\r\n          formattedLabel: labelFormatter(tick),\r\n          rawLabel: rawLabel,\r\n          tickValue: tickValue\r\n        });\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var NORMALIZED_EXTENT = [0, 1];\r\n  /**\r\n   * Base class of Axis.\r\n   */\r\n\r\n  var Axis =\r\n  /** @class */\r\n  function () {\r\n    function Axis(dim, scale, extent) {\r\n      this.onBand = false;\r\n      this.inverse = false;\r\n      this.dim = dim;\r\n      this.scale = scale;\r\n      this._extent = extent || [0, 0];\r\n    }\r\n    /**\r\n     * If axis extent contain given coord\r\n     */\r\n\r\n\r\n    Axis.prototype.contain = function (coord) {\r\n      var extent = this._extent;\r\n      var min = Math.min(extent[0], extent[1]);\r\n      var max = Math.max(extent[0], extent[1]);\r\n      return coord >= min && coord <= max;\r\n    };\r\n    /**\r\n     * If axis extent contain given data\r\n     */\r\n\r\n\r\n    Axis.prototype.containData = function (data) {\r\n      return this.scale.contain(data);\r\n    };\r\n    /**\r\n     * Get coord extent.\r\n     */\r\n\r\n\r\n    Axis.prototype.getExtent = function () {\r\n      return this._extent.slice();\r\n    };\r\n    /**\r\n     * Get precision used for formatting\r\n     */\r\n\r\n\r\n    Axis.prototype.getPixelPrecision = function (dataExtent) {\r\n      return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\r\n    };\r\n    /**\r\n     * Set coord extent\r\n     */\r\n\r\n\r\n    Axis.prototype.setExtent = function (start, end) {\r\n      var extent = this._extent;\r\n      extent[0] = start;\r\n      extent[1] = end;\r\n    };\r\n    /**\r\n     * Convert data to coord. Data is the rank if it has an ordinal scale\r\n     */\r\n\r\n\r\n    Axis.prototype.dataToCoord = function (data, clamp) {\r\n      var extent = this._extent;\r\n      var scale = this.scale;\r\n      data = scale.normalize(data);\r\n\r\n      if (this.onBand && scale.type === 'ordinal') {\r\n        extent = extent.slice();\r\n        fixExtentWithBands(extent, scale.count());\r\n      }\r\n\r\n      return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\r\n    };\r\n    /**\r\n     * Convert coord to data. Data is the rank if it has an ordinal scale\r\n     */\r\n\r\n\r\n    Axis.prototype.coordToData = function (coord, clamp) {\r\n      var extent = this._extent;\r\n      var scale = this.scale;\r\n\r\n      if (this.onBand && scale.type === 'ordinal') {\r\n        extent = extent.slice();\r\n        fixExtentWithBands(extent, scale.count());\r\n      }\r\n\r\n      var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\r\n      return this.scale.scale(t);\r\n    };\r\n    /**\r\n     * Convert pixel point to data in axis\r\n     */\r\n\r\n\r\n    Axis.prototype.pointToData = function (point, clamp) {\r\n      // Should be implemented in derived class if necessary.\r\n      return;\r\n    };\r\n    /**\r\n     * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\r\n     * `axis.getTicksCoords` considers `onBand`, which is used by\r\n     * `boundaryGap:true` of category axis and splitLine and splitArea.\r\n     * @param opt.tickModel default: axis.model.getModel('axisTick')\r\n     * @param opt.clamp If `true`, the first and the last\r\n     *        tick must be at the axis end points. Otherwise, clip ticks\r\n     *        that outside the axis extent.\r\n     */\r\n\r\n\r\n    Axis.prototype.getTicksCoords = function (opt) {\r\n      opt = opt || {};\r\n      var tickModel = opt.tickModel || this.getTickModel();\r\n      var result = createAxisTicks(this, tickModel);\r\n      var ticks = result.ticks;\r\n      var ticksCoords = map(ticks, function (tickVal) {\r\n        return {\r\n          coord: this.dataToCoord(this.scale.type === 'ordinal' ? this.scale.getRawOrdinalNumber(tickVal) : tickVal),\r\n          tickValue: tickVal\r\n        };\r\n      }, this);\r\n      var alignWithLabel = tickModel.get('alignWithLabel');\r\n      fixOnBandTicksCoords(this, ticksCoords, alignWithLabel, opt.clamp);\r\n      return ticksCoords;\r\n    };\r\n\r\n    Axis.prototype.getMinorTicksCoords = function () {\r\n      if (this.scale.type === 'ordinal') {\r\n        // Category axis doesn't support minor ticks\r\n        return [];\r\n      }\r\n\r\n      var minorTickModel = this.model.getModel('minorTick');\r\n      var splitNumber = minorTickModel.get('splitNumber'); // Protection.\r\n\r\n      if (!(splitNumber > 0 && splitNumber < 100)) {\r\n        splitNumber = 5;\r\n      }\r\n\r\n      var minorTicks = this.scale.getMinorTicks(splitNumber);\r\n      var minorTicksCoords = map(minorTicks, function (minorTicksGroup) {\r\n        return map(minorTicksGroup, function (minorTick) {\r\n          return {\r\n            coord: this.dataToCoord(minorTick),\r\n            tickValue: minorTick\r\n          };\r\n        }, this);\r\n      }, this);\r\n      return minorTicksCoords;\r\n    };\r\n\r\n    Axis.prototype.getViewLabels = function () {\r\n      return createAxisLabels(this).labels;\r\n    };\r\n\r\n    Axis.prototype.getLabelModel = function () {\r\n      return this.model.getModel('axisLabel');\r\n    };\r\n    /**\r\n     * Notice here we only get the default tick model. For splitLine\r\n     * or splitArea, we should pass the splitLineModel or splitAreaModel\r\n     * manually when calling `getTicksCoords`.\r\n     * In GL, this method may be overrided to:\r\n     * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\r\n     */\r\n\r\n\r\n    Axis.prototype.getTickModel = function () {\r\n      return this.model.getModel('axisTick');\r\n    };\r\n    /**\r\n     * Get width of band\r\n     */\r\n\r\n\r\n    Axis.prototype.getBandWidth = function () {\r\n      var axisExtent = this._extent;\r\n      var dataExtent = this.scale.getExtent();\r\n      var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\r\n\r\n      len === 0 && (len = 1);\r\n      var size = Math.abs(axisExtent[1] - axisExtent[0]);\r\n      return Math.abs(size) / len;\r\n    };\r\n    /**\r\n     * Only be called in category axis.\r\n     * Can be overrided, consider other axes like in 3D.\r\n     * @return Auto interval for cateogry axis tick and label\r\n     */\r\n\r\n\r\n    Axis.prototype.calculateCategoryInterval = function () {\r\n      return calculateCategoryInterval(this);\r\n    };\r\n\r\n    return Axis;\r\n  }();\r\n\r\n  function fixExtentWithBands(extent, nTick) {\r\n    var size = extent[1] - extent[0];\r\n    var len = nTick;\r\n    var margin = size / len / 2;\r\n    extent[0] += margin;\r\n    extent[1] -= margin;\r\n  } // If axis has labels [1, 2, 3, 4]. Bands on the axis are\r\n  // |---1---|---2---|---3---|---4---|.\r\n  // So the displayed ticks and splitLine/splitArea should between\r\n  // each data item, otherwise cause misleading (e.g., split tow bars\r\n  // of a single data item when there are two bar series).\r\n  // Also consider if tickCategoryInterval > 0 and onBand, ticks and\r\n  // splitLine/spliteArea should layout appropriately corresponding\r\n  // to displayed labels. (So we should not use `getBandWidth` in this\r\n  // case).\r\n\r\n\r\n  function fixOnBandTicksCoords(axis, ticksCoords, alignWithLabel, clamp) {\r\n    var ticksLen = ticksCoords.length;\r\n\r\n    if (!axis.onBand || alignWithLabel || !ticksLen) {\r\n      return;\r\n    }\r\n\r\n    var axisExtent = axis.getExtent();\r\n    var last;\r\n    var diffSize;\r\n\r\n    if (ticksLen === 1) {\r\n      ticksCoords[0].coord = axisExtent[0];\r\n      last = ticksCoords[1] = {\r\n        coord: axisExtent[0]\r\n      };\r\n    } else {\r\n      var crossLen = ticksCoords[ticksLen - 1].tickValue - ticksCoords[0].tickValue;\r\n      var shift_1 = (ticksCoords[ticksLen - 1].coord - ticksCoords[0].coord) / crossLen;\r\n      each$1(ticksCoords, function (ticksItem) {\r\n        ticksItem.coord -= shift_1 / 2;\r\n      });\r\n      var dataExtent = axis.scale.getExtent();\r\n      diffSize = 1 + dataExtent[1] - ticksCoords[ticksLen - 1].tickValue;\r\n      last = {\r\n        coord: ticksCoords[ticksLen - 1].coord + shift_1 * diffSize\r\n      };\r\n      ticksCoords.push(last);\r\n    }\r\n\r\n    var inverse = axisExtent[0] > axisExtent[1]; // Handling clamp.\r\n\r\n    if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\r\n      clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\r\n    }\r\n\r\n    if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\r\n      ticksCoords.unshift({\r\n        coord: axisExtent[0]\r\n      });\r\n    }\r\n\r\n    if (littleThan(axisExtent[1], last.coord)) {\r\n      clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\r\n    }\r\n\r\n    if (clamp && littleThan(last.coord, axisExtent[1])) {\r\n      ticksCoords.push({\r\n        coord: axisExtent[1]\r\n      });\r\n    }\r\n\r\n    function littleThan(a, b) {\r\n      // Avoid rounding error cause calculated tick coord different with extent.\r\n      // It may cause an extra unecessary tick added.\r\n      a = round(a);\r\n      b = round(b);\r\n      return inverse ? a > b : a < b;\r\n    }\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n  // These APIs are for more advanced usages\r\n  // For example extend charts and components, creating graphic elements, formatting.\r\n  // Should use `ComponentModel.extend` or `class XXXX extend ComponentModel` to create class.\r\n  // Then use `registerComponentModel` in `install` parameter when `use` this extension. For example:\r\n  // class Bar3DModel extends ComponentModel {}\r\n  // export function install(registers) { regsiters.registerComponentModel(Bar3DModel); }\r\n  // echarts.use(install);\r\n\r\n\r\n  function extendComponentModel(proto) {\r\n    var Model = ComponentModel.extend(proto);\r\n    ComponentModel.registerClass(Model);\r\n    return Model;\r\n  }\r\n\r\n  function extendComponentView(proto) {\r\n    var View = ComponentView.extend(proto);\r\n    ComponentView.registerClass(View);\r\n    return View;\r\n  }\r\n\r\n  function extendSeriesModel(proto) {\r\n    var Model = SeriesModel.extend(proto);\r\n    SeriesModel.registerClass(Model);\r\n    return Model;\r\n  }\r\n\r\n  function extendChartView(proto) {\r\n    var View = ChartView.extend(proto);\r\n    ChartView.registerClass(View);\r\n    return View;\r\n  }\r\n\r\n  function returnFalse() {\r\n    return false;\r\n  }\r\n\r\n  function createDom(id, painter, dpr) {\r\n    var newDom = createCanvas();\r\n    var width = painter.getWidth();\r\n    var height = painter.getHeight();\r\n    var newDomStyle = newDom.style;\r\n\r\n    if (newDomStyle) {\r\n      newDomStyle.position = 'absolute';\r\n      newDomStyle.left = '0';\r\n      newDomStyle.top = '0';\r\n      newDomStyle.width = width + 'px';\r\n      newDomStyle.height = height + 'px';\r\n      newDom.setAttribute('data-zr-dom-id', id);\r\n    }\r\n\r\n    newDom.width = width * dpr;\r\n    newDom.height = height * dpr;\r\n    return newDom;\r\n  }\r\n\r\n  var Layer = function (_super) {\r\n    __extends(Layer, _super);\r\n\r\n    function Layer(id, painter, dpr) {\r\n      var _this = _super.call(this) || this;\r\n\r\n      _this.motionBlur = false;\r\n      _this.lastFrameAlpha = 0.7;\r\n      _this.dpr = 1;\r\n      _this.virtual = false;\r\n      _this.config = {};\r\n      _this.incremental = false;\r\n      _this.zlevel = 0;\r\n      _this.maxRepaintRectCount = 5;\r\n      _this.__dirty = true;\r\n      _this.__firstTimePaint = true;\r\n      _this.__used = false;\r\n      _this.__drawIndex = 0;\r\n      _this.__startIndex = 0;\r\n      _this.__endIndex = 0;\r\n      _this.__prevStartIndex = null;\r\n      _this.__prevEndIndex = null;\r\n      var dom;\r\n      dpr = dpr || devicePixelRatio;\r\n\r\n      if (typeof id === 'string') {\r\n        dom = createDom(id, painter, dpr);\r\n      } else if (isObject$1(id)) {\r\n        dom = id;\r\n        id = dom.id;\r\n      }\r\n\r\n      _this.id = id;\r\n      _this.dom = dom;\r\n      var domStyle = dom.style;\r\n\r\n      if (domStyle) {\r\n        dom.onselectstart = returnFalse;\r\n        domStyle.webkitUserSelect = 'none';\r\n        domStyle.userSelect = 'none';\r\n        domStyle.webkitTapHighlightColor = 'rgba(0,0,0,0)';\r\n        domStyle['-webkit-touch-callout'] = 'none';\r\n        domStyle.padding = '0';\r\n        domStyle.margin = '0';\r\n        domStyle.borderWidth = '0';\r\n      }\r\n\r\n      _this.domBack = null;\r\n      _this.ctxBack = null;\r\n      _this.painter = painter;\r\n      _this.config = null;\r\n      _this.dpr = dpr;\r\n      return _this;\r\n    }\r\n\r\n    Layer.prototype.getElementCount = function () {\r\n      return this.__endIndex - this.__startIndex;\r\n    };\r\n\r\n    Layer.prototype.afterBrush = function () {\r\n      this.__prevStartIndex = this.__startIndex;\r\n      this.__prevEndIndex = this.__endIndex;\r\n    };\r\n\r\n    Layer.prototype.initContext = function () {\r\n      this.ctx = this.dom.getContext('2d');\r\n      this.ctx.dpr = this.dpr;\r\n    };\r\n\r\n    Layer.prototype.setUnpainted = function () {\r\n      this.__firstTimePaint = true;\r\n    };\r\n\r\n    Layer.prototype.createBackBuffer = function () {\r\n      var dpr = this.dpr;\r\n      this.domBack = createDom('back-' + this.id, this.painter, dpr);\r\n      this.ctxBack = this.domBack.getContext('2d');\r\n\r\n      if (dpr !== 1) {\r\n        this.ctxBack.scale(dpr, dpr);\r\n      }\r\n    };\r\n\r\n    Layer.prototype.createRepaintRects = function (displayList, prevList, viewWidth, viewHeight) {\r\n      if (this.__firstTimePaint) {\r\n        this.__firstTimePaint = false;\r\n        return null;\r\n      }\r\n\r\n      var mergedRepaintRects = [];\r\n      var maxRepaintRectCount = this.maxRepaintRectCount;\r\n      var full = false;\r\n      var pendingRect = new BoundingRect(0, 0, 0, 0);\r\n\r\n      function addRectToMergePool(rect) {\r\n        if (!rect.isFinite() || rect.isZero()) {\r\n          return;\r\n        }\r\n\r\n        if (mergedRepaintRects.length === 0) {\r\n          var boundingRect = new BoundingRect(0, 0, 0, 0);\r\n          boundingRect.copy(rect);\r\n          mergedRepaintRects.push(boundingRect);\r\n        } else {\r\n          var isMerged = false;\r\n          var minDeltaArea = Infinity;\r\n          var bestRectToMergeIdx = 0;\r\n\r\n          for (var i = 0; i < mergedRepaintRects.length; ++i) {\r\n            var mergedRect = mergedRepaintRects[i];\r\n\r\n            if (mergedRect.intersect(rect)) {\r\n              var pendingRect_1 = new BoundingRect(0, 0, 0, 0);\r\n              pendingRect_1.copy(mergedRect);\r\n              pendingRect_1.union(rect);\r\n              mergedRepaintRects[i] = pendingRect_1;\r\n              isMerged = true;\r\n              break;\r\n            } else if (full) {\r\n              pendingRect.copy(rect);\r\n              pendingRect.union(mergedRect);\r\n              var aArea = rect.width * rect.height;\r\n              var bArea = mergedRect.width * mergedRect.height;\r\n              var pendingArea = pendingRect.width * pendingRect.height;\r\n              var deltaArea = pendingArea - aArea - bArea;\r\n\r\n              if (deltaArea < minDeltaArea) {\r\n                minDeltaArea = deltaArea;\r\n                bestRectToMergeIdx = i;\r\n              }\r\n            }\r\n          }\r\n\r\n          if (full) {\r\n            mergedRepaintRects[bestRectToMergeIdx].union(rect);\r\n            isMerged = true;\r\n          }\r\n\r\n          if (!isMerged) {\r\n            var boundingRect = new BoundingRect(0, 0, 0, 0);\r\n            boundingRect.copy(rect);\r\n            mergedRepaintRects.push(boundingRect);\r\n          }\r\n\r\n          if (!full) {\r\n            full = mergedRepaintRects.length >= maxRepaintRectCount;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (var i = this.__startIndex; i < this.__endIndex; ++i) {\r\n        var el = displayList[i];\r\n\r\n        if (el) {\r\n          var shouldPaint = el.shouldBePainted(viewWidth, viewHeight, true, true);\r\n          var prevRect = el.__isRendered && (el.__dirty & Element.REDARAW_BIT || !shouldPaint) ? el.getPrevPaintRect() : null;\r\n\r\n          if (prevRect) {\r\n            addRectToMergePool(prevRect);\r\n          }\r\n\r\n          var curRect = shouldPaint && (el.__dirty & Element.REDARAW_BIT || !el.__isRendered) ? el.getPaintRect() : null;\r\n\r\n          if (curRect) {\r\n            addRectToMergePool(curRect);\r\n          }\r\n        }\r\n      }\r\n\r\n      for (var i = this.__prevStartIndex; i < this.__prevEndIndex; ++i) {\r\n        var el = prevList[i];\r\n        var shouldPaint = el.shouldBePainted(viewWidth, viewHeight, true, true);\r\n\r\n        if (el && (!shouldPaint || !el.__zr) && el.__isRendered) {\r\n          var prevRect = el.getPrevPaintRect();\r\n\r\n          if (prevRect) {\r\n            addRectToMergePool(prevRect);\r\n          }\r\n        }\r\n      }\r\n\r\n      var hasIntersections;\r\n\r\n      do {\r\n        hasIntersections = false;\r\n\r\n        for (var i = 0; i < mergedRepaintRects.length;) {\r\n          if (mergedRepaintRects[i].isZero()) {\r\n            mergedRepaintRects.splice(i, 1);\r\n            continue;\r\n          }\r\n\r\n          for (var j = i + 1; j < mergedRepaintRects.length;) {\r\n            if (mergedRepaintRects[i].intersect(mergedRepaintRects[j])) {\r\n              hasIntersections = true;\r\n              mergedRepaintRects[i].union(mergedRepaintRects[j]);\r\n              mergedRepaintRects.splice(j, 1);\r\n            } else {\r\n              j++;\r\n            }\r\n          }\r\n\r\n          i++;\r\n        }\r\n      } while (hasIntersections);\r\n\r\n      this._paintRects = mergedRepaintRects;\r\n      return mergedRepaintRects;\r\n    };\r\n\r\n    Layer.prototype.debugGetPaintRects = function () {\r\n      return (this._paintRects || []).slice();\r\n    };\r\n\r\n    Layer.prototype.resize = function (width, height) {\r\n      var dpr = this.dpr;\r\n      var dom = this.dom;\r\n      var domStyle = dom.style;\r\n      var domBack = this.domBack;\r\n\r\n      if (domStyle) {\r\n        domStyle.width = width + 'px';\r\n        domStyle.height = height + 'px';\r\n      }\r\n\r\n      dom.width = width * dpr;\r\n      dom.height = height * dpr;\r\n\r\n      if (domBack) {\r\n        domBack.width = width * dpr;\r\n        domBack.height = height * dpr;\r\n\r\n        if (dpr !== 1) {\r\n          this.ctxBack.scale(dpr, dpr);\r\n        }\r\n      }\r\n    };\r\n\r\n    Layer.prototype.clear = function (clearAll, clearColor, repaintRects) {\r\n      var dom = this.dom;\r\n      var ctx = this.ctx;\r\n      var width = dom.width;\r\n      var height = dom.height;\r\n      clearColor = clearColor || this.clearColor;\r\n      var haveMotionBLur = this.motionBlur && !clearAll;\r\n      var lastFrameAlpha = this.lastFrameAlpha;\r\n      var dpr = this.dpr;\r\n      var self = this;\r\n\r\n      if (haveMotionBLur) {\r\n        if (!this.domBack) {\r\n          this.createBackBuffer();\r\n        }\r\n\r\n        this.ctxBack.globalCompositeOperation = 'copy';\r\n        this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\r\n      }\r\n\r\n      var domBack = this.domBack;\r\n\r\n      function doClear(x, y, width, height) {\r\n        ctx.clearRect(x, y, width, height);\r\n\r\n        if (clearColor && clearColor !== 'transparent') {\r\n          var clearColorGradientOrPattern = void 0;\r\n\r\n          if (isGradientObject(clearColor)) {\r\n            clearColorGradientOrPattern = clearColor.__canvasGradient || getCanvasGradient(ctx, clearColor, {\r\n              x: 0,\r\n              y: 0,\r\n              width: width,\r\n              height: height\r\n            });\r\n            clearColor.__canvasGradient = clearColorGradientOrPattern;\r\n          } else if (isPatternObject(clearColor)) {\r\n            clearColorGradientOrPattern = createCanvasPattern(ctx, clearColor, {\r\n              dirty: function () {\r\n                self.setUnpainted();\r\n\r\n                self.__painter.refresh();\r\n              }\r\n            });\r\n          }\r\n\r\n          ctx.save();\r\n          ctx.fillStyle = clearColorGradientOrPattern || clearColor;\r\n          ctx.fillRect(x, y, width, height);\r\n          ctx.restore();\r\n        }\r\n\r\n        if (haveMotionBLur) {\r\n          ctx.save();\r\n          ctx.globalAlpha = lastFrameAlpha;\r\n          ctx.drawImage(domBack, x, y, width, height);\r\n          ctx.restore();\r\n        }\r\n      }\r\n\r\n      if (!repaintRects || haveMotionBLur) {\r\n        doClear(0, 0, width, height);\r\n      } else if (repaintRects.length) {\r\n        each$1(repaintRects, function (rect) {\r\n          doClear(rect.x * dpr, rect.y * dpr, rect.width * dpr, rect.height * dpr);\r\n        });\r\n      }\r\n    };\r\n\r\n    return Layer;\r\n  }(Eventful);\r\n\r\n  var HOVER_LAYER_ZLEVEL = 1e5;\r\n  var CANVAS_ZLEVEL = 314159;\r\n  var EL_AFTER_INCREMENTAL_INC = 0.01;\r\n  var INCREMENTAL_INC = 0.001;\r\n\r\n  function parseInt10(val) {\r\n    return parseInt(val, 10);\r\n  }\r\n\r\n  function isLayerValid(layer) {\r\n    if (!layer) {\r\n      return false;\r\n    }\r\n\r\n    if (layer.__builtin__) {\r\n      return true;\r\n    }\r\n\r\n    if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function createRoot(width, height) {\r\n    var domRoot = document.createElement('div');\r\n    domRoot.style.cssText = ['position:relative', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\r\n    return domRoot;\r\n  }\r\n\r\n  var CanvasPainter = function () {\r\n    function CanvasPainter(root, storage, opts, id) {\r\n      this.type = 'canvas';\r\n      this._zlevelList = [];\r\n      this._prevDisplayList = [];\r\n      this._layers = {};\r\n      this._layerConfig = {};\r\n      this._needsManuallyCompositing = false;\r\n      this.type = 'canvas';\r\n      var singleCanvas = !root.nodeName || root.nodeName.toUpperCase() === 'CANVAS';\r\n      this._opts = opts = extend({}, opts || {});\r\n      this.dpr = opts.devicePixelRatio || devicePixelRatio;\r\n      this._singleCanvas = singleCanvas;\r\n      this.root = root;\r\n      var rootStyle = root.style;\r\n\r\n      if (rootStyle) {\r\n        rootStyle.webkitTapHighlightColor = 'transparent';\r\n        rootStyle.webkitUserSelect = 'none';\r\n        rootStyle.userSelect = 'none';\r\n        rootStyle['-webkit-touch-callout'] = 'none';\r\n        root.innerHTML = '';\r\n      }\r\n\r\n      this.storage = storage;\r\n      var zlevelList = this._zlevelList;\r\n      this._prevDisplayList = [];\r\n      var layers = this._layers;\r\n\r\n      if (!singleCanvas) {\r\n        this._width = this._getSize(0);\r\n        this._height = this._getSize(1);\r\n        var domRoot = this._domRoot = createRoot(this._width, this._height);\r\n        root.appendChild(domRoot);\r\n      } else {\r\n        var rootCanvas = root;\r\n        var width = rootCanvas.width;\r\n        var height = rootCanvas.height;\r\n\r\n        if (opts.width != null) {\r\n          width = opts.width;\r\n        }\r\n\r\n        if (opts.height != null) {\r\n          height = opts.height;\r\n        }\r\n\r\n        this.dpr = opts.devicePixelRatio || 1;\r\n        rootCanvas.width = width * this.dpr;\r\n        rootCanvas.height = height * this.dpr;\r\n        this._width = width;\r\n        this._height = height;\r\n        var mainLayer = new Layer(rootCanvas, this, this.dpr);\r\n        mainLayer.__builtin__ = true;\r\n        mainLayer.initContext();\r\n        layers[CANVAS_ZLEVEL] = mainLayer;\r\n        mainLayer.zlevel = CANVAS_ZLEVEL;\r\n        zlevelList.push(CANVAS_ZLEVEL);\r\n        this._domRoot = root;\r\n      }\r\n    }\r\n\r\n    CanvasPainter.prototype.getType = function () {\r\n      return 'canvas';\r\n    };\r\n\r\n    CanvasPainter.prototype.isSingleCanvas = function () {\r\n      return this._singleCanvas;\r\n    };\r\n\r\n    CanvasPainter.prototype.getViewportRoot = function () {\r\n      return this._domRoot;\r\n    };\r\n\r\n    CanvasPainter.prototype.getViewportRootOffset = function () {\r\n      var viewportRoot = this.getViewportRoot();\r\n\r\n      if (viewportRoot) {\r\n        return {\r\n          offsetLeft: viewportRoot.offsetLeft || 0,\r\n          offsetTop: viewportRoot.offsetTop || 0\r\n        };\r\n      }\r\n    };\r\n\r\n    CanvasPainter.prototype.refresh = function (paintAll) {\r\n      var list = this.storage.getDisplayList(true);\r\n      var prevList = this._prevDisplayList;\r\n      var zlevelList = this._zlevelList;\r\n      this._redrawId = Math.random();\r\n\r\n      this._paintList(list, prevList, paintAll, this._redrawId);\r\n\r\n      for (var i = 0; i < zlevelList.length; i++) {\r\n        var z = zlevelList[i];\r\n        var layer = this._layers[z];\r\n\r\n        if (!layer.__builtin__ && layer.refresh) {\r\n          var clearColor = i === 0 ? this._backgroundColor : null;\r\n          layer.refresh(clearColor);\r\n        }\r\n      }\r\n\r\n      if (this._opts.useDirtyRect) {\r\n        this._prevDisplayList = list.slice();\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    CanvasPainter.prototype.refreshHover = function () {\r\n      this._paintHoverList(this.storage.getDisplayList(false));\r\n    };\r\n\r\n    CanvasPainter.prototype._paintHoverList = function (list) {\r\n      var len = list.length;\r\n      var hoverLayer = this._hoverlayer;\r\n      hoverLayer && hoverLayer.clear();\r\n\r\n      if (!len) {\r\n        return;\r\n      }\r\n\r\n      var scope = {\r\n        inHover: true,\r\n        viewWidth: this._width,\r\n        viewHeight: this._height\r\n      };\r\n      var ctx;\r\n\r\n      for (var i = 0; i < len; i++) {\r\n        var el = list[i];\r\n\r\n        if (el.__inHover) {\r\n          if (!hoverLayer) {\r\n            hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\r\n          }\r\n\r\n          if (!ctx) {\r\n            ctx = hoverLayer.ctx;\r\n            ctx.save();\r\n          }\r\n\r\n          brush(ctx, el, scope, i === len - 1);\r\n        }\r\n      }\r\n\r\n      if (ctx) {\r\n        ctx.restore();\r\n      }\r\n    };\r\n\r\n    CanvasPainter.prototype.getHoverLayer = function () {\r\n      return this.getLayer(HOVER_LAYER_ZLEVEL);\r\n    };\r\n\r\n    CanvasPainter.prototype.paintOne = function (ctx, el) {\r\n      brushSingle(ctx, el);\r\n    };\r\n\r\n    CanvasPainter.prototype._paintList = function (list, prevList, paintAll, redrawId) {\r\n      if (this._redrawId !== redrawId) {\r\n        return;\r\n      }\r\n\r\n      paintAll = paintAll || false;\r\n\r\n      this._updateLayerStatus(list);\r\n\r\n      var _a = this._doPaintList(list, prevList, paintAll),\r\n          finished = _a.finished,\r\n          needsRefreshHover = _a.needsRefreshHover;\r\n\r\n      if (this._needsManuallyCompositing) {\r\n        this._compositeManually();\r\n      }\r\n\r\n      if (needsRefreshHover) {\r\n        this._paintHoverList(list);\r\n      }\r\n\r\n      if (!finished) {\r\n        var self_1 = this;\r\n        requestAnimationFrame$1(function () {\r\n          self_1._paintList(list, prevList, paintAll, redrawId);\r\n        });\r\n      } else {\r\n        this.eachLayer(function (layer) {\r\n          layer.afterBrush && layer.afterBrush();\r\n        });\r\n      }\r\n    };\r\n\r\n    CanvasPainter.prototype._compositeManually = function () {\r\n      var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\r\n      var width = this._domRoot.width;\r\n      var height = this._domRoot.height;\r\n      ctx.clearRect(0, 0, width, height);\r\n      this.eachBuiltinLayer(function (layer) {\r\n        if (layer.virtual) {\r\n          ctx.drawImage(layer.dom, 0, 0, width, height);\r\n        }\r\n      });\r\n    };\r\n\r\n    CanvasPainter.prototype._doPaintList = function (list, prevList, paintAll) {\r\n      var _this = this;\r\n\r\n      var layerList = [];\r\n      var useDirtyRect = this._opts.useDirtyRect;\r\n\r\n      for (var zi = 0; zi < this._zlevelList.length; zi++) {\r\n        var zlevel = this._zlevelList[zi];\r\n        var layer = this._layers[zlevel];\r\n\r\n        if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\r\n          layerList.push(layer);\r\n        }\r\n      }\r\n\r\n      var finished = true;\r\n      var needsRefreshHover = false;\r\n\r\n      var _loop_1 = function (k) {\r\n        var layer = layerList[k];\r\n        var ctx = layer.ctx;\r\n        var repaintRects = useDirtyRect && layer.createRepaintRects(list, prevList, this_1._width, this_1._height);\r\n        ctx.save();\r\n        var start = paintAll ? layer.__startIndex : layer.__drawIndex;\r\n        var useTimer = !paintAll && layer.incremental && Date.now;\r\n        var startTime = useTimer && Date.now();\r\n        var clearColor = layer.zlevel === this_1._zlevelList[0] ? this_1._backgroundColor : null;\r\n\r\n        if (layer.__startIndex === layer.__endIndex) {\r\n          layer.clear(false, clearColor, repaintRects);\r\n        } else if (start === layer.__startIndex) {\r\n          var firstEl = list[start];\r\n\r\n          if (!firstEl.incremental || !firstEl.notClear || paintAll) {\r\n            layer.clear(false, clearColor, repaintRects);\r\n          }\r\n        }\r\n\r\n        if (start === -1) {\r\n          console.error('For some unknown reason. drawIndex is -1');\r\n          start = layer.__startIndex;\r\n        }\r\n\r\n        var i;\r\n\r\n        var repaint = function (repaintRect) {\r\n          var scope = {\r\n            inHover: false,\r\n            allClipped: false,\r\n            prevEl: null,\r\n            viewWidth: _this._width,\r\n            viewHeight: _this._height\r\n          };\r\n\r\n          for (i = start; i < layer.__endIndex; i++) {\r\n            var el = list[i];\r\n\r\n            if (el.__inHover) {\r\n              needsRefreshHover = true;\r\n            }\r\n\r\n            _this._doPaintEl(el, layer, useDirtyRect, repaintRect, scope, i === layer.__endIndex - 1);\r\n\r\n            if (useTimer) {\r\n              var dTime = Date.now() - startTime;\r\n\r\n              if (dTime > 15) {\r\n                break;\r\n              }\r\n            }\r\n          }\r\n\r\n          if (scope.prevElClipPaths) {\r\n            ctx.restore();\r\n          }\r\n        };\r\n\r\n        if (repaintRects) {\r\n          if (repaintRects.length === 0) {\r\n            i = layer.__endIndex;\r\n          } else {\r\n            var dpr = this_1.dpr;\r\n\r\n            for (var r = 0; r < repaintRects.length; ++r) {\r\n              var rect = repaintRects[r];\r\n              ctx.save();\r\n              ctx.beginPath();\r\n              ctx.rect(rect.x * dpr, rect.y * dpr, rect.width * dpr, rect.height * dpr);\r\n              ctx.clip();\r\n              repaint(rect);\r\n              ctx.restore();\r\n            }\r\n          }\r\n        } else {\r\n          ctx.save();\r\n          repaint();\r\n          ctx.restore();\r\n        }\r\n\r\n        layer.__drawIndex = i;\r\n\r\n        if (layer.__drawIndex < layer.__endIndex) {\r\n          finished = false;\r\n        }\r\n      };\r\n\r\n      var this_1 = this;\r\n\r\n      for (var k = 0; k < layerList.length; k++) {\r\n        _loop_1(k);\r\n      }\r\n\r\n      if (env.wxa) {\r\n        each$1(this._layers, function (layer) {\r\n          if (layer && layer.ctx && layer.ctx.draw) {\r\n            layer.ctx.draw();\r\n          }\r\n        });\r\n      }\r\n\r\n      return {\r\n        finished: finished,\r\n        needsRefreshHover: needsRefreshHover\r\n      };\r\n    };\r\n\r\n    CanvasPainter.prototype._doPaintEl = function (el, currentLayer, useDirtyRect, repaintRect, scope, isLast) {\r\n      var ctx = currentLayer.ctx;\r\n\r\n      if (useDirtyRect) {\r\n        var paintRect = el.getPaintRect();\r\n\r\n        if (!repaintRect || paintRect && paintRect.intersect(repaintRect)) {\r\n          brush(ctx, el, scope, isLast);\r\n          el.setPrevPaintRect(paintRect);\r\n        }\r\n      } else {\r\n        brush(ctx, el, scope, isLast);\r\n      }\r\n    };\r\n\r\n    CanvasPainter.prototype.getLayer = function (zlevel, virtual) {\r\n      if (this._singleCanvas && !this._needsManuallyCompositing) {\r\n        zlevel = CANVAS_ZLEVEL;\r\n      }\r\n\r\n      var layer = this._layers[zlevel];\r\n\r\n      if (!layer) {\r\n        layer = new Layer('zr_' + zlevel, this, this.dpr);\r\n        layer.zlevel = zlevel;\r\n        layer.__builtin__ = true;\r\n\r\n        if (this._layerConfig[zlevel]) {\r\n          merge(layer, this._layerConfig[zlevel], true);\r\n        } else if (this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC]) {\r\n          merge(layer, this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC], true);\r\n        }\r\n\r\n        if (virtual) {\r\n          layer.virtual = virtual;\r\n        }\r\n\r\n        this.insertLayer(zlevel, layer);\r\n        layer.initContext();\r\n      }\r\n\r\n      return layer;\r\n    };\r\n\r\n    CanvasPainter.prototype.insertLayer = function (zlevel, layer) {\r\n      var layersMap = this._layers;\r\n      var zlevelList = this._zlevelList;\r\n      var len = zlevelList.length;\r\n      var domRoot = this._domRoot;\r\n      var prevLayer = null;\r\n      var i = -1;\r\n\r\n      if (layersMap[zlevel]) {\r\n        logError('ZLevel ' + zlevel + ' has been used already');\r\n        return;\r\n      }\r\n\r\n      if (!isLayerValid(layer)) {\r\n        logError('Layer of zlevel ' + zlevel + ' is not valid');\r\n        return;\r\n      }\r\n\r\n      if (len > 0 && zlevel > zlevelList[0]) {\r\n        for (i = 0; i < len - 1; i++) {\r\n          if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\r\n            break;\r\n          }\r\n        }\r\n\r\n        prevLayer = layersMap[zlevelList[i]];\r\n      }\r\n\r\n      zlevelList.splice(i + 1, 0, zlevel);\r\n      layersMap[zlevel] = layer;\r\n\r\n      if (!layer.virtual) {\r\n        if (prevLayer) {\r\n          var prevDom = prevLayer.dom;\r\n\r\n          if (prevDom.nextSibling) {\r\n            domRoot.insertBefore(layer.dom, prevDom.nextSibling);\r\n          } else {\r\n            domRoot.appendChild(layer.dom);\r\n          }\r\n        } else {\r\n          if (domRoot.firstChild) {\r\n            domRoot.insertBefore(layer.dom, domRoot.firstChild);\r\n          } else {\r\n            domRoot.appendChild(layer.dom);\r\n          }\r\n        }\r\n      }\r\n\r\n      layer.__painter = this;\r\n    };\r\n\r\n    CanvasPainter.prototype.eachLayer = function (cb, context) {\r\n      var zlevelList = this._zlevelList;\r\n\r\n      for (var i = 0; i < zlevelList.length; i++) {\r\n        var z = zlevelList[i];\r\n        cb.call(context, this._layers[z], z);\r\n      }\r\n    };\r\n\r\n    CanvasPainter.prototype.eachBuiltinLayer = function (cb, context) {\r\n      var zlevelList = this._zlevelList;\r\n\r\n      for (var i = 0; i < zlevelList.length; i++) {\r\n        var z = zlevelList[i];\r\n        var layer = this._layers[z];\r\n\r\n        if (layer.__builtin__) {\r\n          cb.call(context, layer, z);\r\n        }\r\n      }\r\n    };\r\n\r\n    CanvasPainter.prototype.eachOtherLayer = function (cb, context) {\r\n      var zlevelList = this._zlevelList;\r\n\r\n      for (var i = 0; i < zlevelList.length; i++) {\r\n        var z = zlevelList[i];\r\n        var layer = this._layers[z];\r\n\r\n        if (!layer.__builtin__) {\r\n          cb.call(context, layer, z);\r\n        }\r\n      }\r\n    };\r\n\r\n    CanvasPainter.prototype.getLayers = function () {\r\n      return this._layers;\r\n    };\r\n\r\n    CanvasPainter.prototype._updateLayerStatus = function (list) {\r\n      this.eachBuiltinLayer(function (layer, z) {\r\n        layer.__dirty = layer.__used = false;\r\n      });\r\n\r\n      function updatePrevLayer(idx) {\r\n        if (prevLayer) {\r\n          if (prevLayer.__endIndex !== idx) {\r\n            prevLayer.__dirty = true;\r\n          }\r\n\r\n          prevLayer.__endIndex = idx;\r\n        }\r\n      }\r\n\r\n      if (this._singleCanvas) {\r\n        for (var i_1 = 1; i_1 < list.length; i_1++) {\r\n          var el = list[i_1];\r\n\r\n          if (el.zlevel !== list[i_1 - 1].zlevel || el.incremental) {\r\n            this._needsManuallyCompositing = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      var prevLayer = null;\r\n      var incrementalLayerCount = 0;\r\n      var prevZlevel;\r\n      var i;\r\n\r\n      for (i = 0; i < list.length; i++) {\r\n        var el = list[i];\r\n        var zlevel = el.zlevel;\r\n        var layer = void 0;\r\n\r\n        if (prevZlevel !== zlevel) {\r\n          prevZlevel = zlevel;\r\n          incrementalLayerCount = 0;\r\n        }\r\n\r\n        if (el.incremental) {\r\n          layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\r\n          layer.incremental = true;\r\n          incrementalLayerCount = 1;\r\n        } else {\r\n          layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\r\n        }\r\n\r\n        if (!layer.__builtin__) {\r\n          logError('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\r\n        }\r\n\r\n        if (layer !== prevLayer) {\r\n          layer.__used = true;\r\n\r\n          if (layer.__startIndex !== i) {\r\n            layer.__dirty = true;\r\n          }\r\n\r\n          layer.__startIndex = i;\r\n\r\n          if (!layer.incremental) {\r\n            layer.__drawIndex = i;\r\n          } else {\r\n            layer.__drawIndex = -1;\r\n          }\r\n\r\n          updatePrevLayer(i);\r\n          prevLayer = layer;\r\n        }\r\n\r\n        if (el.__dirty & Element.REDARAW_BIT && !el.__inHover) {\r\n          layer.__dirty = true;\r\n\r\n          if (layer.incremental && layer.__drawIndex < 0) {\r\n            layer.__drawIndex = i;\r\n          }\r\n        }\r\n      }\r\n\r\n      updatePrevLayer(i);\r\n      this.eachBuiltinLayer(function (layer, z) {\r\n        if (!layer.__used && layer.getElementCount() > 0) {\r\n          layer.__dirty = true;\r\n          layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\r\n        }\r\n\r\n        if (layer.__dirty && layer.__drawIndex < 0) {\r\n          layer.__drawIndex = layer.__startIndex;\r\n        }\r\n      });\r\n    };\r\n\r\n    CanvasPainter.prototype.clear = function () {\r\n      this.eachBuiltinLayer(this._clearLayer);\r\n      return this;\r\n    };\r\n\r\n    CanvasPainter.prototype._clearLayer = function (layer) {\r\n      layer.clear();\r\n    };\r\n\r\n    CanvasPainter.prototype.setBackgroundColor = function (backgroundColor) {\r\n      this._backgroundColor = backgroundColor;\r\n      each$1(this._layers, function (layer) {\r\n        layer.setUnpainted();\r\n      });\r\n    };\r\n\r\n    CanvasPainter.prototype.configLayer = function (zlevel, config) {\r\n      if (config) {\r\n        var layerConfig = this._layerConfig;\r\n\r\n        if (!layerConfig[zlevel]) {\r\n          layerConfig[zlevel] = config;\r\n        } else {\r\n          merge(layerConfig[zlevel], config, true);\r\n        }\r\n\r\n        for (var i = 0; i < this._zlevelList.length; i++) {\r\n          var _zlevel = this._zlevelList[i];\r\n\r\n          if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\r\n            var layer = this._layers[_zlevel];\r\n            merge(layer, layerConfig[zlevel], true);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    CanvasPainter.prototype.delLayer = function (zlevel) {\r\n      var layers = this._layers;\r\n      var zlevelList = this._zlevelList;\r\n      var layer = layers[zlevel];\r\n\r\n      if (!layer) {\r\n        return;\r\n      }\r\n\r\n      layer.dom.parentNode.removeChild(layer.dom);\r\n      delete layers[zlevel];\r\n      zlevelList.splice(indexOf$1(zlevelList, zlevel), 1);\r\n    };\r\n\r\n    CanvasPainter.prototype.resize = function (width, height) {\r\n      if (!this._domRoot.style) {\r\n        if (width == null || height == null) {\r\n          return;\r\n        }\r\n\r\n        this._width = width;\r\n        this._height = height;\r\n        this.getLayer(CANVAS_ZLEVEL).resize(width, height);\r\n      } else {\r\n        var domRoot = this._domRoot;\r\n        domRoot.style.display = 'none';\r\n        var opts = this._opts;\r\n        width != null && (opts.width = width);\r\n        height != null && (opts.height = height);\r\n        width = this._getSize(0);\r\n        height = this._getSize(1);\r\n        domRoot.style.display = '';\r\n\r\n        if (this._width !== width || height !== this._height) {\r\n          domRoot.style.width = width + 'px';\r\n          domRoot.style.height = height + 'px';\r\n\r\n          for (var id in this._layers) {\r\n            if (this._layers.hasOwnProperty(id)) {\r\n              this._layers[id].resize(width, height);\r\n            }\r\n          }\r\n\r\n          this.refresh(true);\r\n        }\r\n\r\n        this._width = width;\r\n        this._height = height;\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    CanvasPainter.prototype.clearLayer = function (zlevel) {\r\n      var layer = this._layers[zlevel];\r\n\r\n      if (layer) {\r\n        layer.clear();\r\n      }\r\n    };\r\n\r\n    CanvasPainter.prototype.dispose = function () {\r\n      this.root.innerHTML = '';\r\n      this.root = this.storage = this._domRoot = this._layers = null;\r\n    };\r\n\r\n    CanvasPainter.prototype.getRenderedCanvas = function (opts) {\r\n      opts = opts || {};\r\n\r\n      if (this._singleCanvas && !this._compositeManually) {\r\n        return this._layers[CANVAS_ZLEVEL].dom;\r\n      }\r\n\r\n      var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\r\n      imageLayer.initContext();\r\n      imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\r\n      var ctx = imageLayer.ctx;\r\n\r\n      if (opts.pixelRatio <= this.dpr) {\r\n        this.refresh();\r\n        var width_1 = imageLayer.dom.width;\r\n        var height_1 = imageLayer.dom.height;\r\n        this.eachLayer(function (layer) {\r\n          if (layer.__builtin__) {\r\n            ctx.drawImage(layer.dom, 0, 0, width_1, height_1);\r\n          } else if (layer.renderToCanvas) {\r\n            ctx.save();\r\n            layer.renderToCanvas(ctx);\r\n            ctx.restore();\r\n          }\r\n        });\r\n      } else {\r\n        var scope = {\r\n          inHover: false,\r\n          viewWidth: this._width,\r\n          viewHeight: this._height\r\n        };\r\n        var displayList = this.storage.getDisplayList(true);\r\n\r\n        for (var i = 0, len = displayList.length; i < len; i++) {\r\n          var el = displayList[i];\r\n          brush(ctx, el, scope, i === len - 1);\r\n        }\r\n      }\r\n\r\n      return imageLayer.dom;\r\n    };\r\n\r\n    CanvasPainter.prototype.getWidth = function () {\r\n      return this._width;\r\n    };\r\n\r\n    CanvasPainter.prototype.getHeight = function () {\r\n      return this._height;\r\n    };\r\n\r\n    CanvasPainter.prototype._getSize = function (whIdx) {\r\n      var opts = this._opts;\r\n      var wh = ['width', 'height'][whIdx];\r\n      var cwh = ['clientWidth', 'clientHeight'][whIdx];\r\n      var plt = ['paddingLeft', 'paddingTop'][whIdx];\r\n      var prb = ['paddingRight', 'paddingBottom'][whIdx];\r\n\r\n      if (opts[wh] != null && opts[wh] !== 'auto') {\r\n        return parseFloat(opts[wh]);\r\n      }\r\n\r\n      var root = this.root;\r\n      var stl = document.defaultView.getComputedStyle(root);\r\n      return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\r\n    };\r\n\r\n    CanvasPainter.prototype.pathToImage = function (path, dpr) {\r\n      dpr = dpr || this.dpr;\r\n      var canvas = document.createElement('canvas');\r\n      var ctx = canvas.getContext('2d');\r\n      var rect = path.getBoundingRect();\r\n      var style = path.style;\r\n      var shadowBlurSize = style.shadowBlur * dpr;\r\n      var shadowOffsetX = style.shadowOffsetX * dpr;\r\n      var shadowOffsetY = style.shadowOffsetY * dpr;\r\n      var lineWidth = path.hasStroke() ? style.lineWidth : 0;\r\n      var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\r\n      var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\r\n      var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\r\n      var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\r\n      var width = rect.width + leftMargin + rightMargin;\r\n      var height = rect.height + topMargin + bottomMargin;\r\n      canvas.width = width * dpr;\r\n      canvas.height = height * dpr;\r\n      ctx.scale(dpr, dpr);\r\n      ctx.clearRect(0, 0, width, height);\r\n      ctx.dpr = dpr;\r\n      var pathTransform = {\r\n        x: path.x,\r\n        y: path.y,\r\n        scaleX: path.scaleX,\r\n        scaleY: path.scaleY,\r\n        rotation: path.rotation,\r\n        originX: path.originX,\r\n        originY: path.originY\r\n      };\r\n      path.x = leftMargin - rect.x;\r\n      path.y = topMargin - rect.y;\r\n      path.rotation = 0;\r\n      path.scaleX = 1;\r\n      path.scaleY = 1;\r\n      path.updateTransform();\r\n\r\n      if (path) {\r\n        brush(ctx, path, {\r\n          inHover: false,\r\n          viewWidth: this._width,\r\n          viewHeight: this._height\r\n        }, true);\r\n      }\r\n\r\n      var imgShape = new ZRImage({\r\n        style: {\r\n          x: 0,\r\n          y: 0,\r\n          image: canvas\r\n        }\r\n      });\r\n      extend(path, pathTransform);\r\n      return imgShape;\r\n    };\r\n\r\n    return CanvasPainter;\r\n  }();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function install(registers) {\r\n    registers.registerPainter('canvas', CanvasPainter);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * This module is imported by echarts directly.\r\n   *\r\n   * Notice:\r\n   * Always keep this file exists for backward compatibility.\r\n   * Because before 4.1.0, dataset is an optional component,\r\n   * some users may import this module manually.\r\n   */\r\n\r\n\r\n  var DatasetModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(DatasetModel, _super);\r\n\r\n    function DatasetModel() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = 'dataset';\r\n      return _this;\r\n    }\r\n\r\n    DatasetModel.prototype.init = function (option, parentModel, ecModel) {\r\n      _super.prototype.init.call(this, option, parentModel, ecModel);\r\n\r\n      this._sourceManager = new SourceManager(this);\r\n      disableTransformOptionMerge(this);\r\n    };\r\n\r\n    DatasetModel.prototype.mergeOption = function (newOption, ecModel) {\r\n      _super.prototype.mergeOption.call(this, newOption, ecModel);\r\n\r\n      disableTransformOptionMerge(this);\r\n    };\r\n\r\n    DatasetModel.prototype.optionUpdated = function () {\r\n      this._sourceManager.dirty();\r\n    };\r\n\r\n    DatasetModel.prototype.getSourceManager = function () {\r\n      return this._sourceManager;\r\n    };\r\n\r\n    DatasetModel.type = 'dataset';\r\n    DatasetModel.defaultOption = {\r\n      seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN\r\n    };\r\n    return DatasetModel;\r\n  }(ComponentModel);\r\n\r\n  var DatasetView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(DatasetView, _super);\r\n\r\n    function DatasetView() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = 'dataset';\r\n      return _this;\r\n    }\r\n\r\n    DatasetView.type = 'dataset';\r\n    return DatasetView;\r\n  }(ComponentView);\r\n\r\n  function install$1(registers) {\r\n    registers.registerComponentModel(DatasetModel);\r\n    registers.registerComponentView(DatasetView);\r\n  }\r\n\r\n  use([install, install$1]); // Compatitable with the following code\r\n  // import echarts from 'echarts/lib/echarts'\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  function categoryFilter(ecModel) {\r\n    var legendModels = ecModel.findComponents({\r\n      mainType: 'legend'\r\n    });\r\n\r\n    if (!legendModels || !legendModels.length) {\r\n      return;\r\n    }\r\n\r\n    ecModel.eachSeriesByType('graph', function (graphSeries) {\r\n      var categoriesData = graphSeries.getCategoriesData();\r\n      var graph = graphSeries.getGraph();\r\n      var data = graph.data;\r\n      var categoryNames = categoriesData.mapArray(categoriesData.getName);\r\n      data.filterSelf(function (idx) {\r\n        var model = data.getItemModel(idx);\r\n        var category = model.getShallow('category');\r\n\r\n        if (category != null) {\r\n          if (typeof category === 'number') {\r\n            category = categoryNames[category];\r\n          } // If in any legend component the status is not selected.\r\n\r\n\r\n          for (var i = 0; i < legendModels.length; i++) {\r\n            if (!legendModels[i].isSelected(category)) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n\r\n        return true;\r\n      });\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function categoryVisual(ecModel) {\r\n    var paletteScope = {};\r\n    ecModel.eachSeriesByType('graph', function (seriesModel) {\r\n      var categoriesData = seriesModel.getCategoriesData();\r\n      var data = seriesModel.getData();\r\n      var categoryNameIdxMap = {};\r\n      categoriesData.each(function (idx) {\r\n        var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\r\n\r\n        categoryNameIdxMap['ec-' + name] = idx;\r\n        var itemModel = categoriesData.getItemModel(idx);\r\n        var style = itemModel.getModel('itemStyle').getItemStyle();\r\n\r\n        if (!style.fill) {\r\n          // Get color from palette.\r\n          style.fill = seriesModel.getColorFromPalette(name, paletteScope);\r\n        }\r\n\r\n        categoriesData.setItemVisual(idx, 'style', style);\r\n        var symbolVisualList = ['symbol', 'symbolSize', 'symbolKeepAspect'];\r\n\r\n        for (var i = 0; i < symbolVisualList.length; i++) {\r\n          var symbolVisual = itemModel.getShallow(symbolVisualList[i], true);\r\n\r\n          if (symbolVisual != null) {\r\n            categoriesData.setItemVisual(idx, symbolVisualList[i], symbolVisual);\r\n          }\r\n        }\r\n      }); // Assign category color to visual\r\n\r\n      if (categoriesData.count()) {\r\n        data.each(function (idx) {\r\n          var model = data.getItemModel(idx);\r\n          var categoryIdx = model.getShallow('category');\r\n\r\n          if (categoryIdx != null) {\r\n            if (typeof categoryIdx === 'string') {\r\n              categoryIdx = categoryNameIdxMap['ec-' + categoryIdx];\r\n            }\r\n\r\n            var categoryStyle = categoriesData.getItemVisual(categoryIdx, 'style');\r\n            var style = data.ensureUniqueItemVisual(idx, 'style');\r\n            extend(style, categoryStyle);\r\n            var visualList = ['symbol', 'symbolSize', 'symbolKeepAspect'];\r\n\r\n            for (var i = 0; i < visualList.length; i++) {\r\n              data.setItemVisual(idx, visualList[i], categoriesData.getItemVisual(categoryIdx, visualList[i]));\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function normalize$2(a) {\r\n    if (!(a instanceof Array)) {\r\n      a = [a, a];\r\n    }\r\n\r\n    return a;\r\n  }\r\n\r\n  function graphEdgeVisual(ecModel) {\r\n    ecModel.eachSeriesByType('graph', function (seriesModel) {\r\n      var graph = seriesModel.getGraph();\r\n      var edgeData = seriesModel.getEdgeData();\r\n      var symbolType = normalize$2(seriesModel.get('edgeSymbol'));\r\n      var symbolSize = normalize$2(seriesModel.get('edgeSymbolSize')); // const colorQuery = ['lineStyle', 'color'] as const;\r\n      // const opacityQuery = ['lineStyle', 'opacity'] as const;\r\n\r\n      edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\r\n      edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\r\n      edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\r\n      edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\r\n      edgeData.setVisual('style', seriesModel.getModel('lineStyle').getLineStyle());\r\n      edgeData.each(function (idx) {\r\n        var itemModel = edgeData.getItemModel(idx);\r\n        var edge = graph.getEdgeByIndex(idx);\r\n        var symbolType = normalize$2(itemModel.getShallow('symbol', true));\r\n        var symbolSize = normalize$2(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\r\n\r\n        var style = itemModel.getModel('lineStyle').getLineStyle();\r\n        var existsStyle = edgeData.ensureUniqueItemVisual(idx, 'style');\r\n        extend(existsStyle, style);\r\n\r\n        switch (existsStyle.stroke) {\r\n          case 'source':\r\n            {\r\n              var nodeStyle = edge.node1.getVisual('style');\r\n              existsStyle.stroke = nodeStyle && nodeStyle.fill;\r\n              break;\r\n            }\r\n\r\n          case 'target':\r\n            {\r\n              var nodeStyle = edge.node2.getVisual('style');\r\n              existsStyle.stroke = nodeStyle && nodeStyle.fill;\r\n              break;\r\n            }\r\n        }\r\n\r\n        symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\r\n        symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\r\n        symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\r\n        symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\r\n      });\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n  // @ts-nocheck\r\n\r\n\r\n  var KEY_DELIMITER = '-->';\r\n  /**\r\n   * params handler\r\n   * @param {module:echarts/model/SeriesModel} seriesModel\r\n   * @returns {*}\r\n   */\r\n\r\n  var getAutoCurvenessParams = function (seriesModel) {\r\n    return seriesModel.get('autoCurveness') || null;\r\n  };\r\n  /**\r\n   * Generate a list of edge curvatures, 20 is the default\r\n   * @param {module:echarts/model/SeriesModel} seriesModel\r\n   * @param {number} appendLength\r\n   * @return  20 => [0, -0.2, 0.2, -0.4, 0.4, -0.6, 0.6, -0.8, 0.8, -1, 1, -1.2, 1.2, -1.4, 1.4, -1.6, 1.6, -1.8, 1.8, -2]\r\n   */\r\n\r\n\r\n  var createCurveness = function (seriesModel, appendLength) {\r\n    var autoCurvenessParmas = getAutoCurvenessParams(seriesModel);\r\n    var length = 20;\r\n    var curvenessList = []; // handler the function set\r\n\r\n    if (typeof autoCurvenessParmas === 'number') {\r\n      length = autoCurvenessParmas;\r\n    } else if (isArray(autoCurvenessParmas)) {\r\n      seriesModel.__curvenessList = autoCurvenessParmas;\r\n      return;\r\n    } // append length\r\n\r\n\r\n    if (appendLength > length) {\r\n      length = appendLength;\r\n    } // make sure the length is even\r\n\r\n\r\n    var len = length % 2 ? length + 2 : length + 3;\r\n    curvenessList = [];\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      curvenessList.push((i % 2 ? i + 1 : i) / 10 * (i % 2 ? -1 : 1));\r\n    }\r\n\r\n    seriesModel.__curvenessList = curvenessList;\r\n  };\r\n  /**\r\n   * Create different cache key data in the positive and negative directions, in order to set the curvature later\r\n   * @param {number|string|module:echarts/data/Graph.Node} n1\r\n   * @param {number|string|module:echarts/data/Graph.Node} n2\r\n   * @param {module:echarts/model/SeriesModel} seriesModel\r\n   * @returns {string} key\r\n   */\r\n\r\n\r\n  var getKeyOfEdges = function (n1, n2, seriesModel) {\r\n    var source = [n1.id, n1.dataIndex].join('.');\r\n    var target = [n2.id, n2.dataIndex].join('.');\r\n    return [seriesModel.uid, source, target].join(KEY_DELIMITER);\r\n  };\r\n  /**\r\n   * get opposite key\r\n   * @param {string} key\r\n   * @returns {string}\r\n   */\r\n\r\n\r\n  var getOppositeKey = function (key) {\r\n    var keys$$1 = key.split(KEY_DELIMITER);\r\n    return [keys$$1[0], keys$$1[2], keys$$1[1]].join(KEY_DELIMITER);\r\n  };\r\n  /**\r\n   * get edgeMap with key\r\n   * @param edge\r\n   * @param {module:echarts/model/SeriesModel} seriesModel\r\n   */\r\n\r\n\r\n  var getEdgeFromMap = function (edge, seriesModel) {\r\n    var key = getKeyOfEdges(edge.node1, edge.node2, seriesModel);\r\n    return seriesModel.__edgeMap[key];\r\n  };\r\n  /**\r\n   * calculate all cases total length\r\n   * @param edge\r\n   * @param seriesModel\r\n   * @returns {number}\r\n   */\r\n\r\n\r\n  var getTotalLengthBetweenNodes = function (edge, seriesModel) {\r\n    var len = getEdgeMapLengthWithKey(getKeyOfEdges(edge.node1, edge.node2, seriesModel), seriesModel);\r\n    var lenV = getEdgeMapLengthWithKey(getKeyOfEdges(edge.node2, edge.node1, seriesModel), seriesModel);\r\n    return len + lenV;\r\n  };\r\n  /**\r\n   *\r\n   * @param key\r\n   */\r\n\r\n\r\n  var getEdgeMapLengthWithKey = function (key, seriesModel) {\r\n    var edgeMap = seriesModel.__edgeMap;\r\n    return edgeMap[key] ? edgeMap[key].length : 0;\r\n  };\r\n  /**\r\n   * Count the number of edges between the same two points, used to obtain the curvature table and the parity of the edge\r\n   * @see /graph/GraphSeries.js@getInitialData\r\n   * @param {module:echarts/model/SeriesModel} seriesModel\r\n   */\r\n\r\n\r\n  function initCurvenessList(seriesModel) {\r\n    if (!getAutoCurvenessParams(seriesModel)) {\r\n      return;\r\n    }\r\n\r\n    seriesModel.__curvenessList = [];\r\n    seriesModel.__edgeMap = {}; // calc the array of curveness List\r\n\r\n    createCurveness(seriesModel);\r\n  }\r\n  /**\r\n   * set edgeMap with key\r\n   * @param {number|string|module:echarts/data/Graph.Node} n1\r\n   * @param {number|string|module:echarts/data/Graph.Node} n2\r\n   * @param {module:echarts/model/SeriesModel} seriesModel\r\n   * @param {number} index\r\n   */\r\n\r\n\r\n  function createEdgeMapForCurveness(n1, n2, seriesModel, index) {\r\n    if (!getAutoCurvenessParams(seriesModel)) {\r\n      return;\r\n    }\r\n\r\n    var key = getKeyOfEdges(n1, n2, seriesModel);\r\n    var edgeMap = seriesModel.__edgeMap;\r\n    var oppositeEdges = edgeMap[getOppositeKey(key)]; // set direction\r\n\r\n    if (edgeMap[key] && !oppositeEdges) {\r\n      edgeMap[key].isForward = true;\r\n    } else if (oppositeEdges && edgeMap[key]) {\r\n      oppositeEdges.isForward = true;\r\n      edgeMap[key].isForward = false;\r\n    }\r\n\r\n    edgeMap[key] = edgeMap[key] || [];\r\n    edgeMap[key].push(index);\r\n  }\r\n  /**\r\n   * get curvature for edge\r\n   * @param edge\r\n   * @param {module:echarts/model/SeriesModel} seriesModel\r\n   * @param index\r\n   */\r\n\r\n\r\n  function getCurvenessForEdge(edge, seriesModel, index, needReverse) {\r\n    var autoCurvenessParams = getAutoCurvenessParams(seriesModel);\r\n    var isArrayParam = isArray(autoCurvenessParams);\r\n\r\n    if (!autoCurvenessParams) {\r\n      return null;\r\n    }\r\n\r\n    var edgeArray = getEdgeFromMap(edge, seriesModel);\r\n\r\n    if (!edgeArray) {\r\n      return null;\r\n    }\r\n\r\n    var edgeIndex = -1;\r\n\r\n    for (var i = 0; i < edgeArray.length; i++) {\r\n      if (edgeArray[i] === index) {\r\n        edgeIndex = i;\r\n        break;\r\n      }\r\n    } // if totalLen is Longer createCurveness\r\n\r\n\r\n    var totalLen = getTotalLengthBetweenNodes(edge, seriesModel);\r\n    createCurveness(seriesModel, totalLen);\r\n    edge.lineStyle = edge.lineStyle || {}; // if is opposite edge, must set curvenss to opposite number\r\n\r\n    var curKey = getKeyOfEdges(edge.node1, edge.node2, seriesModel);\r\n    var curvenessList = seriesModel.__curvenessList; // if pass array no need parity\r\n\r\n    var parityCorrection = isArrayParam ? 0 : totalLen % 2 ? 0 : 1;\r\n\r\n    if (!edgeArray.isForward) {\r\n      // the opposite edge show outside\r\n      var oppositeKey = getOppositeKey(curKey);\r\n      var len = getEdgeMapLengthWithKey(oppositeKey, seriesModel);\r\n      var resValue = curvenessList[edgeIndex + len + parityCorrection]; // isNeedReverse, simple, force type need reverse the curveness in the junction of the forword and the opposite\r\n\r\n      if (needReverse) {\r\n        // set as array may make the parity handle with the len of opposite\r\n        if (isArrayParam) {\r\n          if (autoCurvenessParams && autoCurvenessParams[0] === 0) {\r\n            return (len + parityCorrection) % 2 ? resValue : -resValue;\r\n          } else {\r\n            return ((len % 2 ? 0 : 1) + parityCorrection) % 2 ? resValue : -resValue;\r\n          }\r\n        } else {\r\n          return (len + parityCorrection) % 2 ? resValue : -resValue;\r\n        }\r\n      } else {\r\n        return curvenessList[edgeIndex + len + parityCorrection];\r\n      }\r\n    } else {\r\n      return curvenessList[parityCorrection + edgeIndex];\r\n    }\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function simpleLayout(seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (coordSys && coordSys.type !== 'view') {\r\n      return;\r\n    }\r\n\r\n    var graph = seriesModel.getGraph();\r\n    graph.eachNode(function (node) {\r\n      var model = node.getModel();\r\n      node.setLayout([+model.get('x'), +model.get('y')]);\r\n    });\r\n    simpleLayoutEdge(graph, seriesModel);\r\n  }\r\n\r\n  function simpleLayoutEdge(graph, seriesModel) {\r\n    graph.eachEdge(function (edge, index) {\r\n      var curveness = retrieve3(edge.getModel().get(['lineStyle', 'curveness']), -getCurvenessForEdge(edge, seriesModel, index, true), 0);\r\n      var p1 = clone$1(edge.node1.getLayout());\r\n      var p2 = clone$1(edge.node2.getLayout());\r\n      var points = [p1, p2];\r\n\r\n      if (+curveness) {\r\n        points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\r\n      }\r\n\r\n      edge.setLayout(points);\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function graphSimpleLayout(ecModel, api) {\r\n    ecModel.eachSeriesByType('graph', function (seriesModel) {\r\n      var layout = seriesModel.get('layout');\r\n      var coordSys = seriesModel.coordinateSystem;\r\n\r\n      if (coordSys && coordSys.type !== 'view') {\r\n        var data_1 = seriesModel.getData();\r\n        var dimensions_1 = [];\r\n        each$1(coordSys.dimensions, function (coordDim) {\r\n          dimensions_1 = dimensions_1.concat(data_1.mapDimensionsAll(coordDim));\r\n        });\r\n\r\n        for (var dataIndex = 0; dataIndex < data_1.count(); dataIndex++) {\r\n          var value = [];\r\n          var hasValue = false;\r\n\r\n          for (var i = 0; i < dimensions_1.length; i++) {\r\n            var val = data_1.get(dimensions_1[i], dataIndex);\r\n\r\n            if (!isNaN(val)) {\r\n              hasValue = true;\r\n            }\r\n\r\n            value.push(val);\r\n          }\r\n\r\n          if (hasValue) {\r\n            data_1.setItemLayout(dataIndex, coordSys.dataToPoint(value));\r\n          } else {\r\n            // Also {Array.<number>}, not undefined to avoid if...else... statement\r\n            data_1.setItemLayout(dataIndex, [NaN, NaN]);\r\n          }\r\n        }\r\n\r\n        simpleLayoutEdge(data_1.graph, seriesModel);\r\n      } else if (!layout || layout === 'none') {\r\n        simpleLayout(seriesModel);\r\n      }\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function getNodeGlobalScale(seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (coordSys.type !== 'view') {\r\n      return 1;\r\n    }\r\n\r\n    var nodeScaleRatio = seriesModel.option.nodeScaleRatio;\r\n    var groupZoom = coordSys.scaleX; // Scale node when zoom changes\r\n\r\n    var roamZoom = coordSys.getZoom();\r\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\r\n    return nodeScale / groupZoom;\r\n  }\r\n\r\n  function getSymbolSize(node) {\r\n    var symbolSize = node.getVisual('symbolSize');\r\n\r\n    if (symbolSize instanceof Array) {\r\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\r\n    }\r\n\r\n    return +symbolSize;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var PI$4 = Math.PI;\r\n  var _symbolRadiansHalf = [];\r\n  /**\r\n   * `basedOn` can be:\r\n   * 'value':\r\n   *     This layout is not accurate and have same bad case. For example,\r\n   *     if the min value is very smaller than the max value, the nodes\r\n   *     with the min value probably overlap even though there is enough\r\n   *     space to layout them. So we only use this approach in the as the\r\n   *     init layout of the force layout.\r\n   *     FIXME\r\n   *     Probably we do not need this method any more but use\r\n   *     `basedOn: 'symbolSize'` in force layout if\r\n   *     delay its init operations to GraphView.\r\n   * 'symbolSize':\r\n   *     This approach work only if all of the symbol size calculated.\r\n   *     That is, the progressive rendering is not applied to graph.\r\n   *     FIXME\r\n   *     If progressive rendering is applied to graph some day,\r\n   *     probably we have to use `basedOn: 'value'`.\r\n   */\r\n\r\n  function circularLayout(seriesModel, basedOn) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (coordSys && coordSys.type !== 'view') {\r\n      return;\r\n    }\r\n\r\n    var rect = coordSys.getBoundingRect();\r\n    var nodeData = seriesModel.getData();\r\n    var graph = nodeData.graph;\r\n    var cx = rect.width / 2 + rect.x;\r\n    var cy = rect.height / 2 + rect.y;\r\n    var r = Math.min(rect.width, rect.height) / 2;\r\n    var count = nodeData.count();\r\n    nodeData.setLayout({\r\n      cx: cx,\r\n      cy: cy\r\n    });\r\n\r\n    if (!count) {\r\n      return;\r\n    }\r\n\r\n    _layoutNodesBasedOn[basedOn](seriesModel, graph, nodeData, r, cx, cy, count);\r\n\r\n    graph.eachEdge(function (edge, index) {\r\n      var curveness = retrieve3(edge.getModel().get(['lineStyle', 'curveness']), getCurvenessForEdge(edge, seriesModel, index), 0);\r\n      var p1 = clone$1(edge.node1.getLayout());\r\n      var p2 = clone$1(edge.node2.getLayout());\r\n      var cp1;\r\n      var x12 = (p1[0] + p2[0]) / 2;\r\n      var y12 = (p1[1] + p2[1]) / 2;\r\n\r\n      if (+curveness) {\r\n        curveness *= 3;\r\n        cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\r\n      }\r\n\r\n      edge.setLayout([p1, p2, cp1]);\r\n    });\r\n  }\r\n\r\n  var _layoutNodesBasedOn = {\r\n    value: function (seriesModel, graph, nodeData, r, cx, cy, count) {\r\n      var angle = 0;\r\n      var sum = nodeData.getSum('value');\r\n      var unitAngle = Math.PI * 2 / (sum || count);\r\n      graph.eachNode(function (node) {\r\n        var value = node.getValue('value');\r\n        var radianHalf = unitAngle * (sum ? value : 1) / 2;\r\n        angle += radianHalf;\r\n        node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\r\n        angle += radianHalf;\r\n      });\r\n    },\r\n    symbolSize: function (seriesModel, graph, nodeData, r, cx, cy, count) {\r\n      var sumRadian = 0;\r\n      _symbolRadiansHalf.length = count;\r\n      var nodeScale = getNodeGlobalScale(seriesModel);\r\n      graph.eachNode(function (node) {\r\n        var symbolSize = getSymbolSize(node); // Normally this case will not happen, but we still add\r\n        // some the defensive code (2px is an arbitrary value).\r\n\r\n        isNaN(symbolSize) && (symbolSize = 2);\r\n        symbolSize < 0 && (symbolSize = 0);\r\n        symbolSize *= nodeScale;\r\n        var symbolRadianHalf = Math.asin(symbolSize / 2 / r); // when `symbolSize / 2` is bigger than `r`.\r\n\r\n        isNaN(symbolRadianHalf) && (symbolRadianHalf = PI$4 / 2);\r\n        _symbolRadiansHalf[node.dataIndex] = symbolRadianHalf;\r\n        sumRadian += symbolRadianHalf * 2;\r\n      });\r\n      var halfRemainRadian = (2 * PI$4 - sumRadian) / count / 2;\r\n      var angle = 0;\r\n      graph.eachNode(function (node) {\r\n        var radianHalf = halfRemainRadian + _symbolRadiansHalf[node.dataIndex];\r\n        angle += radianHalf;\r\n        node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\r\n        angle += radianHalf;\r\n      });\r\n    }\r\n  };\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  function graphCircularLayout(ecModel) {\r\n    ecModel.eachSeriesByType('graph', function (seriesModel) {\r\n      if (seriesModel.get('layout') === 'circular') {\r\n        circularLayout(seriesModel, 'symbolSize');\r\n      }\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /*\r\n  * A third-party license is embeded for some of the code in this file:\r\n  * Some formulas were originally copied from \"d3.js\" with some\r\n  * modifications made for this project.\r\n  * (See more details in the comment of the method \"step\" below.)\r\n  * The use of the source code of this file is also subject to the terms\r\n  * and consitions of the license of \"d3.js\" (BSD-3Clause, see\r\n  * </licenses/LICENSE-d3>).\r\n  */\r\n\r\n\r\n  var scaleAndAdd$1 = scaleAndAdd; // function adjacentNode(n, e) {\r\n  //     return e.n1 === n ? e.n2 : e.n1;\r\n  // }\r\n\r\n  function forceLayout(inNodes, inEdges, opts) {\r\n    var nodes = inNodes;\r\n    var edges = inEdges;\r\n    var rect = opts.rect;\r\n    var width = rect.width;\r\n    var height = rect.height;\r\n    var center = [rect.x + width / 2, rect.y + height / 2]; // let scale = opts.scale || 1;\r\n\r\n    var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (let i = 0; i < edges.length; i++) {\r\n    //     let e = edges[i];\r\n    //     let n1 = e.n1;\r\n    //     let n2 = e.n2;\r\n    //     n1.edges = n1.edges || [];\r\n    //     n2.edges = n2.edges || [];\r\n    //     n1.edges.push(e);\r\n    //     n2.edges.push(e);\r\n    // }\r\n    // Init position\r\n\r\n    for (var i = 0; i < nodes.length; i++) {\r\n      var n = nodes[i];\r\n\r\n      if (!n.p) {\r\n        n.p = create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]);\r\n      }\r\n\r\n      n.pp = clone$1(n.p);\r\n      n.edges = null;\r\n    } // Formula in 'Graph Drawing by Force-directed Placement'\r\n    // let k = scale * Math.sqrt(width * height / nodes.length);\r\n    // let k2 = k * k;\r\n\r\n\r\n    var initialFriction = opts.friction == null ? 0.6 : opts.friction;\r\n    var friction = initialFriction;\r\n    var beforeStepCallback;\r\n    var afterStepCallback;\r\n    return {\r\n      warmUp: function () {\r\n        friction = initialFriction * 0.8;\r\n      },\r\n      setFixed: function (idx) {\r\n        nodes[idx].fixed = true;\r\n      },\r\n      setUnfixed: function (idx) {\r\n        nodes[idx].fixed = false;\r\n      },\r\n\r\n      /**\r\n       * Before step hook\r\n       */\r\n      beforeStep: function (cb) {\r\n        beforeStepCallback = cb;\r\n      },\r\n\r\n      /**\r\n       * After step hook\r\n       */\r\n      afterStep: function (cb) {\r\n        afterStepCallback = cb;\r\n      },\r\n\r\n      /**\r\n       * Some formulas were originally copied from \"d3.js\"\r\n       * https://github.com/d3/d3/blob/b516d77fb8566b576088e73410437494717ada26/src/layout/force.js\r\n       * with some modifications made for this project.\r\n       * See the license statement at the head of this file.\r\n       */\r\n      step: function (cb) {\r\n        beforeStepCallback && beforeStepCallback(nodes, edges);\r\n        var v12 = [];\r\n        var nLen = nodes.length;\r\n\r\n        for (var i = 0; i < edges.length; i++) {\r\n          var e = edges[i];\r\n\r\n          if (e.ignoreForceLayout) {\r\n            continue;\r\n          }\r\n\r\n          var n1 = e.n1;\r\n          var n2 = e.n2;\r\n          sub(v12, n2.p, n1.p);\r\n          var d = len(v12) - e.d;\r\n          var w = n2.w / (n1.w + n2.w);\r\n\r\n          if (isNaN(w)) {\r\n            w = 0;\r\n          }\r\n\r\n          normalize(v12, v12);\r\n          !n1.fixed && scaleAndAdd$1(n1.p, n1.p, v12, w * d * friction);\r\n          !n2.fixed && scaleAndAdd$1(n2.p, n2.p, v12, -(1 - w) * d * friction);\r\n        } // Gravity\r\n\r\n\r\n        for (var i = 0; i < nLen; i++) {\r\n          var n = nodes[i];\r\n\r\n          if (!n.fixed) {\r\n            sub(v12, center, n.p); // let d = vec2.len(v12);\r\n            // vec2.scale(v12, v12, 1 / d);\r\n            // let gravityFactor = gravity;\r\n\r\n            scaleAndAdd$1(n.p, n.p, v12, gravity * friction);\r\n          }\r\n        } // Repulsive\r\n        // PENDING\r\n\r\n\r\n        for (var i = 0; i < nLen; i++) {\r\n          var n1 = nodes[i];\r\n\r\n          for (var j = i + 1; j < nLen; j++) {\r\n            var n2 = nodes[j];\r\n            sub(v12, n2.p, n1.p);\r\n            var d = len(v12);\r\n\r\n            if (d === 0) {\r\n              // Random repulse\r\n              set(v12, Math.random() - 0.5, Math.random() - 0.5);\r\n              d = 1;\r\n            }\r\n\r\n            var repFact = (n1.rep + n2.rep) / d / d;\r\n            !n1.fixed && scaleAndAdd$1(n1.pp, n1.pp, v12, repFact);\r\n            !n2.fixed && scaleAndAdd$1(n2.pp, n2.pp, v12, -repFact);\r\n          }\r\n        }\r\n\r\n        var v = [];\r\n\r\n        for (var i = 0; i < nLen; i++) {\r\n          var n = nodes[i];\r\n\r\n          if (!n.fixed) {\r\n            sub(v, n.p, n.pp);\r\n            scaleAndAdd$1(n.p, n.p, v, friction);\r\n            copy(n.pp, n.p);\r\n          }\r\n        }\r\n\r\n        friction = friction * 0.992;\r\n        var finished = friction < 0.01;\r\n        afterStepCallback && afterStepCallback(nodes, edges, finished);\r\n        cb && cb(finished);\r\n      }\r\n    };\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function graphForceLayout(ecModel) {\r\n    ecModel.eachSeriesByType('graph', function (graphSeries) {\r\n      var coordSys = graphSeries.coordinateSystem;\r\n\r\n      if (coordSys && coordSys.type !== 'view') {\r\n        return;\r\n      }\r\n\r\n      if (graphSeries.get('layout') === 'force') {\r\n        var preservedPoints_1 = graphSeries.preservedPoints || {};\r\n        var graph_1 = graphSeries.getGraph();\r\n        var nodeData_1 = graph_1.data;\r\n        var edgeData = graph_1.edgeData;\r\n        var forceModel = graphSeries.getModel('force');\r\n        var initLayout = forceModel.get('initLayout');\r\n\r\n        if (graphSeries.preservedPoints) {\r\n          nodeData_1.each(function (idx) {\r\n            var id = nodeData_1.getId(idx);\r\n            nodeData_1.setItemLayout(idx, preservedPoints_1[id] || [NaN, NaN]);\r\n          });\r\n        } else if (!initLayout || initLayout === 'none') {\r\n          simpleLayout(graphSeries);\r\n        } else if (initLayout === 'circular') {\r\n          circularLayout(graphSeries, 'value');\r\n        }\r\n\r\n        var nodeDataExtent_1 = nodeData_1.getDataExtent('value');\r\n        var edgeDataExtent_1 = edgeData.getDataExtent('value'); // let edgeDataExtent = edgeData.getDataExtent('value');\r\n\r\n        var repulsion = forceModel.get('repulsion');\r\n        var edgeLength = forceModel.get('edgeLength');\r\n        var repulsionArr_1 = isArray(repulsion) ? repulsion : [repulsion, repulsion];\r\n        var edgeLengthArr_1 = isArray(edgeLength) ? edgeLength : [edgeLength, edgeLength]; // Larger value has smaller length\r\n\r\n        edgeLengthArr_1 = [edgeLengthArr_1[1], edgeLengthArr_1[0]];\r\n        var nodes_1 = nodeData_1.mapArray('value', function (value, idx) {\r\n          var point = nodeData_1.getItemLayout(idx);\r\n          var rep = linearMap(value, nodeDataExtent_1, repulsionArr_1);\r\n\r\n          if (isNaN(rep)) {\r\n            rep = (repulsionArr_1[0] + repulsionArr_1[1]) / 2;\r\n          }\r\n\r\n          return {\r\n            w: rep,\r\n            rep: rep,\r\n            fixed: nodeData_1.getItemModel(idx).get('fixed'),\r\n            p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\r\n          };\r\n        });\r\n        var edges = edgeData.mapArray('value', function (value, idx) {\r\n          var edge = graph_1.getEdgeByIndex(idx);\r\n          var d = linearMap(value, edgeDataExtent_1, edgeLengthArr_1);\r\n\r\n          if (isNaN(d)) {\r\n            d = (edgeLengthArr_1[0] + edgeLengthArr_1[1]) / 2;\r\n          }\r\n\r\n          var edgeModel = edge.getModel();\r\n          var curveness = retrieve3(edge.getModel().get(['lineStyle', 'curveness']), -getCurvenessForEdge(edge, graphSeries, idx, true), 0);\r\n          return {\r\n            n1: nodes_1[edge.node1.dataIndex],\r\n            n2: nodes_1[edge.node2.dataIndex],\r\n            d: d,\r\n            curveness: curveness,\r\n            ignoreForceLayout: edgeModel.get('ignoreForceLayout')\r\n          };\r\n        }); // let coordSys = graphSeries.coordinateSystem;\r\n\r\n        var rect = coordSys.getBoundingRect();\r\n        var forceInstance = forceLayout(nodes_1, edges, {\r\n          rect: rect,\r\n          gravity: forceModel.get('gravity'),\r\n          friction: forceModel.get('friction')\r\n        });\r\n        forceInstance.beforeStep(function (nodes, edges) {\r\n          for (var i = 0, l = nodes.length; i < l; i++) {\r\n            if (nodes[i].fixed) {\r\n              // Write back to layout instance\r\n              copy(nodes[i].p, graph_1.getNodeByIndex(i).getLayout());\r\n            }\r\n          }\r\n        });\r\n        forceInstance.afterStep(function (nodes, edges, stopped) {\r\n          for (var i = 0, l = nodes.length; i < l; i++) {\r\n            if (!nodes[i].fixed) {\r\n              graph_1.getNodeByIndex(i).setLayout(nodes[i].p);\r\n            }\r\n\r\n            preservedPoints_1[nodeData_1.getId(i)] = nodes[i].p;\r\n          }\r\n\r\n          for (var i = 0, l = edges.length; i < l; i++) {\r\n            var e = edges[i];\r\n            var edge = graph_1.getEdgeByIndex(i);\r\n            var p1 = e.n1.p;\r\n            var p2 = e.n2.p;\r\n            var points = edge.getLayout();\r\n            points = points ? points.slice() : [];\r\n            points[0] = points[0] || [];\r\n            points[1] = points[1] || [];\r\n            copy(points[0], p1);\r\n            copy(points[1], p2);\r\n\r\n            if (+e.curveness) {\r\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\r\n            }\r\n\r\n            edge.setLayout(points);\r\n          }\r\n        });\r\n        graphSeries.forceLayout = forceInstance;\r\n        graphSeries.preservedPoints = preservedPoints_1; // Step to get the layout\r\n\r\n        forceInstance.step();\r\n      } else {\r\n        // Remove prev injected forceLayout instance\r\n        graphSeries.forceLayout = null;\r\n      }\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Simple view coordinate system\r\n   * Mapping given x, y to transformd view x, y\r\n   */\r\n\r\n\r\n  var v2ApplyTransform = applyTransform;\r\n\r\n  var View =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(View, _super);\r\n\r\n    function View(name) {\r\n      var _this = _super.call(this) || this;\r\n\r\n      _this.type = 'view';\r\n      _this.dimensions = ['x', 'y'];\r\n      _this._roamTransformable = new Transformable();\r\n      _this._rawTransformable = new Transformable();\r\n      _this.name = name;\r\n      return _this;\r\n    } // PENDING to getRect\r\n\r\n\r\n    View.prototype.setBoundingRect = function (x, y, width, height) {\r\n      this._rect = new BoundingRect(x, y, width, height);\r\n      return this._rect;\r\n    };\r\n    /**\r\n     * @return {module:zrender/core/BoundingRect}\r\n     */\r\n    // PENDING to getRect\r\n\r\n\r\n    View.prototype.getBoundingRect = function () {\r\n      return this._rect;\r\n    };\r\n\r\n    View.prototype.setViewRect = function (x, y, width, height) {\r\n      this.transformTo(x, y, width, height);\r\n      this._viewRect = new BoundingRect(x, y, width, height);\r\n    };\r\n    /**\r\n     * Transformed to particular position and size\r\n     */\r\n\r\n\r\n    View.prototype.transformTo = function (x, y, width, height) {\r\n      var rect = this.getBoundingRect();\r\n      var rawTransform = this._rawTransformable;\r\n      rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\r\n      rawTransform.decomposeTransform();\r\n\r\n      this._updateTransform();\r\n    };\r\n    /**\r\n     * Set center of view\r\n     */\r\n\r\n\r\n    View.prototype.setCenter = function (centerCoord) {\r\n      if (!centerCoord) {\r\n        return;\r\n      }\r\n\r\n      this._center = centerCoord;\r\n\r\n      this._updateCenterAndZoom();\r\n    };\r\n\r\n    View.prototype.setZoom = function (zoom) {\r\n      zoom = zoom || 1;\r\n      var zoomLimit = this.zoomLimit;\r\n\r\n      if (zoomLimit) {\r\n        if (zoomLimit.max != null) {\r\n          zoom = Math.min(zoomLimit.max, zoom);\r\n        }\r\n\r\n        if (zoomLimit.min != null) {\r\n          zoom = Math.max(zoomLimit.min, zoom);\r\n        }\r\n      }\r\n\r\n      this._zoom = zoom;\r\n\r\n      this._updateCenterAndZoom();\r\n    };\r\n    /**\r\n     * Get default center without roam\r\n     */\r\n\r\n\r\n    View.prototype.getDefaultCenter = function () {\r\n      // Rect before any transform\r\n      var rawRect = this.getBoundingRect();\r\n      var cx = rawRect.x + rawRect.width / 2;\r\n      var cy = rawRect.y + rawRect.height / 2;\r\n      return [cx, cy];\r\n    };\r\n\r\n    View.prototype.getCenter = function () {\r\n      return this._center || this.getDefaultCenter();\r\n    };\r\n\r\n    View.prototype.getZoom = function () {\r\n      return this._zoom || 1;\r\n    };\r\n\r\n    View.prototype.getRoamTransform = function () {\r\n      return this._roamTransformable.getLocalTransform();\r\n    };\r\n    /**\r\n     * Remove roam\r\n     */\r\n\r\n\r\n    View.prototype._updateCenterAndZoom = function () {\r\n      // Must update after view transform updated\r\n      var rawTransformMatrix = this._rawTransformable.getLocalTransform();\r\n\r\n      var roamTransform = this._roamTransformable;\r\n      var defaultCenter = this.getDefaultCenter();\r\n      var center = this.getCenter();\r\n      var zoom = this.getZoom();\r\n      center = applyTransform([], center, rawTransformMatrix);\r\n      defaultCenter = applyTransform([], defaultCenter, rawTransformMatrix);\r\n      roamTransform.originX = center[0];\r\n      roamTransform.originY = center[1];\r\n      roamTransform.x = defaultCenter[0] - center[0];\r\n      roamTransform.y = defaultCenter[1] - center[1];\r\n      roamTransform.scaleX = roamTransform.scaleY = zoom;\r\n\r\n      this._updateTransform();\r\n    };\r\n    /**\r\n     * Update transform from roam and mapLocation\r\n     */\r\n\r\n\r\n    View.prototype._updateTransform = function () {\r\n      var roamTransformable = this._roamTransformable;\r\n      var rawTransformable = this._rawTransformable;\r\n      rawTransformable.parent = roamTransformable;\r\n      roamTransformable.updateTransform();\r\n      rawTransformable.updateTransform();\r\n      copy$1(this.transform || (this.transform = []), rawTransformable.transform || create$1());\r\n      this._rawTransform = rawTransformable.getLocalTransform();\r\n      this.invTransform = this.invTransform || [];\r\n      invert(this.invTransform, this.transform);\r\n      this.decomposeTransform();\r\n    };\r\n\r\n    View.prototype.getTransformInfo = function () {\r\n      var roamTransform = this._roamTransformable.transform;\r\n      var rawTransformable = this._rawTransformable;\r\n      return {\r\n        roamTransform: roamTransform ? slice(roamTransform) : create$1(),\r\n        rawScaleX: rawTransformable.scaleX,\r\n        rawScaleY: rawTransformable.scaleY,\r\n        rawX: rawTransformable.x,\r\n        rawY: rawTransformable.y\r\n      };\r\n    };\r\n\r\n    View.prototype.getViewRect = function () {\r\n      return this._viewRect;\r\n    };\r\n    /**\r\n     * Get view rect after roam transform\r\n     */\r\n\r\n\r\n    View.prototype.getViewRectAfterRoam = function () {\r\n      var rect = this.getBoundingRect().clone();\r\n      rect.applyTransform(this.transform);\r\n      return rect;\r\n    };\r\n    /**\r\n     * Convert a single (lon, lat) data item to (x, y) point.\r\n     */\r\n\r\n\r\n    View.prototype.dataToPoint = function (data, noRoam, out) {\r\n      var transform = noRoam ? this._rawTransform : this.transform;\r\n      out = out || [];\r\n      return transform ? v2ApplyTransform(out, data, transform) : copy(out, data);\r\n    };\r\n    /**\r\n     * Convert a (x, y) point to (lon, lat) data\r\n     */\r\n\r\n\r\n    View.prototype.pointToData = function (point) {\r\n      var invTransform = this.invTransform;\r\n      return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\r\n    };\r\n\r\n    View.prototype.convertToPixel = function (ecModel, finder, value) {\r\n      var coordSys = getCoordSys(finder);\r\n      return coordSys === this ? coordSys.dataToPoint(value) : null;\r\n    };\r\n\r\n    View.prototype.convertFromPixel = function (ecModel, finder, pixel) {\r\n      var coordSys = getCoordSys(finder);\r\n      return coordSys === this ? coordSys.pointToData(pixel) : null;\r\n    };\r\n    /**\r\n     * @implements\r\n     */\r\n\r\n\r\n    View.prototype.containPoint = function (point) {\r\n      return this.getViewRectAfterRoam().contain(point[0], point[1]);\r\n    };\r\n\r\n    View.dimensions = ['x', 'y'];\r\n    return View;\r\n  }(Transformable);\r\n\r\n  function getCoordSys(finder) {\r\n    var seriesModel = finder.seriesModel;\r\n    return seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n  // FIXME Where to create the simple view coordinate system\r\n\r\n\r\n  function getViewRect(seriesModel, api, aspect) {\r\n    var option = extend(seriesModel.getBoxLayoutParams(), {\r\n      aspect: aspect\r\n    });\r\n    return getLayoutRect(option, {\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    });\r\n  }\r\n\r\n  function createViewCoordSys(ecModel, api) {\r\n    var viewList = [];\r\n    ecModel.eachSeriesByType('graph', function (seriesModel) {\r\n      var coordSysType = seriesModel.get('coordinateSystem');\r\n\r\n      if (!coordSysType || coordSysType === 'view') {\r\n        var data_1 = seriesModel.getData();\r\n        var positions = data_1.mapArray(function (idx) {\r\n          var itemModel = data_1.getItemModel(idx);\r\n          return [+itemModel.get('x'), +itemModel.get('y')];\r\n        });\r\n        var min = [];\r\n        var max = [];\r\n        fromPoints(positions, min, max); // If width or height is 0\r\n\r\n        if (max[0] - min[0] === 0) {\r\n          max[0] += 1;\r\n          min[0] -= 1;\r\n        }\r\n\r\n        if (max[1] - min[1] === 0) {\r\n          max[1] += 1;\r\n          min[1] -= 1;\r\n        }\r\n\r\n        var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\r\n\r\n        var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\r\n\r\n        if (isNaN(aspect)) {\r\n          min = [viewRect.x, viewRect.y];\r\n          max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\r\n        }\r\n\r\n        var bbWidth = max[0] - min[0];\r\n        var bbHeight = max[1] - min[1];\r\n        var viewWidth = viewRect.width;\r\n        var viewHeight = viewRect.height;\r\n        var viewCoordSys = seriesModel.coordinateSystem = new View();\r\n        viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\r\n        viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\r\n        viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\r\n\r\n        viewCoordSys.setCenter(seriesModel.get('center'));\r\n        viewCoordSys.setZoom(seriesModel.get('zoom'));\r\n        viewList.push(viewCoordSys);\r\n      }\r\n    });\r\n    return viewList;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * @return label string. Not null/undefined\r\n   */\r\n\r\n\r\n  function getDefaultLabel(data, dataIndex) {\r\n    var labelDims = data.mapDimensionsAll('defaultedLabel');\r\n    var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\r\n\r\n    if (len === 1) {\r\n      var rawVal = retrieveRawValue(data, dataIndex, labelDims[0]);\r\n      return rawVal != null ? rawVal + '' : null;\r\n    } else if (len) {\r\n      var vals = [];\r\n\r\n      for (var i = 0; i < labelDims.length; i++) {\r\n        vals.push(retrieveRawValue(data, dataIndex, labelDims[i]));\r\n      }\r\n\r\n      return vals.join(' ');\r\n    }\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var Symbol$1 =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(Symbol, _super);\r\n\r\n    function Symbol(data, idx, seriesScope, opts) {\r\n      var _this = _super.call(this) || this;\r\n\r\n      _this.updateData(data, idx, seriesScope, opts);\r\n\r\n      return _this;\r\n    }\r\n\r\n    Symbol.prototype._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\r\n      // Remove paths created before\r\n      this.removeAll(); // let symbolPath = createSymbol(\r\n      //     symbolType, -0.5, -0.5, 1, 1, color\r\n      // );\r\n      // If width/height are set too small (e.g., set to 1) on ios10\r\n      // and macOS Sierra, a circle stroke become a rect, no matter what\r\n      // the scale is set. So we set width/height as 2. See #4150.\r\n\r\n      var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, null, keepAspect);\r\n      symbolPath.attr({\r\n        z2: 100,\r\n        culling: true,\r\n        scaleX: symbolSize[0] / 2,\r\n        scaleY: symbolSize[1] / 2\r\n      }); // Rewrite drift method\r\n\r\n      symbolPath.drift = driftSymbol;\r\n      this._symbolType = symbolType;\r\n      this.add(symbolPath);\r\n    };\r\n    /**\r\n     * Stop animation\r\n     * @param {boolean} toLastFrame\r\n     */\r\n\r\n\r\n    Symbol.prototype.stopSymbolAnimation = function (toLastFrame) {\r\n      this.childAt(0).stopAnimation(null, toLastFrame);\r\n    };\r\n    /**\r\n     * FIXME:\r\n     * Caution: This method breaks the encapsulation of this module,\r\n     * but it indeed brings convenience. So do not use the method\r\n     * unless you detailedly know all the implements of `Symbol`,\r\n     * especially animation.\r\n     *\r\n     * Get symbol path element.\r\n     */\r\n\r\n\r\n    Symbol.prototype.getSymbolPath = function () {\r\n      return this.childAt(0);\r\n    };\r\n    /**\r\n     * Highlight symbol\r\n     */\r\n\r\n\r\n    Symbol.prototype.highlight = function () {\r\n      enterEmphasis(this.childAt(0));\r\n    };\r\n    /**\r\n     * Downplay symbol\r\n     */\r\n\r\n\r\n    Symbol.prototype.downplay = function () {\r\n      leaveEmphasis(this.childAt(0));\r\n    };\r\n    /**\r\n     * @param {number} zlevel\r\n     * @param {number} z\r\n     */\r\n\r\n\r\n    Symbol.prototype.setZ = function (zlevel, z) {\r\n      var symbolPath = this.childAt(0);\r\n      symbolPath.zlevel = zlevel;\r\n      symbolPath.z = z;\r\n    };\r\n\r\n    Symbol.prototype.setDraggable = function (draggable) {\r\n      var symbolPath = this.childAt(0);\r\n      symbolPath.draggable = draggable;\r\n      symbolPath.cursor = draggable ? 'move' : symbolPath.cursor;\r\n    };\r\n    /**\r\n     * Update symbol properties\r\n     */\r\n\r\n\r\n    Symbol.prototype.updateData = function (data, idx, seriesScope, opts) {\r\n      this.silent = false;\r\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\r\n      var seriesModel = data.hostModel;\r\n      var symbolSize = Symbol.getSymbolSize(data, idx);\r\n      var isInit = symbolType !== this._symbolType;\r\n      var disableAnimation = opts && opts.disableAnimation;\r\n\r\n      if (isInit) {\r\n        var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\r\n\r\n        this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\r\n      } else {\r\n        var symbolPath = this.childAt(0);\r\n        symbolPath.silent = false;\r\n        var target = {\r\n          scaleX: symbolSize[0] / 2,\r\n          scaleY: symbolSize[1] / 2\r\n        };\r\n        disableAnimation ? symbolPath.attr(target) : updateProps(symbolPath, target, seriesModel, idx);\r\n      }\r\n\r\n      this._updateCommon(data, idx, symbolSize, seriesScope, opts);\r\n\r\n      if (isInit) {\r\n        var symbolPath = this.childAt(0);\r\n\r\n        if (!disableAnimation) {\r\n          var target = {\r\n            scaleX: this._sizeX,\r\n            scaleY: this._sizeY,\r\n            style: {\r\n              // Always fadeIn. Because it has fadeOut animation when symbol is removed..\r\n              opacity: symbolPath.style.opacity\r\n            }\r\n          };\r\n          symbolPath.scaleX = symbolPath.scaleY = 0;\r\n          symbolPath.style.opacity = 0;\r\n          initProps(symbolPath, target, seriesModel, idx);\r\n        }\r\n      }\r\n\r\n      if (disableAnimation) {\r\n        // Must stop remove animation manually if don't call initProps or updateProps.\r\n        this.childAt(0).stopAnimation('remove');\r\n      }\r\n\r\n      this._seriesModel = seriesModel;\r\n    };\r\n\r\n    Symbol.prototype._updateCommon = function (data, idx, symbolSize, seriesScope, opts) {\r\n      var symbolPath = this.childAt(0);\r\n      var seriesModel = data.hostModel;\r\n      var emphasisItemStyle;\r\n      var blurItemStyle;\r\n      var selectItemStyle;\r\n      var focus;\r\n      var blurScope;\r\n      var symbolOffset;\r\n      var labelStatesModels;\r\n      var hoverScale;\r\n      var cursorStyle;\r\n\r\n      if (seriesScope) {\r\n        emphasisItemStyle = seriesScope.emphasisItemStyle;\r\n        blurItemStyle = seriesScope.blurItemStyle;\r\n        selectItemStyle = seriesScope.selectItemStyle;\r\n        focus = seriesScope.focus;\r\n        blurScope = seriesScope.blurScope;\r\n        symbolOffset = seriesScope.symbolOffset;\r\n        labelStatesModels = seriesScope.labelStatesModels;\r\n        hoverScale = seriesScope.hoverScale;\r\n        cursorStyle = seriesScope.cursorStyle;\r\n      }\r\n\r\n      if (!seriesScope || data.hasItemOption) {\r\n        var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx);\r\n        var emphasisModel = itemModel.getModel('emphasis');\r\n        emphasisItemStyle = emphasisModel.getModel('itemStyle').getItemStyle();\r\n        selectItemStyle = itemModel.getModel(['select', 'itemStyle']).getItemStyle();\r\n        blurItemStyle = itemModel.getModel(['blur', 'itemStyle']).getItemStyle();\r\n        focus = emphasisModel.get('focus');\r\n        blurScope = emphasisModel.get('blurScope');\r\n        symbolOffset = itemModel.getShallow('symbolOffset');\r\n        labelStatesModels = getLabelStatesModels(itemModel);\r\n        hoverScale = emphasisModel.getShallow('scale');\r\n        cursorStyle = itemModel.getShallow('cursor');\r\n      }\r\n\r\n      var symbolRotate = data.getItemVisual(idx, 'symbolRotate');\r\n      symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\r\n\r\n      if (symbolOffset) {\r\n        symbolPath.x = parsePercent$1(symbolOffset[0], symbolSize[0]);\r\n        symbolPath.y = parsePercent$1(symbolOffset[1], symbolSize[1]);\r\n      }\r\n\r\n      cursorStyle && symbolPath.attr('cursor', cursorStyle);\r\n      var symbolStyle = data.getItemVisual(idx, 'style');\r\n      var visualColor = symbolStyle.fill;\r\n\r\n      if (symbolPath instanceof ZRImage) {\r\n        var pathStyle = symbolPath.style;\r\n        symbolPath.useStyle(extend({\r\n          // TODO other properties like x, y ?\r\n          image: pathStyle.image,\r\n          x: pathStyle.x,\r\n          y: pathStyle.y,\r\n          width: pathStyle.width,\r\n          height: pathStyle.height\r\n        }, symbolStyle));\r\n      } else {\r\n        if (symbolPath.__isEmptyBrush) {\r\n          // fill and stroke will be swapped if it's empty.\r\n          // So we cloned a new style to avoid it affecting the original style in visual storage.\r\n          // TODO Better implementation. No empty logic!\r\n          symbolPath.useStyle(extend({}, symbolStyle));\r\n        } else {\r\n          symbolPath.useStyle(symbolStyle);\r\n        } // Disable decal because symbol scale will been applied on the decal.\r\n\r\n\r\n        symbolPath.style.decal = null;\r\n        symbolPath.setColor(visualColor, opts && opts.symbolInnerColor);\r\n        symbolPath.style.strokeNoScale = true;\r\n      }\r\n\r\n      var liftZ = data.getItemVisual(idx, 'liftZ');\r\n      var z2Origin = this._z2;\r\n\r\n      if (liftZ != null) {\r\n        if (z2Origin == null) {\r\n          this._z2 = symbolPath.z2;\r\n          symbolPath.z2 += liftZ;\r\n        }\r\n      } else if (z2Origin != null) {\r\n        symbolPath.z2 = z2Origin;\r\n        this._z2 = null;\r\n      }\r\n\r\n      var useNameLabel = opts && opts.useNameLabel;\r\n      setLabelStyle(symbolPath, labelStatesModels, {\r\n        labelFetcher: seriesModel,\r\n        labelDataIndex: idx,\r\n        defaultText: getLabelDefaultText,\r\n        inheritColor: visualColor,\r\n        defaultOpacity: symbolStyle.opacity\r\n      }); // Do not execute util needed.\r\n\r\n      function getLabelDefaultText(idx) {\r\n        return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\r\n      }\r\n\r\n      this._sizeX = symbolSize[0] / 2;\r\n      this._sizeY = symbolSize[1] / 2;\r\n      var emphasisState = symbolPath.ensureState('emphasis');\r\n      emphasisState.style = emphasisItemStyle;\r\n      symbolPath.ensureState('select').style = selectItemStyle;\r\n      symbolPath.ensureState('blur').style = blurItemStyle;\r\n\r\n      if (hoverScale) {\r\n        var scaleRatio = Math.max(1.1, 3 / this._sizeY);\r\n        emphasisState.scaleX = this._sizeX * scaleRatio;\r\n        emphasisState.scaleY = this._sizeY * scaleRatio;\r\n      }\r\n\r\n      this.setSymbolScale(1);\r\n      enableHoverEmphasis(this, focus, blurScope);\r\n    };\r\n\r\n    Symbol.prototype.setSymbolScale = function (scale) {\r\n      this.scaleX = this.scaleY = scale;\r\n    };\r\n\r\n    Symbol.prototype.fadeOut = function (cb, opt) {\r\n      var symbolPath = this.childAt(0);\r\n      var seriesModel = this._seriesModel;\r\n      var dataIndex = getECData(this).dataIndex;\r\n      var animationOpt = opt && opt.animation; // Avoid mistaken hover when fading out\r\n\r\n      this.silent = symbolPath.silent = true; // Not show text when animating\r\n\r\n      if (opt && opt.fadeLabel) {\r\n        var textContent = symbolPath.getTextContent();\r\n\r\n        if (textContent) {\r\n          removeElement(textContent, {\r\n            style: {\r\n              opacity: 0\r\n            }\r\n          }, seriesModel, {\r\n            dataIndex: dataIndex,\r\n            removeOpt: animationOpt,\r\n            cb: function () {\r\n              symbolPath.removeTextContent();\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        symbolPath.removeTextContent();\r\n      }\r\n\r\n      removeElement(symbolPath, {\r\n        style: {\r\n          opacity: 0\r\n        },\r\n        scaleX: 0,\r\n        scaleY: 0\r\n      }, seriesModel, {\r\n        dataIndex: dataIndex,\r\n        cb: cb,\r\n        removeOpt: animationOpt\r\n      });\r\n    };\r\n\r\n    Symbol.getSymbolSize = function (data, idx) {\r\n      var symbolSize = data.getItemVisual(idx, 'symbolSize');\r\n      return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\r\n    };\r\n\r\n    return Symbol;\r\n  }(Group);\r\n\r\n  function driftSymbol(dx, dy) {\r\n    this.parent.drift(dx, dy);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function symbolNeedsDraw(data, point, idx, opt) {\r\n    return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\r\n    // the symbol element shape. We use the same clip shape here as\r\n    // the line clip.\r\n    && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\r\n  }\r\n\r\n  function normalizeUpdateOpt(opt) {\r\n    if (opt != null && !isObject$1(opt)) {\r\n      opt = {\r\n        isIgnore: opt\r\n      };\r\n    }\r\n\r\n    return opt || {};\r\n  }\r\n\r\n  function makeSeriesScope(data) {\r\n    var seriesModel = data.hostModel;\r\n    var emphasisModel = seriesModel.getModel('emphasis');\r\n    return {\r\n      emphasisItemStyle: emphasisModel.getModel('itemStyle').getItemStyle(),\r\n      blurItemStyle: seriesModel.getModel(['blur', 'itemStyle']).getItemStyle(),\r\n      selectItemStyle: seriesModel.getModel(['select', 'itemStyle']).getItemStyle(),\r\n      focus: emphasisModel.get('focus'),\r\n      blurScope: emphasisModel.get('blurScope'),\r\n      symbolRotate: seriesModel.get('symbolRotate'),\r\n      symbolOffset: seriesModel.get('symbolOffset'),\r\n      hoverScale: emphasisModel.get('scale'),\r\n      labelStatesModels: getLabelStatesModels(seriesModel),\r\n      cursorStyle: seriesModel.get('cursor')\r\n    };\r\n  }\r\n\r\n  var SymbolDraw =\r\n  /** @class */\r\n  function () {\r\n    function SymbolDraw(SymbolCtor) {\r\n      this.group = new Group();\r\n      this._SymbolCtor = SymbolCtor || Symbol$1;\r\n    }\r\n    /**\r\n     * Update symbols draw by new data\r\n     */\r\n\r\n\r\n    SymbolDraw.prototype.updateData = function (data, opt) {\r\n      opt = normalizeUpdateOpt(opt);\r\n      var group = this.group;\r\n      var seriesModel = data.hostModel;\r\n      var oldData = this._data;\r\n      var SymbolCtor = this._SymbolCtor;\r\n      var disableAnimation = opt.disableAnimation;\r\n      var seriesScope = makeSeriesScope(data);\r\n      var symbolUpdateOpt = {\r\n        disableAnimation: disableAnimation\r\n      };\r\n\r\n      var getSymbolPoint = opt.getSymbolPoint || function (idx) {\r\n        return data.getItemLayout(idx);\r\n      }; // There is no oldLineData only when first rendering or switching from\r\n      // stream mode to normal mode, where previous elements should be removed.\r\n\r\n\r\n      if (!oldData) {\r\n        group.removeAll();\r\n      }\r\n\r\n      data.diff(oldData).add(function (newIdx) {\r\n        var point = getSymbolPoint(newIdx);\r\n\r\n        if (symbolNeedsDraw(data, point, newIdx, opt)) {\r\n          var symbolEl = new SymbolCtor(data, newIdx, seriesScope, symbolUpdateOpt);\r\n          symbolEl.setPosition(point);\r\n          data.setItemGraphicEl(newIdx, symbolEl);\r\n          group.add(symbolEl);\r\n        }\r\n      }).update(function (newIdx, oldIdx) {\r\n        var symbolEl = oldData.getItemGraphicEl(oldIdx);\r\n        var point = getSymbolPoint(newIdx);\r\n\r\n        if (!symbolNeedsDraw(data, point, newIdx, opt)) {\r\n          group.remove(symbolEl);\r\n          return;\r\n        }\r\n\r\n        if (!symbolEl) {\r\n          symbolEl = new SymbolCtor(data, newIdx);\r\n          symbolEl.setPosition(point);\r\n        } else {\r\n          symbolEl.updateData(data, newIdx, seriesScope, symbolUpdateOpt);\r\n          var target = {\r\n            x: point[0],\r\n            y: point[1]\r\n          };\r\n          disableAnimation ? symbolEl.attr(target) : updateProps(symbolEl, target, seriesModel);\r\n        } // Add back\r\n\r\n\r\n        group.add(symbolEl);\r\n        data.setItemGraphicEl(newIdx, symbolEl);\r\n      }).remove(function (oldIdx) {\r\n        var el = oldData.getItemGraphicEl(oldIdx);\r\n        el && el.fadeOut(function () {\r\n          group.remove(el);\r\n        });\r\n      }).execute();\r\n      this._getSymbolPoint = getSymbolPoint;\r\n      this._data = data;\r\n    };\r\n\r\n    SymbolDraw.prototype.isPersistent = function () {\r\n      return true;\r\n    };\r\n\r\n    SymbolDraw.prototype.updateLayout = function () {\r\n      var _this = this;\r\n\r\n      var data = this._data;\r\n\r\n      if (data) {\r\n        // Not use animation\r\n        data.eachItemGraphicEl(function (el, idx) {\r\n          var point = _this._getSymbolPoint(idx);\r\n\r\n          el.setPosition(point);\r\n          el.markRedraw();\r\n        });\r\n      }\r\n    };\r\n\r\n    SymbolDraw.prototype.incrementalPrepareUpdate = function (data) {\r\n      this._seriesScope = makeSeriesScope(data);\r\n      this._data = null;\r\n      this.group.removeAll();\r\n    };\r\n    /**\r\n     * Update symbols draw by new data\r\n     */\r\n\r\n\r\n    SymbolDraw.prototype.incrementalUpdate = function (taskParams, data, opt) {\r\n      opt = normalizeUpdateOpt(opt);\r\n\r\n      function updateIncrementalAndHover(el) {\r\n        if (!el.isGroup) {\r\n          el.incremental = true;\r\n          el.ensureState('emphasis').hoverLayer = true;\r\n        }\r\n      }\r\n\r\n      for (var idx = taskParams.start; idx < taskParams.end; idx++) {\r\n        var point = data.getItemLayout(idx);\r\n\r\n        if (symbolNeedsDraw(data, point, idx, opt)) {\r\n          var el = new this._SymbolCtor(data, idx, this._seriesScope);\r\n          el.traverse(updateIncrementalAndHover);\r\n          el.setPosition(point);\r\n          this.group.add(el);\r\n          data.setItemGraphicEl(idx, el);\r\n        }\r\n      }\r\n    };\r\n\r\n    SymbolDraw.prototype.remove = function (enableAnimation) {\r\n      var group = this.group;\r\n      var data = this._data; // Incremental model do not have this._data.\r\n\r\n      if (data && enableAnimation) {\r\n        data.eachItemGraphicEl(function (el) {\r\n          el.fadeOut(function () {\r\n            group.remove(el);\r\n          });\r\n        });\r\n      } else {\r\n        group.removeAll();\r\n      }\r\n    };\r\n\r\n    return SymbolDraw;\r\n  }();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Line path for bezier and straight line draw\r\n   */\r\n\r\n\r\n  var straightLineProto = Line.prototype;\r\n  var bezierCurveProto = BezierCurve.prototype;\r\n\r\n  var StraightLineShape =\r\n  /** @class */\r\n  function () {\r\n    function StraightLineShape() {\r\n      // Start point\r\n      this.x1 = 0;\r\n      this.y1 = 0; // End point\r\n\r\n      this.x2 = 0;\r\n      this.y2 = 0;\r\n      this.percent = 1;\r\n    }\r\n\r\n    return StraightLineShape;\r\n  }();\r\n\r\n  var CurveShape =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(CurveShape, _super);\r\n\r\n    function CurveShape() {\r\n      return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n\r\n    return CurveShape;\r\n  }(StraightLineShape);\r\n\r\n  function isStraightLine(shape) {\r\n    return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\r\n  }\r\n\r\n  var ECLinePath =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(ECLinePath, _super);\r\n\r\n    function ECLinePath(opts) {\r\n      var _this = _super.call(this, opts) || this;\r\n\r\n      _this.type = 'ec-line';\r\n      return _this;\r\n    }\r\n\r\n    ECLinePath.prototype.getDefaultStyle = function () {\r\n      return {\r\n        stroke: '#000',\r\n        fill: null\r\n      };\r\n    };\r\n\r\n    ECLinePath.prototype.getDefaultShape = function () {\r\n      return new StraightLineShape();\r\n    };\r\n\r\n    ECLinePath.prototype.buildPath = function (ctx, shape) {\r\n      if (isStraightLine(shape)) {\r\n        straightLineProto.buildPath.call(this, ctx, shape);\r\n      } else {\r\n        bezierCurveProto.buildPath.call(this, ctx, shape);\r\n      }\r\n    };\r\n\r\n    ECLinePath.prototype.pointAt = function (t) {\r\n      if (isStraightLine(this.shape)) {\r\n        return straightLineProto.pointAt.call(this, t);\r\n      } else {\r\n        return bezierCurveProto.pointAt.call(this, t);\r\n      }\r\n    };\r\n\r\n    ECLinePath.prototype.tangentAt = function (t) {\r\n      var shape = this.shape;\r\n      var p = isStraightLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\r\n      return normalize(p, p);\r\n    };\r\n\r\n    return ECLinePath;\r\n  }(Path);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\r\n\r\n  function makeSymbolTypeKey(symbolCategory) {\r\n    return '_' + symbolCategory + 'Type';\r\n  }\r\n  /**\r\n   * @inner\r\n   */\r\n\r\n\r\n  function createSymbol$1(name, lineData, idx) {\r\n    var symbolType = lineData.getItemVisual(idx, name);\r\n\r\n    if (!symbolType || symbolType === 'none') {\r\n      return;\r\n    }\r\n\r\n    var symbolSize = lineData.getItemVisual(idx, name + 'Size');\r\n    var symbolRotate = lineData.getItemVisual(idx, name + 'Rotate');\r\n    var symbolSizeArr = isArray(symbolSize) ? symbolSize : [symbolSize, symbolSize];\r\n    var symbolPath = createSymbol(symbolType, -symbolSizeArr[0] / 2, -symbolSizeArr[1] / 2, symbolSizeArr[0], symbolSizeArr[1]);\r\n    symbolPath.__specifiedRotation = symbolRotate == null || isNaN(symbolRotate) ? void 0 : +symbolRotate * Math.PI / 180 || 0;\r\n    symbolPath.name = name;\r\n    return symbolPath;\r\n  }\r\n\r\n  function createLine(points) {\r\n    var line = new ECLinePath({\r\n      name: 'line',\r\n      subPixelOptimize: true\r\n    });\r\n    setLinePoints(line.shape, points);\r\n    return line;\r\n  }\r\n\r\n  function setLinePoints(targetShape, points) {\r\n    targetShape.x1 = points[0][0];\r\n    targetShape.y1 = points[0][1];\r\n    targetShape.x2 = points[1][0];\r\n    targetShape.y2 = points[1][1];\r\n    targetShape.percent = 1;\r\n    var cp1 = points[2];\r\n\r\n    if (cp1) {\r\n      targetShape.cpx1 = cp1[0];\r\n      targetShape.cpy1 = cp1[1];\r\n    } else {\r\n      targetShape.cpx1 = NaN;\r\n      targetShape.cpy1 = NaN;\r\n    }\r\n  }\r\n\r\n  var Line$2 =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(Line$$1, _super);\r\n\r\n    function Line$$1(lineData, idx, seriesScope) {\r\n      var _this = _super.call(this) || this;\r\n\r\n      _this._createLine(lineData, idx, seriesScope);\r\n\r\n      return _this;\r\n    }\r\n\r\n    Line$$1.prototype._createLine = function (lineData, idx, seriesScope) {\r\n      var seriesModel = lineData.hostModel;\r\n      var linePoints = lineData.getItemLayout(idx);\r\n      var line = createLine(linePoints);\r\n      line.shape.percent = 0;\r\n      initProps(line, {\r\n        shape: {\r\n          percent: 1\r\n        }\r\n      }, seriesModel, idx);\r\n      this.add(line);\r\n      each$1(SYMBOL_CATEGORIES, function (symbolCategory) {\r\n        var symbol = createSymbol$1(symbolCategory, lineData, idx); // symbols must added after line to make sure\r\n        // it will be updated after line#update.\r\n        // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\r\n\r\n        this.add(symbol);\r\n        this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\r\n      }, this);\r\n\r\n      this._updateCommonStl(lineData, idx, seriesScope);\r\n    }; // TODO More strict on the List type in parameters?\r\n\r\n\r\n    Line$$1.prototype.updateData = function (lineData, idx, seriesScope) {\r\n      var seriesModel = lineData.hostModel;\r\n      var line = this.childOfName('line');\r\n      var linePoints = lineData.getItemLayout(idx);\r\n      var target = {\r\n        shape: {}\r\n      };\r\n      setLinePoints(target.shape, linePoints);\r\n      updateProps(line, target, seriesModel, idx);\r\n      each$1(SYMBOL_CATEGORIES, function (symbolCategory) {\r\n        var symbolType = lineData.getItemVisual(idx, symbolCategory);\r\n        var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\r\n\r\n        if (this[key] !== symbolType) {\r\n          this.remove(this.childOfName(symbolCategory));\r\n          var symbol = createSymbol$1(symbolCategory, lineData, idx);\r\n          this.add(symbol);\r\n        }\r\n\r\n        this[key] = symbolType;\r\n      }, this);\r\n\r\n      this._updateCommonStl(lineData, idx, seriesScope);\r\n    };\r\n\r\n    Line$$1.prototype.getLinePath = function () {\r\n      return this.childAt(0);\r\n    };\r\n\r\n    Line$$1.prototype._updateCommonStl = function (lineData, idx, seriesScope) {\r\n      var seriesModel = lineData.hostModel;\r\n      var line = this.childOfName('line');\r\n      var emphasisLineStyle = seriesScope && seriesScope.emphasisLineStyle;\r\n      var blurLineStyle = seriesScope && seriesScope.blurLineStyle;\r\n      var selectLineStyle = seriesScope && seriesScope.selectLineStyle;\r\n      var labelStatesModels = seriesScope && seriesScope.labelStatesModels; // Optimization for large dataset\r\n\r\n      if (!seriesScope || lineData.hasItemOption) {\r\n        var itemModel = lineData.getItemModel(idx);\r\n        emphasisLineStyle = itemModel.getModel(['emphasis', 'lineStyle']).getLineStyle();\r\n        blurLineStyle = itemModel.getModel(['blur', 'lineStyle']).getLineStyle();\r\n        selectLineStyle = itemModel.getModel(['select', 'lineStyle']).getLineStyle();\r\n        labelStatesModels = getLabelStatesModels(itemModel);\r\n      }\r\n\r\n      var lineStyle = lineData.getItemVisual(idx, 'style');\r\n      var visualColor = lineStyle.stroke;\r\n      line.useStyle(lineStyle);\r\n      line.style.fill = null;\r\n      line.style.strokeNoScale = true;\r\n      line.ensureState('emphasis').style = emphasisLineStyle;\r\n      line.ensureState('blur').style = blurLineStyle;\r\n      line.ensureState('select').style = selectLineStyle; // Update symbol\r\n\r\n      each$1(SYMBOL_CATEGORIES, function (symbolCategory) {\r\n        var symbol = this.childOfName(symbolCategory);\r\n\r\n        if (symbol) {\r\n          // Share opacity and color with line.\r\n          symbol.setColor(visualColor);\r\n          symbol.style.opacity = lineStyle.opacity;\r\n\r\n          for (var i = 0; i < SPECIAL_STATES.length; i++) {\r\n            var stateName = SPECIAL_STATES[i];\r\n            var lineState = line.getState(stateName);\r\n\r\n            if (lineState) {\r\n              var lineStateStyle = lineState.style || {};\r\n              var state = symbol.ensureState(stateName);\r\n              var stateStyle = state.style || (state.style = {});\r\n\r\n              if (lineStateStyle.stroke != null) {\r\n                stateStyle[symbol.__isEmptyBrush ? 'stroke' : 'fill'] = lineStateStyle.stroke;\r\n              }\r\n\r\n              if (lineStateStyle.opacity != null) {\r\n                stateStyle.opacity = lineStateStyle.opacity;\r\n              }\r\n            }\r\n          }\r\n\r\n          symbol.markRedraw();\r\n        }\r\n      }, this);\r\n      var rawVal = seriesModel.getRawValue(idx);\r\n      setLabelStyle(this, labelStatesModels, {\r\n        labelDataIndex: idx,\r\n        labelFetcher: {\r\n          getFormattedLabel: function (dataIndex, stateName) {\r\n            return seriesModel.getFormattedLabel(dataIndex, stateName, lineData.dataType);\r\n          }\r\n        },\r\n        inheritColor: visualColor || '#000',\r\n        defaultOpacity: lineStyle.opacity,\r\n        defaultText: (rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal) + ''\r\n      });\r\n      var label = this.getTextContent(); // Always set `textStyle` even if `normalStyle.text` is null, because default\r\n      // values have to be set on `normalStyle`.\r\n\r\n      if (label) {\r\n        var labelNormalModel = labelStatesModels.normal;\r\n        label.__align = label.style.align;\r\n        label.__verticalAlign = label.style.verticalAlign; // 'start', 'middle', 'end'\r\n\r\n        label.__position = labelNormalModel.get('position') || 'middle';\r\n        var distance$$1 = labelNormalModel.get('distance');\r\n\r\n        if (!isArray(distance$$1)) {\r\n          distance$$1 = [distance$$1, distance$$1];\r\n        }\r\n\r\n        label.__labelDistance = distance$$1;\r\n      }\r\n\r\n      this.setTextConfig({\r\n        position: null,\r\n        local: true,\r\n        inside: false // Can't be inside for stroke element.\r\n\r\n      });\r\n      enableHoverEmphasis(this);\r\n    };\r\n\r\n    Line$$1.prototype.highlight = function () {\r\n      enterEmphasis(this);\r\n    };\r\n\r\n    Line$$1.prototype.downplay = function () {\r\n      leaveEmphasis(this);\r\n    };\r\n\r\n    Line$$1.prototype.updateLayout = function (lineData, idx) {\r\n      this.setLinePoints(lineData.getItemLayout(idx));\r\n    };\r\n\r\n    Line$$1.prototype.setLinePoints = function (points) {\r\n      var linePath = this.childOfName('line');\r\n      setLinePoints(linePath.shape, points);\r\n      linePath.dirty();\r\n    };\r\n\r\n    Line$$1.prototype.beforeUpdate = function () {\r\n      var lineGroup = this;\r\n      var symbolFrom = lineGroup.childOfName('fromSymbol');\r\n      var symbolTo = lineGroup.childOfName('toSymbol');\r\n      var label = lineGroup.getTextContent(); // Quick reject\r\n\r\n      if (!symbolFrom && !symbolTo && (!label || label.ignore)) {\r\n        return;\r\n      }\r\n\r\n      var invScale = 1;\r\n      var parentNode = this.parent;\r\n\r\n      while (parentNode) {\r\n        if (parentNode.scaleX) {\r\n          invScale /= parentNode.scaleX;\r\n        }\r\n\r\n        parentNode = parentNode.parent;\r\n      }\r\n\r\n      var line = lineGroup.childOfName('line'); // If line not changed\r\n      // FIXME Parent scale changed\r\n\r\n      if (!this.__dirty && !line.__dirty) {\r\n        return;\r\n      }\r\n\r\n      var percent = line.shape.percent;\r\n      var fromPos = line.pointAt(0);\r\n      var toPos = line.pointAt(percent);\r\n      var d = sub([], toPos, fromPos);\r\n      normalize(d, d);\r\n\r\n      function setSymbolRotation(symbol, percent) {\r\n        // Fix #12388\r\n        // when symbol is set to be 'arrow' in markLine,\r\n        // symbolRotate value will be ignored, and compulsively use tangent angle.\r\n        // rotate by default if symbol rotation is not specified\r\n        var specifiedRotation = symbol.__specifiedRotation;\r\n\r\n        if (specifiedRotation == null) {\r\n          var tangent = line.tangentAt(percent);\r\n          symbol.attr('rotation', (percent === 1 ? -1 : 1) * Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\r\n        } else {\r\n          symbol.attr('rotation', specifiedRotation);\r\n        }\r\n      }\r\n\r\n      if (symbolFrom) {\r\n        symbolFrom.setPosition(fromPos);\r\n        setSymbolRotation(symbolFrom, 0);\r\n        symbolFrom.scaleX = symbolFrom.scaleY = invScale * percent;\r\n        symbolFrom.markRedraw();\r\n      }\r\n\r\n      if (symbolTo) {\r\n        symbolTo.setPosition(toPos);\r\n        setSymbolRotation(symbolTo, 1);\r\n        symbolTo.scaleX = symbolTo.scaleY = invScale * percent;\r\n        symbolTo.markRedraw();\r\n      }\r\n\r\n      if (label && !label.ignore) {\r\n        label.x = label.y = 0;\r\n        label.originX = label.originY = 0;\r\n        var textAlign = void 0;\r\n        var textVerticalAlign = void 0;\r\n        var distance$$1 = label.__labelDistance;\r\n        var distanceX = distance$$1[0] * invScale;\r\n        var distanceY = distance$$1[1] * invScale;\r\n        var halfPercent = percent / 2;\r\n        var tangent = line.tangentAt(halfPercent);\r\n        var n = [tangent[1], -tangent[0]];\r\n        var cp = line.pointAt(halfPercent);\r\n\r\n        if (n[1] > 0) {\r\n          n[0] = -n[0];\r\n          n[1] = -n[1];\r\n        }\r\n\r\n        var dir = tangent[0] < 0 ? -1 : 1;\r\n\r\n        if (label.__position !== 'start' && label.__position !== 'end') {\r\n          var rotation = -Math.atan2(tangent[1], tangent[0]);\r\n\r\n          if (toPos[0] < fromPos[0]) {\r\n            rotation = Math.PI + rotation;\r\n          }\r\n\r\n          label.rotation = rotation;\r\n        }\r\n\r\n        var dy = void 0;\r\n\r\n        switch (label.__position) {\r\n          case 'insideStartTop':\r\n          case 'insideMiddleTop':\r\n          case 'insideEndTop':\r\n          case 'middle':\r\n            dy = -distanceY;\r\n            textVerticalAlign = 'bottom';\r\n            break;\r\n\r\n          case 'insideStartBottom':\r\n          case 'insideMiddleBottom':\r\n          case 'insideEndBottom':\r\n            dy = distanceY;\r\n            textVerticalAlign = 'top';\r\n            break;\r\n\r\n          default:\r\n            dy = 0;\r\n            textVerticalAlign = 'middle';\r\n        }\r\n\r\n        switch (label.__position) {\r\n          case 'end':\r\n            label.x = d[0] * distanceX + toPos[0];\r\n            label.y = d[1] * distanceY + toPos[1];\r\n            textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\r\n            textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\r\n            break;\r\n\r\n          case 'start':\r\n            label.x = -d[0] * distanceX + fromPos[0];\r\n            label.y = -d[1] * distanceY + fromPos[1];\r\n            textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\r\n            textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\r\n            break;\r\n\r\n          case 'insideStartTop':\r\n          case 'insideStart':\r\n          case 'insideStartBottom':\r\n            label.x = distanceX * dir + fromPos[0];\r\n            label.y = fromPos[1] + dy;\r\n            textAlign = tangent[0] < 0 ? 'right' : 'left';\r\n            label.originX = -distanceX * dir;\r\n            label.originY = -dy;\r\n            break;\r\n\r\n          case 'insideMiddleTop':\r\n          case 'insideMiddle':\r\n          case 'insideMiddleBottom':\r\n          case 'middle':\r\n            label.x = cp[0];\r\n            label.y = cp[1] + dy;\r\n            textAlign = 'center';\r\n            label.originY = -dy;\r\n            break;\r\n\r\n          case 'insideEndTop':\r\n          case 'insideEnd':\r\n          case 'insideEndBottom':\r\n            label.x = -distanceX * dir + toPos[0];\r\n            label.y = toPos[1] + dy;\r\n            textAlign = tangent[0] >= 0 ? 'right' : 'left';\r\n            label.originX = distanceX * dir;\r\n            label.originY = -dy;\r\n            break;\r\n        }\r\n\r\n        label.scaleX = label.scaleY = invScale;\r\n        label.setStyle({\r\n          // Use the user specified text align and baseline first\r\n          verticalAlign: label.__verticalAlign || textVerticalAlign,\r\n          align: label.__align || textAlign\r\n        });\r\n      }\r\n    };\r\n\r\n    return Line$$1;\r\n  }(Group);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var LineDraw =\r\n  /** @class */\r\n  function () {\r\n    function LineDraw(LineCtor) {\r\n      this.group = new Group();\r\n      this._LineCtor = LineCtor || Line$2;\r\n    }\r\n\r\n    LineDraw.prototype.isPersistent = function () {\r\n      return true;\r\n    };\r\n\r\n    LineDraw.prototype.updateData = function (lineData) {\r\n      var _this = this;\r\n\r\n      var lineDraw = this;\r\n      var group = lineDraw.group;\r\n      var oldLineData = lineDraw._lineData;\r\n      lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\r\n      // stream mode to normal mode, where previous elements should be removed.\r\n\r\n      if (!oldLineData) {\r\n        group.removeAll();\r\n      }\r\n\r\n      var seriesScope = makeSeriesScope$1(lineData);\r\n      lineData.diff(oldLineData).add(function (idx) {\r\n        _this._doAdd(lineData, idx, seriesScope);\r\n      }).update(function (newIdx, oldIdx) {\r\n        _this._doUpdate(oldLineData, lineData, oldIdx, newIdx, seriesScope);\r\n      }).remove(function (idx) {\r\n        group.remove(oldLineData.getItemGraphicEl(idx));\r\n      }).execute();\r\n    };\r\n\r\n    LineDraw.prototype.updateLayout = function () {\r\n      var lineData = this._lineData; // Do not support update layout in incremental mode.\r\n\r\n      if (!lineData) {\r\n        return;\r\n      }\r\n\r\n      lineData.eachItemGraphicEl(function (el, idx) {\r\n        el.updateLayout(lineData, idx);\r\n      }, this);\r\n    };\r\n\r\n    LineDraw.prototype.incrementalPrepareUpdate = function (lineData) {\r\n      this._seriesScope = makeSeriesScope$1(lineData);\r\n      this._lineData = null;\r\n      this.group.removeAll();\r\n    };\r\n\r\n    LineDraw.prototype.incrementalUpdate = function (taskParams, lineData) {\r\n      function updateIncrementalAndHover(el) {\r\n        if (!el.isGroup && !isEffectObject(el)) {\r\n          el.incremental = true;\r\n          el.ensureState('emphasis').hoverLayer = true;\r\n        }\r\n      }\r\n\r\n      for (var idx = taskParams.start; idx < taskParams.end; idx++) {\r\n        var itemLayout = lineData.getItemLayout(idx);\r\n\r\n        if (lineNeedsDraw(itemLayout)) {\r\n          var el = new this._LineCtor(lineData, idx, this._seriesScope);\r\n          el.traverse(updateIncrementalAndHover);\r\n          this.group.add(el);\r\n          lineData.setItemGraphicEl(idx, el);\r\n        }\r\n      }\r\n    };\r\n\r\n    LineDraw.prototype.remove = function () {\r\n      this.group.removeAll();\r\n    };\r\n\r\n    LineDraw.prototype._doAdd = function (lineData, idx, seriesScope) {\r\n      var itemLayout = lineData.getItemLayout(idx);\r\n\r\n      if (!lineNeedsDraw(itemLayout)) {\r\n        return;\r\n      }\r\n\r\n      var el = new this._LineCtor(lineData, idx, seriesScope);\r\n      lineData.setItemGraphicEl(idx, el);\r\n      this.group.add(el);\r\n    };\r\n\r\n    LineDraw.prototype._doUpdate = function (oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\r\n      var itemEl = oldLineData.getItemGraphicEl(oldIdx);\r\n\r\n      if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\r\n        this.group.remove(itemEl);\r\n        return;\r\n      }\r\n\r\n      if (!itemEl) {\r\n        itemEl = new this._LineCtor(newLineData, newIdx, seriesScope);\r\n      } else {\r\n        itemEl.updateData(newLineData, newIdx, seriesScope);\r\n      }\r\n\r\n      newLineData.setItemGraphicEl(newIdx, itemEl);\r\n      this.group.add(itemEl);\r\n    };\r\n\r\n    return LineDraw;\r\n  }();\r\n\r\n  function isEffectObject(el) {\r\n    return el.animators && el.animators.length > 0;\r\n  }\r\n\r\n  function makeSeriesScope$1(lineData) {\r\n    var hostModel = lineData.hostModel;\r\n    return {\r\n      lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\r\n      emphasisLineStyle: hostModel.getModel(['emphasis', 'lineStyle']).getLineStyle(),\r\n      blurLineStyle: hostModel.getModel(['blur', 'lineStyle']).getLineStyle(),\r\n      selectLineStyle: hostModel.getModel(['select', 'lineStyle']).getLineStyle(),\r\n      labelStatesModels: getLabelStatesModels(hostModel)\r\n    };\r\n  }\r\n\r\n  function isPointNaN(pt) {\r\n    return isNaN(pt[0]) || isNaN(pt[1]);\r\n  }\r\n\r\n  function lineNeedsDraw(pts) {\r\n    return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n  // @ts-nocheck\r\n\r\n\r\n  var ATTR = '\\0_ec_interaction_mutex';\r\n\r\n  function take(zr, resourceKey, userKey) {\r\n    var store = getStore(zr);\r\n    store[resourceKey] = userKey;\r\n  }\r\n\r\n  function release(zr, resourceKey, userKey) {\r\n    var store = getStore(zr);\r\n    var uKey = store[resourceKey];\r\n\r\n    if (uKey === userKey) {\r\n      store[resourceKey] = null;\r\n    }\r\n  }\r\n\r\n  function isTaken(zr, resourceKey) {\r\n    return !!getStore(zr)[resourceKey];\r\n  }\r\n\r\n  function getStore(zr) {\r\n    return zr[ATTR] || (zr[ATTR] = {});\r\n  }\r\n  /**\r\n   * payload: {\r\n   *     type: 'takeGlobalCursor',\r\n   *     key: 'dataZoomSelect', or 'brush', or ...,\r\n   *         If no userKey, release global cursor.\r\n   * }\r\n   */\r\n  // TODO: SELF REGISTERED.\r\n\r\n\r\n  registerAction({\r\n    type: 'takeGlobalCursor',\r\n    event: 'globalCursorTaken',\r\n    update: 'update'\r\n  }, function () {});\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var RoamController =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(RoamController, _super);\r\n\r\n    function RoamController(zr) {\r\n      var _this = _super.call(this) || this;\r\n\r\n      _this._zr = zr; // Avoid two roamController bind the same handler\r\n\r\n      var mousedownHandler = bind(_this._mousedownHandler, _this);\r\n      var mousemoveHandler = bind(_this._mousemoveHandler, _this);\r\n      var mouseupHandler = bind(_this._mouseupHandler, _this);\r\n      var mousewheelHandler = bind(_this._mousewheelHandler, _this);\r\n      var pinchHandler = bind(_this._pinchHandler, _this);\r\n      /**\r\n       * Notice: only enable needed types. For example, if 'zoom'\r\n       * is not needed, 'zoom' should not be enabled, otherwise\r\n       * default mousewheel behaviour (scroll page) will be disabled.\r\n       */\r\n\r\n      _this.enable = function (controlType, opt) {\r\n        // Disable previous first\r\n        this.disable();\r\n        this._opt = defaults(clone(opt) || {}, {\r\n          zoomOnMouseWheel: true,\r\n          moveOnMouseMove: true,\r\n          // By default, wheel do not trigger move.\r\n          moveOnMouseWheel: false,\r\n          preventDefaultMouseMove: true\r\n        });\r\n\r\n        if (controlType == null) {\r\n          controlType = true;\r\n        }\r\n\r\n        if (controlType === true || controlType === 'move' || controlType === 'pan') {\r\n          zr.on('mousedown', mousedownHandler);\r\n          zr.on('mousemove', mousemoveHandler);\r\n          zr.on('mouseup', mouseupHandler);\r\n        }\r\n\r\n        if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\r\n          zr.on('mousewheel', mousewheelHandler);\r\n          zr.on('pinch', pinchHandler);\r\n        }\r\n      };\r\n\r\n      _this.disable = function () {\r\n        zr.off('mousedown', mousedownHandler);\r\n        zr.off('mousemove', mousemoveHandler);\r\n        zr.off('mouseup', mouseupHandler);\r\n        zr.off('mousewheel', mousewheelHandler);\r\n        zr.off('pinch', pinchHandler);\r\n      };\r\n\r\n      return _this;\r\n    }\r\n\r\n    RoamController.prototype.isDragging = function () {\r\n      return this._dragging;\r\n    };\r\n\r\n    RoamController.prototype.isPinching = function () {\r\n      return this._pinching;\r\n    };\r\n\r\n    RoamController.prototype.setPointerChecker = function (pointerChecker) {\r\n      this.pointerChecker = pointerChecker;\r\n    };\r\n\r\n    RoamController.prototype.dispose = function () {\r\n      this.disable();\r\n    };\r\n\r\n    RoamController.prototype._mousedownHandler = function (e) {\r\n      if (isMiddleOrRightButtonOnMouseUpDown(e) || e.target && e.target.draggable) {\r\n        return;\r\n      }\r\n\r\n      var x = e.offsetX;\r\n      var y = e.offsetY; // Only check on mosedown, but not mousemove.\r\n      // Mouse can be out of target when mouse moving.\r\n\r\n      if (this.pointerChecker && this.pointerChecker(e, x, y)) {\r\n        this._x = x;\r\n        this._y = y;\r\n        this._dragging = true;\r\n      }\r\n    };\r\n\r\n    RoamController.prototype._mousemoveHandler = function (e) {\r\n      if (!this._dragging || !isAvailableBehavior('moveOnMouseMove', e, this._opt) || e.gestureEvent === 'pinch' || isTaken(this._zr, 'globalPan')) {\r\n        return;\r\n      }\r\n\r\n      var x = e.offsetX;\r\n      var y = e.offsetY;\r\n      var oldX = this._x;\r\n      var oldY = this._y;\r\n      var dx = x - oldX;\r\n      var dy = y - oldY;\r\n      this._x = x;\r\n      this._y = y;\r\n      this._opt.preventDefaultMouseMove && stop(e.event);\r\n      trigger(this, 'pan', 'moveOnMouseMove', e, {\r\n        dx: dx,\r\n        dy: dy,\r\n        oldX: oldX,\r\n        oldY: oldY,\r\n        newX: x,\r\n        newY: y,\r\n        isAvailableBehavior: null\r\n      });\r\n    };\r\n\r\n    RoamController.prototype._mouseupHandler = function (e) {\r\n      if (!isMiddleOrRightButtonOnMouseUpDown(e)) {\r\n        this._dragging = false;\r\n      }\r\n    };\r\n\r\n    RoamController.prototype._mousewheelHandler = function (e) {\r\n      var shouldZoom = isAvailableBehavior('zoomOnMouseWheel', e, this._opt);\r\n      var shouldMove = isAvailableBehavior('moveOnMouseWheel', e, this._opt);\r\n      var wheelDelta = e.wheelDelta;\r\n      var absWheelDeltaDelta = Math.abs(wheelDelta);\r\n      var originX = e.offsetX;\r\n      var originY = e.offsetY; // wheelDelta maybe -0 in chrome mac.\r\n\r\n      if (wheelDelta === 0 || !shouldZoom && !shouldMove) {\r\n        return;\r\n      } // If both `shouldZoom` and `shouldMove` is true, trigger\r\n      // their event both, and the final behavior is determined\r\n      // by event listener themselves.\r\n\r\n\r\n      if (shouldZoom) {\r\n        // Convenience:\r\n        // Mac and VM Windows on Mac: scroll up: zoom out.\r\n        // Windows: scroll up: zoom in.\r\n        // FIXME: Should do more test in different environment.\r\n        // wheelDelta is too complicated in difference nvironment\r\n        // (https://developer.mozilla.org/en-US/docs/Web/Events/mousewheel),\r\n        // although it has been normallized by zrender.\r\n        // wheelDelta of mouse wheel is bigger than touch pad.\r\n        var factor = absWheelDeltaDelta > 3 ? 1.4 : absWheelDeltaDelta > 1 ? 1.2 : 1.1;\r\n        var scale = wheelDelta > 0 ? factor : 1 / factor;\r\n        checkPointerAndTrigger(this, 'zoom', 'zoomOnMouseWheel', e, {\r\n          scale: scale,\r\n          originX: originX,\r\n          originY: originY,\r\n          isAvailableBehavior: null\r\n        });\r\n      }\r\n\r\n      if (shouldMove) {\r\n        // FIXME: Should do more test in different environment.\r\n        var absDelta = Math.abs(wheelDelta); // wheelDelta of mouse wheel is bigger than touch pad.\r\n\r\n        var scrollDelta = (wheelDelta > 0 ? 1 : -1) * (absDelta > 3 ? 0.4 : absDelta > 1 ? 0.15 : 0.05);\r\n        checkPointerAndTrigger(this, 'scrollMove', 'moveOnMouseWheel', e, {\r\n          scrollDelta: scrollDelta,\r\n          originX: originX,\r\n          originY: originY,\r\n          isAvailableBehavior: null\r\n        });\r\n      }\r\n    };\r\n\r\n    RoamController.prototype._pinchHandler = function (e) {\r\n      if (isTaken(this._zr, 'globalPan')) {\r\n        return;\r\n      }\r\n\r\n      var scale = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\r\n      checkPointerAndTrigger(this, 'zoom', null, e, {\r\n        scale: scale,\r\n        originX: e.pinchX,\r\n        originY: e.pinchY,\r\n        isAvailableBehavior: null\r\n      });\r\n    };\r\n\r\n    return RoamController;\r\n  }(Eventful);\r\n\r\n  function checkPointerAndTrigger(controller, eventName, behaviorToCheck, e, contollerEvent) {\r\n    if (controller.pointerChecker && controller.pointerChecker(e, contollerEvent.originX, contollerEvent.originY)) {\r\n      // When mouse is out of roamController rect,\r\n      // default befavoius should not be be disabled, otherwise\r\n      // page sliding is disabled, contrary to expectation.\r\n      stop(e.event);\r\n      trigger(controller, eventName, behaviorToCheck, e, contollerEvent);\r\n    }\r\n  }\r\n\r\n  function trigger(controller, eventName, behaviorToCheck, e, contollerEvent) {\r\n    // Also provide behavior checker for event listener, for some case that\r\n    // multiple components share one listener.\r\n    contollerEvent.isAvailableBehavior = bind(isAvailableBehavior, null, behaviorToCheck, e);\r\n    controller.trigger(eventName, contollerEvent);\r\n  } // settings: {\r\n  //     zoomOnMouseWheel\r\n  //     moveOnMouseMove\r\n  //     moveOnMouseWheel\r\n  // }\r\n  // The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\r\n\r\n\r\n  function isAvailableBehavior(behaviorToCheck, e, settings) {\r\n    var setting = settings[behaviorToCheck];\r\n    return !behaviorToCheck || setting && (!isString(setting) || e.event[setting + 'Key']);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * For geo and graph.\r\n   */\r\n\r\n\r\n  function updateViewOnPan(controllerHost, dx, dy) {\r\n    var target = controllerHost.target;\r\n    target.x += dx;\r\n    target.y += dy;\r\n    target.dirty();\r\n  }\r\n  /**\r\n   * For geo and graph.\r\n   */\r\n\r\n\r\n  function updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\r\n    var target = controllerHost.target;\r\n    var zoomLimit = controllerHost.zoomLimit;\r\n    var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\r\n    newZoom *= zoomDelta;\r\n\r\n    if (zoomLimit) {\r\n      var zoomMin = zoomLimit.min || 0;\r\n      var zoomMax = zoomLimit.max || Infinity;\r\n      newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\r\n    }\r\n\r\n    var zoomScale = newZoom / controllerHost.zoom;\r\n    controllerHost.zoom = newZoom; // Keep the mouse center when scaling\r\n\r\n    target.x -= (zoomX - target.x) * (zoomScale - 1);\r\n    target.y -= (zoomY - target.y) * (zoomScale - 1);\r\n    target.scaleX *= zoomScale;\r\n    target.scaleY *= zoomScale;\r\n    target.dirty();\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var IRRELEVANT_EXCLUDES = {\r\n    'axisPointer': 1,\r\n    'tooltip': 1,\r\n    'brush': 1\r\n  };\r\n  /**\r\n   * Avoid that: mouse click on a elements that is over geo or graph,\r\n   * but roam is triggered.\r\n   */\r\n\r\n  function onIrrelevantElement(e, api, targetCoordSysModel) {\r\n    var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\r\n\r\n    var coordSys = model && model.coordinateSystem;\r\n    return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES.hasOwnProperty(model.mainType) && coordSys && coordSys.model !== targetCoordSysModel;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var v1 = [];\r\n  var v2 = [];\r\n  var v3 = [];\r\n  var quadraticAt$1 = quadraticAt;\r\n  var v2DistSquare = distSquare;\r\n  var mathAbs$2 = Math.abs;\r\n\r\n  function intersectCurveCircle(curvePoints, center, radius) {\r\n    var p0 = curvePoints[0];\r\n    var p1 = curvePoints[1];\r\n    var p2 = curvePoints[2];\r\n    var d = Infinity;\r\n    var t;\r\n    var radiusSquare = radius * radius;\r\n    var interval = 0.1;\r\n\r\n    for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\r\n      v1[0] = quadraticAt$1(p0[0], p1[0], p2[0], _t);\r\n      v1[1] = quadraticAt$1(p0[1], p1[1], p2[1], _t);\r\n      var diff = mathAbs$2(v2DistSquare(v1, center) - radiusSquare);\r\n\r\n      if (diff < d) {\r\n        d = diff;\r\n        t = _t;\r\n      }\r\n    } // Assume the segment is monotone，Find root through Bisection method\r\n    // At most 32 iteration\r\n\r\n\r\n    for (var i = 0; i < 32; i++) {\r\n      // let prev = t - interval;\r\n      var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\r\n      // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\r\n\r\n      v2[0] = quadraticAt$1(p0[0], p1[0], p2[0], t);\r\n      v2[1] = quadraticAt$1(p0[1], p1[1], p2[1], t);\r\n      v3[0] = quadraticAt$1(p0[0], p1[0], p2[0], next);\r\n      v3[1] = quadraticAt$1(p0[1], p1[1], p2[1], next);\r\n      var diff = v2DistSquare(v2, center) - radiusSquare;\r\n\r\n      if (mathAbs$2(diff) < 1e-2) {\r\n        break;\r\n      } // let prevDiff = v2DistSquare(v1, center) - radiusSquare;\r\n\r\n\r\n      var nextDiff = v2DistSquare(v3, center) - radiusSquare;\r\n      interval /= 2;\r\n\r\n      if (diff < 0) {\r\n        if (nextDiff >= 0) {\r\n          t = t + interval;\r\n        } else {\r\n          t = t - interval;\r\n        }\r\n      } else {\r\n        if (nextDiff >= 0) {\r\n          t = t - interval;\r\n        } else {\r\n          t = t + interval;\r\n        }\r\n      }\r\n    }\r\n\r\n    return t;\r\n  } // Adjust edge to avoid\r\n\r\n\r\n  function adjustEdge(graph, scale$$1) {\r\n    var tmp0 = [];\r\n    var quadraticSubdivide$$1 = quadraticSubdivide;\r\n    var pts = [[], [], []];\r\n    var pts2 = [[], []];\r\n    var v = [];\r\n    scale$$1 /= 2;\r\n    graph.eachEdge(function (edge, idx) {\r\n      var linePoints = edge.getLayout();\r\n      var fromSymbol = edge.getVisual('fromSymbol');\r\n      var toSymbol = edge.getVisual('toSymbol');\r\n\r\n      if (!linePoints.__original) {\r\n        linePoints.__original = [clone$1(linePoints[0]), clone$1(linePoints[1])];\r\n\r\n        if (linePoints[2]) {\r\n          linePoints.__original.push(clone$1(linePoints[2]));\r\n        }\r\n      }\r\n\r\n      var originalPoints = linePoints.__original; // Quadratic curve\r\n\r\n      if (linePoints[2] != null) {\r\n        copy(pts[0], originalPoints[0]);\r\n        copy(pts[1], originalPoints[2]);\r\n        copy(pts[2], originalPoints[1]);\r\n\r\n        if (fromSymbol && fromSymbol !== 'none') {\r\n          var symbolSize = getSymbolSize(edge.node1);\r\n          var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale$$1); // Subdivide and get the second\r\n\r\n          quadraticSubdivide$$1(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\r\n          pts[0][0] = tmp0[3];\r\n          pts[1][0] = tmp0[4];\r\n          quadraticSubdivide$$1(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\r\n          pts[0][1] = tmp0[3];\r\n          pts[1][1] = tmp0[4];\r\n        }\r\n\r\n        if (toSymbol && toSymbol !== 'none') {\r\n          var symbolSize = getSymbolSize(edge.node2);\r\n          var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale$$1); // Subdivide and get the first\r\n\r\n          quadraticSubdivide$$1(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\r\n          pts[1][0] = tmp0[1];\r\n          pts[2][0] = tmp0[2];\r\n          quadraticSubdivide$$1(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\r\n          pts[1][1] = tmp0[1];\r\n          pts[2][1] = tmp0[2];\r\n        } // Copy back to layout\r\n\r\n\r\n        copy(linePoints[0], pts[0]);\r\n        copy(linePoints[1], pts[2]);\r\n        copy(linePoints[2], pts[1]);\r\n      } // Line\r\n      else {\r\n          copy(pts2[0], originalPoints[0]);\r\n          copy(pts2[1], originalPoints[1]);\r\n          sub(v, pts2[1], pts2[0]);\r\n          normalize(v, v);\r\n\r\n          if (fromSymbol && fromSymbol !== 'none') {\r\n            var symbolSize = getSymbolSize(edge.node1);\r\n            scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale$$1);\r\n          }\r\n\r\n          if (toSymbol && toSymbol !== 'none') {\r\n            var symbolSize = getSymbolSize(edge.node2);\r\n            scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale$$1);\r\n          }\r\n\r\n          copy(linePoints[0], pts2[0]);\r\n          copy(linePoints[1], pts2[1]);\r\n        }\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function isViewCoordSys(coordSys) {\r\n    return coordSys.type === 'view';\r\n  }\r\n\r\n  var GraphView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(GraphView, _super);\r\n\r\n    function GraphView() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = GraphView.type;\r\n      return _this;\r\n    }\r\n\r\n    GraphView.prototype.init = function (ecModel, api) {\r\n      var symbolDraw = new SymbolDraw();\r\n      var lineDraw = new LineDraw();\r\n      var group = this.group;\r\n      this._controller = new RoamController(api.getZr());\r\n      this._controllerHost = {\r\n        target: group\r\n      };\r\n      group.add(symbolDraw.group);\r\n      group.add(lineDraw.group);\r\n      this._symbolDraw = symbolDraw;\r\n      this._lineDraw = lineDraw;\r\n      this._firstRender = true;\r\n    };\r\n\r\n    GraphView.prototype.render = function (seriesModel, ecModel, api) {\r\n      var _this = this;\r\n\r\n      var coordSys = seriesModel.coordinateSystem;\r\n      this._model = seriesModel;\r\n      var symbolDraw = this._symbolDraw;\r\n      var lineDraw = this._lineDraw;\r\n      var group = this.group;\r\n\r\n      if (isViewCoordSys(coordSys)) {\r\n        var groupNewProp = {\r\n          x: coordSys.x,\r\n          y: coordSys.y,\r\n          scaleX: coordSys.scaleX,\r\n          scaleY: coordSys.scaleY\r\n        };\r\n\r\n        if (this._firstRender) {\r\n          group.attr(groupNewProp);\r\n        } else {\r\n          updateProps(group, groupNewProp, seriesModel);\r\n        }\r\n      } // Fix edge contact point with node\r\n\r\n\r\n      adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\r\n      var data = seriesModel.getData();\r\n      symbolDraw.updateData(data);\r\n      var edgeData = seriesModel.getEdgeData(); // TODO: TYPE\r\n\r\n      lineDraw.updateData(edgeData);\r\n\r\n      this._updateNodeAndLinkScale();\r\n\r\n      this._updateController(seriesModel, ecModel, api);\r\n\r\n      clearTimeout(this._layoutTimeout);\r\n      var forceLayout = seriesModel.forceLayout;\r\n      var layoutAnimation = seriesModel.get(['force', 'layoutAnimation']);\r\n\r\n      if (forceLayout) {\r\n        this._startForceLayoutIteration(forceLayout, layoutAnimation);\r\n      }\r\n\r\n      data.graph.eachNode(function (node) {\r\n        var idx = node.dataIndex;\r\n        var el = node.getGraphicEl();\r\n        var itemModel = node.getModel(); // Update draggable\r\n\r\n        el.off('drag').off('dragend');\r\n        var draggable = itemModel.get('draggable');\r\n\r\n        if (draggable) {\r\n          el.on('drag', function () {\r\n            if (forceLayout) {\r\n              forceLayout.warmUp();\r\n              !_this._layouting && _this._startForceLayoutIteration(forceLayout, layoutAnimation);\r\n              forceLayout.setFixed(idx); // Write position back to layout\r\n\r\n              data.setItemLayout(idx, [el.x, el.y]);\r\n            }\r\n          }).on('dragend', function () {\r\n            if (forceLayout) {\r\n              forceLayout.setUnfixed(idx);\r\n            }\r\n          });\r\n        }\r\n\r\n        el.setDraggable(draggable && !!forceLayout);\r\n        var focus = itemModel.get(['emphasis', 'focus']);\r\n\r\n        if (focus === 'adjacency') {\r\n          getECData(el).focus = node.getAdjacentDataIndices();\r\n        }\r\n      });\r\n      data.graph.eachEdge(function (edge) {\r\n        var el = edge.getGraphicEl();\r\n        var focus = edge.getModel().get(['emphasis', 'focus']);\r\n\r\n        if (focus === 'adjacency') {\r\n          getECData(el).focus = {\r\n            edge: [edge.dataIndex],\r\n            node: [edge.node1.dataIndex, edge.node2.dataIndex]\r\n          };\r\n        }\r\n      });\r\n      var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get(['circular', 'rotateLabel']);\r\n      var cx = data.getLayout('cx');\r\n      var cy = data.getLayout('cy');\r\n      data.eachItemGraphicEl(function (el, idx) {\r\n        var itemModel = data.getItemModel(idx);\r\n        var labelRotate = itemModel.get(['label', 'rotate']) || 0;\r\n        var symbolPath = el.getSymbolPath();\r\n\r\n        if (circularRotateLabel) {\r\n          var pos = data.getItemLayout(idx);\r\n          var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\r\n\r\n          if (rad < 0) {\r\n            rad = Math.PI * 2 + rad;\r\n          }\r\n\r\n          var isLeft = pos[0] < cx;\r\n\r\n          if (isLeft) {\r\n            rad = rad - Math.PI;\r\n          }\r\n\r\n          var textPosition = isLeft ? 'left' : 'right';\r\n          symbolPath.setTextConfig({\r\n            rotation: -rad,\r\n            position: textPosition,\r\n            origin: 'center'\r\n          });\r\n          var emphasisState = symbolPath.ensureState('emphasis');\r\n          extend(emphasisState.textConfig || (emphasisState.textConfig = {}), {\r\n            position: textPosition\r\n          });\r\n        } else {\r\n          symbolPath.setTextConfig({\r\n            rotation: labelRotate *= Math.PI / 180\r\n          });\r\n        }\r\n      });\r\n      this._firstRender = false;\r\n    };\r\n\r\n    GraphView.prototype.dispose = function () {\r\n      this._controller && this._controller.dispose();\r\n      this._controllerHost = null;\r\n    };\r\n\r\n    GraphView.prototype._startForceLayoutIteration = function (forceLayout, layoutAnimation) {\r\n      var self = this;\r\n\r\n      (function step() {\r\n        forceLayout.step(function (stopped) {\r\n          self.updateLayout(self._model);\r\n          (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\r\n        });\r\n      })();\r\n    };\r\n\r\n    GraphView.prototype._updateController = function (seriesModel, ecModel, api) {\r\n      var _this = this;\r\n\r\n      var controller = this._controller;\r\n      var controllerHost = this._controllerHost;\r\n      var group = this.group;\r\n      controller.setPointerChecker(function (e, x, y) {\r\n        var rect = group.getBoundingRect();\r\n        rect.applyTransform(group.transform);\r\n        return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\r\n      });\r\n\r\n      if (!isViewCoordSys(seriesModel.coordinateSystem)) {\r\n        controller.disable();\r\n        return;\r\n      }\r\n\r\n      controller.enable(seriesModel.get('roam'));\r\n      controllerHost.zoomLimit = seriesModel.get('scaleLimit');\r\n      controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\r\n      controller.off('pan').off('zoom').on('pan', function (e) {\r\n        updateViewOnPan(controllerHost, e.dx, e.dy);\r\n        api.dispatchAction({\r\n          seriesId: seriesModel.id,\r\n          type: 'graphRoam',\r\n          dx: e.dx,\r\n          dy: e.dy\r\n        });\r\n      }).on('zoom', function (e) {\r\n        updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\r\n        api.dispatchAction({\r\n          seriesId: seriesModel.id,\r\n          type: 'graphRoam',\r\n          zoom: e.scale,\r\n          originX: e.originX,\r\n          originY: e.originY\r\n        });\r\n\r\n        _this._updateNodeAndLinkScale();\r\n\r\n        adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\r\n\r\n        _this._lineDraw.updateLayout(); // Only update label layout on zoom\r\n\r\n\r\n        api.updateLabelLayout();\r\n      });\r\n    };\r\n\r\n    GraphView.prototype._updateNodeAndLinkScale = function () {\r\n      var seriesModel = this._model;\r\n      var data = seriesModel.getData();\r\n      var nodeScale = getNodeGlobalScale(seriesModel);\r\n      data.eachItemGraphicEl(function (el, idx) {\r\n        el.setSymbolScale(nodeScale);\r\n      });\r\n    };\r\n\r\n    GraphView.prototype.updateLayout = function (seriesModel) {\r\n      adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\r\n\r\n      this._symbolDraw.updateLayout();\r\n\r\n      this._lineDraw.updateLayout();\r\n    };\r\n\r\n    GraphView.prototype.remove = function (ecModel, api) {\r\n      this._symbolDraw && this._symbolDraw.remove();\r\n      this._lineDraw && this._lineDraw.remove();\r\n    };\r\n\r\n    GraphView.type = 'graph';\r\n    return GraphView;\r\n  }(ChartView);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function generateNodeKey(id) {\r\n    return '_EC_' + id;\r\n  }\r\n\r\n  var Graph =\r\n  /** @class */\r\n  function () {\r\n    function Graph(directed) {\r\n      this.type = 'graph';\r\n      this.nodes = [];\r\n      this.edges = [];\r\n      this._nodesMap = {};\r\n      /**\r\n       * @type {Object.<string, module:echarts/data/Graph.Edge>}\r\n       * @private\r\n       */\r\n\r\n      this._edgesMap = {};\r\n      this._directed = directed || false;\r\n    }\r\n    /**\r\n     * If is directed graph\r\n     */\r\n\r\n\r\n    Graph.prototype.isDirected = function () {\r\n      return this._directed;\r\n    };\r\n    /**\r\n     * Add a new node\r\n     */\r\n\r\n\r\n    Graph.prototype.addNode = function (id, dataIndex) {\r\n      id = id == null ? '' + dataIndex : '' + id;\r\n      var nodesMap = this._nodesMap;\r\n\r\n      if (nodesMap[generateNodeKey(id)]) {\r\n        {\r\n          console.error('Graph nodes have duplicate name or id');\r\n        }\r\n        return;\r\n      }\r\n\r\n      var node = new GraphNode(id, dataIndex);\r\n      node.hostGraph = this;\r\n      this.nodes.push(node);\r\n      nodesMap[generateNodeKey(id)] = node;\r\n      return node;\r\n    };\r\n    /**\r\n     * Get node by data index\r\n     */\r\n\r\n\r\n    Graph.prototype.getNodeByIndex = function (dataIndex) {\r\n      var rawIdx = this.data.getRawIndex(dataIndex);\r\n      return this.nodes[rawIdx];\r\n    };\r\n    /**\r\n     * Get node by id\r\n     */\r\n\r\n\r\n    Graph.prototype.getNodeById = function (id) {\r\n      return this._nodesMap[generateNodeKey(id)];\r\n    };\r\n    /**\r\n     * Add a new edge\r\n     */\r\n\r\n\r\n    Graph.prototype.addEdge = function (n1, n2, dataIndex) {\r\n      var nodesMap = this._nodesMap;\r\n      var edgesMap = this._edgesMap; // PNEDING\r\n\r\n      if (typeof n1 === 'number') {\r\n        n1 = this.nodes[n1];\r\n      }\r\n\r\n      if (typeof n2 === 'number') {\r\n        n2 = this.nodes[n2];\r\n      }\r\n\r\n      if (!(n1 instanceof GraphNode)) {\r\n        n1 = nodesMap[generateNodeKey(n1)];\r\n      }\r\n\r\n      if (!(n2 instanceof GraphNode)) {\r\n        n2 = nodesMap[generateNodeKey(n2)];\r\n      }\r\n\r\n      if (!n1 || !n2) {\r\n        return;\r\n      }\r\n\r\n      var key = n1.id + '-' + n2.id;\r\n      var edge = new GraphEdge(n1, n2, dataIndex);\r\n      edge.hostGraph = this;\r\n\r\n      if (this._directed) {\r\n        n1.outEdges.push(edge);\r\n        n2.inEdges.push(edge);\r\n      }\r\n\r\n      n1.edges.push(edge);\r\n\r\n      if (n1 !== n2) {\r\n        n2.edges.push(edge);\r\n      }\r\n\r\n      this.edges.push(edge);\r\n      edgesMap[key] = edge;\r\n      return edge;\r\n    };\r\n    /**\r\n     * Get edge by data index\r\n     */\r\n\r\n\r\n    Graph.prototype.getEdgeByIndex = function (dataIndex) {\r\n      var rawIdx = this.edgeData.getRawIndex(dataIndex);\r\n      return this.edges[rawIdx];\r\n    };\r\n    /**\r\n     * Get edge by two linked nodes\r\n     */\r\n\r\n\r\n    Graph.prototype.getEdge = function (n1, n2) {\r\n      if (n1 instanceof GraphNode) {\r\n        n1 = n1.id;\r\n      }\r\n\r\n      if (n2 instanceof GraphNode) {\r\n        n2 = n2.id;\r\n      }\r\n\r\n      var edgesMap = this._edgesMap;\r\n\r\n      if (this._directed) {\r\n        return edgesMap[n1 + '-' + n2];\r\n      } else {\r\n        return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\r\n      }\r\n    };\r\n    /**\r\n     * Iterate all nodes\r\n     */\r\n\r\n\r\n    Graph.prototype.eachNode = function (cb, context) {\r\n      var nodes = this.nodes;\r\n      var len = nodes.length;\r\n\r\n      for (var i = 0; i < len; i++) {\r\n        if (nodes[i].dataIndex >= 0) {\r\n          cb.call(context, nodes[i], i);\r\n        }\r\n      }\r\n    };\r\n    /**\r\n     * Iterate all edges\r\n     */\r\n\r\n\r\n    Graph.prototype.eachEdge = function (cb, context) {\r\n      var edges = this.edges;\r\n      var len = edges.length;\r\n\r\n      for (var i = 0; i < len; i++) {\r\n        if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\r\n          cb.call(context, edges[i], i);\r\n        }\r\n      }\r\n    };\r\n    /**\r\n     * Breadth first traverse\r\n     * Return true to stop traversing\r\n     */\r\n\r\n\r\n    Graph.prototype.breadthFirstTraverse = function (cb, startNode, direction, context) {\r\n      if (!(startNode instanceof GraphNode)) {\r\n        startNode = this._nodesMap[generateNodeKey(startNode)];\r\n      }\r\n\r\n      if (!startNode) {\r\n        return;\r\n      }\r\n\r\n      var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\r\n\r\n      for (var i = 0; i < this.nodes.length; i++) {\r\n        this.nodes[i].__visited = false;\r\n      }\r\n\r\n      if (cb.call(context, startNode, null)) {\r\n        return;\r\n      }\r\n\r\n      var queue = [startNode];\r\n\r\n      while (queue.length) {\r\n        var currentNode = queue.shift();\r\n        var edges = currentNode[edgeType];\r\n\r\n        for (var i = 0; i < edges.length; i++) {\r\n          var e = edges[i];\r\n          var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\r\n\r\n          if (!otherNode.__visited) {\r\n            if (cb.call(context, otherNode, currentNode)) {\r\n              // Stop traversing\r\n              return;\r\n            }\r\n\r\n            queue.push(otherNode);\r\n            otherNode.__visited = true;\r\n          }\r\n        }\r\n      }\r\n    }; // TODO\r\n    // depthFirstTraverse(\r\n    //     cb, startNode, direction, context\r\n    // ) {\r\n    // };\r\n    // Filter update\r\n\r\n\r\n    Graph.prototype.update = function () {\r\n      var data = this.data;\r\n      var edgeData = this.edgeData;\r\n      var nodes = this.nodes;\r\n      var edges = this.edges;\r\n\r\n      for (var i = 0, len = nodes.length; i < len; i++) {\r\n        nodes[i].dataIndex = -1;\r\n      }\r\n\r\n      for (var i = 0, len = data.count(); i < len; i++) {\r\n        nodes[data.getRawIndex(i)].dataIndex = i;\r\n      }\r\n\r\n      edgeData.filterSelf(function (idx) {\r\n        var edge = edges[edgeData.getRawIndex(idx)];\r\n        return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\r\n      }); // Update edge\r\n\r\n      for (var i = 0, len = edges.length; i < len; i++) {\r\n        edges[i].dataIndex = -1;\r\n      }\r\n\r\n      for (var i = 0, len = edgeData.count(); i < len; i++) {\r\n        edges[edgeData.getRawIndex(i)].dataIndex = i;\r\n      }\r\n    };\r\n    /**\r\n     * @return {module:echarts/data/Graph}\r\n     */\r\n\r\n\r\n    Graph.prototype.clone = function () {\r\n      var graph = new Graph(this._directed);\r\n      var nodes = this.nodes;\r\n      var edges = this.edges;\r\n\r\n      for (var i = 0; i < nodes.length; i++) {\r\n        graph.addNode(nodes[i].id, nodes[i].dataIndex);\r\n      }\r\n\r\n      for (var i = 0; i < edges.length; i++) {\r\n        var e = edges[i];\r\n        graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\r\n      }\r\n\r\n      return graph;\r\n    };\r\n\r\n    return Graph;\r\n  }();\r\n\r\n  var GraphNode =\r\n  /** @class */\r\n  function () {\r\n    function GraphNode(id, dataIndex) {\r\n      this.inEdges = [];\r\n      this.outEdges = [];\r\n      this.edges = [];\r\n      this.dataIndex = -1;\r\n      this.id = id == null ? '' : id;\r\n      this.dataIndex = dataIndex == null ? -1 : dataIndex;\r\n    }\r\n    /**\r\n     * @return {number}\r\n     */\r\n\r\n\r\n    GraphNode.prototype.degree = function () {\r\n      return this.edges.length;\r\n    };\r\n    /**\r\n     * @return {number}\r\n     */\r\n\r\n\r\n    GraphNode.prototype.inDegree = function () {\r\n      return this.inEdges.length;\r\n    };\r\n    /**\r\n    * @return {number}\r\n    */\r\n\r\n\r\n    GraphNode.prototype.outDegree = function () {\r\n      return this.outEdges.length;\r\n    };\r\n\r\n    GraphNode.prototype.getModel = function (path) {\r\n      if (this.dataIndex < 0) {\r\n        return;\r\n      }\r\n\r\n      var graph = this.hostGraph;\r\n      var itemModel = graph.data.getItemModel(this.dataIndex);\r\n      return itemModel.getModel(path);\r\n    };\r\n\r\n    GraphNode.prototype.getAdjacentDataIndices = function () {\r\n      var dataIndices = {\r\n        edge: [],\r\n        node: []\r\n      };\r\n\r\n      for (var i = 0; i < this.edges.length; i++) {\r\n        var adjacentEdge = this.edges[i];\r\n\r\n        if (adjacentEdge.dataIndex < 0) {\r\n          continue;\r\n        }\r\n\r\n        dataIndices.edge.push(adjacentEdge.dataIndex);\r\n        dataIndices.node.push(adjacentEdge.node1.dataIndex, adjacentEdge.node2.dataIndex);\r\n      }\r\n\r\n      return dataIndices;\r\n    };\r\n\r\n    return GraphNode;\r\n  }();\r\n\r\n  var GraphEdge =\r\n  /** @class */\r\n  function () {\r\n    function GraphEdge(n1, n2, dataIndex) {\r\n      this.dataIndex = -1;\r\n      this.node1 = n1;\r\n      this.node2 = n2;\r\n      this.dataIndex = dataIndex == null ? -1 : dataIndex;\r\n    }\r\n\r\n    GraphEdge.prototype.getModel = function (path) {\r\n      if (this.dataIndex < 0) {\r\n        return;\r\n      }\r\n\r\n      var graph = this.hostGraph;\r\n      var itemModel = graph.edgeData.getItemModel(this.dataIndex);\r\n      return itemModel.getModel(path);\r\n    };\r\n\r\n    GraphEdge.prototype.getAdjacentDataIndices = function () {\r\n      return {\r\n        edge: [this.dataIndex],\r\n        node: [this.node1.dataIndex, this.node2.dataIndex]\r\n      };\r\n    };\r\n\r\n    return GraphEdge;\r\n  }();\r\n\r\n  function createGraphDataProxyMixin(hostName, dataName) {\r\n    return {\r\n      /**\r\n       * @param Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\r\n       */\r\n      getValue: function (dimension) {\r\n        var data = this[hostName][dataName];\r\n        return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\r\n      },\r\n      // TODO: TYPE stricter type.\r\n      setVisual: function (key, value) {\r\n        this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\r\n      },\r\n      getVisual: function (key) {\r\n        return this[hostName][dataName].getItemVisual(this.dataIndex, key);\r\n      },\r\n      setLayout: function (layout, merge$$1) {\r\n        this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge$$1);\r\n      },\r\n      getLayout: function () {\r\n        return this[hostName][dataName].getItemLayout(this.dataIndex);\r\n      },\r\n      getGraphicEl: function () {\r\n        return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\r\n      },\r\n      getRawIndex: function () {\r\n        return this[hostName][dataName].getRawIndex(this.dataIndex);\r\n      }\r\n    };\r\n  }\r\n\r\n  mixin(GraphNode, createGraphDataProxyMixin('hostGraph', 'data'));\r\n  mixin(GraphEdge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Link lists and struct (graph or tree)\r\n   */\r\n\r\n  var inner$5 = makeInner();\r\n\r\n  function linkList(opt) {\r\n    var mainData = opt.mainData;\r\n    var datas = opt.datas;\r\n\r\n    if (!datas) {\r\n      datas = {\r\n        main: mainData\r\n      };\r\n      opt.datasAttr = {\r\n        main: 'data'\r\n      };\r\n    }\r\n\r\n    opt.datas = opt.mainData = null;\r\n    linkAll(mainData, datas, opt); // Porxy data original methods.\r\n\r\n    each$1(datas, function (data) {\r\n      each$1(mainData.TRANSFERABLE_METHODS, function (methodName) {\r\n        data.wrapMethod(methodName, curry(transferInjection, opt));\r\n      });\r\n    }); // Beyond transfer, additional features should be added to `cloneShallow`.\r\n\r\n    mainData.wrapMethod('cloneShallow', curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\r\n    // another changable methods, which may bring about dead lock.\r\n\r\n    each$1(mainData.CHANGABLE_METHODS, function (methodName) {\r\n      mainData.wrapMethod(methodName, curry(changeInjection, opt));\r\n    }); // Make sure datas contains mainData.\r\n\r\n    assert$1(datas[mainData.dataType] === mainData);\r\n  }\r\n\r\n  function transferInjection(opt, res) {\r\n    if (isMainData(this)) {\r\n      // Transfer datas to new main data.\r\n      var datas = extend({}, inner$5(this).datas);\r\n      datas[this.dataType] = res;\r\n      linkAll(res, datas, opt);\r\n    } else {\r\n      // Modify the reference in main data to point newData.\r\n      linkSingle(res, this.dataType, inner$5(this).mainData, opt);\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  function changeInjection(opt, res) {\r\n    opt.struct && opt.struct.update();\r\n    return res;\r\n  }\r\n\r\n  function cloneShallowInjection(opt, res) {\r\n    // cloneShallow, which brings about some fragilities, may be inappropriate\r\n    // to be exposed as an API. So for implementation simplicity we can make\r\n    // the restriction that cloneShallow of not-mainData should not be invoked\r\n    // outside, but only be invoked here.\r\n    each$1(inner$5(res).datas, function (data, dataType) {\r\n      data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\r\n    });\r\n    return res;\r\n  }\r\n  /**\r\n   * Supplement method to List.\r\n   *\r\n   * @public\r\n   * @param [dataType] If not specified, return mainData.\r\n   */\r\n\r\n\r\n  function getLinkedData(dataType) {\r\n    var mainData = inner$5(this).mainData;\r\n    return dataType == null || mainData == null ? mainData : inner$5(mainData).datas[dataType];\r\n  }\r\n  /**\r\n   * Get list of all linked data\r\n   */\r\n\r\n\r\n  function getLinkedDataAll() {\r\n    var mainData = inner$5(this).mainData;\r\n    return mainData == null ? [{\r\n      data: mainData\r\n    }] : map(keys(inner$5(mainData).datas), function (type) {\r\n      return {\r\n        type: type,\r\n        data: inner$5(mainData).datas[type]\r\n      };\r\n    });\r\n  }\r\n\r\n  function isMainData(data) {\r\n    return inner$5(data).mainData === data;\r\n  }\r\n\r\n  function linkAll(mainData, datas, opt) {\r\n    inner$5(mainData).datas = {};\r\n    each$1(datas, function (data, dataType) {\r\n      linkSingle(data, dataType, mainData, opt);\r\n    });\r\n  }\r\n\r\n  function linkSingle(data, dataType, mainData, opt) {\r\n    inner$5(mainData).datas[dataType] = data;\r\n    inner$5(data).mainData = mainData;\r\n    data.dataType = dataType;\r\n\r\n    if (opt.struct) {\r\n      data[opt.structAttr] = opt.struct;\r\n      opt.struct[opt.datasAttr[dataType]] = data;\r\n    } // Supplement method.\r\n\r\n\r\n    data.getLinkedData = getLinkedData;\r\n    data.getLinkedDataAll = getLinkedDataAll;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function createGraphFromNodeEdge(nodes, edges, seriesModel, directed, beforeLink) {\r\n    // ??? TODO\r\n    // support dataset?\r\n    var graph = new Graph(directed);\r\n\r\n    for (var i = 0; i < nodes.length; i++) {\r\n      graph.addNode(retrieve( // Id, name, dataIndex\r\n      nodes[i].id, nodes[i].name, i), i);\r\n    }\r\n\r\n    var linkNameList = [];\r\n    var validEdges = [];\r\n    var linkCount = 0;\r\n\r\n    for (var i = 0; i < edges.length; i++) {\r\n      var link = edges[i];\r\n      var source = link.source;\r\n      var target = link.target; // addEdge may fail when source or target not exists\r\n\r\n      if (graph.addEdge(source, target, linkCount)) {\r\n        validEdges.push(link);\r\n        linkNameList.push(retrieve(convertOptionIdName(link.id, null), source + ' > ' + target));\r\n        linkCount++;\r\n      }\r\n    }\r\n\r\n    var coordSys = seriesModel.get('coordinateSystem');\r\n    var nodeData;\r\n\r\n    if (coordSys === 'cartesian2d' || coordSys === 'polar') {\r\n      nodeData = createListFromArray(nodes, seriesModel);\r\n    } else {\r\n      var coordSysCtor = CoordinateSystemManager.get(coordSys);\r\n      var coordDimensions = coordSysCtor ? coordSysCtor.dimensions || [] : []; // FIXME: Some geo do not need `value` dimenson, whereas `calendar` needs\r\n      // `value` dimension, but graph need `value` dimension. It's better to\r\n      // uniform this behavior.\r\n\r\n      if (indexOf$1(coordDimensions, 'value') < 0) {\r\n        coordDimensions.concat(['value']);\r\n      }\r\n\r\n      var dimensionNames = createDimensions(nodes, {\r\n        coordDimensions: coordDimensions\r\n      });\r\n      nodeData = new List(dimensionNames, seriesModel);\r\n      nodeData.initData(nodes);\r\n    }\r\n\r\n    var edgeData = new List(['value'], seriesModel);\r\n    edgeData.initData(validEdges, linkNameList);\r\n    beforeLink && beforeLink(nodeData, edgeData);\r\n    linkList({\r\n      mainData: nodeData,\r\n      struct: graph,\r\n      structAttr: 'graph',\r\n      datas: {\r\n        node: nodeData,\r\n        edge: edgeData\r\n      },\r\n      datasAttr: {\r\n        node: 'data',\r\n        edge: 'edgeData'\r\n      }\r\n    }); // Update dataIndex of nodes and edges because invalid edge may be removed\r\n\r\n    graph.update();\r\n    return graph;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * LegendVisualProvider is an bridge that pick encoded color from data and\r\n   * provide to the legend component.\r\n   */\r\n\r\n\r\n  var LegendVisualProvider =\r\n  /** @class */\r\n  function () {\r\n    function LegendVisualProvider( // Function to get data after filtered. It stores all the encoding info\r\n    getDataWithEncodedVisual, // Function to get raw data before filtered.\r\n    getRawData) {\r\n      this._getDataWithEncodedVisual = getDataWithEncodedVisual;\r\n      this._getRawData = getRawData;\r\n    }\r\n\r\n    LegendVisualProvider.prototype.getAllNames = function () {\r\n      var rawData = this._getRawData(); // We find the name from the raw data. In case it's filtered by the legend component.\r\n      // Normally, the name can be found in rawData, but can't be found in filtered data will display as gray.\r\n\r\n\r\n      return rawData.mapArray(rawData.getName);\r\n    };\r\n\r\n    LegendVisualProvider.prototype.containName = function (name) {\r\n      var rawData = this._getRawData();\r\n\r\n      return rawData.indexOfName(name) >= 0;\r\n    };\r\n\r\n    LegendVisualProvider.prototype.indexOfName = function (name) {\r\n      // Only get data when necessary.\r\n      // Because LegendVisualProvider constructor may be new in the stage that data is not prepared yet.\r\n      // Invoking Series#getData immediately will throw an error.\r\n      var dataWithEncodedVisual = this._getDataWithEncodedVisual();\r\n\r\n      return dataWithEncodedVisual.indexOfName(name);\r\n    };\r\n\r\n    LegendVisualProvider.prototype.getItemVisual = function (dataIndex, key) {\r\n      // Get encoded visual properties from final filtered data.\r\n      var dataWithEncodedVisual = this._getDataWithEncodedVisual();\r\n\r\n      return dataWithEncodedVisual.getItemVisual(dataIndex, key);\r\n    };\r\n\r\n    return LegendVisualProvider;\r\n  }();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var GraphSeriesModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(GraphSeriesModel, _super);\r\n\r\n    function GraphSeriesModel() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = GraphSeriesModel.type;\r\n      _this.hasSymbolVisual = true;\r\n      return _this;\r\n    }\r\n\r\n    GraphSeriesModel.prototype.init = function (option) {\r\n      _super.prototype.init.apply(this, arguments);\r\n\r\n      var self = this;\r\n\r\n      function getCategoriesData() {\r\n        return self._categoriesData;\r\n      } // Provide data for legend select\r\n\r\n\r\n      this.legendVisualProvider = new LegendVisualProvider(getCategoriesData, getCategoriesData);\r\n      this.fillDataTextStyle(option.edges || option.links);\r\n\r\n      this._updateCategoriesData();\r\n    };\r\n\r\n    GraphSeriesModel.prototype.mergeOption = function (option) {\r\n      _super.prototype.mergeOption.apply(this, arguments);\r\n\r\n      this.fillDataTextStyle(option.edges || option.links);\r\n\r\n      this._updateCategoriesData();\r\n    };\r\n\r\n    GraphSeriesModel.prototype.mergeDefaultAndTheme = function (option) {\r\n      _super.prototype.mergeDefaultAndTheme.apply(this, arguments);\r\n\r\n      defaultEmphasis(option, 'edgeLabel', ['show']);\r\n    };\r\n\r\n    GraphSeriesModel.prototype.getInitialData = function (option, ecModel) {\r\n      var edges = option.edges || option.links || [];\r\n      var nodes = option.data || option.nodes || [];\r\n      var self = this;\r\n\r\n      if (nodes && edges) {\r\n        // auto curveness\r\n        initCurvenessList(this);\r\n        var graph = createGraphFromNodeEdge(nodes, edges, this, true, beforeLink);\r\n        each$1(graph.edges, function (edge) {\r\n          createEdgeMapForCurveness(edge.node1, edge.node2, this, edge.dataIndex);\r\n        }, this);\r\n        return graph.data;\r\n      }\r\n\r\n      function beforeLink(nodeData, edgeData) {\r\n        // Overwrite nodeData.getItemModel to\r\n        nodeData.wrapMethod('getItemModel', function (model) {\r\n          var categoriesModels = self._categoriesModels;\r\n          var categoryIdx = model.getShallow('category');\r\n          var categoryModel = categoriesModels[categoryIdx];\r\n\r\n          if (categoryModel) {\r\n            categoryModel.parentModel = model.parentModel;\r\n            model.parentModel = categoryModel;\r\n          }\r\n\r\n          return model;\r\n        }); // TODO Inherit resolveParentPath by default in Model#getModel?\r\n\r\n        var oldGetModel = Model.prototype.getModel;\r\n\r\n        function newGetModel(path, parentModel) {\r\n          var model = oldGetModel.call(this, path, parentModel);\r\n          model.resolveParentPath = resolveParentPath;\r\n          return model;\r\n        }\r\n\r\n        edgeData.wrapMethod('getItemModel', function (model) {\r\n          model.resolveParentPath = resolveParentPath;\r\n          model.getModel = newGetModel;\r\n          return model;\r\n        });\r\n\r\n        function resolveParentPath(pathArr) {\r\n          if (pathArr && (pathArr[0] === 'label' || pathArr[1] === 'label')) {\r\n            var newPathArr = pathArr.slice();\r\n\r\n            if (pathArr[0] === 'label') {\r\n              newPathArr[0] = 'edgeLabel';\r\n            } else if (pathArr[1] === 'label') {\r\n              newPathArr[1] = 'edgeLabel';\r\n            }\r\n\r\n            return newPathArr;\r\n          }\r\n\r\n          return pathArr;\r\n        }\r\n      }\r\n    };\r\n\r\n    GraphSeriesModel.prototype.getGraph = function () {\r\n      return this.getData().graph;\r\n    };\r\n\r\n    GraphSeriesModel.prototype.getEdgeData = function () {\r\n      return this.getGraph().edgeData;\r\n    };\r\n\r\n    GraphSeriesModel.prototype.getCategoriesData = function () {\r\n      return this._categoriesData;\r\n    };\r\n\r\n    GraphSeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\r\n      if (dataType === 'edge') {\r\n        var nodeData = this.getData();\r\n        var params = this.getDataParams(dataIndex, dataType);\r\n        var edge = nodeData.graph.getEdgeByIndex(dataIndex);\r\n        var sourceName = nodeData.getName(edge.node1.dataIndex);\r\n        var targetName = nodeData.getName(edge.node2.dataIndex);\r\n        var nameArr = [];\r\n        sourceName != null && nameArr.push(sourceName);\r\n        targetName != null && nameArr.push(targetName);\r\n        return createTooltipMarkup('nameValue', {\r\n          name: nameArr.join(' > '),\r\n          value: params.value,\r\n          noValue: params.value == null\r\n        });\r\n      } // dataType === 'node' or empty\r\n\r\n\r\n      var nodeMarkup = defaultSeriesFormatTooltip({\r\n        series: this,\r\n        dataIndex: dataIndex,\r\n        multipleSeries: multipleSeries\r\n      });\r\n      return nodeMarkup;\r\n    };\r\n\r\n    GraphSeriesModel.prototype._updateCategoriesData = function () {\r\n      var categories = map(this.option.categories || [], function (category) {\r\n        // Data must has value\r\n        return category.value != null ? category : extend({\r\n          value: 0\r\n        }, category);\r\n      });\r\n      var categoriesData = new List(['value'], this);\r\n      categoriesData.initData(categories);\r\n      this._categoriesData = categoriesData;\r\n      this._categoriesModels = categoriesData.mapArray(function (idx) {\r\n        return categoriesData.getItemModel(idx);\r\n      });\r\n    };\r\n\r\n    GraphSeriesModel.prototype.setZoom = function (zoom) {\r\n      this.option.zoom = zoom;\r\n    };\r\n\r\n    GraphSeriesModel.prototype.setCenter = function (center) {\r\n      this.option.center = center;\r\n    };\r\n\r\n    GraphSeriesModel.prototype.isAnimationEnabled = function () {\r\n      return _super.prototype.isAnimationEnabled.call(this) // Not enable animation when do force layout\r\n      && !(this.get('layout') === 'force' && this.get(['force', 'layoutAnimation']));\r\n    };\r\n\r\n    GraphSeriesModel.type = 'series.graph';\r\n    GraphSeriesModel.dependencies = ['grid', 'polar', 'geo', 'singleAxis', 'calendar'];\r\n    GraphSeriesModel.defaultOption = {\r\n      zlevel: 0,\r\n      z: 2,\r\n      coordinateSystem: 'view',\r\n      // Default option for all coordinate systems\r\n      // xAxisIndex: 0,\r\n      // yAxisIndex: 0,\r\n      // polarIndex: 0,\r\n      // geoIndex: 0,\r\n      legendHoverLink: true,\r\n      layout: null,\r\n      // Configuration of circular layout\r\n      circular: {\r\n        rotateLabel: false\r\n      },\r\n      // Configuration of force directed layout\r\n      force: {\r\n        initLayout: null,\r\n        // Node repulsion. Can be an array to represent range.\r\n        repulsion: [0, 50],\r\n        gravity: 0.1,\r\n        // Initial friction\r\n        friction: 0.6,\r\n        // Edge length. Can be an array to represent range.\r\n        edgeLength: 30,\r\n        layoutAnimation: true\r\n      },\r\n      left: 'center',\r\n      top: 'center',\r\n      // right: null,\r\n      // bottom: null,\r\n      // width: '80%',\r\n      // height: '80%',\r\n      symbol: 'circle',\r\n      symbolSize: 10,\r\n      edgeSymbol: ['none', 'none'],\r\n      edgeSymbolSize: 10,\r\n      edgeLabel: {\r\n        position: 'middle',\r\n        distance: 5\r\n      },\r\n      draggable: false,\r\n      roam: false,\r\n      // Default on center of graph\r\n      center: null,\r\n      zoom: 1,\r\n      // Symbol size scale ratio in roam\r\n      nodeScaleRatio: 0.6,\r\n      // cursor: null,\r\n      // categories: [],\r\n      // data: []\r\n      // Or\r\n      // nodes: []\r\n      //\r\n      // links: []\r\n      // Or\r\n      // edges: []\r\n      label: {\r\n        show: false,\r\n        formatter: '{b}'\r\n      },\r\n      itemStyle: {},\r\n      lineStyle: {\r\n        color: '#aaa',\r\n        width: 1,\r\n        opacity: 0.5\r\n      },\r\n      emphasis: {\r\n        scale: true,\r\n        label: {\r\n          show: true\r\n        }\r\n      },\r\n      select: {\r\n        itemStyle: {\r\n          borderColor: '#212121'\r\n        }\r\n      }\r\n    };\r\n    return GraphSeriesModel;\r\n  }(SeriesModel);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function updateCenterAndZoom(view, payload, zoomLimit) {\r\n    var previousZoom = view.getZoom();\r\n    var center = view.getCenter();\r\n    var zoom = payload.zoom;\r\n    var point = view.dataToPoint(center);\r\n\r\n    if (payload.dx != null && payload.dy != null) {\r\n      point[0] -= payload.dx;\r\n      point[1] -= payload.dy;\r\n      view.setCenter(view.pointToData(point));\r\n    }\r\n\r\n    if (zoom != null) {\r\n      if (zoomLimit) {\r\n        var zoomMin = zoomLimit.min || 0;\r\n        var zoomMax = zoomLimit.max || Infinity;\r\n        zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\r\n      } // Zoom on given point(originX, originY)\r\n\r\n\r\n      view.scaleX *= zoom;\r\n      view.scaleY *= zoom;\r\n      var fixX = (payload.originX - view.x) * (zoom - 1);\r\n      var fixY = (payload.originY - view.y) * (zoom - 1);\r\n      view.x -= fixX;\r\n      view.y -= fixY;\r\n      view.updateTransform(); // Get the new center\r\n\r\n      view.setCenter(view.pointToData(point));\r\n      view.setZoom(zoom * previousZoom);\r\n    }\r\n\r\n    return {\r\n      center: view.getCenter(),\r\n      zoom: view.getZoom()\r\n    };\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var actionInfo = {\r\n    type: 'graphRoam',\r\n    event: 'graphRoam',\r\n    update: 'none'\r\n  };\r\n\r\n  function install$2(registers) {\r\n    registers.registerChartView(GraphView);\r\n    registers.registerSeriesModel(GraphSeriesModel);\r\n    registers.registerProcessor(categoryFilter);\r\n    registers.registerVisual(categoryVisual);\r\n    registers.registerVisual(graphEdgeVisual);\r\n    registers.registerLayout(graphSimpleLayout);\r\n    registers.registerLayout(registers.PRIORITY.VISUAL.POST_CHART_LAYOUT, graphCircularLayout);\r\n    registers.registerLayout(graphForceLayout);\r\n    registers.registerCoordinateSystem('graphView', {\r\n      dimensions: View.dimensions,\r\n      create: createViewCoordSys\r\n    }); // Register legacy focus actions\r\n\r\n    registers.registerAction({\r\n      type: 'focusNodeAdjacency',\r\n      event: 'focusNodeAdjacency',\r\n      update: 'series:focusNodeAdjacency'\r\n    }, function () {});\r\n    registers.registerAction({\r\n      type: 'unfocusNodeAdjacency',\r\n      event: 'unfocusNodeAdjacency',\r\n      update: 'series:unfocusNodeAdjacency'\r\n    }, function () {}); // Register roam action.\r\n\r\n    registers.registerAction(actionInfo, function (payload, ecModel) {\r\n      ecModel.eachComponent({\r\n        mainType: 'series',\r\n        query: payload\r\n      }, function (seriesModel) {\r\n        var coordSys = seriesModel.coordinateSystem;\r\n        var res = updateCenterAndZoom(coordSys, payload);\r\n        seriesModel.setCenter && seriesModel.setCenter(res.center);\r\n        seriesModel.setZoom && seriesModel.setZoom(res.zoom);\r\n      });\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  use(install$2);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var GridModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(GridModel, _super);\r\n\r\n    function GridModel() {\r\n      return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n\r\n    GridModel.type = 'grid';\r\n    GridModel.dependencies = ['xAxis', 'yAxis'];\r\n    GridModel.layoutMode = 'box';\r\n    GridModel.defaultOption = {\r\n      show: false,\r\n      zlevel: 0,\r\n      z: 0,\r\n      left: '10%',\r\n      top: 60,\r\n      right: '10%',\r\n      bottom: 70,\r\n      // If grid size contain label\r\n      containLabel: false,\r\n      // width: {totalWidth} - left - right,\r\n      // height: {totalHeight} - top - bottom,\r\n      backgroundColor: 'rgba(0,0,0,0)',\r\n      borderWidth: 1,\r\n      borderColor: '#ccc'\r\n    };\r\n    return GridModel;\r\n  }(ComponentModel);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var CartesianAxisModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(CartesianAxisModel, _super);\r\n\r\n    function CartesianAxisModel() {\r\n      return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n\r\n    CartesianAxisModel.prototype.getCoordSysModel = function () {\r\n      return this.getReferringComponents('grid', SINGLE_REFERRING).models[0];\r\n    };\r\n\r\n    CartesianAxisModel.type = 'cartesian2dAxis';\r\n    return CartesianAxisModel;\r\n  }(ComponentModel);\r\n\r\n  mixin(CartesianAxisModel, AxisModelCommonMixin);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var defaultOption = {\r\n    show: true,\r\n    zlevel: 0,\r\n    z: 0,\r\n    // Inverse the axis.\r\n    inverse: false,\r\n    // Axis name displayed.\r\n    name: '',\r\n    // 'start' | 'middle' | 'end'\r\n    nameLocation: 'end',\r\n    // By degree. By default auto rotate by nameLocation.\r\n    nameRotate: null,\r\n    nameTruncate: {\r\n      maxWidth: null,\r\n      ellipsis: '...',\r\n      placeholder: '.'\r\n    },\r\n    // Use global text style by default.\r\n    nameTextStyle: {},\r\n    // The gap between axisName and axisLine.\r\n    nameGap: 15,\r\n    // Default `false` to support tooltip.\r\n    silent: false,\r\n    // Default `false` to avoid legacy user event listener fail.\r\n    triggerEvent: false,\r\n    tooltip: {\r\n      show: false\r\n    },\r\n    axisPointer: {},\r\n    axisLine: {\r\n      show: true,\r\n      onZero: true,\r\n      onZeroAxisIndex: null,\r\n      lineStyle: {\r\n        color: '#6E7079',\r\n        width: 1,\r\n        type: 'solid'\r\n      },\r\n      // The arrow at both ends the the axis.\r\n      symbol: ['none', 'none'],\r\n      symbolSize: [10, 15]\r\n    },\r\n    axisTick: {\r\n      show: true,\r\n      // Whether axisTick is inside the grid or outside the grid.\r\n      inside: false,\r\n      // The length of axisTick.\r\n      length: 5,\r\n      lineStyle: {\r\n        width: 1\r\n      }\r\n    },\r\n    axisLabel: {\r\n      show: true,\r\n      // Whether axisLabel is inside the grid or outside the grid.\r\n      inside: false,\r\n      rotate: 0,\r\n      // true | false | null/undefined (auto)\r\n      showMinLabel: null,\r\n      // true | false | null/undefined (auto)\r\n      showMaxLabel: null,\r\n      margin: 8,\r\n      // formatter: null,\r\n      fontSize: 12\r\n    },\r\n    splitLine: {\r\n      show: true,\r\n      lineStyle: {\r\n        color: ['#E0E6F1'],\r\n        width: 1,\r\n        type: 'solid'\r\n      }\r\n    },\r\n    splitArea: {\r\n      show: false,\r\n      areaStyle: {\r\n        color: ['rgba(250,250,250,0.2)', 'rgba(210,219,238,0.2)']\r\n      }\r\n    }\r\n  };\r\n  var categoryAxis = merge({\r\n    // The gap at both ends of the axis. For categoryAxis, boolean.\r\n    boundaryGap: true,\r\n    // Set false to faster category collection.\r\n    deduplication: null,\r\n    // splitArea: {\r\n    // show: false\r\n    // },\r\n    splitLine: {\r\n      show: false\r\n    },\r\n    axisTick: {\r\n      // If tick is align with label when boundaryGap is true\r\n      alignWithLabel: false,\r\n      interval: 'auto'\r\n    },\r\n    axisLabel: {\r\n      interval: 'auto'\r\n    }\r\n  }, defaultOption);\r\n  var valueAxis = merge({\r\n    boundaryGap: [0, 0],\r\n    axisLine: {\r\n      // Not shown when other axis is categoryAxis in cartesian\r\n      show: 'auto'\r\n    },\r\n    axisTick: {\r\n      // Not shown when other axis is categoryAxis in cartesian\r\n      show: 'auto'\r\n    },\r\n    // TODO\r\n    // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\r\n    splitNumber: 5,\r\n    minorTick: {\r\n      // Minor tick, not available for cateogry axis.\r\n      show: false,\r\n      // Split number of minor ticks. The value should be in range of (0, 100)\r\n      splitNumber: 5,\r\n      // Lenght of minor tick\r\n      length: 3,\r\n      // Line style\r\n      lineStyle: {// Default to be same with axisTick\r\n      }\r\n    },\r\n    minorSplitLine: {\r\n      show: false,\r\n      lineStyle: {\r\n        color: '#F4F7FD',\r\n        width: 1\r\n      }\r\n    }\r\n  }, defaultOption);\r\n  var timeAxis = merge({\r\n    scale: true,\r\n    splitNumber: 6,\r\n    axisLabel: {\r\n      // To eliminate labels that are not nice\r\n      showMinLabel: false,\r\n      showMaxLabel: false,\r\n      rich: {\r\n        primary: {\r\n          fontWeight: 'bold'\r\n        }\r\n      }\r\n    },\r\n    splitLine: {\r\n      show: false\r\n    }\r\n  }, valueAxis);\r\n  var logAxis = defaults({\r\n    scale: true,\r\n    logBase: 10\r\n  }, valueAxis);\r\n  var axisDefault = {\r\n    category: categoryAxis,\r\n    value: valueAxis,\r\n    time: timeAxis,\r\n    log: logAxis\r\n  };\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var AXIS_TYPES = {\r\n    value: 1,\r\n    category: 1,\r\n    time: 1,\r\n    log: 1\r\n  };\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Generate sub axis model class\r\n   * @param axisName 'x' 'y' 'radius' 'angle' 'parallel' ...\r\n   */\r\n\r\n  function axisModelCreator(registers, axisName, BaseAxisModelClass, extraDefaultOption) {\r\n    each$1(AXIS_TYPES, function (v, axisType) {\r\n      var defaultOption = merge(merge({}, axisDefault[axisType], true), extraDefaultOption, true);\r\n\r\n      var AxisModel =\r\n      /** @class */\r\n      function (_super) {\r\n        __extends(AxisModel, _super);\r\n\r\n        function AxisModel() {\r\n          var args = [];\r\n\r\n          for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n          }\r\n\r\n          var _this = _super.apply(this, args) || this;\r\n\r\n          _this.type = axisName + 'Axis.' + axisType;\r\n          return _this;\r\n        }\r\n\r\n        AxisModel.prototype.mergeDefaultAndTheme = function (option, ecModel) {\r\n          var layoutMode = fetchLayoutMode(this);\r\n          var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\r\n          var themeModel = ecModel.getTheme();\r\n          merge(option, themeModel.get(axisType + 'Axis'));\r\n          merge(option, this.getDefaultOption());\r\n          option.type = getAxisType(option);\r\n\r\n          if (layoutMode) {\r\n            mergeLayoutParam(option, inputPositionParams, layoutMode);\r\n          }\r\n        };\r\n\r\n        AxisModel.prototype.optionUpdated = function () {\r\n          var thisOption = this.option;\r\n\r\n          if (thisOption.type === 'category') {\r\n            this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\r\n          }\r\n        };\r\n        /**\r\n         * Should not be called before all of 'getInitailData' finished.\r\n         * Because categories are collected during initializing data.\r\n         */\r\n\r\n\r\n        AxisModel.prototype.getCategories = function (rawData) {\r\n          var option = this.option; // FIXME\r\n          // warning if called before all of 'getInitailData' finished.\r\n\r\n          if (option.type === 'category') {\r\n            if (rawData) {\r\n              return option.data;\r\n            }\r\n\r\n            return this.__ordinalMeta.categories;\r\n          }\r\n        };\r\n\r\n        AxisModel.prototype.getOrdinalMeta = function () {\r\n          return this.__ordinalMeta;\r\n        };\r\n\r\n        AxisModel.type = axisName + 'Axis.' + axisType;\r\n        AxisModel.defaultOption = defaultOption;\r\n        return AxisModel;\r\n      }(BaseAxisModelClass);\r\n\r\n      registers.registerComponentModel(AxisModel);\r\n    });\r\n    registers.registerSubTypeDefaulter(axisName + 'Axis', getAxisType);\r\n  }\r\n\r\n  function getAxisType(option) {\r\n    // Default axis with data is category axis\r\n    return option.type || (option.data ? 'category' : 'value');\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var Cartesian =\r\n  /** @class */\r\n  function () {\r\n    function Cartesian(name) {\r\n      this.type = 'cartesian';\r\n      this._dimList = [];\r\n      this._axes = {};\r\n      this.name = name || '';\r\n    }\r\n\r\n    Cartesian.prototype.getAxis = function (dim) {\r\n      return this._axes[dim];\r\n    };\r\n\r\n    Cartesian.prototype.getAxes = function () {\r\n      return map(this._dimList, function (dim) {\r\n        return this._axes[dim];\r\n      }, this);\r\n    };\r\n\r\n    Cartesian.prototype.getAxesByScale = function (scaleType) {\r\n      scaleType = scaleType.toLowerCase();\r\n      return filter(this.getAxes(), function (axis) {\r\n        return axis.scale.type === scaleType;\r\n      });\r\n    };\r\n\r\n    Cartesian.prototype.addAxis = function (axis) {\r\n      var dim = axis.dim;\r\n      this._axes[dim] = axis;\r\n\r\n      this._dimList.push(dim);\r\n    };\r\n\r\n    return Cartesian;\r\n  }();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var cartesian2DDimensions = ['x', 'y'];\r\n\r\n  function canCalculateAffineTransform(scale$$1) {\r\n    return scale$$1.type === 'interval' || scale$$1.type === 'time';\r\n  }\r\n\r\n  var Cartesian2D =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(Cartesian2D, _super);\r\n\r\n    function Cartesian2D() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = 'cartesian2d';\r\n      _this.dimensions = cartesian2DDimensions;\r\n      return _this;\r\n    }\r\n    /**\r\n     * Calculate an affine transform matrix if two axes are time or value.\r\n     * It's mainly for accelartion on the large time series data.\r\n     */\r\n\r\n\r\n    Cartesian2D.prototype.calcAffineTransform = function () {\r\n      this._transform = this._invTransform = null;\r\n      var xAxisScale = this.getAxis('x').scale;\r\n      var yAxisScale = this.getAxis('y').scale;\r\n\r\n      if (!canCalculateAffineTransform(xAxisScale) || !canCalculateAffineTransform(yAxisScale)) {\r\n        return;\r\n      }\r\n\r\n      var xScaleExtent = xAxisScale.getExtent();\r\n      var yScaleExtent = yAxisScale.getExtent();\r\n      var start = this.dataToPoint([xScaleExtent[0], yScaleExtent[0]]);\r\n      var end = this.dataToPoint([xScaleExtent[1], yScaleExtent[1]]);\r\n      var xScaleSpan = xScaleExtent[1] - xScaleExtent[0];\r\n      var yScaleSpan = yScaleExtent[1] - yScaleExtent[0];\r\n\r\n      if (!xScaleSpan || !yScaleSpan) {\r\n        return;\r\n      } // Accelerate data to point calculation on the special large time series data.\r\n\r\n\r\n      var scaleX = (end[0] - start[0]) / xScaleSpan;\r\n      var scaleY = (end[1] - start[1]) / yScaleSpan;\r\n      var translateX = start[0] - xScaleExtent[0] * scaleX;\r\n      var translateY = start[1] - yScaleExtent[0] * scaleY;\r\n      var m = this._transform = [scaleX, 0, 0, scaleY, translateX, translateY];\r\n      this._invTransform = invert([], m);\r\n    };\r\n    /**\r\n     * Base axis will be used on stacking.\r\n     */\r\n\r\n\r\n    Cartesian2D.prototype.getBaseAxis = function () {\r\n      return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\r\n    };\r\n\r\n    Cartesian2D.prototype.containPoint = function (point) {\r\n      var axisX = this.getAxis('x');\r\n      var axisY = this.getAxis('y');\r\n      return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\r\n    };\r\n\r\n    Cartesian2D.prototype.containData = function (data) {\r\n      return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\r\n    };\r\n\r\n    Cartesian2D.prototype.dataToPoint = function (data, reserved, out) {\r\n      out = out || [];\r\n      var xVal = data[0];\r\n      var yVal = data[1]; // Fast path\r\n\r\n      if (this._transform // It's supported that if data is like `[Inifity, 123]`, where only Y pixel calculated.\r\n      && xVal != null && isFinite(xVal) && yVal != null && isFinite(yVal)) {\r\n        return applyTransform(out, data, this._transform);\r\n      }\r\n\r\n      var xAxis = this.getAxis('x');\r\n      var yAxis = this.getAxis('y');\r\n      out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(xVal));\r\n      out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(yVal));\r\n      return out;\r\n    };\r\n\r\n    Cartesian2D.prototype.clampData = function (data, out) {\r\n      var xScale = this.getAxis('x').scale;\r\n      var yScale = this.getAxis('y').scale;\r\n      var xAxisExtent = xScale.getExtent();\r\n      var yAxisExtent = yScale.getExtent();\r\n      var x = xScale.parse(data[0]);\r\n      var y = yScale.parse(data[1]);\r\n      out = out || [];\r\n      out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\r\n      out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\r\n      return out;\r\n    };\r\n\r\n    Cartesian2D.prototype.pointToData = function (point, out) {\r\n      out = out || [];\r\n\r\n      if (this._invTransform) {\r\n        return applyTransform(out, point, this._invTransform);\r\n      }\r\n\r\n      var xAxis = this.getAxis('x');\r\n      var yAxis = this.getAxis('y');\r\n      out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\r\n      out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\r\n      return out;\r\n    };\r\n\r\n    Cartesian2D.prototype.getOtherAxis = function (axis) {\r\n      return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\r\n    };\r\n    /**\r\n     * Get rect area of cartesian.\r\n     * Area will have a contain function to determine if a point is in the coordinate system.\r\n     */\r\n\r\n\r\n    Cartesian2D.prototype.getArea = function () {\r\n      var xExtent = this.getAxis('x').getGlobalExtent();\r\n      var yExtent = this.getAxis('y').getGlobalExtent();\r\n      var x = Math.min(xExtent[0], xExtent[1]);\r\n      var y = Math.min(yExtent[0], yExtent[1]);\r\n      var width = Math.max(xExtent[0], xExtent[1]) - x;\r\n      var height = Math.max(yExtent[0], yExtent[1]) - y;\r\n      return new BoundingRect(x, y, width, height);\r\n    };\r\n\r\n    return Cartesian2D;\r\n  }(Cartesian);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var Axis2D =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(Axis2D, _super);\r\n\r\n    function Axis2D(dim, scale, coordExtent, axisType, position) {\r\n      var _this = _super.call(this, dim, scale, coordExtent) || this;\r\n      /**\r\n       * Index of axis, can be used as key\r\n       * Injected outside.\r\n       */\r\n\r\n\r\n      _this.index = 0;\r\n      _this.type = axisType || 'value';\r\n      _this.position = position || 'bottom';\r\n      return _this;\r\n    }\r\n\r\n    Axis2D.prototype.isHorizontal = function () {\r\n      var position = this.position;\r\n      return position === 'top' || position === 'bottom';\r\n    };\r\n    /**\r\n     * Each item cooresponds to this.getExtent(), which\r\n     * means globalExtent[0] may greater than globalExtent[1],\r\n     * unless `asc` is input.\r\n     *\r\n     * @param {boolean} [asc]\r\n     * @return {Array.<number>}\r\n     */\r\n\r\n\r\n    Axis2D.prototype.getGlobalExtent = function (asc) {\r\n      var ret = this.getExtent();\r\n      ret[0] = this.toGlobalCoord(ret[0]);\r\n      ret[1] = this.toGlobalCoord(ret[1]);\r\n      asc && ret[0] > ret[1] && ret.reverse();\r\n      return ret;\r\n    };\r\n\r\n    Axis2D.prototype.pointToData = function (point, clamp) {\r\n      return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\r\n    };\r\n    /**\r\n     * Set ordinalSortInfo\r\n     * @param info new OrdinalSortInfo\r\n     */\r\n\r\n\r\n    Axis2D.prototype.setCategorySortInfo = function (info) {\r\n      if (this.type !== 'category') {\r\n        return false;\r\n      }\r\n\r\n      this.model.option.categorySortInfo = info;\r\n      this.scale.setSortInfo(info);\r\n    };\r\n\r\n    return Axis2D;\r\n  }(Axis);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Can only be called after coordinate system creation stage.\r\n   * (Can be called before coordinate system update stage).\r\n   */\r\n\r\n\r\n  function layout$1(gridModel, axisModel, opt) {\r\n    opt = opt || {};\r\n    var grid = gridModel.coordinateSystem;\r\n    var axis = axisModel.axis;\r\n    var layout = {};\r\n    var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\r\n    var rawAxisPosition = axis.position;\r\n    var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\r\n    var axisDim = axis.dim;\r\n    var rect = grid.getRect();\r\n    var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\r\n    var idx = {\r\n      left: 0,\r\n      right: 1,\r\n      top: 0,\r\n      bottom: 1,\r\n      onZero: 2\r\n    };\r\n    var axisOffset = axisModel.get('offset') || 0;\r\n    var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\r\n\r\n    if (otherAxisOnZeroOf) {\r\n      var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\r\n      posBound[idx.onZero] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\r\n    } // Axis position\r\n\r\n\r\n    layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\r\n\r\n    layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\r\n\r\n    var dirMap = {\r\n      top: -1,\r\n      bottom: 1,\r\n      left: -1,\r\n      right: 1\r\n    };\r\n    layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\r\n    layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx.onZero] : 0;\r\n\r\n    if (axisModel.get(['axisTick', 'inside'])) {\r\n      layout.tickDirection = -layout.tickDirection;\r\n    }\r\n\r\n    if (retrieve(opt.labelInside, axisModel.get(['axisLabel', 'inside']))) {\r\n      layout.labelDirection = -layout.labelDirection;\r\n    } // Special label rotation\r\n\r\n\r\n    var labelRotate = axisModel.get(['axisLabel', 'rotate']);\r\n    layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\r\n\r\n    layout.z2 = 1;\r\n    return layout;\r\n  }\r\n\r\n  function isCartesian2DSeries(seriesModel) {\r\n    return seriesModel.get('coordinateSystem') === 'cartesian2d';\r\n  }\r\n\r\n  function findAxisModels(seriesModel) {\r\n    var axisModelMap = {\r\n      xAxisModel: null,\r\n      yAxisModel: null\r\n    };\r\n    each$1(axisModelMap, function (v, key) {\r\n      var axisType = key.replace(/Model$/, '');\r\n      var axisModel = seriesModel.getReferringComponents(axisType, SINGLE_REFERRING).models[0];\r\n      {\r\n        if (!axisModel) {\r\n          throw new Error(axisType + ' \"' + retrieve3(seriesModel.get(axisType + 'Index'), seriesModel.get(axisType + 'Id'), 0) + '\" not found');\r\n        }\r\n      }\r\n      axisModelMap[key] = axisModel;\r\n    });\r\n    return axisModelMap;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Grid is a region which contains at most 4 cartesian systems\r\n   *\r\n   * TODO Default cartesian\r\n   */\r\n\r\n\r\n  var Grid =\r\n  /** @class */\r\n  function () {\r\n    function Grid(gridModel, ecModel, api) {\r\n      // FIXME:TS where used (different from registered type 'cartesian2d')?\r\n      this.type = 'grid';\r\n      this._coordsMap = {};\r\n      this._coordsList = [];\r\n      this._axesMap = {};\r\n      this._axesList = [];\r\n      this.axisPointerEnabled = true;\r\n      this.dimensions = cartesian2DDimensions;\r\n\r\n      this._initCartesian(gridModel, ecModel, api);\r\n\r\n      this.model = gridModel;\r\n    }\r\n\r\n    Grid.prototype.getRect = function () {\r\n      return this._rect;\r\n    };\r\n\r\n    Grid.prototype.update = function (ecModel, api) {\r\n      var axesMap = this._axesMap;\r\n\r\n      this._updateScale(ecModel, this.model);\r\n\r\n      each$1(axesMap.x, function (xAxis) {\r\n        niceScaleExtent(xAxis.scale, xAxis.model);\r\n      });\r\n      each$1(axesMap.y, function (yAxis) {\r\n        niceScaleExtent(yAxis.scale, yAxis.model);\r\n      }); // Key: axisDim_axisIndex, value: boolean, whether onZero target.\r\n\r\n      var onZeroRecords = {};\r\n      each$1(axesMap.x, function (xAxis) {\r\n        fixAxisOnZero(axesMap, 'y', xAxis, onZeroRecords);\r\n      });\r\n      each$1(axesMap.y, function (yAxis) {\r\n        fixAxisOnZero(axesMap, 'x', yAxis, onZeroRecords);\r\n      }); // Resize again if containLabel is enabled\r\n      // FIXME It may cause getting wrong grid size in data processing stage\r\n\r\n      this.resize(this.model, api);\r\n    };\r\n    /**\r\n     * Resize the grid\r\n     */\r\n\r\n\r\n    Grid.prototype.resize = function (gridModel, api, ignoreContainLabel) {\r\n      var boxLayoutParams = gridModel.getBoxLayoutParams();\r\n      var isContainLabel = !ignoreContainLabel && gridModel.get('containLabel');\r\n      var gridRect = getLayoutRect(boxLayoutParams, {\r\n        width: api.getWidth(),\r\n        height: api.getHeight()\r\n      });\r\n      this._rect = gridRect;\r\n      var axesList = this._axesList;\r\n      adjustAxes(); // Minus label size\r\n\r\n      if (isContainLabel) {\r\n        each$1(axesList, function (axis) {\r\n          if (!axis.model.get(['axisLabel', 'inside'])) {\r\n            var labelUnionRect = estimateLabelUnionRect(axis);\r\n\r\n            if (labelUnionRect) {\r\n              var dim = axis.isHorizontal() ? 'height' : 'width';\r\n              var margin = axis.model.get(['axisLabel', 'margin']);\r\n              gridRect[dim] -= labelUnionRect[dim] + margin;\r\n\r\n              if (axis.position === 'top') {\r\n                gridRect.y += labelUnionRect.height + margin;\r\n              } else if (axis.position === 'left') {\r\n                gridRect.x += labelUnionRect.width + margin;\r\n              }\r\n            }\r\n          }\r\n        });\r\n        adjustAxes();\r\n      }\r\n\r\n      each$1(this._coordsList, function (coord) {\r\n        // Calculate affine matrix to accelerate the data to point transform.\r\n        // If all the axes scales are time or value.\r\n        coord.calcAffineTransform();\r\n      });\r\n\r\n      function adjustAxes() {\r\n        each$1(axesList, function (axis) {\r\n          var isHorizontal = axis.isHorizontal();\r\n          var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\r\n          var idx = axis.inverse ? 1 : 0;\r\n          axis.setExtent(extent[idx], extent[1 - idx]);\r\n          updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\r\n        });\r\n      }\r\n    };\r\n\r\n    Grid.prototype.getAxis = function (dim, axisIndex) {\r\n      var axesMapOnDim = this._axesMap[dim];\r\n\r\n      if (axesMapOnDim != null) {\r\n        return axesMapOnDim[axisIndex || 0]; // if (axisIndex == null) {\r\n        //     Find first axis\r\n        //     for (let name in axesMapOnDim) {\r\n        //         if (axesMapOnDim.hasOwnProperty(name)) {\r\n        //             return axesMapOnDim[name];\r\n        //         }\r\n        //     }\r\n        // }\r\n        // return axesMapOnDim[axisIndex];\r\n      }\r\n    };\r\n\r\n    Grid.prototype.getAxes = function () {\r\n      return this._axesList.slice();\r\n    };\r\n\r\n    Grid.prototype.getCartesian = function (xAxisIndex, yAxisIndex) {\r\n      if (xAxisIndex != null && yAxisIndex != null) {\r\n        var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\r\n        return this._coordsMap[key];\r\n      }\r\n\r\n      if (isObject$1(xAxisIndex)) {\r\n        yAxisIndex = xAxisIndex.yAxisIndex;\r\n        xAxisIndex = xAxisIndex.xAxisIndex;\r\n      }\r\n\r\n      for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\r\n        if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\r\n          return coordList[i];\r\n        }\r\n      }\r\n    };\r\n\r\n    Grid.prototype.getCartesians = function () {\r\n      return this._coordsList.slice();\r\n    };\r\n    /**\r\n     * @implements\r\n     */\r\n\r\n\r\n    Grid.prototype.convertToPixel = function (ecModel, finder, value) {\r\n      var target = this._findConvertTarget(finder);\r\n\r\n      return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\r\n    };\r\n    /**\r\n     * @implements\r\n     */\r\n\r\n\r\n    Grid.prototype.convertFromPixel = function (ecModel, finder, value) {\r\n      var target = this._findConvertTarget(finder);\r\n\r\n      return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\r\n    };\r\n\r\n    Grid.prototype._findConvertTarget = function (finder) {\r\n      var seriesModel = finder.seriesModel;\r\n      var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis', SINGLE_REFERRING).models[0];\r\n      var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis', SINGLE_REFERRING).models[0];\r\n      var gridModel = finder.gridModel;\r\n      var coordsList = this._coordsList;\r\n      var cartesian;\r\n      var axis;\r\n\r\n      if (seriesModel) {\r\n        cartesian = seriesModel.coordinateSystem;\r\n        indexOf$1(coordsList, cartesian) < 0 && (cartesian = null);\r\n      } else if (xAxisModel && yAxisModel) {\r\n        cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\r\n      } else if (xAxisModel) {\r\n        axis = this.getAxis('x', xAxisModel.componentIndex);\r\n      } else if (yAxisModel) {\r\n        axis = this.getAxis('y', yAxisModel.componentIndex);\r\n      } // Lowest priority.\r\n      else if (gridModel) {\r\n          var grid = gridModel.coordinateSystem;\r\n\r\n          if (grid === this) {\r\n            cartesian = this._coordsList[0];\r\n          }\r\n        }\r\n\r\n      return {\r\n        cartesian: cartesian,\r\n        axis: axis\r\n      };\r\n    };\r\n    /**\r\n     * @implements\r\n     */\r\n\r\n\r\n    Grid.prototype.containPoint = function (point) {\r\n      var coord = this._coordsList[0];\r\n\r\n      if (coord) {\r\n        return coord.containPoint(point);\r\n      }\r\n    };\r\n    /**\r\n     * Initialize cartesian coordinate systems\r\n     */\r\n\r\n\r\n    Grid.prototype._initCartesian = function (gridModel, ecModel, api) {\r\n      var _this = this;\r\n\r\n      var grid = this;\r\n      var axisPositionUsed = {\r\n        left: false,\r\n        right: false,\r\n        top: false,\r\n        bottom: false\r\n      };\r\n      var axesMap = {\r\n        x: {},\r\n        y: {}\r\n      };\r\n      var axesCount = {\r\n        x: 0,\r\n        y: 0\r\n      }; /// Create axis\r\n\r\n      ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\r\n      ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\r\n\r\n      if (!axesCount.x || !axesCount.y) {\r\n        // Roll back when there no either x or y axis\r\n        this._axesMap = {};\r\n        this._axesList = [];\r\n        return;\r\n      }\r\n\r\n      this._axesMap = axesMap; /// Create cartesian2d\r\n\r\n      each$1(axesMap.x, function (xAxis, xAxisIndex) {\r\n        each$1(axesMap.y, function (yAxis, yAxisIndex) {\r\n          var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\r\n          var cartesian = new Cartesian2D(key);\r\n          cartesian.master = _this;\r\n          cartesian.model = gridModel;\r\n          _this._coordsMap[key] = cartesian;\r\n\r\n          _this._coordsList.push(cartesian);\r\n\r\n          cartesian.addAxis(xAxis);\r\n          cartesian.addAxis(yAxis);\r\n        });\r\n      });\r\n\r\n      function createAxisCreator(dimName) {\r\n        return function (axisModel, idx) {\r\n          if (!isAxisUsedInTheGrid(axisModel, gridModel)) {\r\n            return;\r\n          }\r\n\r\n          var axisPosition = axisModel.get('position');\r\n\r\n          if (dimName === 'x') {\r\n            // Fix position\r\n            if (axisPosition !== 'top' && axisPosition !== 'bottom') {\r\n              // Default bottom of X\r\n              axisPosition = axisPositionUsed.bottom ? 'top' : 'bottom';\r\n            }\r\n          } else {\r\n            // Fix position\r\n            if (axisPosition !== 'left' && axisPosition !== 'right') {\r\n              // Default left of Y\r\n              axisPosition = axisPositionUsed.left ? 'right' : 'left';\r\n            }\r\n          }\r\n\r\n          axisPositionUsed[axisPosition] = true;\r\n          var axis = new Axis2D(dimName, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\r\n          var isCategory = axis.type === 'category';\r\n          axis.onBand = isCategory && axisModel.get('boundaryGap');\r\n          axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\r\n\r\n          axisModel.axis = axis; // Inject axisModel into axis\r\n\r\n          axis.model = axisModel; // Inject grid info axis\r\n\r\n          axis.grid = grid; // Index of axis, can be used as key\r\n\r\n          axis.index = idx;\r\n\r\n          grid._axesList.push(axis);\r\n\r\n          axesMap[dimName][idx] = axis;\r\n          axesCount[dimName]++;\r\n        };\r\n      }\r\n    };\r\n    /**\r\n     * Update cartesian properties from series.\r\n     */\r\n\r\n\r\n    Grid.prototype._updateScale = function (ecModel, gridModel) {\r\n      // Reset scale\r\n      each$1(this._axesList, function (axis) {\r\n        axis.scale.setExtent(Infinity, -Infinity);\r\n\r\n        if (axis.type === 'category') {\r\n          var categorySortInfo = axis.model.get('categorySortInfo');\r\n          axis.scale.setSortInfo(categorySortInfo);\r\n        }\r\n      });\r\n      ecModel.eachSeries(function (seriesModel) {\r\n        if (isCartesian2DSeries(seriesModel)) {\r\n          var axesModelMap = findAxisModels(seriesModel);\r\n          var xAxisModel = axesModelMap.xAxisModel;\r\n          var yAxisModel = axesModelMap.yAxisModel;\r\n\r\n          if (!isAxisUsedInTheGrid(xAxisModel, gridModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel)) {\r\n            return;\r\n          }\r\n\r\n          var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\r\n          var data = seriesModel.getData();\r\n          var xAxis = cartesian.getAxis('x');\r\n          var yAxis = cartesian.getAxis('y');\r\n\r\n          if (data.type === 'list') {\r\n            unionExtent(data, xAxis);\r\n            unionExtent(data, yAxis);\r\n          }\r\n        }\r\n      }, this);\r\n\r\n      function unionExtent(data, axis) {\r\n        each$1(getDataDimensionsOnAxis(data, axis.dim), function (dim) {\r\n          axis.scale.unionExtentFromData(data, dim);\r\n        });\r\n      }\r\n    };\r\n    /**\r\n     * @param dim 'x' or 'y' or 'auto' or null/undefined\r\n     */\r\n\r\n\r\n    Grid.prototype.getTooltipAxes = function (dim) {\r\n      var baseAxes = [];\r\n      var otherAxes = [];\r\n      each$1(this.getCartesians(), function (cartesian) {\r\n        var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\r\n        var otherAxis = cartesian.getOtherAxis(baseAxis);\r\n        indexOf$1(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\r\n        indexOf$1(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\r\n      });\r\n      return {\r\n        baseAxes: baseAxes,\r\n        otherAxes: otherAxes\r\n      };\r\n    };\r\n\r\n    Grid.create = function (ecModel, api) {\r\n      var grids = [];\r\n      ecModel.eachComponent('grid', function (gridModel, idx) {\r\n        var grid = new Grid(gridModel, ecModel, api);\r\n        grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\r\n        // should be performed in create stage.\r\n\r\n        grid.resize(gridModel, api, true);\r\n        gridModel.coordinateSystem = grid;\r\n        grids.push(grid);\r\n      }); // Inject the coordinateSystems into seriesModel\r\n\r\n      ecModel.eachSeries(function (seriesModel) {\r\n        if (!isCartesian2DSeries(seriesModel)) {\r\n          return;\r\n        }\r\n\r\n        var axesModelMap = findAxisModels(seriesModel);\r\n        var xAxisModel = axesModelMap.xAxisModel;\r\n        var yAxisModel = axesModelMap.yAxisModel;\r\n        var gridModel = xAxisModel.getCoordSysModel();\r\n        {\r\n          if (!gridModel) {\r\n            throw new Error('Grid \"' + retrieve3(xAxisModel.get('gridIndex'), xAxisModel.get('gridId'), 0) + '\" not found');\r\n          }\r\n\r\n          if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\r\n            throw new Error('xAxis and yAxis must use the same grid');\r\n          }\r\n        }\r\n        var grid = gridModel.coordinateSystem;\r\n        seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\r\n      });\r\n      return grids;\r\n    }; // For deciding which dimensions to use when creating list data\r\n\r\n\r\n    Grid.dimensions = cartesian2DDimensions;\r\n    return Grid;\r\n  }();\r\n  /**\r\n   * Check if the axis is used in the specified grid.\r\n   */\r\n\r\n\r\n  function isAxisUsedInTheGrid(axisModel, gridModel) {\r\n    return axisModel.getCoordSysModel() === gridModel;\r\n  }\r\n\r\n  function fixAxisOnZero(axesMap, otherAxisDim, axis, // Key: see `getOnZeroRecordKey`\r\n  onZeroRecords) {\r\n    axis.getAxesOnZeroOf = function () {\r\n      // TODO: onZero of multiple axes.\r\n      return otherAxisOnZeroOf ? [otherAxisOnZeroOf] : [];\r\n    }; // onZero can not be enabled in these two situations:\r\n    // 1. When any other axis is a category axis.\r\n    // 2. When no axis is cross 0 point.\r\n\r\n\r\n    var otherAxes = axesMap[otherAxisDim];\r\n    var otherAxisOnZeroOf;\r\n    var axisModel = axis.model;\r\n    var onZero = axisModel.get(['axisLine', 'onZero']);\r\n    var onZeroAxisIndex = axisModel.get(['axisLine', 'onZeroAxisIndex']);\r\n\r\n    if (!onZero) {\r\n      return;\r\n    } // If target axis is specified.\r\n\r\n\r\n    if (onZeroAxisIndex != null) {\r\n      if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\r\n        otherAxisOnZeroOf = otherAxes[onZeroAxisIndex];\r\n      }\r\n    } else {\r\n      // Find the first available other axis.\r\n      for (var idx in otherAxes) {\r\n        if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx]) // Consider that two Y axes on one value axis,\r\n        // if both onZero, the two Y axes overlap.\r\n        && !onZeroRecords[getOnZeroRecordKey(otherAxes[idx])]) {\r\n          otherAxisOnZeroOf = otherAxes[idx];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (otherAxisOnZeroOf) {\r\n      onZeroRecords[getOnZeroRecordKey(otherAxisOnZeroOf)] = true;\r\n    }\r\n\r\n    function getOnZeroRecordKey(axis) {\r\n      return axis.dim + '_' + axis.index;\r\n    }\r\n  }\r\n\r\n  function canOnZeroToAxis(axis) {\r\n    return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\r\n  }\r\n\r\n  function updateAxisTransform(axis, coordBase) {\r\n    var axisExtent = axis.getExtent();\r\n    var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\r\n\r\n    axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\r\n      return coord + coordBase;\r\n    } : function (coord) {\r\n      return axisExtentSum - coord + coordBase;\r\n    };\r\n    axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\r\n      return coord - coordBase;\r\n    } : function (coord) {\r\n      return axisExtentSum - coord + coordBase;\r\n    };\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var PI$5 = Math.PI;\r\n  /**\r\n   * A final axis is translated and rotated from a \"standard axis\".\r\n   * So opt.position and opt.rotation is required.\r\n   *\r\n   * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\r\n   * for example: (0, 0) ------------> (0, 50)\r\n   *\r\n   * nameDirection or tickDirection or labelDirection is 1 means tick\r\n   * or label is below the standard axis, whereas is -1 means above\r\n   * the standard axis. labelOffset means offset between label and axis,\r\n   * which is useful when 'onZero', where axisLabel is in the grid and\r\n   * label in outside grid.\r\n   *\r\n   * Tips: like always,\r\n   * positive rotation represents anticlockwise, and negative rotation\r\n   * represents clockwise.\r\n   * The direction of position coordinate is the same as the direction\r\n   * of screen coordinate.\r\n   *\r\n   * Do not need to consider axis 'inverse', which is auto processed by\r\n   * axis extent.\r\n   */\r\n\r\n  var AxisBuilder =\r\n  /** @class */\r\n  function () {\r\n    function AxisBuilder(axisModel, opt) {\r\n      this.group = new Group();\r\n      this.opt = opt;\r\n      this.axisModel = axisModel; // Default value\r\n\r\n      defaults(opt, {\r\n        labelOffset: 0,\r\n        nameDirection: 1,\r\n        tickDirection: 1,\r\n        labelDirection: 1,\r\n        silent: true,\r\n        handleAutoShown: function () {\r\n          return true;\r\n        }\r\n      }); // FIXME Not use a seperate text group?\r\n\r\n      var transformGroup = new Group({\r\n        x: opt.position[0],\r\n        y: opt.position[1],\r\n        rotation: opt.rotation\r\n      }); // this.group.add(transformGroup);\r\n      // this._transformGroup = transformGroup;\r\n\r\n      transformGroup.updateTransform();\r\n      this._transformGroup = transformGroup;\r\n    }\r\n\r\n    AxisBuilder.prototype.hasBuilder = function (name) {\r\n      return !!builders[name];\r\n    };\r\n\r\n    AxisBuilder.prototype.add = function (name) {\r\n      builders[name](this.opt, this.axisModel, this.group, this._transformGroup);\r\n    };\r\n\r\n    AxisBuilder.prototype.getGroup = function () {\r\n      return this.group;\r\n    };\r\n\r\n    AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\r\n      var rotationDiff = remRadian(textRotation - axisRotation);\r\n      var textAlign;\r\n      var textVerticalAlign;\r\n\r\n      if (isRadianAroundZero(rotationDiff)) {\r\n        // Label is parallel with axis line.\r\n        textVerticalAlign = direction > 0 ? 'top' : 'bottom';\r\n        textAlign = 'center';\r\n      } else if (isRadianAroundZero(rotationDiff - PI$5)) {\r\n        // Label is inverse parallel with axis line.\r\n        textVerticalAlign = direction > 0 ? 'bottom' : 'top';\r\n        textAlign = 'center';\r\n      } else {\r\n        textVerticalAlign = 'middle';\r\n\r\n        if (rotationDiff > 0 && rotationDiff < PI$5) {\r\n          textAlign = direction > 0 ? 'right' : 'left';\r\n        } else {\r\n          textAlign = direction > 0 ? 'left' : 'right';\r\n        }\r\n      }\r\n\r\n      return {\r\n        rotation: rotationDiff,\r\n        textAlign: textAlign,\r\n        textVerticalAlign: textVerticalAlign\r\n      };\r\n    };\r\n\r\n    AxisBuilder.makeAxisEventDataBase = function (axisModel) {\r\n      var eventData = {\r\n        componentType: axisModel.mainType,\r\n        componentIndex: axisModel.componentIndex\r\n      };\r\n      eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\r\n      return eventData;\r\n    };\r\n\r\n    AxisBuilder.isLabelSilent = function (axisModel) {\r\n      var tooltipOpt = axisModel.get('tooltip');\r\n      return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\r\n      || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\r\n    };\r\n\r\n    return AxisBuilder;\r\n  }();\r\n\r\n  var builders = {\r\n    axisLine: function (opt, axisModel, group, transformGroup) {\r\n      var shown = axisModel.get(['axisLine', 'show']);\r\n\r\n      if (shown === 'auto' && opt.handleAutoShown) {\r\n        shown = opt.handleAutoShown('axisLine');\r\n      }\r\n\r\n      if (!shown) {\r\n        return;\r\n      }\r\n\r\n      var extent = axisModel.axis.getExtent();\r\n      var matrix = transformGroup.transform;\r\n      var pt1 = [extent[0], 0];\r\n      var pt2 = [extent[1], 0];\r\n\r\n      if (matrix) {\r\n        applyTransform(pt1, pt1, matrix);\r\n        applyTransform(pt2, pt2, matrix);\r\n      }\r\n\r\n      var lineStyle = extend({\r\n        lineCap: 'round'\r\n      }, axisModel.getModel(['axisLine', 'lineStyle']).getLineStyle());\r\n      var line = new Line({\r\n        // Id for animation\r\n        subPixelOptimize: true,\r\n        shape: {\r\n          x1: pt1[0],\r\n          y1: pt1[1],\r\n          x2: pt2[0],\r\n          y2: pt2[1]\r\n        },\r\n        style: lineStyle,\r\n        strokeContainThreshold: opt.strokeContainThreshold || 5,\r\n        silent: true,\r\n        z2: 1\r\n      });\r\n      line.anid = 'line';\r\n      group.add(line);\r\n      var arrows = axisModel.get(['axisLine', 'symbol']);\r\n      var arrowSize = axisModel.get(['axisLine', 'symbolSize']);\r\n      var arrowOffset = axisModel.get(['axisLine', 'symbolOffset']) || 0;\r\n\r\n      if (typeof arrowOffset === 'number') {\r\n        arrowOffset = [arrowOffset, arrowOffset];\r\n      }\r\n\r\n      if (arrows != null) {\r\n        if (typeof arrows === 'string') {\r\n          // Use the same arrow for start and end point\r\n          arrows = [arrows, arrows];\r\n        }\r\n\r\n        if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\r\n          // Use the same size for width and height\r\n          arrowSize = [arrowSize, arrowSize];\r\n        }\r\n\r\n        var symbolWidth_1 = arrowSize[0];\r\n        var symbolHeight_1 = arrowSize[1];\r\n        each$1([{\r\n          rotate: opt.rotation + Math.PI / 2,\r\n          offset: arrowOffset[0],\r\n          r: 0\r\n        }, {\r\n          rotate: opt.rotation - Math.PI / 2,\r\n          offset: arrowOffset[1],\r\n          r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\r\n        }], function (point, index) {\r\n          if (arrows[index] !== 'none' && arrows[index] != null) {\r\n            var symbol = createSymbol(arrows[index], -symbolWidth_1 / 2, -symbolHeight_1 / 2, symbolWidth_1, symbolHeight_1, lineStyle.stroke, true); // Calculate arrow position with offset\r\n\r\n            var r = point.r + point.offset;\r\n            symbol.attr({\r\n              rotation: point.rotate,\r\n              x: pt1[0] + r * Math.cos(opt.rotation),\r\n              y: pt1[1] - r * Math.sin(opt.rotation),\r\n              silent: true,\r\n              z2: 11\r\n            });\r\n            group.add(symbol);\r\n          }\r\n        });\r\n      }\r\n    },\r\n    axisTickLabel: function (opt, axisModel, group, transformGroup) {\r\n      var ticksEls = buildAxisMajorTicks(group, transformGroup, axisModel, opt);\r\n      var labelEls = buildAxisLabel(group, transformGroup, axisModel, opt);\r\n      fixMinMaxLabelShow(axisModel, labelEls, ticksEls);\r\n      buildAxisMinorTicks(group, transformGroup, axisModel, opt.tickDirection);\r\n    },\r\n    axisName: function (opt, axisModel, group, transformGroup) {\r\n      var name = retrieve(opt.axisName, axisModel.get('name'));\r\n\r\n      if (!name) {\r\n        return;\r\n      }\r\n\r\n      var nameLocation = axisModel.get('nameLocation');\r\n      var nameDirection = opt.nameDirection;\r\n      var textStyleModel = axisModel.getModel('nameTextStyle');\r\n      var gap = axisModel.get('nameGap') || 0;\r\n      var extent = axisModel.axis.getExtent();\r\n      var gapSignal = extent[0] > extent[1] ? -1 : 1;\r\n      var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // Reuse labelOffset.\r\n      isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\r\n      var labelLayout;\r\n      var nameRotation = axisModel.get('nameRotate');\r\n\r\n      if (nameRotation != null) {\r\n        nameRotation = nameRotation * PI$5 / 180; // To radian.\r\n      }\r\n\r\n      var axisNameAvailableWidth;\r\n\r\n      if (isNameLocationCenter(nameLocation)) {\r\n        labelLayout = AxisBuilder.innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\r\n        nameDirection);\r\n      } else {\r\n        labelLayout = endTextLayout(opt.rotation, nameLocation, nameRotation || 0, extent);\r\n        axisNameAvailableWidth = opt.axisNameAvailableWidth;\r\n\r\n        if (axisNameAvailableWidth != null) {\r\n          axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\r\n          !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\r\n        }\r\n      }\r\n\r\n      var textFont = textStyleModel.getFont();\r\n      var truncateOpt = axisModel.get('nameTruncate', true) || {};\r\n      var ellipsis = truncateOpt.ellipsis;\r\n      var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth);\r\n      var tooltipOpt = axisModel.get('tooltip', true);\r\n      var mainType = axisModel.mainType;\r\n      var formatterParams = {\r\n        componentType: mainType,\r\n        name: name,\r\n        $vars: ['name']\r\n      };\r\n      formatterParams[mainType + 'Index'] = axisModel.componentIndex;\r\n      var textEl = new ZRText({\r\n        x: pos[0],\r\n        y: pos[1],\r\n        rotation: labelLayout.rotation,\r\n        silent: AxisBuilder.isLabelSilent(axisModel),\r\n        style: createTextStyle(textStyleModel, {\r\n          text: name,\r\n          font: textFont,\r\n          overflow: 'truncate',\r\n          width: maxWidth,\r\n          ellipsis: ellipsis,\r\n          fill: textStyleModel.getTextColor() || axisModel.get(['axisLine', 'lineStyle', 'color']),\r\n          align: textStyleModel.get('align') || labelLayout.textAlign,\r\n          verticalAlign: textStyleModel.get('verticalAlign') || labelLayout.textVerticalAlign\r\n        }),\r\n        z2: 1\r\n      });\r\n      textEl.tooltip = tooltipOpt && tooltipOpt.show ? extend({\r\n        content: name,\r\n        formatter: function () {\r\n          return name;\r\n        },\r\n        formatterParams: formatterParams\r\n      }, tooltipOpt) : null;\r\n      textEl.__fullText = name; // Id for animation\r\n\r\n      textEl.anid = 'name';\r\n\r\n      if (axisModel.get('triggerEvent')) {\r\n        var eventData = AxisBuilder.makeAxisEventDataBase(axisModel);\r\n        eventData.targetType = 'axisName';\r\n        eventData.name = name;\r\n        getECData(textEl).eventData = eventData;\r\n      } // FIXME\r\n\r\n\r\n      transformGroup.add(textEl);\r\n      textEl.updateTransform();\r\n      group.add(textEl);\r\n      textEl.decomposeTransform();\r\n    }\r\n  };\r\n\r\n  function endTextLayout(rotation, textPosition, textRotate, extent) {\r\n    var rotationDiff = remRadian(textRotate - rotation);\r\n    var textAlign;\r\n    var textVerticalAlign;\r\n    var inverse = extent[0] > extent[1];\r\n    var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\r\n\r\n    if (isRadianAroundZero(rotationDiff - PI$5 / 2)) {\r\n      textVerticalAlign = onLeft ? 'bottom' : 'top';\r\n      textAlign = 'center';\r\n    } else if (isRadianAroundZero(rotationDiff - PI$5 * 1.5)) {\r\n      textVerticalAlign = onLeft ? 'top' : 'bottom';\r\n      textAlign = 'center';\r\n    } else {\r\n      textVerticalAlign = 'middle';\r\n\r\n      if (rotationDiff < PI$5 * 1.5 && rotationDiff > PI$5 / 2) {\r\n        textAlign = onLeft ? 'left' : 'right';\r\n      } else {\r\n        textAlign = onLeft ? 'right' : 'left';\r\n      }\r\n    }\r\n\r\n    return {\r\n      rotation: rotationDiff,\r\n      textAlign: textAlign,\r\n      textVerticalAlign: textVerticalAlign\r\n    };\r\n  }\r\n\r\n  function fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\r\n    if (shouldShowAllLabels(axisModel.axis)) {\r\n      return;\r\n    } // If min or max are user set, we need to check\r\n    // If the tick on min(max) are overlap on their neighbour tick\r\n    // If they are overlapped, we need to hide the min(max) tick label\r\n\r\n\r\n    var showMinLabel = axisModel.get(['axisLabel', 'showMinLabel']);\r\n    var showMaxLabel = axisModel.get(['axisLabel', 'showMaxLabel']); // FIXME\r\n    // Have not consider onBand yet, where tick els is more than label els.\r\n\r\n    labelEls = labelEls || [];\r\n    tickEls = tickEls || [];\r\n    var firstLabel = labelEls[0];\r\n    var nextLabel = labelEls[1];\r\n    var lastLabel = labelEls[labelEls.length - 1];\r\n    var prevLabel = labelEls[labelEls.length - 2];\r\n    var firstTick = tickEls[0];\r\n    var nextTick = tickEls[1];\r\n    var lastTick = tickEls[tickEls.length - 1];\r\n    var prevTick = tickEls[tickEls.length - 2];\r\n\r\n    if (showMinLabel === false) {\r\n      ignoreEl(firstLabel);\r\n      ignoreEl(firstTick);\r\n    } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\r\n      if (showMinLabel) {\r\n        ignoreEl(nextLabel);\r\n        ignoreEl(nextTick);\r\n      } else {\r\n        ignoreEl(firstLabel);\r\n        ignoreEl(firstTick);\r\n      }\r\n    }\r\n\r\n    if (showMaxLabel === false) {\r\n      ignoreEl(lastLabel);\r\n      ignoreEl(lastTick);\r\n    } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\r\n      if (showMaxLabel) {\r\n        ignoreEl(prevLabel);\r\n        ignoreEl(prevTick);\r\n      } else {\r\n        ignoreEl(lastLabel);\r\n        ignoreEl(lastTick);\r\n      }\r\n    }\r\n  }\r\n\r\n  function ignoreEl(el) {\r\n    el && (el.ignore = true);\r\n  }\r\n\r\n  function isTwoLabelOverlapped(current, next) {\r\n    // current and next has the same rotation.\r\n    var firstRect = current && current.getBoundingRect().clone();\r\n    var nextRect = next && next.getBoundingRect().clone();\r\n\r\n    if (!firstRect || !nextRect) {\r\n      return;\r\n    } // When checking intersect of two rotated labels, we use mRotationBack\r\n    // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\r\n\r\n\r\n    var mRotationBack = identity([]);\r\n    rotate(mRotationBack, mRotationBack, -current.rotation);\r\n    firstRect.applyTransform(mul$1([], mRotationBack, current.getLocalTransform()));\r\n    nextRect.applyTransform(mul$1([], mRotationBack, next.getLocalTransform()));\r\n    return firstRect.intersect(nextRect);\r\n  }\r\n\r\n  function isNameLocationCenter(nameLocation) {\r\n    return nameLocation === 'middle' || nameLocation === 'center';\r\n  }\r\n\r\n  function createTicks(ticksCoords, tickTransform, tickEndCoord, tickLineStyle, anidPrefix) {\r\n    var tickEls = [];\r\n    var pt1 = [];\r\n    var pt2 = [];\r\n\r\n    for (var i = 0; i < ticksCoords.length; i++) {\r\n      var tickCoord = ticksCoords[i].coord;\r\n      pt1[0] = tickCoord;\r\n      pt1[1] = 0;\r\n      pt2[0] = tickCoord;\r\n      pt2[1] = tickEndCoord;\r\n\r\n      if (tickTransform) {\r\n        applyTransform(pt1, pt1, tickTransform);\r\n        applyTransform(pt2, pt2, tickTransform);\r\n      } // Tick line, Not use group transform to have better line draw\r\n\r\n\r\n      var tickEl = new Line({\r\n        subPixelOptimize: true,\r\n        shape: {\r\n          x1: pt1[0],\r\n          y1: pt1[1],\r\n          x2: pt2[0],\r\n          y2: pt2[1]\r\n        },\r\n        style: tickLineStyle,\r\n        z2: 2,\r\n        autoBatch: true,\r\n        silent: true\r\n      });\r\n      tickEl.anid = anidPrefix + '_' + ticksCoords[i].tickValue;\r\n      tickEls.push(tickEl);\r\n    }\r\n\r\n    return tickEls;\r\n  }\r\n\r\n  function buildAxisMajorTicks(group, transformGroup, axisModel, opt) {\r\n    var axis = axisModel.axis;\r\n    var tickModel = axisModel.getModel('axisTick');\r\n    var shown = tickModel.get('show');\r\n\r\n    if (shown === 'auto' && opt.handleAutoShown) {\r\n      shown = opt.handleAutoShown('axisTick');\r\n    }\r\n\r\n    if (!shown || axis.scale.isBlank()) {\r\n      return;\r\n    }\r\n\r\n    var lineStyleModel = tickModel.getModel('lineStyle');\r\n    var tickEndCoord = opt.tickDirection * tickModel.get('length');\r\n    var ticksCoords = axis.getTicksCoords();\r\n    var ticksEls = createTicks(ticksCoords, transformGroup.transform, tickEndCoord, defaults(lineStyleModel.getLineStyle(), {\r\n      stroke: axisModel.get(['axisLine', 'lineStyle', 'color'])\r\n    }), 'ticks');\r\n\r\n    for (var i = 0; i < ticksEls.length; i++) {\r\n      group.add(ticksEls[i]);\r\n    }\r\n\r\n    return ticksEls;\r\n  }\r\n\r\n  function buildAxisMinorTicks(group, transformGroup, axisModel, tickDirection) {\r\n    var axis = axisModel.axis;\r\n    var minorTickModel = axisModel.getModel('minorTick');\r\n\r\n    if (!minorTickModel.get('show') || axis.scale.isBlank()) {\r\n      return;\r\n    }\r\n\r\n    var minorTicksCoords = axis.getMinorTicksCoords();\r\n\r\n    if (!minorTicksCoords.length) {\r\n      return;\r\n    }\r\n\r\n    var lineStyleModel = minorTickModel.getModel('lineStyle');\r\n    var tickEndCoord = tickDirection * minorTickModel.get('length');\r\n    var minorTickLineStyle = defaults(lineStyleModel.getLineStyle(), defaults(axisModel.getModel('axisTick').getLineStyle(), {\r\n      stroke: axisModel.get(['axisLine', 'lineStyle', 'color'])\r\n    }));\r\n\r\n    for (var i = 0; i < minorTicksCoords.length; i++) {\r\n      var minorTicksEls = createTicks(minorTicksCoords[i], transformGroup.transform, tickEndCoord, minorTickLineStyle, 'minorticks_' + i);\r\n\r\n      for (var k = 0; k < minorTicksEls.length; k++) {\r\n        group.add(minorTicksEls[k]);\r\n      }\r\n    }\r\n  }\r\n\r\n  function buildAxisLabel(group, transformGroup, axisModel, opt) {\r\n    var axis = axisModel.axis;\r\n    var show = retrieve(opt.axisLabelShow, axisModel.get(['axisLabel', 'show']));\r\n\r\n    if (!show || axis.scale.isBlank()) {\r\n      return;\r\n    }\r\n\r\n    var labelModel = axisModel.getModel('axisLabel');\r\n    var labelMargin = labelModel.get('margin');\r\n    var labels = axis.getViewLabels(); // Special label rotate.\r\n\r\n    var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI$5 / 180;\r\n    var labelLayout = AxisBuilder.innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\r\n    var rawCategoryData = axisModel.getCategories && axisModel.getCategories(true);\r\n    var labelEls = [];\r\n    var silent = AxisBuilder.isLabelSilent(axisModel);\r\n    var triggerEvent = axisModel.get('triggerEvent');\r\n    each$1(labels, function (labelItem, index) {\r\n      var tickValue = axis.scale.type === 'ordinal' ? axis.scale.getRawOrdinalNumber(labelItem.tickValue) : labelItem.tickValue;\r\n      var formattedLabel = labelItem.formattedLabel;\r\n      var rawLabel = labelItem.rawLabel;\r\n      var itemLabelModel = labelModel;\r\n\r\n      if (rawCategoryData && rawCategoryData[tickValue]) {\r\n        var rawCategoryItem = rawCategoryData[tickValue];\r\n\r\n        if (isObject$1(rawCategoryItem) && rawCategoryItem.textStyle) {\r\n          itemLabelModel = new Model(rawCategoryItem.textStyle, labelModel, axisModel.ecModel);\r\n        }\r\n      }\r\n\r\n      var textColor = itemLabelModel.getTextColor() || axisModel.get(['axisLine', 'lineStyle', 'color']);\r\n      var tickCoord = axis.dataToCoord(tickValue);\r\n      var textEl = new ZRText({\r\n        x: tickCoord,\r\n        y: opt.labelOffset + opt.labelDirection * labelMargin,\r\n        rotation: labelLayout.rotation,\r\n        silent: silent,\r\n        z2: 10,\r\n        style: createTextStyle(itemLabelModel, {\r\n          text: formattedLabel,\r\n          align: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\r\n          verticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\r\n          fill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\r\n          // index of axis.data. So tick should not be exposed to user\r\n          // in category axis.\r\n          // (2) Compatible with previous version, which always use formatted label as\r\n          // input. But in interval scale the formatted label is like '223,445', which\r\n          // maked user repalce ','. So we modify it to return original val but remain\r\n          // it as 'string' to avoid error in replacing.\r\n          axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\r\n        })\r\n      });\r\n      textEl.anid = 'label_' + tickValue; // Pack data for mouse event\r\n\r\n      if (triggerEvent) {\r\n        var eventData = AxisBuilder.makeAxisEventDataBase(axisModel);\r\n        eventData.targetType = 'axisLabel';\r\n        eventData.value = rawLabel;\r\n        getECData(textEl).eventData = eventData;\r\n      } // FIXME\r\n\r\n\r\n      transformGroup.add(textEl);\r\n      textEl.updateTransform();\r\n      labelEls.push(textEl);\r\n      group.add(textEl);\r\n      textEl.decomposeTransform();\r\n    });\r\n    return labelEls;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n  // allAxesInfo should be updated when setOption performed.\r\n\r\n\r\n  function collect(ecModel, api) {\r\n    var result = {\r\n      /**\r\n       * key: makeKey(axis.model)\r\n       * value: {\r\n       *      axis,\r\n       *      coordSys,\r\n       *      axisPointerModel,\r\n       *      triggerTooltip,\r\n       *      involveSeries,\r\n       *      snap,\r\n       *      seriesModels,\r\n       *      seriesDataCount\r\n       * }\r\n       */\r\n      axesInfo: {},\r\n      seriesInvolved: false,\r\n\r\n      /**\r\n       * key: makeKey(coordSys.model)\r\n       * value: Object: key makeKey(axis.model), value: axisInfo\r\n       */\r\n      coordSysAxesInfo: {},\r\n      coordSysMap: {}\r\n    };\r\n    collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\r\n\r\n    result.seriesInvolved && collectSeriesInfo(result, ecModel);\r\n    return result;\r\n  }\r\n\r\n  function collectAxesInfo(result, ecModel, api) {\r\n    var globalTooltipModel = ecModel.getComponent('tooltip');\r\n    var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\r\n\r\n    var linksOption = globalAxisPointerModel.get('link', true) || [];\r\n    var linkGroups = []; // Collect axes info.\r\n\r\n    each$1(api.getCoordinateSystems(), function (coordSys) {\r\n      // Some coordinate system do not support axes, like geo.\r\n      if (!coordSys.axisPointerEnabled) {\r\n        return;\r\n      }\r\n\r\n      var coordSysKey = makeKey(coordSys.model);\r\n      var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\r\n      result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\r\n      // for user. So we enable seting tooltip on coordSys model.\r\n\r\n      var coordSysModel = coordSys.model;\r\n      var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\r\n      each$1(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\r\n      // Notice this case: coordSys is `grid` but not `cartesian2D` here.\r\n\r\n      if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\r\n      // show but axisPointer will show as normal.\r\n      && baseTooltipModel.get('show')) {\r\n        // Compatible with previous logic. But series.tooltip.trigger: 'axis'\r\n        // or series.data[n].tooltip.trigger: 'axis' are not support any more.\r\n        var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\r\n        var cross = baseTooltipModel.get(['axisPointer', 'type']) === 'cross';\r\n        var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get(['axisPointer', 'axis']));\r\n\r\n        if (triggerAxis || cross) {\r\n          each$1(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\r\n        }\r\n\r\n        if (cross) {\r\n          each$1(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\r\n        }\r\n      } // fromTooltip: true | false | 'cross'\r\n      // triggerTooltip: true | false | null\r\n\r\n\r\n      function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\r\n        var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\r\n        var axisPointerShow = axisPointerModel.get('show');\r\n\r\n        if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\r\n          return;\r\n        }\r\n\r\n        if (triggerTooltip == null) {\r\n          triggerTooltip = axisPointerModel.get('triggerTooltip');\r\n        }\r\n\r\n        axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\r\n        var snap = axisPointerModel.get('snap');\r\n        var axisKey = makeKey(axis.model);\r\n        var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\r\n\r\n        var axisInfo = result.axesInfo[axisKey] = {\r\n          key: axisKey,\r\n          axis: axis,\r\n          coordSys: coordSys,\r\n          axisPointerModel: axisPointerModel,\r\n          triggerTooltip: triggerTooltip,\r\n          involveSeries: involveSeries,\r\n          snap: snap,\r\n          useHandle: isHandleTrigger(axisPointerModel),\r\n          seriesModels: [],\r\n          linkGroup: null\r\n        };\r\n        axesInfoInCoordSys[axisKey] = axisInfo;\r\n        result.seriesInvolved = result.seriesInvolved || involveSeries;\r\n        var groupIndex = getLinkGroupIndex(linksOption, axis);\r\n\r\n        if (groupIndex != null) {\r\n          var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\r\n            axesInfo: {}\r\n          });\r\n          linkGroup.axesInfo[axisKey] = axisInfo;\r\n          linkGroup.mapper = linksOption[groupIndex].mapper;\r\n          axisInfo.linkGroup = linkGroup;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  function makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\r\n    var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\r\n    var fields = ['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'];\r\n    var volatileOption = {};\r\n    each$1(fields, function (field) {\r\n      volatileOption[field] = clone(tooltipAxisPointerModel.get(field));\r\n    }); // category axis do not auto snap, otherwise some tick that do not\r\n    // has value can not be hovered. value/time/log axis default snap if\r\n    // triggered from tooltip and trigger tooltip.\r\n\r\n    volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\r\n    // Only these properties can be overrided from tooltip to axisPointer.\r\n\r\n    if (tooltipAxisPointerModel.get('type') === 'cross') {\r\n      volatileOption.type = 'line';\r\n    }\r\n\r\n    var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\r\n\r\n    labelOption.show == null && (labelOption.show = false);\r\n\r\n    if (fromTooltip === 'cross') {\r\n      // When 'cross', both axes show labels.\r\n      var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get(['label', 'show']);\r\n      labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\r\n      // (cross style is dashed by default)\r\n\r\n      if (!triggerTooltip) {\r\n        var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\r\n        crossStyle && defaults(labelOption, crossStyle.textStyle);\r\n      }\r\n    }\r\n\r\n    return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\r\n  }\r\n\r\n  function collectSeriesInfo(result, ecModel) {\r\n    // Prepare data for axis trigger\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      // Notice this case: this coordSys is `cartesian2D` but not `grid`.\r\n      var coordSys = seriesModel.coordinateSystem;\r\n      var seriesTooltipTrigger = seriesModel.get(['tooltip', 'trigger'], true);\r\n      var seriesTooltipShow = seriesModel.get(['tooltip', 'show'], true);\r\n\r\n      if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get(['axisPointer', 'show'], true) === false) {\r\n        return;\r\n      }\r\n\r\n      each$1(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\r\n        var axis = axisInfo.axis;\r\n\r\n        if (coordSys.getAxis(axis.dim) === axis) {\r\n          axisInfo.seriesModels.push(seriesModel);\r\n          axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\r\n          axisInfo.seriesDataCount += seriesModel.getData().count();\r\n        }\r\n      });\r\n    });\r\n  }\r\n  /**\r\n   * For example:\r\n   * {\r\n   *     axisPointer: {\r\n   *         links: [{\r\n   *             xAxisIndex: [2, 4],\r\n   *             yAxisIndex: 'all'\r\n   *         }, {\r\n   *             xAxisId: ['a5', 'a7'],\r\n   *             xAxisName: 'xxx'\r\n   *         }]\r\n   *     }\r\n   * }\r\n   */\r\n\r\n\r\n  function getLinkGroupIndex(linksOption, axis) {\r\n    var axisModel = axis.model;\r\n    var dim = axis.dim;\r\n\r\n    for (var i = 0; i < linksOption.length; i++) {\r\n      var linkOption = linksOption[i] || {};\r\n\r\n      if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  function checkPropInLink(linkPropValue, axisPropValue) {\r\n    return linkPropValue === 'all' || isArray(linkPropValue) && indexOf$1(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\r\n  }\r\n\r\n  function fixValue(axisModel) {\r\n    var axisInfo = getAxisInfo(axisModel);\r\n\r\n    if (!axisInfo) {\r\n      return;\r\n    }\r\n\r\n    var axisPointerModel = axisInfo.axisPointerModel;\r\n    var scale = axisInfo.axis.scale;\r\n    var option = axisPointerModel.option;\r\n    var status = axisPointerModel.get('status');\r\n    var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\r\n\r\n    if (value != null) {\r\n      value = scale.parse(value);\r\n    }\r\n\r\n    var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\r\n    // and status should be initialized.\r\n\r\n    if (status == null) {\r\n      option.status = useHandle ? 'show' : 'hide';\r\n    }\r\n\r\n    var extent = scale.getExtent().slice();\r\n    extent[0] > extent[1] && extent.reverse();\r\n\r\n    if ( // Pick a value on axis when initializing.\r\n    value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\r\n    // where we should re-pick a value to keep `handle` displaying normally.\r\n    || value > extent[1]) {\r\n      // Make handle displayed on the end of the axis when init, which looks better.\r\n      value = extent[1];\r\n    }\r\n\r\n    if (value < extent[0]) {\r\n      value = extent[0];\r\n    }\r\n\r\n    option.value = value;\r\n\r\n    if (useHandle) {\r\n      option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\r\n    }\r\n  }\r\n\r\n  function getAxisInfo(axisModel) {\r\n    var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\r\n    return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\r\n  }\r\n\r\n  function getAxisPointerModel(axisModel) {\r\n    var axisInfo = getAxisInfo(axisModel);\r\n    return axisInfo && axisInfo.axisPointerModel;\r\n  }\r\n\r\n  function isHandleTrigger(axisPointerModel) {\r\n    return !!axisPointerModel.get(['handle', 'show']);\r\n  }\r\n  /**\r\n   * @param {module:echarts/model/Model} model\r\n   * @return {string} unique key\r\n   */\r\n\r\n\r\n  function makeKey(model) {\r\n    return model.type + '||' + model.id;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var axisPointerClazz = {};\r\n  /**\r\n   * Base class of AxisView.\r\n   */\r\n\r\n  var AxisView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(AxisView, _super);\r\n\r\n    function AxisView() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = AxisView.type;\r\n      return _this;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n\r\n\r\n    AxisView.prototype.render = function (axisModel, ecModel, api, payload) {\r\n      // FIXME\r\n      // This process should proformed after coordinate systems updated\r\n      // (axis scale updated), and should be performed each time update.\r\n      // So put it here temporarily, although it is not appropriate to\r\n      // put a model-writing procedure in `view`.\r\n      this.axisPointerClass && fixValue(axisModel);\r\n\r\n      _super.prototype.render.apply(this, arguments);\r\n\r\n      this._doUpdateAxisPointerClass(axisModel, api, true);\r\n    };\r\n    /**\r\n     * Action handler.\r\n     */\r\n\r\n\r\n    AxisView.prototype.updateAxisPointer = function (axisModel, ecModel, api, payload) {\r\n      this._doUpdateAxisPointerClass(axisModel, api, false);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n\r\n\r\n    AxisView.prototype.remove = function (ecModel, api) {\r\n      var axisPointer = this._axisPointer;\r\n      axisPointer && axisPointer.remove(api);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n\r\n\r\n    AxisView.prototype.dispose = function (ecModel, api) {\r\n      this._disposeAxisPointer(api);\r\n\r\n      _super.prototype.dispose.apply(this, arguments);\r\n    };\r\n\r\n    AxisView.prototype._doUpdateAxisPointerClass = function (axisModel, api, forceRender) {\r\n      var Clazz = AxisView.getAxisPointerClass(this.axisPointerClass);\r\n\r\n      if (!Clazz) {\r\n        return;\r\n      }\r\n\r\n      var axisPointerModel = getAxisPointerModel(axisModel);\r\n      axisPointerModel ? (this._axisPointer || (this._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : this._disposeAxisPointer(api);\r\n    };\r\n\r\n    AxisView.prototype._disposeAxisPointer = function (api) {\r\n      this._axisPointer && this._axisPointer.dispose(api);\r\n      this._axisPointer = null;\r\n    };\r\n\r\n    AxisView.registerAxisPointerClass = function (type, clazz) {\r\n      {\r\n        if (axisPointerClazz[type]) {\r\n          throw new Error('axisPointer ' + type + ' exists');\r\n        }\r\n      }\r\n      axisPointerClazz[type] = clazz;\r\n    };\r\n\r\n    AxisView.getAxisPointerClass = function (type) {\r\n      return type && axisPointerClazz[type];\r\n    };\r\n\r\n    AxisView.type = 'axis';\r\n    return AxisView;\r\n  }(ComponentView);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var inner$6 = makeInner();\r\n\r\n  function rectCoordAxisBuildSplitArea(axisView, axisGroup, axisModel, gridModel) {\r\n    var axis = axisModel.axis;\r\n\r\n    if (axis.scale.isBlank()) {\r\n      return;\r\n    } // TODO: TYPE\r\n\r\n\r\n    var splitAreaModel = axisModel.getModel('splitArea');\r\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\r\n    var areaColors = areaStyleModel.get('color');\r\n    var gridRect = gridModel.coordinateSystem.getRect();\r\n    var ticksCoords = axis.getTicksCoords({\r\n      tickModel: splitAreaModel,\r\n      clamp: true\r\n    });\r\n\r\n    if (!ticksCoords.length) {\r\n      return;\r\n    } // For Making appropriate splitArea animation, the color and anid\r\n    // should be corresponding to previous one if possible.\r\n\r\n\r\n    var areaColorsLen = areaColors.length;\r\n    var lastSplitAreaColors = inner$6(axisView).splitAreaColors;\r\n    var newSplitAreaColors = createHashMap();\r\n    var colorIndex = 0;\r\n\r\n    if (lastSplitAreaColors) {\r\n      for (var i = 0; i < ticksCoords.length; i++) {\r\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\r\n\r\n        if (cIndex != null) {\r\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\r\n    var areaStyle = areaStyleModel.getAreaStyle();\r\n    areaColors = isArray(areaColors) ? areaColors : [areaColors];\r\n\r\n    for (var i = 1; i < ticksCoords.length; i++) {\r\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\r\n      var x = void 0;\r\n      var y = void 0;\r\n      var width = void 0;\r\n      var height = void 0;\r\n\r\n      if (axis.isHorizontal()) {\r\n        x = prev;\r\n        y = gridRect.y;\r\n        width = tickCoord - x;\r\n        height = gridRect.height;\r\n        prev = x + width;\r\n      } else {\r\n        x = gridRect.x;\r\n        y = prev;\r\n        width = gridRect.width;\r\n        height = tickCoord - y;\r\n        prev = y + height;\r\n      }\r\n\r\n      var tickValue = ticksCoords[i - 1].tickValue;\r\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\r\n      axisGroup.add(new Rect({\r\n        anid: tickValue != null ? 'area_' + tickValue : null,\r\n        shape: {\r\n          x: x,\r\n          y: y,\r\n          width: width,\r\n          height: height\r\n        },\r\n        style: defaults({\r\n          fill: areaColors[colorIndex]\r\n        }, areaStyle),\r\n        autoBatch: true,\r\n        silent: true\r\n      }));\r\n      colorIndex = (colorIndex + 1) % areaColorsLen;\r\n    }\r\n\r\n    inner$6(axisView).splitAreaColors = newSplitAreaColors;\r\n  }\r\n\r\n  function rectCoordAxisHandleRemove(axisView) {\r\n    inner$6(axisView).splitAreaColors = null;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\r\n  var selfBuilderAttrs = ['splitArea', 'splitLine', 'minorSplitLine'];\r\n\r\n  var CartesianAxisView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(CartesianAxisView, _super);\r\n\r\n    function CartesianAxisView() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = CartesianAxisView.type;\r\n      _this.axisPointerClass = 'CartesianAxisPointer';\r\n      return _this;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n\r\n\r\n    CartesianAxisView.prototype.render = function (axisModel, ecModel, api, payload) {\r\n      this.group.removeAll();\r\n      var oldAxisGroup = this._axisGroup;\r\n      this._axisGroup = new Group();\r\n      this.group.add(this._axisGroup);\r\n\r\n      if (!axisModel.get('show')) {\r\n        return;\r\n      }\r\n\r\n      var gridModel = axisModel.getCoordSysModel();\r\n      var layout = layout$1(gridModel, axisModel);\r\n      var axisBuilder = new AxisBuilder(axisModel, extend({\r\n        handleAutoShown: function (elementType) {\r\n          var cartesians = gridModel.coordinateSystem.getCartesians();\r\n\r\n          for (var i = 0; i < cartesians.length; i++) {\r\n            var otherAxisType = cartesians[i].getOtherAxis(axisModel.axis).type;\r\n\r\n            if (otherAxisType === 'value' || otherAxisType === 'log') {\r\n              // Still show axis tick or axisLine if other axis is value / log\r\n              return true;\r\n            }\r\n          } // Not show axisTick or axisLine if other axis is category / time\r\n\r\n\r\n          return false;\r\n        }\r\n      }, layout));\r\n      each$1(axisBuilderAttrs, axisBuilder.add, axisBuilder);\r\n\r\n      this._axisGroup.add(axisBuilder.getGroup());\r\n\r\n      each$1(selfBuilderAttrs, function (name) {\r\n        if (axisModel.get([name, 'show'])) {\r\n          axisElementBuilders[name](this, this._axisGroup, axisModel, gridModel);\r\n        }\r\n      }, this);\r\n      groupTransition(oldAxisGroup, this._axisGroup, axisModel);\r\n\r\n      _super.prototype.render.call(this, axisModel, ecModel, api, payload);\r\n    };\r\n\r\n    CartesianAxisView.prototype.remove = function () {\r\n      rectCoordAxisHandleRemove(this);\r\n    };\r\n\r\n    CartesianAxisView.type = 'cartesianAxis';\r\n    return CartesianAxisView;\r\n  }(AxisView);\r\n\r\n  var axisElementBuilders = {\r\n    splitLine: function (axisView, axisGroup, axisModel, gridModel) {\r\n      var axis = axisModel.axis;\r\n\r\n      if (axis.scale.isBlank()) {\r\n        return;\r\n      }\r\n\r\n      var splitLineModel = axisModel.getModel('splitLine');\r\n      var lineStyleModel = splitLineModel.getModel('lineStyle');\r\n      var lineColors = lineStyleModel.get('color');\r\n      lineColors = isArray(lineColors) ? lineColors : [lineColors];\r\n      var gridRect = gridModel.coordinateSystem.getRect();\r\n      var isHorizontal = axis.isHorizontal();\r\n      var lineCount = 0;\r\n      var ticksCoords = axis.getTicksCoords({\r\n        tickModel: splitLineModel\r\n      });\r\n      var p1 = [];\r\n      var p2 = [];\r\n      var lineStyle = lineStyleModel.getLineStyle();\r\n\r\n      for (var i = 0; i < ticksCoords.length; i++) {\r\n        var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\r\n\r\n        if (isHorizontal) {\r\n          p1[0] = tickCoord;\r\n          p1[1] = gridRect.y;\r\n          p2[0] = tickCoord;\r\n          p2[1] = gridRect.y + gridRect.height;\r\n        } else {\r\n          p1[0] = gridRect.x;\r\n          p1[1] = tickCoord;\r\n          p2[0] = gridRect.x + gridRect.width;\r\n          p2[1] = tickCoord;\r\n        }\r\n\r\n        var colorIndex = lineCount++ % lineColors.length;\r\n        var tickValue = ticksCoords[i].tickValue;\r\n        axisGroup.add(new Line({\r\n          anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\r\n          subPixelOptimize: true,\r\n          autoBatch: true,\r\n          shape: {\r\n            x1: p1[0],\r\n            y1: p1[1],\r\n            x2: p2[0],\r\n            y2: p2[1]\r\n          },\r\n          style: defaults({\r\n            stroke: lineColors[colorIndex]\r\n          }, lineStyle),\r\n          silent: true\r\n        }));\r\n      }\r\n    },\r\n    minorSplitLine: function (axisView, axisGroup, axisModel, gridModel) {\r\n      var axis = axisModel.axis;\r\n      var minorSplitLineModel = axisModel.getModel('minorSplitLine');\r\n      var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\r\n      var gridRect = gridModel.coordinateSystem.getRect();\r\n      var isHorizontal = axis.isHorizontal();\r\n      var minorTicksCoords = axis.getMinorTicksCoords();\r\n\r\n      if (!minorTicksCoords.length) {\r\n        return;\r\n      }\r\n\r\n      var p1 = [];\r\n      var p2 = [];\r\n      var lineStyle = lineStyleModel.getLineStyle();\r\n\r\n      for (var i = 0; i < minorTicksCoords.length; i++) {\r\n        for (var k = 0; k < minorTicksCoords[i].length; k++) {\r\n          var tickCoord = axis.toGlobalCoord(minorTicksCoords[i][k].coord);\r\n\r\n          if (isHorizontal) {\r\n            p1[0] = tickCoord;\r\n            p1[1] = gridRect.y;\r\n            p2[0] = tickCoord;\r\n            p2[1] = gridRect.y + gridRect.height;\r\n          } else {\r\n            p1[0] = gridRect.x;\r\n            p1[1] = tickCoord;\r\n            p2[0] = gridRect.x + gridRect.width;\r\n            p2[1] = tickCoord;\r\n          }\r\n\r\n          axisGroup.add(new Line({\r\n            anid: 'minor_line_' + minorTicksCoords[i][k].tickValue,\r\n            subPixelOptimize: true,\r\n            autoBatch: true,\r\n            shape: {\r\n              x1: p1[0],\r\n              y1: p1[1],\r\n              x2: p2[0],\r\n              y2: p2[1]\r\n            },\r\n            style: lineStyle,\r\n            silent: true\r\n          }));\r\n        }\r\n      }\r\n    },\r\n    splitArea: function (axisView, axisGroup, axisModel, gridModel) {\r\n      rectCoordAxisBuildSplitArea(axisView, axisGroup, axisModel, gridModel);\r\n    }\r\n  };\r\n\r\n  var CartesianXAxisView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(CartesianXAxisView, _super);\r\n\r\n    function CartesianXAxisView() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = CartesianXAxisView.type;\r\n      return _this;\r\n    }\r\n\r\n    CartesianXAxisView.type = 'xAxis';\r\n    return CartesianXAxisView;\r\n  }(CartesianAxisView);\r\n\r\n  var CartesianYAxisView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(CartesianYAxisView, _super);\r\n\r\n    function CartesianYAxisView() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = CartesianXAxisView.type;\r\n      return _this;\r\n    }\r\n\r\n    CartesianYAxisView.type = 'yAxis';\r\n    return CartesianYAxisView;\r\n  }(CartesianAxisView);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var GridView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(GridView, _super);\r\n\r\n    function GridView() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = 'grid';\r\n      return _this;\r\n    }\r\n\r\n    GridView.prototype.render = function (gridModel, ecModel) {\r\n      this.group.removeAll();\r\n\r\n      if (gridModel.get('show')) {\r\n        this.group.add(new Rect({\r\n          shape: gridModel.coordinateSystem.getRect(),\r\n          style: defaults({\r\n            fill: gridModel.get('backgroundColor')\r\n          }, gridModel.getItemStyle()),\r\n          silent: true,\r\n          z2: -1\r\n        }));\r\n      }\r\n    };\r\n\r\n    GridView.type = 'grid';\r\n    return GridView;\r\n  }(ComponentView);\r\n\r\n  var extraOption = {\r\n    // gridIndex: 0,\r\n    // gridId: '',\r\n    offset: 0\r\n  };\r\n\r\n  function install$3(registers) {\r\n    registers.registerComponentView(GridView);\r\n    registers.registerComponentModel(GridModel);\r\n    registers.registerCoordinateSystem('cartesian2d', Grid);\r\n    axisModelCreator(registers, 'x', CartesianAxisModel, extraOption);\r\n    axisModelCreator(registers, 'y', CartesianAxisModel, extraOption);\r\n    registers.registerComponentView(CartesianXAxisView);\r\n    registers.registerComponentView(CartesianYAxisView);\r\n    registers.registerPreprocessor(function (option) {\r\n      // Only create grid when need\r\n      if (option.xAxis && option.yAxis && !option.grid) {\r\n        option.grid = {};\r\n      }\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  use(install$3);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var inner$7 = makeInner();\r\n  var clone$3 = clone;\r\n  var bind$1 = bind;\r\n  /**\r\n   * Base axis pointer class in 2D.\r\n   */\r\n\r\n  var BaseAxisPointer =\r\n  /** @class */\r\n  function () {\r\n    function BaseAxisPointer() {\r\n      this._dragging = false;\r\n      /**\r\n       * In px, arbitrary value. Do not set too small,\r\n       * no animation is ok for most cases.\r\n       */\r\n\r\n      this.animationThreshold = 15;\r\n    }\r\n    /**\r\n     * @implement\r\n     */\r\n\r\n\r\n    BaseAxisPointer.prototype.render = function (axisModel, axisPointerModel, api, forceRender) {\r\n      var value = axisPointerModel.get('value');\r\n      var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\r\n      // be replaced when user calling setOption in not merge mode.\r\n\r\n      this._axisModel = axisModel;\r\n      this._axisPointerModel = axisPointerModel;\r\n      this._api = api; // Optimize: `render` will be called repeatly during mouse move.\r\n      // So it is power consuming if performing `render` each time,\r\n      // especially on mobile device.\r\n\r\n      if (!forceRender && this._lastValue === value && this._lastStatus === status) {\r\n        return;\r\n      }\r\n\r\n      this._lastValue = value;\r\n      this._lastStatus = status;\r\n      var group = this._group;\r\n      var handle = this._handle;\r\n\r\n      if (!status || status === 'hide') {\r\n        // Do not clear here, for animation better.\r\n        group && group.hide();\r\n        handle && handle.hide();\r\n        return;\r\n      }\r\n\r\n      group && group.show();\r\n      handle && handle.show(); // Otherwise status is 'show'\r\n\r\n      var elOption = {};\r\n      this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\r\n\r\n      var graphicKey = elOption.graphicKey;\r\n\r\n      if (graphicKey !== this._lastGraphicKey) {\r\n        this.clear(api);\r\n      }\r\n\r\n      this._lastGraphicKey = graphicKey;\r\n      var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\r\n\r\n      if (!group) {\r\n        group = this._group = new Group();\r\n        this.createPointerEl(group, elOption, axisModel, axisPointerModel);\r\n        this.createLabelEl(group, elOption, axisModel, axisPointerModel);\r\n        api.getZr().add(group);\r\n      } else {\r\n        var doUpdateProps = curry(updateProps$1, axisPointerModel, moveAnimation);\r\n        this.updatePointerEl(group, elOption, doUpdateProps);\r\n        this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\r\n      }\r\n\r\n      updateMandatoryProps(group, axisPointerModel, true);\r\n\r\n      this._renderHandle(value);\r\n    };\r\n    /**\r\n     * @implement\r\n     */\r\n\r\n\r\n    BaseAxisPointer.prototype.remove = function (api) {\r\n      this.clear(api);\r\n    };\r\n    /**\r\n     * @implement\r\n     */\r\n\r\n\r\n    BaseAxisPointer.prototype.dispose = function (api) {\r\n      this.clear(api);\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n\r\n\r\n    BaseAxisPointer.prototype.determineAnimation = function (axisModel, axisPointerModel) {\r\n      var animation = axisPointerModel.get('animation');\r\n      var axis = axisModel.axis;\r\n      var isCategoryAxis = axis.type === 'category';\r\n      var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\r\n\r\n      if (!useSnap && !isCategoryAxis) {\r\n        return false;\r\n      }\r\n\r\n      if (animation === 'auto' || animation == null) {\r\n        var animationThreshold = this.animationThreshold;\r\n\r\n        if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\r\n          return true;\r\n        } // It is important to auto animation when snap used. Consider if there is\r\n        // a dataZoom, animation will be disabled when too many points exist, while\r\n        // it will be enabled for better visual effect when little points exist.\r\n\r\n\r\n        if (useSnap) {\r\n          var seriesDataCount = getAxisInfo(axisModel).seriesDataCount;\r\n          var axisExtent = axis.getExtent(); // Approximate band width\r\n\r\n          return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\r\n        }\r\n\r\n        return false;\r\n      }\r\n\r\n      return animation === true;\r\n    };\r\n    /**\r\n     * add {pointer, label, graphicKey} to elOption\r\n     * @protected\r\n     */\r\n\r\n\r\n    BaseAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n\r\n\r\n    BaseAxisPointer.prototype.createPointerEl = function (group, elOption, axisModel, axisPointerModel) {\r\n      var pointerOption = elOption.pointer;\r\n\r\n      if (pointerOption) {\r\n        var pointerEl = inner$7(group).pointerEl = new graphic[pointerOption.type](clone$3(elOption.pointer));\r\n        group.add(pointerEl);\r\n      }\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n\r\n\r\n    BaseAxisPointer.prototype.createLabelEl = function (group, elOption, axisModel, axisPointerModel) {\r\n      if (elOption.label) {\r\n        var labelEl = inner$7(group).labelEl = new ZRText(clone$3(elOption.label));\r\n        group.add(labelEl);\r\n        updateLabelShowHide(labelEl, axisPointerModel);\r\n      }\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n\r\n\r\n    BaseAxisPointer.prototype.updatePointerEl = function (group, elOption, updateProps$$1) {\r\n      var pointerEl = inner$7(group).pointerEl;\r\n\r\n      if (pointerEl && elOption.pointer) {\r\n        pointerEl.setStyle(elOption.pointer.style);\r\n        updateProps$$1(pointerEl, {\r\n          shape: elOption.pointer.shape\r\n        });\r\n      }\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n\r\n\r\n    BaseAxisPointer.prototype.updateLabelEl = function (group, elOption, updateProps$$1, axisPointerModel) {\r\n      var labelEl = inner$7(group).labelEl;\r\n\r\n      if (labelEl) {\r\n        labelEl.setStyle(elOption.label.style);\r\n        updateProps$$1(labelEl, {\r\n          // Consider text length change in vertical axis, animation should\r\n          // be used on shape, otherwise the effect will be weird.\r\n          // TODOTODO\r\n          // shape: elOption.label.shape,\r\n          x: elOption.label.x,\r\n          y: elOption.label.y\r\n        });\r\n        updateLabelShowHide(labelEl, axisPointerModel);\r\n      }\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n\r\n\r\n    BaseAxisPointer.prototype._renderHandle = function (value) {\r\n      if (this._dragging || !this.updateHandleTransform) {\r\n        return;\r\n      }\r\n\r\n      var axisPointerModel = this._axisPointerModel;\r\n\r\n      var zr = this._api.getZr();\r\n\r\n      var handle = this._handle;\r\n      var handleModel = axisPointerModel.getModel('handle');\r\n      var status = axisPointerModel.get('status');\r\n\r\n      if (!handleModel.get('show') || !status || status === 'hide') {\r\n        handle && zr.remove(handle);\r\n        this._handle = null;\r\n        return;\r\n      }\r\n\r\n      var isInit;\r\n\r\n      if (!this._handle) {\r\n        isInit = true;\r\n        handle = this._handle = createIcon(handleModel.get('icon'), {\r\n          cursor: 'move',\r\n          draggable: true,\r\n          onmousemove: function (e) {\r\n            // Fot mobile devicem, prevent screen slider on the button.\r\n            stop(e.event);\r\n          },\r\n          onmousedown: bind$1(this._onHandleDragMove, this, 0, 0),\r\n          drift: bind$1(this._onHandleDragMove, this),\r\n          ondragend: bind$1(this._onHandleDragEnd, this)\r\n        });\r\n        zr.add(handle);\r\n      }\r\n\r\n      updateMandatoryProps(handle, axisPointerModel, false); // update style\r\n\r\n      handle.setStyle(handleModel.getItemStyle(null, ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'])); // update position\r\n\r\n      var handleSize = handleModel.get('size');\r\n\r\n      if (!isArray(handleSize)) {\r\n        handleSize = [handleSize, handleSize];\r\n      }\r\n\r\n      handle.scaleX = handleSize[0] / 2;\r\n      handle.scaleY = handleSize[1] / 2;\r\n      createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\r\n\r\n      this._moveHandleToValue(value, isInit);\r\n    };\r\n\r\n    BaseAxisPointer.prototype._moveHandleToValue = function (value, isInit) {\r\n      updateProps$1(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\r\n    };\r\n\r\n    BaseAxisPointer.prototype._onHandleDragMove = function (dx, dy) {\r\n      var handle = this._handle;\r\n\r\n      if (!handle) {\r\n        return;\r\n      }\r\n\r\n      this._dragging = true; // Persistent for throttle.\r\n\r\n      var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\r\n      this._payloadInfo = trans;\r\n      handle.stopAnimation();\r\n      handle.attr(getHandleTransProps(trans));\r\n      inner$7(handle).lastProp = null;\r\n\r\n      this._doDispatchAxisPointer();\r\n    };\r\n    /**\r\n     * Throttled method.\r\n     */\r\n\r\n\r\n    BaseAxisPointer.prototype._doDispatchAxisPointer = function () {\r\n      var handle = this._handle;\r\n\r\n      if (!handle) {\r\n        return;\r\n      }\r\n\r\n      var payloadInfo = this._payloadInfo;\r\n      var axisModel = this._axisModel;\r\n\r\n      this._api.dispatchAction({\r\n        type: 'updateAxisPointer',\r\n        x: payloadInfo.cursorPoint[0],\r\n        y: payloadInfo.cursorPoint[1],\r\n        tooltipOption: payloadInfo.tooltipOption,\r\n        axesInfo: [{\r\n          axisDim: axisModel.axis.dim,\r\n          axisIndex: axisModel.componentIndex\r\n        }]\r\n      });\r\n    };\r\n\r\n    BaseAxisPointer.prototype._onHandleDragEnd = function () {\r\n      this._dragging = false;\r\n      var handle = this._handle;\r\n\r\n      if (!handle) {\r\n        return;\r\n      }\r\n\r\n      var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\r\n      // axisPointer. So move handle to align the exact value position when\r\n      // drag ended.\r\n\r\n\r\n      this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\r\n      // button, and will be hidden after finger left handle button.\r\n\r\n\r\n      this._api.dispatchAction({\r\n        type: 'hideTip'\r\n      });\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n\r\n\r\n    BaseAxisPointer.prototype.clear = function (api) {\r\n      this._lastValue = null;\r\n      this._lastStatus = null;\r\n      var zr = api.getZr();\r\n      var group = this._group;\r\n      var handle = this._handle;\r\n\r\n      if (zr && group) {\r\n        this._lastGraphicKey = null;\r\n        group && zr.remove(group);\r\n        handle && zr.remove(handle);\r\n        this._group = null;\r\n        this._handle = null;\r\n        this._payloadInfo = null;\r\n      }\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n\r\n\r\n    BaseAxisPointer.prototype.doClear = function () {// Implemented by sub-class if necessary.\r\n    };\r\n\r\n    BaseAxisPointer.prototype.buildLabel = function (xy, wh, xDimIndex) {\r\n      xDimIndex = xDimIndex || 0;\r\n      return {\r\n        x: xy[xDimIndex],\r\n        y: xy[1 - xDimIndex],\r\n        width: wh[xDimIndex],\r\n        height: wh[1 - xDimIndex]\r\n      };\r\n    };\r\n\r\n    return BaseAxisPointer;\r\n  }();\r\n\r\n  function updateProps$1(animationModel, moveAnimation, el, props) {\r\n    // Animation optimize.\r\n    if (!propsEqual(inner$7(el).lastProp, props)) {\r\n      inner$7(el).lastProp = props;\r\n      moveAnimation ? updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\r\n    }\r\n  }\r\n\r\n  function propsEqual(lastProps, newProps) {\r\n    if (isObject$1(lastProps) && isObject$1(newProps)) {\r\n      var equals_1 = true;\r\n      each$1(newProps, function (item, key) {\r\n        equals_1 = equals_1 && propsEqual(lastProps[key], item);\r\n      });\r\n      return !!equals_1;\r\n    } else {\r\n      return lastProps === newProps;\r\n    }\r\n  }\r\n\r\n  function updateLabelShowHide(labelEl, axisPointerModel) {\r\n    labelEl[axisPointerModel.get(['label', 'show']) ? 'show' : 'hide']();\r\n  }\r\n\r\n  function getHandleTransProps(trans) {\r\n    return {\r\n      x: trans.x || 0,\r\n      y: trans.y || 0,\r\n      rotation: trans.rotation || 0\r\n    };\r\n  }\r\n\r\n  function updateMandatoryProps(group, axisPointerModel, silent) {\r\n    var z = axisPointerModel.get('z');\r\n    var zlevel = axisPointerModel.get('zlevel');\r\n    group && group.traverse(function (el) {\r\n      if (el.type !== 'group') {\r\n        z != null && (el.z = z);\r\n        zlevel != null && (el.zlevel = zlevel);\r\n        el.silent = silent;\r\n      }\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function buildElStyle(axisPointerModel) {\r\n    var axisPointerType = axisPointerModel.get('type');\r\n    var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\r\n    var style;\r\n\r\n    if (axisPointerType === 'line') {\r\n      style = styleModel.getLineStyle();\r\n      style.fill = null;\r\n    } else if (axisPointerType === 'shadow') {\r\n      style = styleModel.getAreaStyle();\r\n      style.stroke = null;\r\n    }\r\n\r\n    return style;\r\n  }\r\n  /**\r\n   * @param {Function} labelPos {align, verticalAlign, position}\r\n   */\r\n\r\n\r\n  function buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\r\n    var value = axisPointerModel.get('value');\r\n    var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\r\n      precision: axisPointerModel.get(['label', 'precision']),\r\n      formatter: axisPointerModel.get(['label', 'formatter'])\r\n    });\r\n    var labelModel = axisPointerModel.getModel('label');\r\n    var paddings = normalizeCssArray$1(labelModel.get('padding') || 0);\r\n    var font = labelModel.getFont();\r\n    var textRect = getBoundingRect(text, font);\r\n    var position = labelPos.position;\r\n    var width = textRect.width + paddings[1] + paddings[3];\r\n    var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\r\n\r\n    var align = labelPos.align;\r\n    align === 'right' && (position[0] -= width);\r\n    align === 'center' && (position[0] -= width / 2);\r\n    var verticalAlign = labelPos.verticalAlign;\r\n    verticalAlign === 'bottom' && (position[1] -= height);\r\n    verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\r\n\r\n    confineInContainer(position, width, height, api);\r\n    var bgColor = labelModel.get('backgroundColor');\r\n\r\n    if (!bgColor || bgColor === 'auto') {\r\n      bgColor = axisModel.get(['axisLine', 'lineStyle', 'color']);\r\n    }\r\n\r\n    elOption.label = {\r\n      // shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\r\n      x: position[0],\r\n      y: position[1],\r\n      style: createTextStyle(labelModel, {\r\n        text: text,\r\n        font: font,\r\n        fill: labelModel.getTextColor(),\r\n        padding: paddings,\r\n        backgroundColor: bgColor\r\n      }),\r\n      // Lable should be over axisPointer.\r\n      z2: 10\r\n    };\r\n  } // Do not overflow ec container\r\n\r\n\r\n  function confineInContainer(position, width, height, api) {\r\n    var viewWidth = api.getWidth();\r\n    var viewHeight = api.getHeight();\r\n    position[0] = Math.min(position[0] + width, viewWidth) - width;\r\n    position[1] = Math.min(position[1] + height, viewHeight) - height;\r\n    position[0] = Math.max(position[0], 0);\r\n    position[1] = Math.max(position[1], 0);\r\n  }\r\n\r\n  function getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\r\n    value = axis.scale.parse(value);\r\n    var text = axis.scale.getLabel({\r\n      value: value\r\n    }, {\r\n      // If `precision` is set, width can be fixed (like '12.00500'), which\r\n      // helps to debounce when when moving label.\r\n      precision: opt.precision\r\n    });\r\n    var formatter = opt.formatter;\r\n\r\n    if (formatter) {\r\n      var params_1 = {\r\n        value: getAxisRawValue(axis, {\r\n          value: value\r\n        }),\r\n        axisDimension: axis.dim,\r\n        axisIndex: axis.index,\r\n        seriesData: []\r\n      };\r\n      each$1(seriesDataIndices, function (idxItem) {\r\n        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\r\n        var dataIndex = idxItem.dataIndexInside;\r\n        var dataParams = series && series.getDataParams(dataIndex);\r\n        dataParams && params_1.seriesData.push(dataParams);\r\n      });\r\n\r\n      if (isString(formatter)) {\r\n        text = formatter.replace('{value}', text);\r\n      } else if (isFunction$1(formatter)) {\r\n        text = formatter(params_1);\r\n      }\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  function getTransformedPosition(axis, value, layoutInfo) {\r\n    var transform = create$1();\r\n    rotate(transform, transform, layoutInfo.rotation);\r\n    translate(transform, transform, layoutInfo.position);\r\n    return applyTransform$1([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\r\n  }\r\n\r\n  function buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\r\n    // @ts-ignore\r\n    var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\r\n    layoutInfo.labelMargin = axisPointerModel.get(['label', 'margin']);\r\n    buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\r\n      position: getTransformedPosition(axisModel.axis, value, layoutInfo),\r\n      align: textLayout.textAlign,\r\n      verticalAlign: textLayout.textVerticalAlign\r\n    });\r\n  }\r\n\r\n  function makeLineShape(p1, p2, xDimIndex) {\r\n    xDimIndex = xDimIndex || 0;\r\n    return {\r\n      x1: p1[xDimIndex],\r\n      y1: p1[1 - xDimIndex],\r\n      x2: p2[xDimIndex],\r\n      y2: p2[1 - xDimIndex]\r\n    };\r\n  }\r\n\r\n  function makeRectShape(xy, wh, xDimIndex) {\r\n    xDimIndex = xDimIndex || 0;\r\n    return {\r\n      x: xy[xDimIndex],\r\n      y: xy[1 - xDimIndex],\r\n      width: wh[xDimIndex],\r\n      height: wh[1 - xDimIndex]\r\n    };\r\n  }\r\n\r\n  function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\r\n    return {\r\n      cx: cx,\r\n      cy: cy,\r\n      r0: r0,\r\n      r: r,\r\n      startAngle: startAngle,\r\n      endAngle: endAngle,\r\n      clockwise: true\r\n    };\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var PolarAxisPointer =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(PolarAxisPointer, _super);\r\n\r\n    function PolarAxisPointer() {\r\n      return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n\r\n\r\n    PolarAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {\r\n      var axis = axisModel.axis;\r\n\r\n      if (axis.dim === 'angle') {\r\n        this.animationThreshold = Math.PI / 18;\r\n      }\r\n\r\n      var polar = axis.polar;\r\n      var otherAxis = polar.getOtherAxis(axis);\r\n      var otherExtent = otherAxis.getExtent();\r\n      var coordValue = axis.dataToCoord(value);\r\n      var axisPointerType = axisPointerModel.get('type');\r\n\r\n      if (axisPointerType && axisPointerType !== 'none') {\r\n        var elStyle = buildElStyle(axisPointerModel);\r\n        var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent);\r\n        pointerOption.style = elStyle;\r\n        elOption.graphicKey = pointerOption.type;\r\n        elOption.pointer = pointerOption;\r\n      }\r\n\r\n      var labelMargin = axisPointerModel.get(['label', 'margin']);\r\n      var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\r\n      buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\r\n    };\r\n\r\n    return PolarAxisPointer;\r\n  }(BaseAxisPointer);\r\n\r\n  function getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\r\n    var axis = axisModel.axis;\r\n    var coord = axis.dataToCoord(value);\r\n    var axisAngle = polar.getAngleAxis().getExtent()[0];\r\n    axisAngle = axisAngle / 180 * Math.PI;\r\n    var radiusExtent = polar.getRadiusAxis().getExtent();\r\n    var position;\r\n    var align;\r\n    var verticalAlign;\r\n\r\n    if (axis.dim === 'radius') {\r\n      var transform = create$1();\r\n      rotate(transform, transform, axisAngle);\r\n      translate(transform, transform, [polar.cx, polar.cy]);\r\n      position = applyTransform$1([coord, -labelMargin], transform);\r\n      var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0; // @ts-ignore\r\n\r\n      var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\r\n      align = labelLayout.textAlign;\r\n      verticalAlign = labelLayout.textVerticalAlign;\r\n    } else {\r\n      // angle axis\r\n      var r = radiusExtent[1];\r\n      position = polar.coordToPoint([r + labelMargin, coord]);\r\n      var cx = polar.cx;\r\n      var cy = polar.cy;\r\n      align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\r\n      verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\r\n    }\r\n\r\n    return {\r\n      position: position,\r\n      align: align,\r\n      verticalAlign: verticalAlign\r\n    };\r\n  }\r\n\r\n  var pointerShapeBuilder = {\r\n    line: function (axis, polar, coordValue, otherExtent) {\r\n      return axis.dim === 'angle' ? {\r\n        type: 'Line',\r\n        shape: makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\r\n      } : {\r\n        type: 'Circle',\r\n        shape: {\r\n          cx: polar.cx,\r\n          cy: polar.cy,\r\n          r: coordValue\r\n        }\r\n      };\r\n    },\r\n    shadow: function (axis, polar, coordValue, otherExtent) {\r\n      var bandWidth = Math.max(1, axis.getBandWidth());\r\n      var radian = Math.PI / 180;\r\n      return axis.dim === 'angle' ? {\r\n        type: 'Sector',\r\n        shape: makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\r\n        (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\r\n      } : {\r\n        type: 'Sector',\r\n        shape: makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\r\n      };\r\n    }\r\n  };\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var CartesianAxisPointer =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(CartesianAxisPointer, _super);\r\n\r\n    function CartesianAxisPointer() {\r\n      return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n\r\n\r\n    CartesianAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {\r\n      var axis = axisModel.axis;\r\n      var grid = axis.grid;\r\n      var axisPointerType = axisPointerModel.get('type');\r\n      var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\r\n      var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\r\n\r\n      if (axisPointerType && axisPointerType !== 'none') {\r\n        var elStyle = buildElStyle(axisPointerModel);\r\n        var pointerOption = pointerShapeBuilder$1[axisPointerType](axis, pixelValue, otherExtent);\r\n        pointerOption.style = elStyle;\r\n        elOption.graphicKey = pointerOption.type;\r\n        elOption.pointer = pointerOption;\r\n      }\r\n\r\n      var layoutInfo = layout$1(grid.model, axisModel);\r\n      buildCartesianSingleLabelElOption( // @ts-ignore\r\n      value, elOption, layoutInfo, axisModel, axisPointerModel, api);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n\r\n\r\n    CartesianAxisPointer.prototype.getHandleTransform = function (value, axisModel, axisPointerModel) {\r\n      var layoutInfo = layout$1(axisModel.axis.grid.model, axisModel, {\r\n        labelInside: false\r\n      }); // @ts-ignore\r\n\r\n      layoutInfo.labelMargin = axisPointerModel.get(['handle', 'margin']);\r\n      var pos = getTransformedPosition(axisModel.axis, value, layoutInfo);\r\n      return {\r\n        x: pos[0],\r\n        y: pos[1],\r\n        rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\r\n      };\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n\r\n\r\n    CartesianAxisPointer.prototype.updateHandleTransform = function (transform, delta, axisModel, axisPointerModel) {\r\n      var axis = axisModel.axis;\r\n      var grid = axis.grid;\r\n      var axisExtent = axis.getGlobalExtent(true);\r\n      var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\r\n      var dimIndex = axis.dim === 'x' ? 0 : 1;\r\n      var currPosition = [transform.x, transform.y];\r\n      currPosition[dimIndex] += delta[dimIndex];\r\n      currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\r\n      currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\r\n      var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\r\n      var cursorPoint = [cursorOtherValue, cursorOtherValue];\r\n      cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\r\n\r\n      var tooltipOptions = [{\r\n        verticalAlign: 'middle'\r\n      }, {\r\n        align: 'center'\r\n      }];\r\n      return {\r\n        x: currPosition[0],\r\n        y: currPosition[1],\r\n        rotation: transform.rotation,\r\n        cursorPoint: cursorPoint,\r\n        tooltipOption: tooltipOptions[dimIndex]\r\n      };\r\n    };\r\n\r\n    return CartesianAxisPointer;\r\n  }(BaseAxisPointer);\r\n\r\n  function getCartesian(grid, axis) {\r\n    var opt = {};\r\n    opt[axis.dim + 'AxisIndex'] = axis.index;\r\n    return grid.getCartesian(opt);\r\n  }\r\n\r\n  var pointerShapeBuilder$1 = {\r\n    line: function (axis, pixelValue, otherExtent) {\r\n      var targetShape = makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\r\n      return {\r\n        type: 'Line',\r\n        subPixelOptimize: true,\r\n        shape: targetShape\r\n      };\r\n    },\r\n    shadow: function (axis, pixelValue, otherExtent) {\r\n      var bandWidth = Math.max(1, axis.getBandWidth());\r\n      var span = otherExtent[1] - otherExtent[0];\r\n      return {\r\n        type: 'Rect',\r\n        shape: makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\r\n      };\r\n    }\r\n  };\r\n\r\n  function getAxisDimIndex(axis) {\r\n    return axis.dim === 'x' ? 0 : 1;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var AxisPointerModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(AxisPointerModel, _super);\r\n\r\n    function AxisPointerModel() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = AxisPointerModel.type;\r\n      return _this;\r\n    }\r\n\r\n    AxisPointerModel.type = 'axisPointer';\r\n    AxisPointerModel.defaultOption = {\r\n      // 'auto' means that show when triggered by tooltip or handle.\r\n      show: 'auto',\r\n      zlevel: 0,\r\n      z: 50,\r\n      type: 'line',\r\n      // axispointer triggered by tootip determine snap automatically,\r\n      // see `modelHelper`.\r\n      snap: false,\r\n      triggerTooltip: true,\r\n      value: null,\r\n      status: null,\r\n      link: [],\r\n      // Do not set 'auto' here, otherwise global animation: false\r\n      // will not effect at this axispointer.\r\n      animation: null,\r\n      animationDurationUpdate: 200,\r\n      lineStyle: {\r\n        color: '#B9BEC9',\r\n        width: 1,\r\n        type: 'dashed'\r\n      },\r\n      shadowStyle: {\r\n        color: 'rgba(210,219,238,0.2)'\r\n      },\r\n      label: {\r\n        show: true,\r\n        formatter: null,\r\n        precision: 'auto',\r\n        margin: 3,\r\n        color: '#fff',\r\n        padding: [5, 7, 5, 7],\r\n        backgroundColor: 'auto',\r\n        borderColor: null,\r\n        borderWidth: 0,\r\n        borderRadius: 3\r\n      },\r\n      handle: {\r\n        show: false,\r\n        // eslint-disable-next-line\r\n        icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\r\n        size: 45,\r\n        // handle margin is from symbol center to axis, which is stable when circular move.\r\n        margin: 50,\r\n        // color: '#1b8bbd'\r\n        // color: '#2f4554'\r\n        color: '#333',\r\n        shadowBlur: 3,\r\n        shadowColor: '#aaa',\r\n        shadowOffsetX: 0,\r\n        shadowOffsetY: 2,\r\n        // For mobile performance\r\n        throttle: 40\r\n      }\r\n    };\r\n    return AxisPointerModel;\r\n  }(ComponentModel);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var inner$8 = makeInner();\r\n  var each$4 = each$1;\r\n  /**\r\n   * @param {string} key\r\n   * @param {module:echarts/ExtensionAPI} api\r\n   * @param {Function} handler\r\n   *      param: {string} currTrigger\r\n   *      param: {Array.<number>} point\r\n   */\r\n\r\n  function register(key, api, handler) {\r\n    if (env.node) {\r\n      return;\r\n    }\r\n\r\n    var zr = api.getZr();\r\n    inner$8(zr).records || (inner$8(zr).records = {});\r\n    initGlobalListeners(zr, api);\r\n    var record = inner$8(zr).records[key] || (inner$8(zr).records[key] = {});\r\n    record.handler = handler;\r\n  }\r\n\r\n  function initGlobalListeners(zr, api) {\r\n    if (inner$8(zr).initialized) {\r\n      return;\r\n    }\r\n\r\n    inner$8(zr).initialized = true;\r\n    useHandler('click', curry(doEnter, 'click'));\r\n    useHandler('mousemove', curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\r\n\r\n    useHandler('globalout', onLeave);\r\n\r\n    function useHandler(eventType, cb) {\r\n      zr.on(eventType, function (e) {\r\n        var dis = makeDispatchAction(api);\r\n        each$4(inner$8(zr).records, function (record) {\r\n          record && cb(record, e, dis.dispatchAction);\r\n        });\r\n        dispatchTooltipFinally(dis.pendings, api);\r\n      });\r\n    }\r\n  }\r\n\r\n  function dispatchTooltipFinally(pendings, api) {\r\n    var showLen = pendings.showTip.length;\r\n    var hideLen = pendings.hideTip.length;\r\n    var actuallyPayload;\r\n\r\n    if (showLen) {\r\n      actuallyPayload = pendings.showTip[showLen - 1];\r\n    } else if (hideLen) {\r\n      actuallyPayload = pendings.hideTip[hideLen - 1];\r\n    }\r\n\r\n    if (actuallyPayload) {\r\n      actuallyPayload.dispatchAction = null;\r\n      api.dispatchAction(actuallyPayload);\r\n    }\r\n  }\r\n\r\n  function onLeave(record, e, dispatchAction) {\r\n    record.handler('leave', null, dispatchAction);\r\n  }\r\n\r\n  function doEnter(currTrigger, record, e, dispatchAction) {\r\n    record.handler(currTrigger, e, dispatchAction);\r\n  }\r\n\r\n  function makeDispatchAction(api) {\r\n    var pendings = {\r\n      showTip: [],\r\n      hideTip: []\r\n    }; // FIXME\r\n    // better approach?\r\n    // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\r\n    // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\r\n    // So we have to add \"final stage\" to merge those dispatched actions.\r\n\r\n    var dispatchAction = function (payload) {\r\n      var pendingList = pendings[payload.type];\r\n\r\n      if (pendingList) {\r\n        pendingList.push(payload);\r\n      } else {\r\n        payload.dispatchAction = dispatchAction;\r\n        api.dispatchAction(payload);\r\n      }\r\n    };\r\n\r\n    return {\r\n      dispatchAction: dispatchAction,\r\n      pendings: pendings\r\n    };\r\n  }\r\n\r\n  function unregister(key, api) {\r\n    if (env.node) {\r\n      return;\r\n    }\r\n\r\n    var zr = api.getZr();\r\n    var record = (inner$8(zr).records || {})[key];\r\n\r\n    if (record) {\r\n      inner$8(zr).records[key] = null;\r\n    }\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var AxisPointerView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(AxisPointerView, _super);\r\n\r\n    function AxisPointerView() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = AxisPointerView.type;\r\n      return _this;\r\n    }\r\n\r\n    AxisPointerView.prototype.render = function (globalAxisPointerModel, ecModel, api) {\r\n      var globalTooltipModel = ecModel.getComponent('tooltip');\r\n      var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\r\n      // AxisPointerView to be independent to Tooltip.\r\n\r\n      register('axisPointer', api, function (currTrigger, e, dispatchAction) {\r\n        // If 'none', it is not controlled by mouse totally.\r\n        if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\r\n          dispatchAction({\r\n            type: 'updateAxisPointer',\r\n            currTrigger: currTrigger,\r\n            x: e && e.offsetX,\r\n            y: e && e.offsetY\r\n          });\r\n        }\r\n      });\r\n    };\r\n\r\n    AxisPointerView.prototype.remove = function (ecModel, api) {\r\n      unregister('axisPointer', api);\r\n    };\r\n\r\n    AxisPointerView.prototype.dispose = function (ecModel, api) {\r\n      unregister('axisPointer', api);\r\n    };\r\n\r\n    AxisPointerView.type = 'axisPointer';\r\n    return AxisPointerView;\r\n  }(ComponentView);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * @param finder contains {seriesIndex, dataIndex, dataIndexInside}\r\n   * @param ecModel\r\n   * @return  {point: [x, y], el: ...} point Will not be null.\r\n   */\r\n\r\n\r\n  function findPointFromSeries(finder, ecModel) {\r\n    var point = [];\r\n    var seriesIndex = finder.seriesIndex;\r\n    var seriesModel;\r\n\r\n    if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\r\n      return {\r\n        point: []\r\n      };\r\n    }\r\n\r\n    var data = seriesModel.getData();\r\n    var dataIndex = queryDataIndex(data, finder);\r\n\r\n    if (dataIndex == null || dataIndex < 0 || isArray(dataIndex)) {\r\n      return {\r\n        point: []\r\n      };\r\n    }\r\n\r\n    var el = data.getItemGraphicEl(dataIndex);\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (seriesModel.getTooltipPosition) {\r\n      point = seriesModel.getTooltipPosition(dataIndex) || [];\r\n    } else if (coordSys && coordSys.dataToPoint) {\r\n      if (finder.isStacked) {\r\n        var baseAxis = coordSys.getBaseAxis();\r\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\r\n        var valueAxisDim = valueAxis.dim;\r\n        var baseAxisDim = baseAxis.dim;\r\n        var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\r\n        var baseDim = data.mapDimension(baseAxisDim);\r\n        var stackedData = [];\r\n        stackedData[baseDataOffset] = data.get(baseDim, dataIndex);\r\n        stackedData[1 - baseDataOffset] = data.get(data.getCalculationInfo('stackResultDimension'), dataIndex);\r\n        point = coordSys.dataToPoint(stackedData) || [];\r\n      } else {\r\n        point = coordSys.dataToPoint(data.getValues(map(coordSys.dimensions, function (dim) {\r\n          return data.mapDimension(dim);\r\n        }), dataIndex)) || [];\r\n      }\r\n    } else if (el) {\r\n      // Use graphic bounding rect\r\n      var rect = el.getBoundingRect().clone();\r\n      rect.applyTransform(el.transform);\r\n      point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\r\n    }\r\n\r\n    return {\r\n      point: point,\r\n      el: el\r\n    };\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var inner$9 = makeInner();\r\n  /**\r\n   * Basic logic: check all axis, if they do not demand show/highlight,\r\n   * then hide/downplay them.\r\n   *\r\n   * @return content of event obj for echarts.connect.\r\n   */\r\n\r\n  function axisTrigger(payload, ecModel, api) {\r\n    var currTrigger = payload.currTrigger;\r\n    var point = [payload.x, payload.y];\r\n    var finder = payload;\r\n    var dispatchAction = payload.dispatchAction || bind(api.dispatchAction, api);\r\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\r\n    // See #6121. But we are not able to reproduce it yet.\r\n\r\n    if (!coordSysAxesInfo) {\r\n      return;\r\n    }\r\n\r\n    if (illegalPoint(point)) {\r\n      // Used in the default behavior of `connection`: use the sample seriesIndex\r\n      // and dataIndex. And also used in the tooltipView trigger.\r\n      point = findPointFromSeries({\r\n        seriesIndex: finder.seriesIndex,\r\n        // Do not use dataIndexInside from other ec instance.\r\n        // FIXME: auto detect it?\r\n        dataIndex: finder.dataIndex\r\n      }, ecModel).point;\r\n    }\r\n\r\n    var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\r\n    // Notice: In this case, it is difficult to get the `point` (which is necessary to show\r\n    // tooltip, so if point is not given, we just use the point found by sample seriesIndex\r\n    // and dataIndex.\r\n\r\n    var inputAxesInfo = finder.axesInfo;\r\n    var axesInfo = coordSysAxesInfo.axesInfo;\r\n    var shouldHide = currTrigger === 'leave' || illegalPoint(point);\r\n    var outputPayload = {};\r\n    var showValueMap = {};\r\n    var dataByCoordSys = {\r\n      list: [],\r\n      map: {}\r\n    };\r\n    var updaters = {\r\n      showPointer: curry(showPointer, showValueMap),\r\n      showTooltip: curry(showTooltip, dataByCoordSys)\r\n    }; // Process for triggered axes.\r\n\r\n    each$1(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\r\n      // If a point given, it must be contained by the coordinate system.\r\n      var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\r\n      each$1(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\r\n        var axis = axisInfo.axis;\r\n        var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\r\n\r\n        if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\r\n          var val = inputAxisInfo && inputAxisInfo.value;\r\n\r\n          if (val == null && !isIllegalPoint) {\r\n            val = axis.pointToData(point);\r\n          }\r\n\r\n          val != null && processOnAxis(axisInfo, val, updaters, false, outputPayload);\r\n        }\r\n      });\r\n    }); // Process for linked axes.\r\n\r\n    var linkTriggers = {};\r\n    each$1(axesInfo, function (tarAxisInfo, tarKey) {\r\n      var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\r\n\r\n      if (linkGroup && !showValueMap[tarKey]) {\r\n        each$1(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\r\n          var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\r\n\r\n          if (srcAxisInfo !== tarAxisInfo && srcValItem) {\r\n            var val = srcValItem.value;\r\n            linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\r\n            linkTriggers[tarAxisInfo.key] = val;\r\n          }\r\n        });\r\n      }\r\n    });\r\n    each$1(linkTriggers, function (val, tarKey) {\r\n      processOnAxis(axesInfo[tarKey], val, updaters, true, outputPayload);\r\n    });\r\n    updateModelActually(showValueMap, axesInfo, outputPayload);\r\n    dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\r\n    dispatchHighDownActually(axesInfo, dispatchAction, api);\r\n    return outputPayload;\r\n  }\r\n\r\n  function processOnAxis(axisInfo, newValue, updaters, noSnap, outputFinder) {\r\n    var axis = axisInfo.axis;\r\n\r\n    if (axis.scale.isBlank() || !axis.containData(newValue)) {\r\n      return;\r\n    }\r\n\r\n    if (!axisInfo.involveSeries) {\r\n      updaters.showPointer(axisInfo, newValue);\r\n      return;\r\n    } // Heavy calculation. So put it after axis.containData checking.\r\n\r\n\r\n    var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\r\n    var payloadBatch = payloadInfo.payloadBatch;\r\n    var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\r\n    // By default use the first involved series data as a sample to connect.\r\n\r\n    if (payloadBatch[0] && outputFinder.seriesIndex == null) {\r\n      extend(outputFinder, payloadBatch[0]);\r\n    } // If no linkSource input, this process is for collecting link\r\n    // target, where snap should not be accepted.\r\n\r\n\r\n    if (!noSnap && axisInfo.snap) {\r\n      if (axis.containData(snapToValue) && snapToValue != null) {\r\n        newValue = snapToValue;\r\n      }\r\n    }\r\n\r\n    updaters.showPointer(axisInfo, newValue, payloadBatch); // Tooltip should always be snapToValue, otherwise there will be\r\n    // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\r\n\r\n    updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\r\n  }\r\n\r\n  function buildPayloadsBySeries(value, axisInfo) {\r\n    var axis = axisInfo.axis;\r\n    var dim = axis.dim;\r\n    var snapToValue = value;\r\n    var payloadBatch = [];\r\n    var minDist = Number.MAX_VALUE;\r\n    var minDiff = -1;\r\n    each$1(axisInfo.seriesModels, function (series, idx) {\r\n      var dataDim = series.getData().mapDimensionsAll(dim);\r\n      var seriesNestestValue;\r\n      var dataIndices;\r\n\r\n      if (series.getAxisTooltipData) {\r\n        var result = series.getAxisTooltipData(dataDim, value, axis);\r\n        dataIndices = result.dataIndices;\r\n        seriesNestestValue = result.nestestValue;\r\n      } else {\r\n        dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\r\n        // when data length is not same.\r\n        // false,\r\n        axis.type === 'category' ? 0.5 : null);\r\n\r\n        if (!dataIndices.length) {\r\n          return;\r\n        }\r\n\r\n        seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\r\n      }\r\n\r\n      if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\r\n        return;\r\n      }\r\n\r\n      var diff = value - seriesNestestValue;\r\n      var dist = Math.abs(diff); // Consider category case\r\n\r\n      if (dist <= minDist) {\r\n        if (dist < minDist || diff >= 0 && minDiff < 0) {\r\n          minDist = dist;\r\n          minDiff = diff;\r\n          snapToValue = seriesNestestValue;\r\n          payloadBatch.length = 0;\r\n        }\r\n\r\n        each$1(dataIndices, function (dataIndex) {\r\n          payloadBatch.push({\r\n            seriesIndex: series.seriesIndex,\r\n            dataIndexInside: dataIndex,\r\n            dataIndex: series.getData().getRawIndex(dataIndex)\r\n          });\r\n        });\r\n      }\r\n    });\r\n    return {\r\n      payloadBatch: payloadBatch,\r\n      snapToValue: snapToValue\r\n    };\r\n  }\r\n\r\n  function showPointer(showValueMap, axisInfo, value, payloadBatch) {\r\n    showValueMap[axisInfo.key] = {\r\n      value: value,\r\n      payloadBatch: payloadBatch\r\n    };\r\n  }\r\n\r\n  function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\r\n    var payloadBatch = payloadInfo.payloadBatch;\r\n    var axis = axisInfo.axis;\r\n    var axisModel = axis.model;\r\n    var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\r\n    // whose length will be used to judge whether dispatch action.\r\n\r\n    if (!axisInfo.triggerTooltip || !payloadBatch.length) {\r\n      return;\r\n    }\r\n\r\n    var coordSysModel = axisInfo.coordSys.model;\r\n    var coordSysKey = makeKey(coordSysModel);\r\n    var coordSysItem = dataByCoordSys.map[coordSysKey];\r\n\r\n    if (!coordSysItem) {\r\n      coordSysItem = dataByCoordSys.map[coordSysKey] = {\r\n        coordSysId: coordSysModel.id,\r\n        coordSysIndex: coordSysModel.componentIndex,\r\n        coordSysType: coordSysModel.type,\r\n        coordSysMainType: coordSysModel.mainType,\r\n        dataByAxis: []\r\n      };\r\n      dataByCoordSys.list.push(coordSysItem);\r\n    }\r\n\r\n    coordSysItem.dataByAxis.push({\r\n      axisDim: axis.dim,\r\n      axisIndex: axisModel.componentIndex,\r\n      axisType: axisModel.type,\r\n      axisId: axisModel.id,\r\n      value: value,\r\n      // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\r\n      // depends that all models have been updated. So it should not be performed\r\n      // here. Considering axisPointerModel used here is volatile, which is hard\r\n      // to be retrieve in TooltipView, we prepare parameters here.\r\n      valueLabelOpt: {\r\n        precision: axisPointerModel.get(['label', 'precision']),\r\n        formatter: axisPointerModel.get(['label', 'formatter'])\r\n      },\r\n      seriesDataIndices: payloadBatch.slice()\r\n    });\r\n  }\r\n\r\n  function updateModelActually(showValueMap, axesInfo, outputPayload) {\r\n    var outputAxesInfo = outputPayload.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\r\n\r\n    each$1(axesInfo, function (axisInfo, key) {\r\n      var option = axisInfo.axisPointerModel.option;\r\n      var valItem = showValueMap[key];\r\n\r\n      if (valItem) {\r\n        !axisInfo.useHandle && (option.status = 'show');\r\n        option.value = valItem.value; // For label formatter param and highlight.\r\n\r\n        option.seriesDataIndices = (valItem.payloadBatch || []).slice();\r\n      } // When always show (e.g., handle used), remain\r\n      // original value and status.\r\n      else {\r\n          // If hide, value still need to be set, consider\r\n          // click legend to toggle axis blank.\r\n          !axisInfo.useHandle && (option.status = 'hide');\r\n        } // If status is 'hide', should be no info in payload.\r\n\r\n\r\n      option.status === 'show' && outputAxesInfo.push({\r\n        axisDim: axisInfo.axis.dim,\r\n        axisIndex: axisInfo.axis.model.componentIndex,\r\n        value: option.value\r\n      });\r\n    });\r\n  }\r\n\r\n  function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\r\n    // Basic logic: If no showTip required, hideTip will be dispatched.\r\n    if (illegalPoint(point) || !dataByCoordSys.list.length) {\r\n      dispatchAction({\r\n        type: 'hideTip'\r\n      });\r\n      return;\r\n    } // In most case only one axis (or event one series is used). It is\r\n    // convinient to fetch payload.seriesIndex and payload.dataIndex\r\n    // dirtectly. So put the first seriesIndex and dataIndex of the first\r\n    // axis on the payload.\r\n\r\n\r\n    var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\r\n    dispatchAction({\r\n      type: 'showTip',\r\n      escapeConnect: true,\r\n      x: point[0],\r\n      y: point[1],\r\n      tooltipOption: payload.tooltipOption,\r\n      position: payload.position,\r\n      dataIndexInside: sampleItem.dataIndexInside,\r\n      dataIndex: sampleItem.dataIndex,\r\n      seriesIndex: sampleItem.seriesIndex,\r\n      dataByCoordSys: dataByCoordSys.list\r\n    });\r\n  }\r\n\r\n  function dispatchHighDownActually(axesInfo, dispatchAction, api) {\r\n    // FIXME\r\n    // highlight status modification shoule be a stage of main process?\r\n    // (Consider confilct (e.g., legend and axisPointer) and setOption)\r\n    var zr = api.getZr();\r\n    var highDownKey = 'axisPointerLastHighlights';\r\n    var lastHighlights = inner$9(zr)[highDownKey] || {};\r\n    var newHighlights = inner$9(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\r\n    // Build hash map and remove duplicate incidentally.\r\n\r\n    each$1(axesInfo, function (axisInfo, key) {\r\n      var option = axisInfo.axisPointerModel.option;\r\n      option.status === 'show' && each$1(option.seriesDataIndices, function (batchItem) {\r\n        var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\r\n        newHighlights[key] = batchItem;\r\n      });\r\n    }); // Diff.\r\n\r\n    var toHighlight = [];\r\n    var toDownplay = [];\r\n    each$1(lastHighlights, function (batchItem, key) {\r\n      !newHighlights[key] && toDownplay.push(batchItem);\r\n    });\r\n    each$1(newHighlights, function (batchItem, key) {\r\n      !lastHighlights[key] && toHighlight.push(batchItem);\r\n    });\r\n    toDownplay.length && api.dispatchAction({\r\n      type: 'downplay',\r\n      escapeConnect: true,\r\n      // Not blur others when highlight in axisPointer.\r\n      notBlur: true,\r\n      batch: toDownplay\r\n    });\r\n    toHighlight.length && api.dispatchAction({\r\n      type: 'highlight',\r\n      escapeConnect: true,\r\n      // Not blur others when highlight in axisPointer.\r\n      notBlur: true,\r\n      batch: toHighlight\r\n    });\r\n  }\r\n\r\n  function findInputAxisInfo(inputAxesInfo, axisInfo) {\r\n    for (var i = 0; i < (inputAxesInfo || []).length; i++) {\r\n      var inputAxisInfo = inputAxesInfo[i];\r\n\r\n      if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\r\n        return inputAxisInfo;\r\n      }\r\n    }\r\n  }\r\n\r\n  function makeMapperParam(axisInfo) {\r\n    var axisModel = axisInfo.axis.model;\r\n    var item = {};\r\n    var dim = item.axisDim = axisInfo.axis.dim;\r\n    item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\r\n    item.axisName = item[dim + 'AxisName'] = axisModel.name;\r\n    item.axisId = item[dim + 'AxisId'] = axisModel.id;\r\n    return item;\r\n  }\r\n\r\n  function illegalPoint(point) {\r\n    return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function install$5(registers) {\r\n    // CartesianAxisPointer is not supposed to be required here. But consider\r\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\r\n    // CartesianAxisPointer should be able to required somewhere.\r\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\r\n    registers.registerComponentModel(AxisPointerModel);\r\n    registers.registerComponentView(AxisPointerView);\r\n    registers.registerPreprocessor(function (option) {\r\n      // Always has a global axisPointerModel for default setting.\r\n      if (option) {\r\n        (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\r\n        var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\r\n        // is not set, remain null/undefined, otherwise it will\r\n        // override existent link setting.\r\n\r\n        if (link && !isArray(link)) {\r\n          option.axisPointer.link = [link];\r\n        }\r\n      }\r\n    }); // This process should proformed after coordinate systems created\r\n    // and series data processed. So put it on statistic processing stage.\r\n\r\n    registers.registerProcessor(registers.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\r\n      // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\r\n      // allAxesInfo should be updated when setOption performed.\r\n      ecModel.getComponent('axisPointer').coordSysAxesInfo = collect(ecModel, api);\r\n    }); // Broadcast to all views.\r\n\r\n    registers.registerAction({\r\n      type: 'updateAxisPointer',\r\n      event: 'updateAxisPointer',\r\n      update: ':updateAxisPointer'\r\n    }, axisTrigger);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var PolarModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(PolarModel, _super);\r\n\r\n    function PolarModel() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = PolarModel.type;\r\n      return _this;\r\n    }\r\n\r\n    PolarModel.prototype.findAxisModel = function (axisType) {\r\n      var foundAxisModel;\r\n      var ecModel = this.ecModel;\r\n      ecModel.eachComponent(axisType, function (axisModel) {\r\n        if (axisModel.getCoordSysModel() === this) {\r\n          foundAxisModel = axisModel;\r\n        }\r\n      }, this);\r\n      return foundAxisModel;\r\n    };\r\n\r\n    PolarModel.type = 'polar';\r\n    PolarModel.dependencies = ['radiusAxis', 'angleAxis'];\r\n    PolarModel.defaultOption = {\r\n      zlevel: 0,\r\n      z: 0,\r\n      center: ['50%', '50%'],\r\n      radius: '80%'\r\n    };\r\n    return PolarModel;\r\n  }(ComponentModel);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var PolarAxisModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(PolarAxisModel, _super);\r\n\r\n    function PolarAxisModel() {\r\n      return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n\r\n    PolarAxisModel.prototype.getCoordSysModel = function () {\r\n      return this.getReferringComponents('polar', SINGLE_REFERRING).models[0];\r\n    };\r\n\r\n    PolarAxisModel.type = 'polarAxis';\r\n    return PolarAxisModel;\r\n  }(ComponentModel);\r\n\r\n  mixin(PolarAxisModel, AxisModelCommonMixin);\r\n\r\n  var AngleAxisModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(AngleAxisModel, _super);\r\n\r\n    function AngleAxisModel() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = AngleAxisModel.type;\r\n      return _this;\r\n    }\r\n\r\n    AngleAxisModel.type = 'angleAxis';\r\n    return AngleAxisModel;\r\n  }(PolarAxisModel);\r\n\r\n  var RadiusAxisModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(RadiusAxisModel, _super);\r\n\r\n    function RadiusAxisModel() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = RadiusAxisModel.type;\r\n      return _this;\r\n    }\r\n\r\n    RadiusAxisModel.type = 'radiusAxis';\r\n    return RadiusAxisModel;\r\n  }(PolarAxisModel);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var RadiusAxis =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(RadiusAxis, _super);\r\n\r\n    function RadiusAxis(scale, radiusExtent) {\r\n      return _super.call(this, 'radius', scale, radiusExtent) || this;\r\n    }\r\n\r\n    RadiusAxis.prototype.pointToData = function (point, clamp) {\r\n      return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\r\n    };\r\n\r\n    return RadiusAxis;\r\n  }(Axis);\r\n\r\n  RadiusAxis.prototype.dataToRadius = Axis.prototype.dataToCoord;\r\n  RadiusAxis.prototype.radiusToData = Axis.prototype.coordToData;\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var inner$10 = makeInner();\r\n\r\n  var AngleAxis =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(AngleAxis, _super);\r\n\r\n    function AngleAxis(scale, angleExtent) {\r\n      return _super.call(this, 'angle', scale, angleExtent || [0, 360]) || this;\r\n    }\r\n\r\n    AngleAxis.prototype.pointToData = function (point, clamp) {\r\n      return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\r\n    };\r\n    /**\r\n     * Only be called in category axis.\r\n     * Angle axis uses text height to decide interval\r\n     *\r\n     * @override\r\n     * @return {number} Auto interval for cateogry axis tick and label\r\n     */\r\n\r\n\r\n    AngleAxis.prototype.calculateCategoryInterval = function () {\r\n      var axis = this;\r\n      var labelModel = axis.getLabelModel();\r\n      var ordinalScale = axis.scale;\r\n      var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\r\n      // avoid generating a long array by `getTicks`\r\n      // in large category data case.\r\n\r\n      var tickCount = ordinalScale.count();\r\n\r\n      if (ordinalExtent[1] - ordinalExtent[0] < 1) {\r\n        return 0;\r\n      }\r\n\r\n      var tickValue = ordinalExtent[0];\r\n      var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\r\n      var unitH = Math.abs(unitSpan); // Not precise, just use height as text width\r\n      // and each distance from axis line yet.\r\n\r\n      var rect = getBoundingRect(tickValue == null ? '' : tickValue + '', labelModel.getFont(), 'center', 'top');\r\n      var maxH = Math.max(rect.height, 7);\r\n      var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\r\n\r\n      isNaN(dh) && (dh = Infinity);\r\n      var interval = Math.max(0, Math.floor(dh));\r\n      var cache = inner$10(axis.model);\r\n      var lastAutoInterval = cache.lastAutoInterval;\r\n      var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\r\n      // otherwise the calculated interval might jitter when the zoom\r\n      // window size is close to the interval-changing size.\r\n\r\n      if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\r\n      // point is not the same when zooming in or zooming out.\r\n      && lastAutoInterval > interval) {\r\n        interval = lastAutoInterval;\r\n      } // Only update cache if cache not used, otherwise the\r\n      // changing of interval is too insensitive.\r\n      else {\r\n          cache.lastTickCount = tickCount;\r\n          cache.lastAutoInterval = interval;\r\n        }\r\n\r\n      return interval;\r\n    };\r\n\r\n    return AngleAxis;\r\n  }(Axis);\r\n\r\n  AngleAxis.prototype.dataToAngle = Axis.prototype.dataToCoord;\r\n  AngleAxis.prototype.angleToData = Axis.prototype.coordToData;\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var Polar =\r\n  /** @class */\r\n  function () {\r\n    function Polar(name) {\r\n      this.dimensions = ['radius', 'angle'];\r\n      this.type = 'polar';\r\n      /**\r\n       * x of polar center\r\n       */\r\n\r\n      this.cx = 0;\r\n      /**\r\n       * y of polar center\r\n       */\r\n\r\n      this.cy = 0;\r\n      this._radiusAxis = new RadiusAxis();\r\n      this._angleAxis = new AngleAxis();\r\n      this.axisPointerEnabled = true;\r\n      this.name = name || '';\r\n      this._radiusAxis.polar = this._angleAxis.polar = this;\r\n    }\r\n    /**\r\n     * If contain coord\r\n     */\r\n\r\n\r\n    Polar.prototype.containPoint = function (point) {\r\n      var coord = this.pointToCoord(point);\r\n      return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\r\n    };\r\n    /**\r\n     * If contain data\r\n     */\r\n\r\n\r\n    Polar.prototype.containData = function (data) {\r\n      return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\r\n    };\r\n\r\n    Polar.prototype.getAxis = function (dim) {\r\n      var key = '_' + dim + 'Axis';\r\n      return this[key];\r\n    };\r\n\r\n    Polar.prototype.getAxes = function () {\r\n      return [this._radiusAxis, this._angleAxis];\r\n    };\r\n    /**\r\n     * Get axes by type of scale\r\n     */\r\n\r\n\r\n    Polar.prototype.getAxesByScale = function (scaleType) {\r\n      var axes = [];\r\n      var angleAxis = this._angleAxis;\r\n      var radiusAxis = this._radiusAxis;\r\n      angleAxis.scale.type === scaleType && axes.push(angleAxis);\r\n      radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\r\n      return axes;\r\n    };\r\n\r\n    Polar.prototype.getAngleAxis = function () {\r\n      return this._angleAxis;\r\n    };\r\n\r\n    Polar.prototype.getRadiusAxis = function () {\r\n      return this._radiusAxis;\r\n    };\r\n\r\n    Polar.prototype.getOtherAxis = function (axis) {\r\n      var angleAxis = this._angleAxis;\r\n      return axis === angleAxis ? this._radiusAxis : angleAxis;\r\n    };\r\n    /**\r\n     * Base axis will be used on stacking.\r\n     *\r\n     */\r\n\r\n\r\n    Polar.prototype.getBaseAxis = function () {\r\n      return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\r\n    };\r\n\r\n    Polar.prototype.getTooltipAxes = function (dim) {\r\n      var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\r\n      return {\r\n        baseAxes: [baseAxis],\r\n        otherAxes: [this.getOtherAxis(baseAxis)]\r\n      };\r\n    };\r\n    /**\r\n     * Convert a single data item to (x, y) point.\r\n     * Parameter data is an array which the first element is radius and the second is angle\r\n     */\r\n\r\n\r\n    Polar.prototype.dataToPoint = function (data, clamp) {\r\n      return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\r\n    };\r\n    /**\r\n     * Convert a (x, y) point to data\r\n     */\r\n\r\n\r\n    Polar.prototype.pointToData = function (point, clamp) {\r\n      var coord = this.pointToCoord(point);\r\n      return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\r\n    };\r\n    /**\r\n     * Convert a (x, y) point to (radius, angle) coord\r\n     */\r\n\r\n\r\n    Polar.prototype.pointToCoord = function (point) {\r\n      var dx = point[0] - this.cx;\r\n      var dy = point[1] - this.cy;\r\n      var angleAxis = this.getAngleAxis();\r\n      var extent = angleAxis.getExtent();\r\n      var minAngle = Math.min(extent[0], extent[1]);\r\n      var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\r\n      // FIXME\r\n\r\n      angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\r\n      var radius = Math.sqrt(dx * dx + dy * dy);\r\n      dx /= radius;\r\n      dy /= radius;\r\n      var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\r\n\r\n      var dir = radian < minAngle ? 1 : -1;\r\n\r\n      while (radian < minAngle || radian > maxAngle) {\r\n        radian += dir * 360;\r\n      }\r\n\r\n      return [radius, radian];\r\n    };\r\n    /**\r\n     * Convert a (radius, angle) coord to (x, y) point\r\n     */\r\n\r\n\r\n    Polar.prototype.coordToPoint = function (coord) {\r\n      var radius = coord[0];\r\n      var radian = coord[1] / 180 * Math.PI;\r\n      var x = Math.cos(radian) * radius + this.cx; // Inverse the y\r\n\r\n      var y = -Math.sin(radian) * radius + this.cy;\r\n      return [x, y];\r\n    };\r\n    /**\r\n     * Get ring area of cartesian.\r\n     * Area will have a contain function to determine if a point is in the coordinate system.\r\n     */\r\n\r\n\r\n    Polar.prototype.getArea = function () {\r\n      var angleAxis = this.getAngleAxis();\r\n      var radiusAxis = this.getRadiusAxis();\r\n      var radiusExtent = radiusAxis.getExtent().slice();\r\n      radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\r\n      var angleExtent = angleAxis.getExtent();\r\n      var RADIAN = Math.PI / 180;\r\n      return {\r\n        cx: this.cx,\r\n        cy: this.cy,\r\n        r0: radiusExtent[0],\r\n        r: radiusExtent[1],\r\n        startAngle: -angleExtent[0] * RADIAN,\r\n        endAngle: -angleExtent[1] * RADIAN,\r\n        clockwise: angleAxis.inverse,\r\n        contain: function (x, y) {\r\n          // It's a ring shape.\r\n          // Start angle and end angle don't matter\r\n          var dx = x - this.cx;\r\n          var dy = y - this.cy;\r\n          var d2 = dx * dx + dy * dy;\r\n          var r = this.r;\r\n          var r0 = this.r0;\r\n          return d2 <= r * r && d2 >= r0 * r0;\r\n        }\r\n      };\r\n    };\r\n\r\n    Polar.prototype.convertToPixel = function (ecModel, finder, value) {\r\n      var coordSys = getCoordSys$1(finder);\r\n      return coordSys === this ? this.dataToPoint(value) : null;\r\n    };\r\n\r\n    Polar.prototype.convertFromPixel = function (ecModel, finder, pixel) {\r\n      var coordSys = getCoordSys$1(finder);\r\n      return coordSys === this ? this.pointToData(pixel) : null;\r\n    };\r\n\r\n    return Polar;\r\n  }();\r\n\r\n  function getCoordSys$1(finder) {\r\n    var seriesModel = finder.seriesModel;\r\n    var polarModel = finder.polarModel;\r\n    return polarModel && polarModel.coordinateSystem || seriesModel && seriesModel.coordinateSystem;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n  // TODO Axis scale\r\n\r\n  /**\r\n   * Resize method bound to the polar\r\n   */\r\n\r\n\r\n  function resizePolar(polar, polarModel, api) {\r\n    var center = polarModel.get('center');\r\n    var width = api.getWidth();\r\n    var height = api.getHeight();\r\n    polar.cx = parsePercent$1(center[0], width);\r\n    polar.cy = parsePercent$1(center[1], height);\r\n    var radiusAxis = polar.getRadiusAxis();\r\n    var size = Math.min(width, height) / 2;\r\n    var radius = polarModel.get('radius');\r\n\r\n    if (radius == null) {\r\n      radius = [0, '100%'];\r\n    } else if (!isArray(radius)) {\r\n      // r0 = 0\r\n      radius = [0, radius];\r\n    }\r\n\r\n    var parsedRadius = [parsePercent$1(radius[0], size), parsePercent$1(radius[1], size)];\r\n    radiusAxis.inverse ? radiusAxis.setExtent(parsedRadius[1], parsedRadius[0]) : radiusAxis.setExtent(parsedRadius[0], parsedRadius[1]);\r\n  }\r\n  /**\r\n   * Update polar\r\n   */\r\n\r\n\r\n  function updatePolarScale(ecModel, api) {\r\n    var polar = this;\r\n    var angleAxis = polar.getAngleAxis();\r\n    var radiusAxis = polar.getRadiusAxis(); // Reset scale\r\n\r\n    angleAxis.scale.setExtent(Infinity, -Infinity);\r\n    radiusAxis.scale.setExtent(Infinity, -Infinity);\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      if (seriesModel.coordinateSystem === polar) {\r\n        var data_1 = seriesModel.getData();\r\n        each$1(getDataDimensionsOnAxis(data_1, 'radius'), function (dim) {\r\n          radiusAxis.scale.unionExtentFromData(data_1, dim);\r\n        });\r\n        each$1(getDataDimensionsOnAxis(data_1, 'angle'), function (dim) {\r\n          angleAxis.scale.unionExtentFromData(data_1, dim);\r\n        });\r\n      }\r\n    });\r\n    niceScaleExtent(angleAxis.scale, angleAxis.model);\r\n    niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\r\n\r\n    if (angleAxis.type === 'category' && !angleAxis.onBand) {\r\n      var extent = angleAxis.getExtent();\r\n      var diff = 360 / angleAxis.scale.count();\r\n      angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\r\n      angleAxis.setExtent(extent[0], extent[1]);\r\n    }\r\n  }\r\n\r\n  function isAngleAxisModel(axisModel) {\r\n    return axisModel.mainType === 'angleAxis';\r\n  }\r\n  /**\r\n   * Set common axis properties\r\n   */\r\n\r\n\r\n  function setAxis(axis, axisModel) {\r\n    axis.type = axisModel.get('type');\r\n    axis.scale = createScaleByModel(axisModel);\r\n    axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\r\n    axis.inverse = axisModel.get('inverse');\r\n\r\n    if (isAngleAxisModel(axisModel)) {\r\n      axis.inverse = axis.inverse !== axisModel.get('clockwise');\r\n      var startAngle = axisModel.get('startAngle');\r\n      axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\r\n    } // Inject axis instance\r\n\r\n\r\n    axisModel.axis = axis;\r\n    axis.model = axisModel;\r\n  }\r\n\r\n  var polarCreator = {\r\n    dimensions: Polar.prototype.dimensions,\r\n    create: function (ecModel, api) {\r\n      var polarList = [];\r\n      ecModel.eachComponent('polar', function (polarModel, idx) {\r\n        var polar = new Polar(idx + ''); // Inject resize and update method\r\n\r\n        polar.update = updatePolarScale;\r\n        var radiusAxis = polar.getRadiusAxis();\r\n        var angleAxis = polar.getAngleAxis();\r\n        var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\r\n        var angleAxisModel = polarModel.findAxisModel('angleAxis');\r\n        setAxis(radiusAxis, radiusAxisModel);\r\n        setAxis(angleAxis, angleAxisModel);\r\n        resizePolar(polar, polarModel, api);\r\n        polarList.push(polar);\r\n        polarModel.coordinateSystem = polar;\r\n        polar.model = polarModel;\r\n      }); // Inject coordinateSystem to series\r\n\r\n      ecModel.eachSeries(function (seriesModel) {\r\n        if (seriesModel.get('coordinateSystem') === 'polar') {\r\n          var polarModel = seriesModel.getReferringComponents('polar', SINGLE_REFERRING).models[0];\r\n          {\r\n            if (!polarModel) {\r\n              throw new Error('Polar \"' + retrieve(seriesModel.get('polarIndex'), seriesModel.get('polarId'), 0) + '\" not found');\r\n            }\r\n          }\r\n          seriesModel.coordinateSystem = polarModel.coordinateSystem;\r\n        }\r\n      });\r\n      return polarList;\r\n    }\r\n  };\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var elementList = ['axisLine', 'axisLabel', 'axisTick', 'minorTick', 'splitLine', 'minorSplitLine', 'splitArea'];\r\n\r\n  function getAxisLineShape(polar, rExtent, angle) {\r\n    rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\r\n    var start = polar.coordToPoint([rExtent[0], angle]);\r\n    var end = polar.coordToPoint([rExtent[1], angle]);\r\n    return {\r\n      x1: start[0],\r\n      y1: start[1],\r\n      x2: end[0],\r\n      y2: end[1]\r\n    };\r\n  }\r\n\r\n  function getRadiusIdx(polar) {\r\n    var radiusAxis = polar.getRadiusAxis();\r\n    return radiusAxis.inverse ? 0 : 1;\r\n  } // Remove the last tick which will overlap the first tick\r\n\r\n\r\n  function fixAngleOverlap(list) {\r\n    var firstItem = list[0];\r\n    var lastItem = list[list.length - 1];\r\n\r\n    if (firstItem && lastItem && Math.abs(Math.abs(firstItem.coord - lastItem.coord) - 360) < 1e-4) {\r\n      list.pop();\r\n    }\r\n  }\r\n\r\n  var AngleAxisView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(AngleAxisView, _super);\r\n\r\n    function AngleAxisView() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = AngleAxisView.type;\r\n      _this.axisPointerClass = 'PolarAxisPointer';\r\n      return _this;\r\n    }\r\n\r\n    AngleAxisView.prototype.render = function (angleAxisModel, ecModel) {\r\n      this.group.removeAll();\r\n\r\n      if (!angleAxisModel.get('show')) {\r\n        return;\r\n      }\r\n\r\n      var angleAxis = angleAxisModel.axis;\r\n      var polar = angleAxis.polar;\r\n      var radiusExtent = polar.getRadiusAxis().getExtent();\r\n      var ticksAngles = angleAxis.getTicksCoords();\r\n      var minorTickAngles = angleAxis.getMinorTicksCoords();\r\n      var labels = map(angleAxis.getViewLabels(), function (labelItem) {\r\n        labelItem = clone(labelItem);\r\n        var scale = angleAxis.scale;\r\n        var tickValue = scale.type === 'ordinal' ? scale.getRawOrdinalNumber(labelItem.tickValue) : labelItem.tickValue;\r\n        labelItem.coord = angleAxis.dataToCoord(tickValue);\r\n        return labelItem;\r\n      });\r\n      fixAngleOverlap(labels);\r\n      fixAngleOverlap(ticksAngles);\r\n      each$1(elementList, function (name) {\r\n        if (angleAxisModel.get([name, 'show']) && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\r\n          angelAxisElementsBuilders[name](this.group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent, labels);\r\n        }\r\n      }, this);\r\n    };\r\n\r\n    AngleAxisView.type = 'angleAxis';\r\n    return AngleAxisView;\r\n  }(AxisView);\r\n\r\n  var angelAxisElementsBuilders = {\r\n    axisLine: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\r\n      var lineStyleModel = angleAxisModel.getModel(['axisLine', 'lineStyle']); // extent id of the axis radius (r0 and r)\r\n\r\n      var rId = getRadiusIdx(polar);\r\n      var r0Id = rId ? 0 : 1;\r\n      var shape;\r\n\r\n      if (radiusExtent[r0Id] === 0) {\r\n        shape = new Circle({\r\n          shape: {\r\n            cx: polar.cx,\r\n            cy: polar.cy,\r\n            r: radiusExtent[rId]\r\n          },\r\n          style: lineStyleModel.getLineStyle(),\r\n          z2: 1,\r\n          silent: true\r\n        });\r\n      } else {\r\n        shape = new Ring({\r\n          shape: {\r\n            cx: polar.cx,\r\n            cy: polar.cy,\r\n            r: radiusExtent[rId],\r\n            r0: radiusExtent[r0Id]\r\n          },\r\n          style: lineStyleModel.getLineStyle(),\r\n          z2: 1,\r\n          silent: true\r\n        });\r\n      }\r\n\r\n      shape.style.fill = null;\r\n      group.add(shape);\r\n    },\r\n    axisTick: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\r\n      var tickModel = angleAxisModel.getModel('axisTick');\r\n      var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\r\n      var radius = radiusExtent[getRadiusIdx(polar)];\r\n      var lines = map(ticksAngles, function (tickAngleItem) {\r\n        return new Line({\r\n          shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngleItem.coord)\r\n        });\r\n      });\r\n      group.add(mergePath(lines, {\r\n        style: defaults(tickModel.getModel('lineStyle').getLineStyle(), {\r\n          stroke: angleAxisModel.get(['axisLine', 'lineStyle', 'color'])\r\n        })\r\n      }));\r\n    },\r\n    minorTick: function (group, angleAxisModel, polar, tickAngles, minorTickAngles, radiusExtent) {\r\n      if (!minorTickAngles.length) {\r\n        return;\r\n      }\r\n\r\n      var tickModel = angleAxisModel.getModel('axisTick');\r\n      var minorTickModel = angleAxisModel.getModel('minorTick');\r\n      var tickLen = (tickModel.get('inside') ? -1 : 1) * minorTickModel.get('length');\r\n      var radius = radiusExtent[getRadiusIdx(polar)];\r\n      var lines = [];\r\n\r\n      for (var i = 0; i < minorTickAngles.length; i++) {\r\n        for (var k = 0; k < minorTickAngles[i].length; k++) {\r\n          lines.push(new Line({\r\n            shape: getAxisLineShape(polar, [radius, radius + tickLen], minorTickAngles[i][k].coord)\r\n          }));\r\n        }\r\n      }\r\n\r\n      group.add(mergePath(lines, {\r\n        style: defaults(minorTickModel.getModel('lineStyle').getLineStyle(), defaults(tickModel.getLineStyle(), {\r\n          stroke: angleAxisModel.get(['axisLine', 'lineStyle', 'color'])\r\n        }))\r\n      }));\r\n    },\r\n    axisLabel: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent, labels) {\r\n      var rawCategoryData = angleAxisModel.getCategories(true);\r\n      var commonLabelModel = angleAxisModel.getModel('axisLabel');\r\n      var labelMargin = commonLabelModel.get('margin');\r\n      var triggerEvent = angleAxisModel.get('triggerEvent'); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\r\n\r\n      each$1(labels, function (labelItem, idx) {\r\n        var labelModel = commonLabelModel;\r\n        var tickValue = labelItem.tickValue;\r\n        var r = radiusExtent[getRadiusIdx(polar)];\r\n        var p = polar.coordToPoint([r + labelMargin, labelItem.coord]);\r\n        var cx = polar.cx;\r\n        var cy = polar.cy;\r\n        var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\r\n        var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\r\n\r\n        if (rawCategoryData && rawCategoryData[tickValue]) {\r\n          var rawCategoryItem = rawCategoryData[tickValue];\r\n\r\n          if (isObject$1(rawCategoryItem) && rawCategoryItem.textStyle) {\r\n            labelModel = new Model(rawCategoryItem.textStyle, commonLabelModel, commonLabelModel.ecModel);\r\n          }\r\n        }\r\n\r\n        var textEl = new ZRText({\r\n          silent: AxisBuilder.isLabelSilent(angleAxisModel),\r\n          style: createTextStyle(labelModel, {\r\n            x: p[0],\r\n            y: p[1],\r\n            fill: labelModel.getTextColor() || angleAxisModel.get(['axisLine', 'lineStyle', 'color']),\r\n            text: labelItem.formattedLabel,\r\n            align: labelTextAlign,\r\n            verticalAlign: labelTextVerticalAlign\r\n          })\r\n        });\r\n        group.add(textEl); // Pack data for mouse event\r\n\r\n        if (triggerEvent) {\r\n          var eventData = AxisBuilder.makeAxisEventDataBase(angleAxisModel);\r\n          eventData.targetType = 'axisLabel';\r\n          eventData.value = labelItem.rawLabel;\r\n          getECData(textEl).eventData = eventData;\r\n        }\r\n      }, this);\r\n    },\r\n    splitLine: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\r\n      var splitLineModel = angleAxisModel.getModel('splitLine');\r\n      var lineStyleModel = splitLineModel.getModel('lineStyle');\r\n      var lineColors = lineStyleModel.get('color');\r\n      var lineCount = 0;\r\n      lineColors = lineColors instanceof Array ? lineColors : [lineColors];\r\n      var splitLines = [];\r\n\r\n      for (var i = 0; i < ticksAngles.length; i++) {\r\n        var colorIndex = lineCount++ % lineColors.length;\r\n        splitLines[colorIndex] = splitLines[colorIndex] || [];\r\n        splitLines[colorIndex].push(new Line({\r\n          shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i].coord)\r\n        }));\r\n      } // Simple optimization\r\n      // Batching the lines if color are the same\r\n\r\n\r\n      for (var i = 0; i < splitLines.length; i++) {\r\n        group.add(mergePath(splitLines[i], {\r\n          style: defaults({\r\n            stroke: lineColors[i % lineColors.length]\r\n          }, lineStyleModel.getLineStyle()),\r\n          silent: true,\r\n          z: angleAxisModel.get('z')\r\n        }));\r\n      }\r\n    },\r\n    minorSplitLine: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\r\n      if (!minorTickAngles.length) {\r\n        return;\r\n      }\r\n\r\n      var minorSplitLineModel = angleAxisModel.getModel('minorSplitLine');\r\n      var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\r\n      var lines = [];\r\n\r\n      for (var i = 0; i < minorTickAngles.length; i++) {\r\n        for (var k = 0; k < minorTickAngles[i].length; k++) {\r\n          lines.push(new Line({\r\n            shape: getAxisLineShape(polar, radiusExtent, minorTickAngles[i][k].coord)\r\n          }));\r\n        }\r\n      }\r\n\r\n      group.add(mergePath(lines, {\r\n        style: lineStyleModel.getLineStyle(),\r\n        silent: true,\r\n        z: angleAxisModel.get('z')\r\n      }));\r\n    },\r\n    splitArea: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\r\n      if (!ticksAngles.length) {\r\n        return;\r\n      }\r\n\r\n      var splitAreaModel = angleAxisModel.getModel('splitArea');\r\n      var areaStyleModel = splitAreaModel.getModel('areaStyle');\r\n      var areaColors = areaStyleModel.get('color');\r\n      var lineCount = 0;\r\n      areaColors = areaColors instanceof Array ? areaColors : [areaColors];\r\n      var splitAreas = [];\r\n      var RADIAN = Math.PI / 180;\r\n      var prevAngle = -ticksAngles[0].coord * RADIAN;\r\n      var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\r\n      var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\r\n      var clockwise = angleAxisModel.get('clockwise');\r\n\r\n      for (var i = 1, len = ticksAngles.length; i <= len; i++) {\r\n        var coord = i === len ? ticksAngles[0].coord : ticksAngles[i].coord;\r\n        var colorIndex = lineCount++ % areaColors.length;\r\n        splitAreas[colorIndex] = splitAreas[colorIndex] || [];\r\n        splitAreas[colorIndex].push(new Sector({\r\n          shape: {\r\n            cx: polar.cx,\r\n            cy: polar.cy,\r\n            r0: r0,\r\n            r: r1,\r\n            startAngle: prevAngle,\r\n            endAngle: -coord * RADIAN,\r\n            clockwise: clockwise\r\n          },\r\n          silent: true\r\n        }));\r\n        prevAngle = -coord * RADIAN;\r\n      } // Simple optimization\r\n      // Batching the lines if color are the same\r\n\r\n\r\n      for (var i = 0; i < splitAreas.length; i++) {\r\n        group.add(mergePath(splitAreas[i], {\r\n          style: defaults({\r\n            fill: areaColors[i % areaColors.length]\r\n          }, areaStyleModel.getAreaStyle()),\r\n          silent: true\r\n        }));\r\n      }\r\n    }\r\n  };\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var axisBuilderAttrs$1 = ['axisLine', 'axisTickLabel', 'axisName'];\r\n  var selfBuilderAttrs$1 = ['splitLine', 'splitArea', 'minorSplitLine'];\r\n\r\n  var RadiusAxisView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(RadiusAxisView, _super);\r\n\r\n    function RadiusAxisView() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = RadiusAxisView.type;\r\n      _this.axisPointerClass = 'PolarAxisPointer';\r\n      return _this;\r\n    }\r\n\r\n    RadiusAxisView.prototype.render = function (radiusAxisModel, ecModel) {\r\n      this.group.removeAll();\r\n\r\n      if (!radiusAxisModel.get('show')) {\r\n        return;\r\n      }\r\n\r\n      var oldAxisGroup = this._axisGroup;\r\n      var newAxisGroup = this._axisGroup = new Group();\r\n      this.group.add(newAxisGroup);\r\n      var radiusAxis = radiusAxisModel.axis;\r\n      var polar = radiusAxis.polar;\r\n      var angleAxis = polar.getAngleAxis();\r\n      var ticksCoords = radiusAxis.getTicksCoords();\r\n      var minorTicksCoords = radiusAxis.getMinorTicksCoords();\r\n      var axisAngle = angleAxis.getExtent()[0];\r\n      var radiusExtent = radiusAxis.getExtent();\r\n      var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\r\n      var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\r\n      each$1(axisBuilderAttrs$1, axisBuilder.add, axisBuilder);\r\n      newAxisGroup.add(axisBuilder.getGroup());\r\n      groupTransition(oldAxisGroup, newAxisGroup, radiusAxisModel);\r\n      each$1(selfBuilderAttrs$1, function (name) {\r\n        if (radiusAxisModel.get([name, 'show']) && !radiusAxis.scale.isBlank()) {\r\n          axisElementBuilders$1[name](this.group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords, minorTicksCoords);\r\n        }\r\n      }, this);\r\n    };\r\n\r\n    RadiusAxisView.type = 'radiusAxis';\r\n    return RadiusAxisView;\r\n  }(AxisView);\r\n\r\n  var axisElementBuilders$1 = {\r\n    splitLine: function (group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\r\n      var splitLineModel = radiusAxisModel.getModel('splitLine');\r\n      var lineStyleModel = splitLineModel.getModel('lineStyle');\r\n      var lineColors = lineStyleModel.get('color');\r\n      var lineCount = 0;\r\n      lineColors = lineColors instanceof Array ? lineColors : [lineColors];\r\n      var splitLines = [];\r\n\r\n      for (var i = 0; i < ticksCoords.length; i++) {\r\n        var colorIndex = lineCount++ % lineColors.length;\r\n        splitLines[colorIndex] = splitLines[colorIndex] || [];\r\n        splitLines[colorIndex].push(new Circle({\r\n          shape: {\r\n            cx: polar.cx,\r\n            cy: polar.cy,\r\n            r: ticksCoords[i].coord\r\n          }\r\n        }));\r\n      } // Simple optimization\r\n      // Batching the lines if color are the same\r\n\r\n\r\n      for (var i = 0; i < splitLines.length; i++) {\r\n        group.add(mergePath(splitLines[i], {\r\n          style: defaults({\r\n            stroke: lineColors[i % lineColors.length],\r\n            fill: null\r\n          }, lineStyleModel.getLineStyle()),\r\n          silent: true\r\n        }));\r\n      }\r\n    },\r\n    minorSplitLine: function (group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords, minorTicksCoords) {\r\n      if (!minorTicksCoords.length) {\r\n        return;\r\n      }\r\n\r\n      var minorSplitLineModel = radiusAxisModel.getModel('minorSplitLine');\r\n      var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\r\n      var lines = [];\r\n\r\n      for (var i = 0; i < minorTicksCoords.length; i++) {\r\n        for (var k = 0; k < minorTicksCoords[i].length; k++) {\r\n          lines.push(new Circle({\r\n            shape: {\r\n              cx: polar.cx,\r\n              cy: polar.cy,\r\n              r: minorTicksCoords[i][k].coord\r\n            }\r\n          }));\r\n        }\r\n      }\r\n\r\n      group.add(mergePath(lines, {\r\n        style: defaults({\r\n          fill: null\r\n        }, lineStyleModel.getLineStyle()),\r\n        silent: true\r\n      }));\r\n    },\r\n    splitArea: function (group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\r\n      if (!ticksCoords.length) {\r\n        return;\r\n      }\r\n\r\n      var splitAreaModel = radiusAxisModel.getModel('splitArea');\r\n      var areaStyleModel = splitAreaModel.getModel('areaStyle');\r\n      var areaColors = areaStyleModel.get('color');\r\n      var lineCount = 0;\r\n      areaColors = areaColors instanceof Array ? areaColors : [areaColors];\r\n      var splitAreas = [];\r\n      var prevRadius = ticksCoords[0].coord;\r\n\r\n      for (var i = 1; i < ticksCoords.length; i++) {\r\n        var colorIndex = lineCount++ % areaColors.length;\r\n        splitAreas[colorIndex] = splitAreas[colorIndex] || [];\r\n        splitAreas[colorIndex].push(new Sector({\r\n          shape: {\r\n            cx: polar.cx,\r\n            cy: polar.cy,\r\n            r0: prevRadius,\r\n            r: ticksCoords[i].coord,\r\n            startAngle: 0,\r\n            endAngle: Math.PI * 2\r\n          },\r\n          silent: true\r\n        }));\r\n        prevRadius = ticksCoords[i].coord;\r\n      } // Simple optimization\r\n      // Batching the lines if color are the same\r\n\r\n\r\n      for (var i = 0; i < splitAreas.length; i++) {\r\n        group.add(mergePath(splitAreas[i], {\r\n          style: defaults({\r\n            fill: areaColors[i % areaColors.length]\r\n          }, areaStyleModel.getAreaStyle()),\r\n          silent: true\r\n        }));\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * @inner\r\n   */\r\n\r\n  function layoutAxis(polar, radiusAxisModel, axisAngle) {\r\n    return {\r\n      position: [polar.cx, polar.cy],\r\n      rotation: axisAngle / 180 * Math.PI,\r\n      labelDirection: -1,\r\n      tickDirection: -1,\r\n      nameDirection: 1,\r\n      labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\r\n      // Over splitLine and splitArea\r\n      z2: 1\r\n    };\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function getSeriesStackId$1(seriesModel) {\r\n    return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\r\n  }\r\n\r\n  function getAxisKey$1(polar, axis) {\r\n    return axis.dim + polar.model.componentIndex;\r\n  }\r\n\r\n  function barLayoutPolar(seriesType, ecModel, api) {\r\n    var lastStackCoords = {};\r\n    var barWidthAndOffset = calRadialBar(filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\r\n      return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\r\n    }));\r\n    ecModel.eachSeriesByType(seriesType, function (seriesModel) {\r\n      // Check series coordinate, do layout for polar only\r\n      if (seriesModel.coordinateSystem.type !== 'polar') {\r\n        return;\r\n      }\r\n\r\n      var data = seriesModel.getData();\r\n      var polar = seriesModel.coordinateSystem;\r\n      var baseAxis = polar.getBaseAxis();\r\n      var axisKey = getAxisKey$1(polar, baseAxis);\r\n      var stackId = getSeriesStackId$1(seriesModel);\r\n      var columnLayoutInfo = barWidthAndOffset[axisKey][stackId];\r\n      var columnOffset = columnLayoutInfo.offset;\r\n      var columnWidth = columnLayoutInfo.width;\r\n      var valueAxis = polar.getOtherAxis(baseAxis);\r\n      var cx = seriesModel.coordinateSystem.cx;\r\n      var cy = seriesModel.coordinateSystem.cy;\r\n      var barMinHeight = seriesModel.get('barMinHeight') || 0;\r\n      var barMinAngle = seriesModel.get('barMinAngle') || 0;\r\n      lastStackCoords[stackId] = lastStackCoords[stackId] || [];\r\n      var valueDim = data.mapDimension(valueAxis.dim);\r\n      var baseDim = data.mapDimension(baseAxis.dim);\r\n      var stacked = isDimensionStacked(data, valueDim\r\n      /*, baseDim*/\r\n      );\r\n      var clampLayout = baseAxis.dim !== 'radius' || !seriesModel.get('roundCap', true);\r\n      var valueAxisStart = valueAxis.dataToCoord(0);\r\n\r\n      for (var idx = 0, len = data.count(); idx < len; idx++) {\r\n        var value = data.get(valueDim, idx);\r\n        var baseValue = data.get(baseDim, idx);\r\n        var sign = value >= 0 ? 'p' : 'n';\r\n        var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\r\n        // stackResultDimension directly.\r\n        // Only ordinal axis can be stacked.\r\n\r\n        if (stacked) {\r\n          if (!lastStackCoords[stackId][baseValue]) {\r\n            lastStackCoords[stackId][baseValue] = {\r\n              p: valueAxisStart,\r\n              n: valueAxisStart // Negative stack\r\n\r\n            };\r\n          } // Should also consider #4243\r\n\r\n\r\n          baseCoord = lastStackCoords[stackId][baseValue][sign];\r\n        }\r\n\r\n        var r0 = void 0;\r\n        var r = void 0;\r\n        var startAngle = void 0;\r\n        var endAngle = void 0; // radial sector\r\n\r\n        if (valueAxis.dim === 'radius') {\r\n          var radiusSpan = valueAxis.dataToCoord(value) - valueAxisStart;\r\n          var angle = baseAxis.dataToCoord(baseValue);\r\n\r\n          if (Math.abs(radiusSpan) < barMinHeight) {\r\n            radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\r\n          }\r\n\r\n          r0 = baseCoord;\r\n          r = baseCoord + radiusSpan;\r\n          startAngle = angle - columnOffset;\r\n          endAngle = startAngle - columnWidth;\r\n          stacked && (lastStackCoords[stackId][baseValue][sign] = r);\r\n        } // tangential sector\r\n        else {\r\n            var angleSpan = valueAxis.dataToCoord(value, clampLayout) - valueAxisStart;\r\n            var radius = baseAxis.dataToCoord(baseValue);\r\n\r\n            if (Math.abs(angleSpan) < barMinAngle) {\r\n              angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\r\n            }\r\n\r\n            r0 = radius + columnOffset;\r\n            r = r0 + columnWidth;\r\n            startAngle = baseCoord;\r\n            endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\r\n            // add a round to differentiate it from origin\r\n            // let extent = angleAxis.getExtent();\r\n            // let stackCoord = angle;\r\n            // if (stackCoord === extent[0] && value > 0) {\r\n            //     stackCoord = extent[1];\r\n            // }\r\n            // else if (stackCoord === extent[1] && value < 0) {\r\n            //     stackCoord = extent[0];\r\n            // }\r\n\r\n            stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\r\n          }\r\n\r\n        data.setItemLayout(idx, {\r\n          cx: cx,\r\n          cy: cy,\r\n          r0: r0,\r\n          r: r,\r\n          // Consider that positive angle is anti-clockwise,\r\n          // while positive radian of sector is clockwise\r\n          startAngle: -startAngle * Math.PI / 180,\r\n          endAngle: -endAngle * Math.PI / 180\r\n        });\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Calculate bar width and offset for radial bar charts\r\n   */\r\n\r\n\r\n  function calRadialBar(barSeries) {\r\n    // Columns info on each category axis. Key is polar name\r\n    var columnsMap = {};\r\n    each$1(barSeries, function (seriesModel, idx) {\r\n      var data = seriesModel.getData();\r\n      var polar = seriesModel.coordinateSystem;\r\n      var baseAxis = polar.getBaseAxis();\r\n      var axisKey = getAxisKey$1(polar, baseAxis);\r\n      var axisExtent = baseAxis.getExtent();\r\n      var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\r\n      var columnsOnAxis = columnsMap[axisKey] || {\r\n        bandWidth: bandWidth,\r\n        remainedWidth: bandWidth,\r\n        autoWidthCount: 0,\r\n        categoryGap: '20%',\r\n        gap: '30%',\r\n        stacks: {}\r\n      };\r\n      var stacks = columnsOnAxis.stacks;\r\n      columnsMap[axisKey] = columnsOnAxis;\r\n      var stackId = getSeriesStackId$1(seriesModel);\r\n\r\n      if (!stacks[stackId]) {\r\n        columnsOnAxis.autoWidthCount++;\r\n      }\r\n\r\n      stacks[stackId] = stacks[stackId] || {\r\n        width: 0,\r\n        maxWidth: 0\r\n      };\r\n      var barWidth = parsePercent$1(seriesModel.get('barWidth'), bandWidth);\r\n      var barMaxWidth = parsePercent$1(seriesModel.get('barMaxWidth'), bandWidth);\r\n      var barGap = seriesModel.get('barGap');\r\n      var barCategoryGap = seriesModel.get('barCategoryGap');\r\n\r\n      if (barWidth && !stacks[stackId].width) {\r\n        barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\r\n        stacks[stackId].width = barWidth;\r\n        columnsOnAxis.remainedWidth -= barWidth;\r\n      }\r\n\r\n      barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\r\n      barGap != null && (columnsOnAxis.gap = barGap);\r\n      barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\r\n    });\r\n    var result = {};\r\n    each$1(columnsMap, function (columnsOnAxis, coordSysName) {\r\n      result[coordSysName] = {};\r\n      var stacks = columnsOnAxis.stacks;\r\n      var bandWidth = columnsOnAxis.bandWidth;\r\n      var categoryGap = parsePercent$1(columnsOnAxis.categoryGap, bandWidth);\r\n      var barGapPercent = parsePercent$1(columnsOnAxis.gap, 1);\r\n      var remainedWidth = columnsOnAxis.remainedWidth;\r\n      var autoWidthCount = columnsOnAxis.autoWidthCount;\r\n      var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\r\n      autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\r\n\r\n      each$1(stacks, function (column, stack) {\r\n        var maxWidth = column.maxWidth;\r\n\r\n        if (maxWidth && maxWidth < autoWidth) {\r\n          maxWidth = Math.min(maxWidth, remainedWidth);\r\n\r\n          if (column.width) {\r\n            maxWidth = Math.min(maxWidth, column.width);\r\n          }\r\n\r\n          remainedWidth -= maxWidth;\r\n          column.width = maxWidth;\r\n          autoWidthCount--;\r\n        }\r\n      }); // Recalculate width again\r\n\r\n      autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\r\n      autoWidth = Math.max(autoWidth, 0);\r\n      var widthSum = 0;\r\n      var lastColumn;\r\n      each$1(stacks, function (column, idx) {\r\n        if (!column.width) {\r\n          column.width = autoWidth;\r\n        }\r\n\r\n        lastColumn = column;\r\n        widthSum += column.width * (1 + barGapPercent);\r\n      });\r\n\r\n      if (lastColumn) {\r\n        widthSum -= lastColumn.width * barGapPercent;\r\n      }\r\n\r\n      var offset = -widthSum / 2;\r\n      each$1(stacks, function (column, stackId) {\r\n        result[coordSysName][stackId] = result[coordSysName][stackId] || {\r\n          offset: offset,\r\n          width: column.width\r\n        };\r\n        offset += column.width * (1 + barGapPercent);\r\n      });\r\n    });\r\n    return result;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var angleAxisExtraOption = {\r\n    startAngle: 90,\r\n    clockwise: true,\r\n    splitNumber: 12,\r\n    axisLabel: {\r\n      rotate: 0\r\n    }\r\n  };\r\n  var radiusAxisExtraOption = {\r\n    splitNumber: 5\r\n  };\r\n\r\n  var PolarView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(PolarView, _super);\r\n\r\n    function PolarView() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = PolarView.type;\r\n      return _this;\r\n    }\r\n\r\n    PolarView.type = 'polar';\r\n    return PolarView;\r\n  }(ComponentView);\r\n\r\n  function install$4(registers) {\r\n    use(install$5);\r\n    AxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\r\n    registers.registerCoordinateSystem('polar', polarCreator);\r\n    registers.registerComponentModel(PolarModel);\r\n    registers.registerComponentView(PolarView); // Model and view for angleAxis and radiusAxis\r\n\r\n    axisModelCreator(registers, 'angle', AngleAxisModel, angleAxisExtraOption);\r\n    axisModelCreator(registers, 'radius', RadiusAxisModel, radiusAxisExtraOption);\r\n    registers.registerComponentView(AngleAxisView);\r\n    registers.registerComponentView(RadiusAxisView);\r\n    registers.registerLayout(curry(barLayoutPolar, 'bar'));\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  use(install$4);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var TitleModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(TitleModel, _super);\r\n\r\n    function TitleModel() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = TitleModel.type;\r\n      _this.layoutMode = {\r\n        type: 'box',\r\n        ignoreSize: true\r\n      };\r\n      return _this;\r\n    }\r\n\r\n    TitleModel.type = 'title';\r\n    TitleModel.defaultOption = {\r\n      zlevel: 0,\r\n      z: 6,\r\n      show: true,\r\n      text: '',\r\n      target: 'blank',\r\n      subtext: '',\r\n      subtarget: 'blank',\r\n      left: 0,\r\n      top: 0,\r\n      backgroundColor: 'rgba(0,0,0,0)',\r\n      borderColor: '#ccc',\r\n      borderWidth: 0,\r\n      padding: 5,\r\n      itemGap: 10,\r\n      textStyle: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        color: '#464646'\r\n      },\r\n      subtextStyle: {\r\n        fontSize: 12,\r\n        color: '#6E7079'\r\n      }\r\n    };\r\n    return TitleModel;\r\n  }(ComponentModel); // View\r\n\r\n\r\n  var TitleView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(TitleView, _super);\r\n\r\n    function TitleView() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = TitleView.type;\r\n      return _this;\r\n    }\r\n\r\n    TitleView.prototype.render = function (titleModel, ecModel, api) {\r\n      this.group.removeAll();\r\n\r\n      if (!titleModel.get('show')) {\r\n        return;\r\n      }\r\n\r\n      var group = this.group;\r\n      var textStyleModel = titleModel.getModel('textStyle');\r\n      var subtextStyleModel = titleModel.getModel('subtextStyle');\r\n      var textAlign = titleModel.get('textAlign');\r\n      var textVerticalAlign = retrieve2(titleModel.get('textBaseline'), titleModel.get('textVerticalAlign'));\r\n      var textEl = new ZRText({\r\n        style: createTextStyle(textStyleModel, {\r\n          text: titleModel.get('text'),\r\n          fill: textStyleModel.getTextColor()\r\n        }, {\r\n          disableBox: true\r\n        }),\r\n        z2: 10\r\n      });\r\n      var textRect = textEl.getBoundingRect();\r\n      var subText = titleModel.get('subtext');\r\n      var subTextEl = new ZRText({\r\n        style: createTextStyle(subtextStyleModel, {\r\n          text: subText,\r\n          fill: subtextStyleModel.getTextColor(),\r\n          y: textRect.height + titleModel.get('itemGap'),\r\n          verticalAlign: 'top'\r\n        }, {\r\n          disableBox: true\r\n        }),\r\n        z2: 10\r\n      });\r\n      var link = titleModel.get('link');\r\n      var sublink = titleModel.get('sublink');\r\n      var triggerEvent = titleModel.get('triggerEvent', true);\r\n      textEl.silent = !link && !triggerEvent;\r\n      subTextEl.silent = !sublink && !triggerEvent;\r\n\r\n      if (link) {\r\n        textEl.on('click', function () {\r\n          windowOpen(link, '_' + titleModel.get('target'));\r\n        });\r\n      }\r\n\r\n      if (sublink) {\r\n        subTextEl.on('click', function () {\r\n          windowOpen(sublink, '_' + titleModel.get('subtarget'));\r\n        });\r\n      }\r\n\r\n      getECData(textEl).eventData = getECData(subTextEl).eventData = triggerEvent ? {\r\n        componentType: 'title',\r\n        componentIndex: titleModel.componentIndex\r\n      } : null;\r\n      group.add(textEl);\r\n      subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\r\n\r\n      var groupRect = group.getBoundingRect();\r\n      var layoutOption = titleModel.getBoxLayoutParams();\r\n      layoutOption.width = groupRect.width;\r\n      layoutOption.height = groupRect.height;\r\n      var layoutRect = getLayoutRect(layoutOption, {\r\n        width: api.getWidth(),\r\n        height: api.getHeight()\r\n      }, titleModel.get('padding')); // Adjust text align based on position\r\n\r\n      if (!textAlign) {\r\n        // Align left if title is on the left. center and right is same\r\n        textAlign = titleModel.get('left') || titleModel.get('right'); // @ts-ignore\r\n\r\n        if (textAlign === 'middle') {\r\n          textAlign = 'center';\r\n        } // Adjust layout by text align\r\n\r\n\r\n        if (textAlign === 'right') {\r\n          layoutRect.x += layoutRect.width;\r\n        } else if (textAlign === 'center') {\r\n          layoutRect.x += layoutRect.width / 2;\r\n        }\r\n      }\r\n\r\n      if (!textVerticalAlign) {\r\n        textVerticalAlign = titleModel.get('top') || titleModel.get('bottom'); // @ts-ignore\r\n\r\n        if (textVerticalAlign === 'center') {\r\n          textVerticalAlign = 'middle';\r\n        }\r\n\r\n        if (textVerticalAlign === 'bottom') {\r\n          layoutRect.y += layoutRect.height;\r\n        } else if (textVerticalAlign === 'middle') {\r\n          layoutRect.y += layoutRect.height / 2;\r\n        }\r\n\r\n        textVerticalAlign = textVerticalAlign || 'top';\r\n      }\r\n\r\n      group.x = layoutRect.x;\r\n      group.y = layoutRect.y;\r\n      group.markRedraw();\r\n      var alignStyle = {\r\n        align: textAlign,\r\n        verticalAlign: textVerticalAlign\r\n      };\r\n      textEl.setStyle(alignStyle);\r\n      subTextEl.setStyle(alignStyle); // Render background\r\n      // Get groupRect again because textAlign has been changed\r\n\r\n      groupRect = group.getBoundingRect();\r\n      var padding = layoutRect.margin;\r\n      var style = titleModel.getItemStyle(['color', 'opacity']);\r\n      style.fill = titleModel.get('backgroundColor');\r\n      var rect = new Rect({\r\n        shape: {\r\n          x: groupRect.x - padding[3],\r\n          y: groupRect.y - padding[0],\r\n          width: groupRect.width + padding[1] + padding[3],\r\n          height: groupRect.height + padding[0] + padding[2],\r\n          r: titleModel.get('borderRadius')\r\n        },\r\n        style: style,\r\n        subPixelOptimize: true,\r\n        silent: true\r\n      });\r\n      group.add(rect);\r\n    };\r\n\r\n    TitleView.type = 'title';\r\n    return TitleView;\r\n  }(ComponentView);\r\n\r\n  function install$6(registers) {\r\n    registers.registerComponentModel(TitleModel);\r\n    registers.registerComponentView(TitleView);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  use(install$6);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var getDefaultSelectorOptions = function (ecModel, type) {\r\n    if (type === 'all') {\r\n      return {\r\n        type: 'all',\r\n        title: ecModel.getLocale(['legend', 'selector', 'all'])\r\n      };\r\n    } else if (type === 'inverse') {\r\n      return {\r\n        type: 'inverse',\r\n        title: ecModel.getLocale(['legend', 'selector', 'inverse'])\r\n      };\r\n    }\r\n  };\r\n\r\n  var LegendModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(LegendModel, _super);\r\n\r\n    function LegendModel() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = LegendModel.type;\r\n      _this.layoutMode = {\r\n        type: 'box',\r\n        // legend.width/height are maxWidth/maxHeight actually,\r\n        // whereas realy width/height is calculated by its content.\r\n        // (Setting {left: 10, right: 10} does not make sense).\r\n        // So consider the case:\r\n        // `setOption({legend: {left: 10});`\r\n        // then `setOption({legend: {right: 10});`\r\n        // The previous `left` should be cleared by setting `ignoreSize`.\r\n        ignoreSize: true\r\n      };\r\n      return _this;\r\n    }\r\n\r\n    LegendModel.prototype.init = function (option, parentModel, ecModel) {\r\n      this.mergeDefaultAndTheme(option, ecModel);\r\n      option.selected = option.selected || {};\r\n\r\n      this._updateSelector(option);\r\n    };\r\n\r\n    LegendModel.prototype.mergeOption = function (option, ecModel) {\r\n      _super.prototype.mergeOption.call(this, option, ecModel);\r\n\r\n      this._updateSelector(option);\r\n    };\r\n\r\n    LegendModel.prototype._updateSelector = function (option) {\r\n      var selector = option.selector;\r\n      var ecModel = this.ecModel;\r\n\r\n      if (selector === true) {\r\n        selector = option.selector = ['all', 'inverse'];\r\n      }\r\n\r\n      if (isArray(selector)) {\r\n        each$1(selector, function (item, index) {\r\n          isString(item) && (item = {\r\n            type: item\r\n          });\r\n          selector[index] = merge(item, getDefaultSelectorOptions(ecModel, item.type));\r\n        });\r\n      }\r\n    };\r\n\r\n    LegendModel.prototype.optionUpdated = function () {\r\n      this._updateData(this.ecModel);\r\n\r\n      var legendData = this._data; // If selectedMode is single, try to select one\r\n\r\n      if (legendData[0] && this.get('selectedMode') === 'single') {\r\n        var hasSelected = false; // If has any selected in option.selected\r\n\r\n        for (var i = 0; i < legendData.length; i++) {\r\n          var name_1 = legendData[i].get('name');\r\n\r\n          if (this.isSelected(name_1)) {\r\n            // Force to unselect others\r\n            this.select(name_1);\r\n            hasSelected = true;\r\n            break;\r\n          }\r\n        } // Try select the first if selectedMode is single\r\n\r\n\r\n        !hasSelected && this.select(legendData[0].get('name'));\r\n      }\r\n    };\r\n\r\n    LegendModel.prototype._updateData = function (ecModel) {\r\n      var potentialData = [];\r\n      var availableNames = [];\r\n      ecModel.eachRawSeries(function (seriesModel) {\r\n        var seriesName = seriesModel.name;\r\n        availableNames.push(seriesName);\r\n        var isPotential;\r\n\r\n        if (seriesModel.legendVisualProvider) {\r\n          var provider = seriesModel.legendVisualProvider;\r\n          var names = provider.getAllNames();\r\n\r\n          if (!ecModel.isSeriesFiltered(seriesModel)) {\r\n            availableNames = availableNames.concat(names);\r\n          }\r\n\r\n          if (names.length) {\r\n            potentialData = potentialData.concat(names);\r\n          } else {\r\n            isPotential = true;\r\n          }\r\n        } else {\r\n          isPotential = true;\r\n        }\r\n\r\n        if (isPotential && isNameSpecified(seriesModel)) {\r\n          potentialData.push(seriesModel.name);\r\n        }\r\n      });\r\n      /**\r\n       * @type {Array.<string>}\r\n       * @private\r\n       */\r\n\r\n      this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\r\n      // which is convinient for user preparing option.\r\n\r\n      var rawData = this.get('data') || potentialData;\r\n      var legendData = map(rawData, function (dataItem) {\r\n        // Can be string or number\r\n        if (typeof dataItem === 'string' || typeof dataItem === 'number') {\r\n          dataItem = {\r\n            name: dataItem\r\n          };\r\n        }\r\n\r\n        return new Model(dataItem, this, this.ecModel);\r\n      }, this);\r\n      /**\r\n       * @type {Array.<module:echarts/model/Model>}\r\n       * @private\r\n       */\r\n\r\n      this._data = legendData;\r\n    };\r\n\r\n    LegendModel.prototype.getData = function () {\r\n      return this._data;\r\n    };\r\n\r\n    LegendModel.prototype.select = function (name) {\r\n      var selected = this.option.selected;\r\n      var selectedMode = this.get('selectedMode');\r\n\r\n      if (selectedMode === 'single') {\r\n        var data = this._data;\r\n        each$1(data, function (dataItem) {\r\n          selected[dataItem.get('name')] = false;\r\n        });\r\n      }\r\n\r\n      selected[name] = true;\r\n    };\r\n\r\n    LegendModel.prototype.unSelect = function (name) {\r\n      if (this.get('selectedMode') !== 'single') {\r\n        this.option.selected[name] = false;\r\n      }\r\n    };\r\n\r\n    LegendModel.prototype.toggleSelected = function (name) {\r\n      var selected = this.option.selected; // Default is true\r\n\r\n      if (!selected.hasOwnProperty(name)) {\r\n        selected[name] = true;\r\n      }\r\n\r\n      this[selected[name] ? 'unSelect' : 'select'](name);\r\n    };\r\n\r\n    LegendModel.prototype.allSelect = function () {\r\n      var data = this._data;\r\n      var selected = this.option.selected;\r\n      each$1(data, function (dataItem) {\r\n        selected[dataItem.get('name', true)] = true;\r\n      });\r\n    };\r\n\r\n    LegendModel.prototype.inverseSelect = function () {\r\n      var data = this._data;\r\n      var selected = this.option.selected;\r\n      each$1(data, function (dataItem) {\r\n        var name = dataItem.get('name', true); // Initially, default value is true\r\n\r\n        if (!selected.hasOwnProperty(name)) {\r\n          selected[name] = true;\r\n        }\r\n\r\n        selected[name] = !selected[name];\r\n      });\r\n    };\r\n\r\n    LegendModel.prototype.isSelected = function (name) {\r\n      var selected = this.option.selected;\r\n      return !(selected.hasOwnProperty(name) && !selected[name]) && indexOf$1(this._availableNames, name) >= 0;\r\n    };\r\n\r\n    LegendModel.prototype.getOrient = function () {\r\n      return this.get('orient') === 'vertical' ? {\r\n        index: 1,\r\n        name: 'vertical'\r\n      } : {\r\n        index: 0,\r\n        name: 'horizontal'\r\n      };\r\n    };\r\n\r\n    LegendModel.type = 'legend.plain';\r\n    LegendModel.dependencies = ['series'];\r\n    LegendModel.defaultOption = {\r\n      zlevel: 0,\r\n      z: 4,\r\n      show: true,\r\n      orient: 'horizontal',\r\n      left: 'center',\r\n      // right: 'center',\r\n      top: 0,\r\n      // bottom: null,\r\n      align: 'auto',\r\n      backgroundColor: 'rgba(0,0,0,0)',\r\n      borderColor: '#ccc',\r\n      borderRadius: 0,\r\n      borderWidth: 0,\r\n      padding: 5,\r\n      itemGap: 10,\r\n      itemWidth: 25,\r\n      itemHeight: 14,\r\n      inactiveColor: '#ccc',\r\n      inactiveBorderColor: '#ccc',\r\n      itemStyle: {\r\n        borderWidth: 0\r\n      },\r\n      textStyle: {\r\n        color: '#333'\r\n      },\r\n      selectedMode: true,\r\n      selector: false,\r\n      selectorLabel: {\r\n        show: true,\r\n        borderRadius: 10,\r\n        padding: [3, 5, 3, 5],\r\n        fontSize: 12,\r\n        fontFamily: ' sans-serif',\r\n        color: '#666',\r\n        borderWidth: 1,\r\n        borderColor: '#666'\r\n      },\r\n      emphasis: {\r\n        selectorLabel: {\r\n          show: true,\r\n          color: '#eee',\r\n          backgroundColor: '#666'\r\n        }\r\n      },\r\n      selectorPosition: 'auto',\r\n      selectorItemGap: 7,\r\n      selectorButtonGap: 10,\r\n      tooltip: {\r\n        show: false\r\n      }\r\n    };\r\n    return LegendModel;\r\n  }(ComponentModel);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n  // @ts-nocheck\r\n\r\n  /**\r\n   * Layout list like component.\r\n   * It will box layout each items in group of component and then position the whole group in the viewport\r\n   * @param {module:zrender/group/Group} group\r\n   * @param {module:echarts/model/Component} componentModel\r\n   * @param {module:echarts/ExtensionAPI}\r\n   */\r\n\r\n\r\n  function layout$2(group, componentModel, api) {\r\n    var boxLayoutParams = componentModel.getBoxLayoutParams();\r\n    var padding = componentModel.get('padding');\r\n    var viewportSize = {\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    };\r\n    var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\r\n    box(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\r\n    positionElement(group, boxLayoutParams, viewportSize, padding);\r\n  }\r\n\r\n  function makeBackground(rect, componentModel) {\r\n    var padding = normalizeCssArray$1(componentModel.get('padding'));\r\n    var style = componentModel.getItemStyle(['color', 'opacity']);\r\n    style.fill = componentModel.get('backgroundColor');\r\n    rect = new Rect({\r\n      shape: {\r\n        x: rect.x - padding[3],\r\n        y: rect.y - padding[0],\r\n        width: rect.width + padding[1] + padding[3],\r\n        height: rect.height + padding[0] + padding[2],\r\n        r: componentModel.get('borderRadius')\r\n      },\r\n      style: style,\r\n      silent: true,\r\n      z2: -1\r\n    }); // FIXME\r\n    // `subPixelOptimizeRect` may bring some gap between edge of viewpart\r\n    // and background rect when setting like `left: 0`, `top: 0`.\r\n    // graphic.subPixelOptimizeRect(rect);\r\n\r\n    return rect;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var curry$1 = curry;\r\n  var each$5 = each$1;\r\n  var Group$2 = Group;\r\n\r\n  var LegendView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(LegendView, _super);\r\n\r\n    function LegendView() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = LegendView.type;\r\n      _this.newlineDisabled = false;\r\n      return _this;\r\n    }\r\n\r\n    LegendView.prototype.init = function () {\r\n      this.group.add(this._contentGroup = new Group$2());\r\n      this.group.add(this._selectorGroup = new Group$2());\r\n      this._isFirstRender = true;\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n\r\n\r\n    LegendView.prototype.getContentGroup = function () {\r\n      return this._contentGroup;\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n\r\n\r\n    LegendView.prototype.getSelectorGroup = function () {\r\n      return this._selectorGroup;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n\r\n\r\n    LegendView.prototype.render = function (legendModel, ecModel, api) {\r\n      var isFirstRender = this._isFirstRender;\r\n      this._isFirstRender = false;\r\n      this.resetInner();\r\n\r\n      if (!legendModel.get('show', true)) {\r\n        return;\r\n      }\r\n\r\n      var itemAlign = legendModel.get('align');\r\n      var orient = legendModel.get('orient');\r\n\r\n      if (!itemAlign || itemAlign === 'auto') {\r\n        itemAlign = legendModel.get('left') === 'right' && orient === 'vertical' ? 'right' : 'left';\r\n      } // selector has been normalized to an array in model\r\n\r\n\r\n      var selector = legendModel.get('selector', true);\r\n      var selectorPosition = legendModel.get('selectorPosition', true);\r\n\r\n      if (selector && (!selectorPosition || selectorPosition === 'auto')) {\r\n        selectorPosition = orient === 'horizontal' ? 'end' : 'start';\r\n      }\r\n\r\n      this.renderInner(itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition); // Perform layout.\r\n\r\n      var positionInfo = legendModel.getBoxLayoutParams();\r\n      var viewportSize = {\r\n        width: api.getWidth(),\r\n        height: api.getHeight()\r\n      };\r\n      var padding = legendModel.get('padding');\r\n      var maxSize = getLayoutRect(positionInfo, viewportSize, padding);\r\n      var mainRect = this.layoutInner(legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition); // Place mainGroup, based on the calculated `mainRect`.\r\n\r\n      var layoutRect = getLayoutRect(defaults({\r\n        width: mainRect.width,\r\n        height: mainRect.height\r\n      }, positionInfo), viewportSize, padding);\r\n      this.group.x = layoutRect.x - mainRect.x;\r\n      this.group.y = layoutRect.y - mainRect.y;\r\n      this.group.markRedraw(); // Render background after group is layout.\r\n\r\n      this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\r\n    };\r\n\r\n    LegendView.prototype.resetInner = function () {\r\n      this.getContentGroup().removeAll();\r\n      this._backgroundEl && this.group.remove(this._backgroundEl);\r\n      this.getSelectorGroup().removeAll();\r\n    };\r\n\r\n    LegendView.prototype.renderInner = function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\r\n      var contentGroup = this.getContentGroup();\r\n      var legendDrawnMap = createHashMap();\r\n      var selectMode = legendModel.get('selectedMode');\r\n      var excludeSeriesId = [];\r\n      ecModel.eachRawSeries(function (seriesModel) {\r\n        !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\r\n      });\r\n      each$5(legendModel.getData(), function (itemModel, dataIndex) {\r\n        var name = itemModel.get('name'); // Use empty string or \\n as a newline string\r\n\r\n        if (!this.newlineDisabled && (name === '' || name === '\\n')) {\r\n          var g = new Group$2(); // @ts-ignore\r\n\r\n          g.newline = true;\r\n          contentGroup.add(g);\r\n          return;\r\n        } // Representitive series.\r\n\r\n\r\n        var seriesModel = ecModel.getSeriesByName(name)[0];\r\n\r\n        if (legendDrawnMap.get(name)) {\r\n          // Have been drawed\r\n          return;\r\n        } // Legend to control series.\r\n\r\n\r\n        if (seriesModel) {\r\n          var data = seriesModel.getData();\r\n          var style = data.getVisual('style');\r\n          var color = style[data.getVisual('drawType')] || style.fill;\r\n          var borderColor = style.stroke;\r\n          var decal = style.decal; // Using rect symbol defaultly\r\n\r\n          var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\r\n          var symbolType = data.getVisual('symbol');\r\n\r\n          var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, borderColor, decal, selectMode);\r\n\r\n          itemGroup.on('click', curry$1(dispatchSelectAction, name, null, api, excludeSeriesId)).on('mouseover', curry$1(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry$1(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\r\n          legendDrawnMap.set(name, true);\r\n        } else {\r\n          // Legend to control data. In pie and funnel.\r\n          ecModel.eachRawSeries(function (seriesModel) {\r\n            // In case multiple series has same data name\r\n            if (legendDrawnMap.get(name)) {\r\n              return;\r\n            }\r\n\r\n            if (seriesModel.legendVisualProvider) {\r\n              var provider = seriesModel.legendVisualProvider;\r\n\r\n              if (!provider.containName(name)) {\r\n                return;\r\n              }\r\n\r\n              var idx = provider.indexOfName(name);\r\n              var style = provider.getItemVisual(idx, 'style');\r\n              var borderColor = style.stroke;\r\n              var decal = style.decal;\r\n              var color = style.fill;\r\n              var colorArr = parse(style.fill); // Color may be set to transparent in visualMap when data is out of range.\r\n              // Do not show nothing.\r\n\r\n              if (colorArr && colorArr[3] === 0) {\r\n                colorArr[3] = 0.2; // TODO color is set to 0, 0, 0, 0. Should show correct RGBA\r\n\r\n                color = stringify(colorArr, 'rgba');\r\n              }\r\n\r\n              var legendSymbolType = 'roundRect';\r\n\r\n              var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, borderColor, decal, selectMode); // FIXME: consider different series has items with the same name.\r\n\r\n\r\n              itemGroup.on('click', curry$1(dispatchSelectAction, null, name, api, excludeSeriesId)) // Should not specify the series name, consider legend controls\r\n              // more than one pie series.\r\n              .on('mouseover', curry$1(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry$1(dispatchDownplayAction, null, name, api, excludeSeriesId));\r\n              legendDrawnMap.set(name, true);\r\n            }\r\n          }, this);\r\n        }\r\n\r\n        {\r\n          if (!legendDrawnMap.get(name)) {\r\n            console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\r\n          }\r\n        }\r\n      }, this);\r\n\r\n      if (selector) {\r\n        this._createSelector(selector, legendModel, api, orient, selectorPosition);\r\n      }\r\n    };\r\n\r\n    LegendView.prototype._createSelector = function (selector, legendModel, api, orient, selectorPosition) {\r\n      var selectorGroup = this.getSelectorGroup();\r\n      each$5(selector, function createSelectorButton(selectorItem) {\r\n        var type = selectorItem.type;\r\n        var labelText = new ZRText({\r\n          style: {\r\n            x: 0,\r\n            y: 0,\r\n            align: 'center',\r\n            verticalAlign: 'middle'\r\n          },\r\n          onclick: function () {\r\n            api.dispatchAction({\r\n              type: type === 'all' ? 'legendAllSelect' : 'legendInverseSelect'\r\n            });\r\n          }\r\n        });\r\n        selectorGroup.add(labelText);\r\n        var labelModel = legendModel.getModel('selectorLabel');\r\n        var emphasisLabelModel = legendModel.getModel(['emphasis', 'selectorLabel']);\r\n        setLabelStyle(labelText, {\r\n          normal: labelModel,\r\n          emphasis: emphasisLabelModel\r\n        }, {\r\n          defaultText: selectorItem.title\r\n        });\r\n        enableHoverEmphasis(labelText);\r\n      });\r\n    };\r\n\r\n    LegendView.prototype._createItem = function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, borderColor, decal, selectMode) {\r\n      var itemWidth = legendModel.get('itemWidth');\r\n      var itemHeight = legendModel.get('itemHeight');\r\n      var inactiveColor = legendModel.get('inactiveColor');\r\n      var inactiveBorderColor = legendModel.get('inactiveBorderColor');\r\n      var symbolKeepAspect = legendModel.get('symbolKeepAspect');\r\n      var legendModelItemStyle = legendModel.getModel('itemStyle');\r\n      var isSelected = legendModel.isSelected(name);\r\n      var itemGroup = new Group$2();\r\n      var textStyleModel = itemModel.getModel('textStyle');\r\n      var itemIcon = itemModel.get('icon');\r\n      var tooltipModel = itemModel.getModel('tooltip');\r\n      var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\r\n\r\n      legendSymbolType = itemIcon || legendSymbolType;\r\n      var legendSymbol = createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\r\n      symbolKeepAspect == null ? true : symbolKeepAspect);\r\n      itemGroup.add(setSymbolStyle(legendSymbol, legendSymbolType, legendModelItemStyle, borderColor, inactiveBorderColor, decal, isSelected)); // Compose symbols\r\n      // PENDING\r\n\r\n      if (!itemIcon && symbolType // At least show one symbol, can't be all none\r\n      && (symbolType !== legendSymbolType || symbolType === 'none')) {\r\n        var size = itemHeight * 0.8;\r\n\r\n        if (symbolType === 'none') {\r\n          symbolType = 'circle';\r\n        }\r\n\r\n        var legendSymbolCenter = createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\r\n        symbolKeepAspect == null ? true : symbolKeepAspect); // Put symbol in the center\r\n\r\n        itemGroup.add(setSymbolStyle(legendSymbolCenter, symbolType, legendModelItemStyle, borderColor, inactiveBorderColor, decal, isSelected));\r\n      }\r\n\r\n      var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\r\n      var textAlign = itemAlign;\r\n      var formatter = legendModel.get('formatter');\r\n      var content = name;\r\n\r\n      if (typeof formatter === 'string' && formatter) {\r\n        content = formatter.replace('{name}', name != null ? name : '');\r\n      } else if (typeof formatter === 'function') {\r\n        content = formatter(name);\r\n      }\r\n\r\n      itemGroup.add(new ZRText({\r\n        style: createTextStyle(textStyleModel, {\r\n          text: content,\r\n          x: textX,\r\n          y: itemHeight / 2,\r\n          fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\r\n          align: textAlign,\r\n          verticalAlign: 'middle'\r\n        })\r\n      })); // Add a invisible rect to increase the area of mouse hover\r\n\r\n      var hitRect = new Rect({\r\n        shape: itemGroup.getBoundingRect(),\r\n        invisible: true\r\n      });\r\n\r\n      if (tooltipModel.get('show')) {\r\n        var formatterParams = {\r\n          componentType: 'legend',\r\n          legendIndex: legendModel.componentIndex,\r\n          name: name,\r\n          $vars: ['name']\r\n        };\r\n        hitRect.tooltip = extend({\r\n          content: name,\r\n          // Defaul formatter\r\n          formatter: legendGlobalTooltipModel.get('formatter', true) || function (params) {\r\n            return params.name;\r\n          },\r\n          formatterParams: formatterParams\r\n        }, tooltipModel.option);\r\n      }\r\n\r\n      itemGroup.add(hitRect);\r\n      itemGroup.eachChild(function (child) {\r\n        child.silent = true;\r\n      });\r\n      hitRect.silent = !selectMode;\r\n      this.getContentGroup().add(itemGroup);\r\n      enableHoverEmphasis(itemGroup); // @ts-ignore\r\n\r\n      itemGroup.__legendDataIndex = dataIndex;\r\n      return itemGroup;\r\n    };\r\n\r\n    LegendView.prototype.layoutInner = function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\r\n      var contentGroup = this.getContentGroup();\r\n      var selectorGroup = this.getSelectorGroup(); // Place items in contentGroup.\r\n\r\n      box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\r\n      var contentRect = contentGroup.getBoundingRect();\r\n      var contentPos = [-contentRect.x, -contentRect.y];\r\n      selectorGroup.markRedraw();\r\n      contentGroup.markRedraw();\r\n\r\n      if (selector) {\r\n        // Place buttons in selectorGroup\r\n        box( // Buttons in selectorGroup always layout horizontally\r\n        'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\r\n        var selectorRect = selectorGroup.getBoundingRect();\r\n        var selectorPos = [-selectorRect.x, -selectorRect.y];\r\n        var selectorButtonGap = legendModel.get('selectorButtonGap', true);\r\n        var orientIdx = legendModel.getOrient().index;\r\n        var wh = orientIdx === 0 ? 'width' : 'height';\r\n        var hw = orientIdx === 0 ? 'height' : 'width';\r\n        var yx = orientIdx === 0 ? 'y' : 'x';\r\n\r\n        if (selectorPosition === 'end') {\r\n          selectorPos[orientIdx] += contentRect[wh] + selectorButtonGap;\r\n        } else {\r\n          contentPos[orientIdx] += selectorRect[wh] + selectorButtonGap;\r\n        } //Always align selector to content as 'middle'\r\n\r\n\r\n        selectorPos[1 - orientIdx] += contentRect[hw] / 2 - selectorRect[hw] / 2;\r\n        selectorGroup.x = selectorPos[0];\r\n        selectorGroup.y = selectorPos[1];\r\n        contentGroup.x = contentPos[0];\r\n        contentGroup.y = contentPos[1];\r\n        var mainRect = {\r\n          x: 0,\r\n          y: 0\r\n        };\r\n        mainRect[wh] = contentRect[wh] + selectorButtonGap + selectorRect[wh];\r\n        mainRect[hw] = Math.max(contentRect[hw], selectorRect[hw]);\r\n        mainRect[yx] = Math.min(0, selectorRect[yx] + selectorPos[1 - orientIdx]);\r\n        return mainRect;\r\n      } else {\r\n        contentGroup.x = contentPos[0];\r\n        contentGroup.y = contentPos[1];\r\n        return this.group.getBoundingRect();\r\n      }\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n\r\n\r\n    LegendView.prototype.remove = function () {\r\n      this.getContentGroup().removeAll();\r\n      this._isFirstRender = true;\r\n    };\r\n\r\n    LegendView.type = 'legend.plain';\r\n    return LegendView;\r\n  }(ComponentView);\r\n\r\n  function setSymbolStyle(symbol, symbolType, legendModelItemStyle, borderColor, inactiveBorderColor, decal, isSelected) {\r\n    var itemStyle;\r\n\r\n    if (symbolType !== 'line' && symbolType.indexOf('empty') < 0) {\r\n      itemStyle = legendModelItemStyle.getItemStyle();\r\n      symbol.style.stroke = borderColor;\r\n      symbol.style.decal = decal;\r\n\r\n      if (!isSelected) {\r\n        itemStyle.stroke = inactiveBorderColor;\r\n      }\r\n    } else {\r\n      itemStyle = legendModelItemStyle.getItemStyle(['borderWidth', 'borderColor']);\r\n    }\r\n\r\n    symbol.setStyle(itemStyle);\r\n    return symbol;\r\n  }\r\n\r\n  function dispatchSelectAction(seriesName, dataName, api, excludeSeriesId) {\r\n    // downplay before unselect\r\n    dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId);\r\n    api.dispatchAction({\r\n      type: 'legendToggleSelect',\r\n      name: seriesName != null ? seriesName : dataName\r\n    }); // highlight after select\r\n    // TODO higlight immediately may cause animation loss.\r\n\r\n    dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId);\r\n  }\r\n\r\n  function isUseHoverLayer(api) {\r\n    var list = api.getZr().storage.getDisplayList();\r\n    var emphasisState;\r\n    var i = 0;\r\n    var len = list.length;\r\n\r\n    while (i < len && !(emphasisState = list[i].states.emphasis)) {\r\n      i++;\r\n    }\r\n\r\n    return emphasisState && emphasisState.hoverLayer;\r\n  }\r\n\r\n  function dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\r\n    // If element hover will move to a hoverLayer.\r\n    if (!isUseHoverLayer(api)) {\r\n      api.dispatchAction({\r\n        type: 'highlight',\r\n        seriesName: seriesName,\r\n        name: dataName,\r\n        excludeSeriesId: excludeSeriesId\r\n      });\r\n    }\r\n  }\r\n\r\n  function dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\r\n    // If element hover will move to a hoverLayer.\r\n    if (!isUseHoverLayer(api)) {\r\n      api.dispatchAction({\r\n        type: 'downplay',\r\n        seriesName: seriesName,\r\n        name: dataName,\r\n        excludeSeriesId: excludeSeriesId\r\n      });\r\n    }\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function legendFilter(ecModel) {\r\n    var legendModels = ecModel.findComponents({\r\n      mainType: 'legend'\r\n    });\r\n\r\n    if (legendModels && legendModels.length) {\r\n      ecModel.filterSeries(function (series) {\r\n        // If in any legend component the status is not selected.\r\n        // Because in legend series is assumed selected when it is not in the legend data.\r\n        for (var i = 0; i < legendModels.length; i++) {\r\n          if (!legendModels[i].isSelected(series.name)) {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        return true;\r\n      });\r\n    }\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n  // @ts-nocheck\r\n\r\n\r\n  function legendSelectActionHandler(methodName, payload, ecModel) {\r\n    var selectedMap = {};\r\n    var isToggleSelect = methodName === 'toggleSelected';\r\n    var isSelected; // Update all legend components\r\n\r\n    ecModel.eachComponent('legend', function (legendModel) {\r\n      if (isToggleSelect && isSelected != null) {\r\n        // Force other legend has same selected status\r\n        // Or the first is toggled to true and other are toggled to false\r\n        // In the case one legend has some item unSelected in option. And if other legend\r\n        // doesn't has the item, they will assume it is selected.\r\n        legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\r\n      } else if (methodName === 'allSelect' || methodName === 'inverseSelect') {\r\n        legendModel[methodName]();\r\n      } else {\r\n        legendModel[methodName](payload.name);\r\n        isSelected = legendModel.isSelected(payload.name);\r\n      }\r\n\r\n      var legendData = legendModel.getData();\r\n      each$1(legendData, function (model) {\r\n        var name = model.get('name'); // Wrap element\r\n\r\n        if (name === '\\n' || name === '') {\r\n          return;\r\n        }\r\n\r\n        var isItemSelected = legendModel.isSelected(name);\r\n\r\n        if (selectedMap.hasOwnProperty(name)) {\r\n          // Unselected if any legend is unselected\r\n          selectedMap[name] = selectedMap[name] && isItemSelected;\r\n        } else {\r\n          selectedMap[name] = isItemSelected;\r\n        }\r\n      });\r\n    }); // Return the event explicitly\r\n\r\n    return methodName === 'allSelect' || methodName === 'inverseSelect' ? {\r\n      selected: selectedMap\r\n    } : {\r\n      name: payload.name,\r\n      selected: selectedMap\r\n    };\r\n  }\r\n\r\n  function installLegendAction(registers) {\r\n    /**\r\n     * @event legendToggleSelect\r\n     * @type {Object}\r\n     * @property {string} type 'legendToggleSelect'\r\n     * @property {string} [from]\r\n     * @property {string} name Series name or data item name\r\n     */\r\n    registers.registerAction('legendToggleSelect', 'legendselectchanged', curry(legendSelectActionHandler, 'toggleSelected'));\r\n    registers.registerAction('legendAllSelect', 'legendselectall', curry(legendSelectActionHandler, 'allSelect'));\r\n    registers.registerAction('legendInverseSelect', 'legendinverseselect', curry(legendSelectActionHandler, 'inverseSelect'));\r\n    /**\r\n     * @event legendSelect\r\n     * @type {Object}\r\n     * @property {string} type 'legendSelect'\r\n     * @property {string} name Series name or data item name\r\n     */\r\n\r\n    registers.registerAction('legendSelect', 'legendselected', curry(legendSelectActionHandler, 'select'));\r\n    /**\r\n     * @event legendUnSelect\r\n     * @type {Object}\r\n     * @property {string} type 'legendUnSelect'\r\n     * @property {string} name Series name or data item name\r\n     */\r\n\r\n    registers.registerAction('legendUnSelect', 'legendunselected', curry(legendSelectActionHandler, 'unSelect'));\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function install$8(registers) {\r\n    registers.registerComponentModel(LegendModel);\r\n    registers.registerComponentView(LegendView);\r\n    registers.registerProcessor(registers.PRIORITY.PROCESSOR.SERIES_FILTER, legendFilter);\r\n    registers.registerSubTypeDefaulter('legend', function () {\r\n      return 'plain';\r\n    });\r\n    installLegendAction(registers);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var ScrollableLegendModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(ScrollableLegendModel, _super);\r\n\r\n    function ScrollableLegendModel() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = ScrollableLegendModel.type;\r\n      return _this;\r\n    }\r\n    /**\r\n     * @param {number} scrollDataIndex\r\n     */\r\n\r\n\r\n    ScrollableLegendModel.prototype.setScrollDataIndex = function (scrollDataIndex) {\r\n      this.option.scrollDataIndex = scrollDataIndex;\r\n    };\r\n\r\n    ScrollableLegendModel.prototype.init = function (option, parentModel, ecModel) {\r\n      var inputPositionParams = getLayoutParams(option);\r\n\r\n      _super.prototype.init.call(this, option, parentModel, ecModel);\r\n\r\n      mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n\r\n\r\n    ScrollableLegendModel.prototype.mergeOption = function (option, ecModel) {\r\n      _super.prototype.mergeOption.call(this, option, ecModel);\r\n\r\n      mergeAndNormalizeLayoutParams(this, this.option, option);\r\n    };\r\n\r\n    ScrollableLegendModel.type = 'legend.scroll';\r\n    ScrollableLegendModel.defaultOption = inheritDefaultOption(LegendModel.defaultOption, {\r\n      scrollDataIndex: 0,\r\n      pageButtonItemGap: 5,\r\n      pageButtonGap: null,\r\n      pageButtonPosition: 'end',\r\n      pageFormatter: '{current}/{total}',\r\n      pageIcons: {\r\n        horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\r\n        vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\r\n      },\r\n      pageIconColor: '#2f4554',\r\n      pageIconInactiveColor: '#aaa',\r\n      pageIconSize: 15,\r\n      pageTextStyle: {\r\n        color: '#333'\r\n      },\r\n      animationDurationUpdate: 800\r\n    });\r\n    return ScrollableLegendModel;\r\n  }(LegendModel); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\r\n\r\n\r\n  function mergeAndNormalizeLayoutParams(legendModel, target, raw) {\r\n    var orient = legendModel.getOrient();\r\n    var ignoreSize = [1, 1];\r\n    ignoreSize[orient.index] = 0;\r\n    mergeLayoutParam(target, raw, {\r\n      type: 'box',\r\n      ignoreSize: !!ignoreSize\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Separate legend and scrollable legend to reduce package size.\r\n   */\r\n\r\n\r\n  var Group$3 = Group;\r\n  var WH = ['width', 'height'];\r\n  var XY = ['x', 'y'];\r\n\r\n  var ScrollableLegendView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(ScrollableLegendView, _super);\r\n\r\n    function ScrollableLegendView() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = ScrollableLegendView.type;\r\n      _this.newlineDisabled = true;\r\n      _this._currentIndex = 0;\r\n      return _this;\r\n    }\r\n\r\n    ScrollableLegendView.prototype.init = function () {\r\n      _super.prototype.init.call(this);\r\n\r\n      this.group.add(this._containerGroup = new Group$3());\r\n\r\n      this._containerGroup.add(this.getContentGroup());\r\n\r\n      this.group.add(this._controllerGroup = new Group$3());\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n\r\n\r\n    ScrollableLegendView.prototype.resetInner = function () {\r\n      _super.prototype.resetInner.call(this);\r\n\r\n      this._controllerGroup.removeAll();\r\n\r\n      this._containerGroup.removeClipPath();\r\n\r\n      this._containerGroup.__rectSize = null;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n\r\n\r\n    ScrollableLegendView.prototype.renderInner = function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\r\n      var self = this; // Render content items.\r\n\r\n      _super.prototype.renderInner.call(this, itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition);\r\n\r\n      var controllerGroup = this._controllerGroup; // FIXME: support be 'auto' adapt to size number text length,\r\n      // e.g., '3/12345' should not overlap with the control arrow button.\r\n\r\n      var pageIconSize = legendModel.get('pageIconSize', true);\r\n      var pageIconSizeArr = isArray(pageIconSize) ? pageIconSize : [pageIconSize, pageIconSize];\r\n      createPageButton('pagePrev', 0);\r\n      var pageTextStyleModel = legendModel.getModel('pageTextStyle');\r\n      controllerGroup.add(new ZRText({\r\n        name: 'pageText',\r\n        style: {\r\n          // Placeholder to calculate a proper layout.\r\n          text: 'xx/xx',\r\n          fill: pageTextStyleModel.getTextColor(),\r\n          font: pageTextStyleModel.getFont(),\r\n          verticalAlign: 'middle',\r\n          align: 'center'\r\n        },\r\n        silent: true\r\n      }));\r\n      createPageButton('pageNext', 1);\r\n\r\n      function createPageButton(name, iconIdx) {\r\n        var pageDataIndexName = name + 'DataIndex';\r\n        var icon = createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\r\n          // Buttons will be created in each render, so we do not need\r\n          // to worry about avoiding using legendModel kept in scope.\r\n          onclick: bind(self._pageGo, self, pageDataIndexName, legendModel, api)\r\n        }, {\r\n          x: -pageIconSizeArr[0] / 2,\r\n          y: -pageIconSizeArr[1] / 2,\r\n          width: pageIconSizeArr[0],\r\n          height: pageIconSizeArr[1]\r\n        });\r\n        icon.name = name;\r\n        controllerGroup.add(icon);\r\n      }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n\r\n\r\n    ScrollableLegendView.prototype.layoutInner = function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\r\n      var selectorGroup = this.getSelectorGroup();\r\n      var orientIdx = legendModel.getOrient().index;\r\n      var wh = WH[orientIdx];\r\n      var xy = XY[orientIdx];\r\n      var hw = WH[1 - orientIdx];\r\n      var yx = XY[1 - orientIdx];\r\n      selector && box( // Buttons in selectorGroup always layout horizontally\r\n      'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\r\n      var selectorButtonGap = legendModel.get('selectorButtonGap', true);\r\n      var selectorRect = selectorGroup.getBoundingRect();\r\n      var selectorPos = [-selectorRect.x, -selectorRect.y];\r\n      var processMaxSize = clone(maxSize);\r\n      selector && (processMaxSize[wh] = maxSize[wh] - selectorRect[wh] - selectorButtonGap);\r\n\r\n      var mainRect = this._layoutContentAndController(legendModel, isFirstRender, processMaxSize, orientIdx, wh, hw, yx, xy);\r\n\r\n      if (selector) {\r\n        if (selectorPosition === 'end') {\r\n          selectorPos[orientIdx] += mainRect[wh] + selectorButtonGap;\r\n        } else {\r\n          var offset = selectorRect[wh] + selectorButtonGap;\r\n          selectorPos[orientIdx] -= offset;\r\n          mainRect[xy] -= offset;\r\n        }\r\n\r\n        mainRect[wh] += selectorRect[wh] + selectorButtonGap;\r\n        selectorPos[1 - orientIdx] += mainRect[yx] + mainRect[hw] / 2 - selectorRect[hw] / 2;\r\n        mainRect[hw] = Math.max(mainRect[hw], selectorRect[hw]);\r\n        mainRect[yx] = Math.min(mainRect[yx], selectorRect[yx] + selectorPos[1 - orientIdx]);\r\n        selectorGroup.x = selectorPos[0];\r\n        selectorGroup.y = selectorPos[1];\r\n        selectorGroup.markRedraw();\r\n      }\r\n\r\n      return mainRect;\r\n    };\r\n\r\n    ScrollableLegendView.prototype._layoutContentAndController = function (legendModel, isFirstRender, maxSize, orientIdx, wh, hw, yx, xy) {\r\n      var contentGroup = this.getContentGroup();\r\n      var containerGroup = this._containerGroup;\r\n      var controllerGroup = this._controllerGroup; // Place items in contentGroup.\r\n\r\n      box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\r\n      box( // Buttons in controller are layout always horizontally.\r\n      'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\r\n      var contentRect = contentGroup.getBoundingRect();\r\n      var controllerRect = controllerGroup.getBoundingRect();\r\n      var showController = this._showController = contentRect[wh] > maxSize[wh]; // In case that the inner elements of contentGroup layout do not based on [0, 0]\r\n\r\n      var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\r\n      // If first rendering, `contentGroup.position` is [0, 0], which\r\n      // does not make sense and may cause unexepcted animation if adopted.\r\n\r\n      if (!isFirstRender) {\r\n        contentPos[orientIdx] = contentGroup[xy];\r\n      } // Layout container group based on 0.\r\n\r\n\r\n      var containerPos = [0, 0];\r\n      var controllerPos = [-controllerRect.x, -controllerRect.y];\r\n      var pageButtonGap = retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\r\n\r\n      if (showController) {\r\n        var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\r\n\r\n        if (pageButtonPosition === 'end') {\r\n          controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\r\n        } // controller is on the left / top.\r\n        else {\r\n            containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\r\n          }\r\n      } // Always align controller to content as 'middle'.\r\n\r\n\r\n      controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\r\n      contentGroup.setPosition(contentPos);\r\n      containerGroup.setPosition(containerPos);\r\n      controllerGroup.setPosition(controllerPos); // Calculate `mainRect` and set `clipPath`.\r\n      // mainRect should not be calculated by `this.group.getBoundingRect()`\r\n      // for sake of the overflow.\r\n\r\n      var mainRect = {\r\n        x: 0,\r\n        y: 0\r\n      }; // Consider content may be overflow (should be clipped).\r\n\r\n      mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\r\n      mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\r\n\r\n      mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\r\n      containerGroup.__rectSize = maxSize[wh];\r\n\r\n      if (showController) {\r\n        var clipShape = {\r\n          x: 0,\r\n          y: 0\r\n        };\r\n        clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\r\n        clipShape[hw] = mainRect[hw];\r\n        containerGroup.setClipPath(new Rect({\r\n          shape: clipShape\r\n        })); // Consider content may be larger than container, container rect\r\n        // can not be obtained from `containerGroup.getBoundingRect()`.\r\n\r\n        containerGroup.__rectSize = clipShape[wh];\r\n      } else {\r\n        // Do not remove or ignore controller. Keep them set as placeholders.\r\n        controllerGroup.eachChild(function (child) {\r\n          child.attr({\r\n            invisible: true,\r\n            silent: true\r\n          });\r\n        });\r\n      } // Content translate animation.\r\n\r\n\r\n      var pageInfo = this._getPageInfo(legendModel);\r\n\r\n      pageInfo.pageIndex != null && updateProps(contentGroup, {\r\n        x: pageInfo.contentPosition[0],\r\n        y: pageInfo.contentPosition[1]\r\n      }, // When switch from \"show controller\" to \"not show controller\", view should be\r\n      // updated immediately without animation, otherwise causes weird effect.\r\n      showController ? legendModel : null);\r\n\r\n      this._updatePageInfoView(legendModel, pageInfo);\r\n\r\n      return mainRect;\r\n    };\r\n\r\n    ScrollableLegendView.prototype._pageGo = function (to, legendModel, api) {\r\n      var scrollDataIndex = this._getPageInfo(legendModel)[to];\r\n\r\n      scrollDataIndex != null && api.dispatchAction({\r\n        type: 'legendScroll',\r\n        scrollDataIndex: scrollDataIndex,\r\n        legendId: legendModel.id\r\n      });\r\n    };\r\n\r\n    ScrollableLegendView.prototype._updatePageInfoView = function (legendModel, pageInfo) {\r\n      var controllerGroup = this._controllerGroup;\r\n      each$1(['pagePrev', 'pageNext'], function (name) {\r\n        var key = name + 'DataIndex';\r\n        var canJump = pageInfo[key] != null;\r\n        var icon = controllerGroup.childOfName(name);\r\n\r\n        if (icon) {\r\n          icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\r\n          icon.cursor = canJump ? 'pointer' : 'default';\r\n        }\r\n      });\r\n      var pageText = controllerGroup.childOfName('pageText');\r\n      var pageFormatter = legendModel.get('pageFormatter');\r\n      var pageIndex = pageInfo.pageIndex;\r\n      var current = pageIndex != null ? pageIndex + 1 : 0;\r\n      var total = pageInfo.pageCount;\r\n      pageText && pageFormatter && pageText.setStyle('text', isString(pageFormatter) ? pageFormatter.replace('{current}', current == null ? '' : current + '').replace('{total}', total == null ? '' : total + '') : pageFormatter({\r\n        current: current,\r\n        total: total\r\n      }));\r\n    };\r\n    /**\r\n     *  contentPosition: Array.<number>, null when data item not found.\r\n     *  pageIndex: number, null when data item not found.\r\n     *  pageCount: number, always be a number, can be 0.\r\n     *  pagePrevDataIndex: number, null when no previous page.\r\n     *  pageNextDataIndex: number, null when no next page.\r\n     * }\r\n     */\r\n\r\n\r\n    ScrollableLegendView.prototype._getPageInfo = function (legendModel) {\r\n      var scrollDataIndex = legendModel.get('scrollDataIndex', true);\r\n      var contentGroup = this.getContentGroup();\r\n      var containerRectSize = this._containerGroup.__rectSize;\r\n      var orientIdx = legendModel.getOrient().index;\r\n      var wh = WH[orientIdx];\r\n      var xy = XY[orientIdx];\r\n\r\n      var targetItemIndex = this._findTargetItemIndex(scrollDataIndex);\r\n\r\n      var children = contentGroup.children();\r\n      var targetItem = children[targetItemIndex];\r\n      var itemCount = children.length;\r\n      var pCount = !itemCount ? 0 : 1;\r\n      var result = {\r\n        contentPosition: [contentGroup.x, contentGroup.y],\r\n        pageCount: pCount,\r\n        pageIndex: pCount - 1,\r\n        pagePrevDataIndex: null,\r\n        pageNextDataIndex: null\r\n      };\r\n\r\n      if (!targetItem) {\r\n        return result;\r\n      }\r\n\r\n      var targetItemInfo = getItemInfo(targetItem);\r\n      result.contentPosition[orientIdx] = -targetItemInfo.s; // Strategy:\r\n      // (1) Always align based on the left/top most item.\r\n      // (2) It is user-friendly that the last item shown in the\r\n      // current window is shown at the begining of next window.\r\n      // Otherwise if half of the last item is cut by the window,\r\n      // it will have no chance to display entirely.\r\n      // (3) Consider that item size probably be different, we\r\n      // have calculate pageIndex by size rather than item index,\r\n      // and we can not get page index directly by division.\r\n      // (4) The window is to narrow to contain more than\r\n      // one item, we should make sure that the page can be fliped.\r\n\r\n      for (var i = targetItemIndex + 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i <= itemCount; ++i) {\r\n        currItemInfo = getItemInfo(children[i]);\r\n\r\n        if ( // Half of the last item is out of the window.\r\n        !currItemInfo && winEndItemInfo.e > winStartItemInfo.s + containerRectSize || // If the current item does not intersect with the window, the new page\r\n        // can be started at the current item or the last item.\r\n        currItemInfo && !intersect(currItemInfo, winStartItemInfo.s)) {\r\n          if (winEndItemInfo.i > winStartItemInfo.i) {\r\n            winStartItemInfo = winEndItemInfo;\r\n          } else {\r\n            // e.g., when page size is smaller than item size.\r\n            winStartItemInfo = currItemInfo;\r\n          }\r\n\r\n          if (winStartItemInfo) {\r\n            if (result.pageNextDataIndex == null) {\r\n              result.pageNextDataIndex = winStartItemInfo.i;\r\n            }\r\n\r\n            ++result.pageCount;\r\n          }\r\n        }\r\n\r\n        winEndItemInfo = currItemInfo;\r\n      }\r\n\r\n      for (var i = targetItemIndex - 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i >= -1; --i) {\r\n        currItemInfo = getItemInfo(children[i]);\r\n\r\n        if ( // If the the end item does not intersect with the window started\r\n        // from the current item, a page can be settled.\r\n        (!currItemInfo || !intersect(winEndItemInfo, currItemInfo.s)) && // e.g., when page size is smaller than item size.\r\n        winStartItemInfo.i < winEndItemInfo.i) {\r\n          winEndItemInfo = winStartItemInfo;\r\n\r\n          if (result.pagePrevDataIndex == null) {\r\n            result.pagePrevDataIndex = winStartItemInfo.i;\r\n          }\r\n\r\n          ++result.pageCount;\r\n          ++result.pageIndex;\r\n        }\r\n\r\n        winStartItemInfo = currItemInfo;\r\n      }\r\n\r\n      return result;\r\n\r\n      function getItemInfo(el) {\r\n        if (el) {\r\n          var itemRect = el.getBoundingRect();\r\n          var start = itemRect[xy] + el[xy];\r\n          return {\r\n            s: start,\r\n            e: start + itemRect[wh],\r\n            i: el.__legendDataIndex\r\n          };\r\n        }\r\n      }\r\n\r\n      function intersect(itemInfo, winStart) {\r\n        return itemInfo.e >= winStart && itemInfo.s <= winStart + containerRectSize;\r\n      }\r\n    };\r\n\r\n    ScrollableLegendView.prototype._findTargetItemIndex = function (targetDataIndex) {\r\n      if (!this._showController) {\r\n        return 0;\r\n      }\r\n\r\n      var index;\r\n      var contentGroup = this.getContentGroup();\r\n      var defaultIndex;\r\n      contentGroup.eachChild(function (child, idx) {\r\n        var legendDataIdx = child.__legendDataIndex; // FIXME\r\n        // If the given targetDataIndex (from model) is illegal,\r\n        // we use defaultIndex. But the index on the legend model and\r\n        // action payload is still illegal. That case will not be\r\n        // changed until some scenario requires.\r\n\r\n        if (defaultIndex == null && legendDataIdx != null) {\r\n          defaultIndex = idx;\r\n        }\r\n\r\n        if (legendDataIdx === targetDataIndex) {\r\n          index = idx;\r\n        }\r\n      });\r\n      return index != null ? index : defaultIndex;\r\n    };\r\n\r\n    ScrollableLegendView.type = 'legend.scroll';\r\n    return ScrollableLegendView;\r\n  }(LegendView);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function installScrollableLegendAction(registers) {\r\n    /**\r\n     * @event legendScroll\r\n     * @type {Object}\r\n     * @property {string} type 'legendScroll'\r\n     * @property {string} scrollDataIndex\r\n     */\r\n    registers.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\r\n      var scrollDataIndex = payload.scrollDataIndex;\r\n      scrollDataIndex != null && ecModel.eachComponent({\r\n        mainType: 'legend',\r\n        subType: 'scroll',\r\n        query: payload\r\n      }, function (legendModel) {\r\n        legendModel.setScrollDataIndex(scrollDataIndex);\r\n      });\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function install$7(registers) {\r\n    use(install$8);\r\n    registers.registerComponentModel(ScrollableLegendModel);\r\n    registers.registerComponentView(ScrollableLegendView);\r\n    installScrollableLegendAction(registers);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Legend component entry file8\r\n   */\r\n\r\n\r\n  use(install$7);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var TooltipModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(TooltipModel, _super);\r\n\r\n    function TooltipModel() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = TooltipModel.type;\r\n      return _this;\r\n    }\r\n\r\n    TooltipModel.type = 'tooltip';\r\n    TooltipModel.dependencies = ['axisPointer'];\r\n    TooltipModel.defaultOption = {\r\n      zlevel: 0,\r\n      z: 60,\r\n      show: true,\r\n      // tooltip main content\r\n      showContent: true,\r\n      // 'trigger' only works on coordinate system.\r\n      // 'item' | 'axis' | 'none'\r\n      trigger: 'item',\r\n      // 'click' | 'mousemove' | 'none'\r\n      triggerOn: 'mousemove|click',\r\n      alwaysShowContent: false,\r\n      displayMode: 'single',\r\n      renderMode: 'auto',\r\n      // whether restraint content inside viewRect.\r\n      // If renderMode: 'richText', default true.\r\n      // If renderMode: 'html', defaut false (for backward compat).\r\n      confine: null,\r\n      showDelay: 0,\r\n      hideDelay: 100,\r\n      // Animation transition time, unit is second\r\n      transitionDuration: 0.4,\r\n      enterable: false,\r\n      backgroundColor: '#fff',\r\n      // box shadow\r\n      shadowBlur: 10,\r\n      shadowColor: 'rgba(0, 0, 0, .2)',\r\n      shadowOffsetX: 1,\r\n      shadowOffsetY: 2,\r\n      // tooltip border radius, unit is px, default is 4\r\n      borderRadius: 4,\r\n      // tooltip border width, unit is px, default is 0 (no border)\r\n      borderWidth: 1,\r\n      // Tooltip inside padding, default is 5 for all direction\r\n      // Array is allowed to set up, right, bottom, left, same with css\r\n      // The default value: See `tooltip/tooltipMarkup.ts#getPaddingFromTooltipModel`.\r\n      padding: null,\r\n      // Extra css text\r\n      extraCssText: '',\r\n      // axis indicator, trigger by axis\r\n      axisPointer: {\r\n        // default is line\r\n        // legal values: 'line' | 'shadow' | 'cross'\r\n        type: 'line',\r\n        // Valid when type is line, appoint tooltip line locate on which line. Optional\r\n        // legal values: 'x' | 'y' | 'angle' | 'radius' | 'auto'\r\n        // default is 'auto', chose the axis which type is category.\r\n        // for multiply y axis, cartesian coord chose x axis, polar chose angle axis\r\n        axis: 'auto',\r\n        animation: 'auto',\r\n        animationDurationUpdate: 200,\r\n        animationEasingUpdate: 'exponentialOut',\r\n        crossStyle: {\r\n          color: '#999',\r\n          width: 1,\r\n          type: 'dashed',\r\n          // TODO formatter\r\n          textStyle: {}\r\n        } // lineStyle and shadowStyle should not be specified here,\r\n        // otherwise it will always override those styles on option.axisPointer.\r\n\r\n      },\r\n      textStyle: {\r\n        color: '#666',\r\n        fontSize: 14\r\n      }\r\n    };\r\n    return TooltipModel;\r\n  }(ComponentModel);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function shouldTooltipConfine(tooltipModel) {\r\n    var confineOption = tooltipModel.get('confine');\r\n    return confineOption != null ? !!confineOption // In richText mode, the outside part can not be visible.\r\n    : tooltipModel.get('renderMode') === 'richText';\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var vendors = ['-ms-', '-moz-', '-o-', '-webkit-', ''];\r\n  var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\r\n\r\n  function mirrorPos(pos) {\r\n    pos = pos === 'left' ? 'right' : pos === 'right' ? 'left' : pos === 'top' ? 'bottom' : 'top';\r\n    return pos;\r\n  }\r\n\r\n  function assembleArrow(backgroundColor, borderColor, arrowPosition) {\r\n    if (!isString(arrowPosition) || arrowPosition === 'inside') {\r\n      return '';\r\n    }\r\n\r\n    borderColor = convertToColorString(borderColor);\r\n    var arrowPos = mirrorPos(arrowPosition);\r\n    var positionStyle = '';\r\n    var transformStyle = '';\r\n\r\n    if (indexOf$1(['left', 'right'], arrowPos) > -1) {\r\n      positionStyle = arrowPos + \":-6px;top:50%;\";\r\n      transformStyle = \"translateY(-50%) rotate(\" + (arrowPos === 'left' ? -225 : -45) + \"deg)\";\r\n    } else {\r\n      positionStyle = arrowPos + \":-6px;left:50%;\";\r\n      transformStyle = \"translateX(-50%) rotate(\" + (arrowPos === 'top' ? 225 : 45) + \"deg)\";\r\n    }\r\n\r\n    transformStyle = map(vendors, function (vendorPrefix) {\r\n      return vendorPrefix + 'transform:' + transformStyle;\r\n    }).join(';');\r\n    var styleCss = ['position:absolute;width:10px;height:10px;', \"\" + positionStyle + transformStyle + \";\", \"border-bottom: \" + borderColor + \" solid 1px;\", \"border-right: \" + borderColor + \" solid 1px;\", \"background-color: \" + backgroundColor + \";\", 'box-shadow: 8px 8px 16px -3px #000;'];\r\n    return \"<div style=\\\"\" + styleCss.join('') + \"\\\"></div>\";\r\n  }\r\n\r\n  function assembleTransition(duration, onlyFade) {\r\n    var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\r\n    var transitionText = 'opacity ' + duration / 2 + 's ' + transitionCurve + ',' + 'visibility ' + duration / 2 + 's ' + transitionCurve;\r\n\r\n    if (!onlyFade) {\r\n      transitionText += ',left ' + duration + 's ' + transitionCurve + ',top ' + duration + 's ' + transitionCurve;\r\n    }\r\n\r\n    return map(vendors, function (vendorPrefix) {\r\n      return vendorPrefix + 'transition:' + transitionText;\r\n    }).join(';');\r\n  }\r\n  /**\r\n   * @param {Object} textStyle\r\n   * @return {string}\r\n   * @inner\r\n   */\r\n\r\n\r\n  function assembleFont(textStyleModel) {\r\n    var cssText = [];\r\n    var fontSize = textStyleModel.get('fontSize');\r\n    var color = textStyleModel.getTextColor();\r\n    color && cssText.push('color:' + color);\r\n    cssText.push('font:' + textStyleModel.getFont());\r\n    fontSize // @ts-ignore, leave it to the tooltip refactor.\r\n    && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\r\n    var shadowColor = textStyleModel.get('textShadowColor');\r\n    var shadowBlur = textStyleModel.get('textShadowBlur') || 0;\r\n    var shadowOffsetX = textStyleModel.get('textShadowOffsetX') || 0;\r\n    var shadowOffsetY = textStyleModel.get('textShadowOffsetY') || 0;\r\n    shadowColor && shadowBlur && cssText.push('text-shadow:' + shadowOffsetX + 'px ' + shadowOffsetY + 'px ' + shadowBlur + 'px ' + shadowColor);\r\n    each$1(['decoration', 'align'], function (name) {\r\n      var val = textStyleModel.get(name);\r\n      val && cssText.push('text-' + name + ':' + val);\r\n    });\r\n    return cssText.join(';');\r\n  }\r\n\r\n  function assembleCssText(tooltipModel, enableTransition, onlyFade) {\r\n    var cssText = [];\r\n    var transitionDuration = tooltipModel.get('transitionDuration');\r\n    var backgroundColor = tooltipModel.get('backgroundColor');\r\n    var shadowBlur = tooltipModel.get('shadowBlur');\r\n    var shadowColor = tooltipModel.get('shadowColor');\r\n    var shadowOffsetX = tooltipModel.get('shadowOffsetX');\r\n    var shadowOffsetY = tooltipModel.get('shadowOffsetY');\r\n    var textStyleModel = tooltipModel.getModel('textStyle');\r\n    var padding = getPaddingFromTooltipModel(tooltipModel, 'html');\r\n    var boxShadow = shadowOffsetX + \"px \" + shadowOffsetY + \"px \" + shadowBlur + \"px \" + shadowColor;\r\n    cssText.push('box-shadow:' + boxShadow); // Animation transition. Do not animate when transitionDuration is 0.\r\n\r\n    enableTransition && transitionDuration && cssText.push(assembleTransition(transitionDuration, onlyFade));\r\n\r\n    if (backgroundColor) {\r\n      if (env.canvasSupported) {\r\n        cssText.push('background-Color:' + backgroundColor);\r\n      } else {\r\n        // for ie\r\n        cssText.push('background-Color:#' + toHex(backgroundColor));\r\n        cssText.push('filter:alpha(opacity=70)');\r\n      }\r\n    } // Border style\r\n\r\n\r\n    each$1(['width', 'color', 'radius'], function (name) {\r\n      var borderName = 'border-' + name;\r\n      var camelCase = toCamelCase(borderName);\r\n      var val = tooltipModel.get(camelCase);\r\n      val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\r\n    }); // Text style\r\n\r\n    cssText.push(assembleFont(textStyleModel)); // Padding\r\n\r\n    if (padding != null) {\r\n      cssText.push('padding:' + normalizeCssArray$1(padding).join('px ') + 'px');\r\n    }\r\n\r\n    return cssText.join(';') + ';';\r\n  } // If not able to make, do not modify the input `out`.\r\n\r\n\r\n  function makeStyleCoord(out, zr, appendToBody, zrX, zrY) {\r\n    var zrPainter = zr && zr.painter;\r\n\r\n    if (appendToBody) {\r\n      var zrViewportRoot = zrPainter && zrPainter.getViewportRoot();\r\n\r\n      if (zrViewportRoot) {\r\n        // Some APPs might use scale on body, so we support CSS transform here.\r\n        transformLocalCoord(out, zrViewportRoot, document.body, zrX, zrY);\r\n      }\r\n    } else {\r\n      out[0] = zrX;\r\n      out[1] = zrY; // xy should be based on canvas root. But tooltipContent is\r\n      // the sibling of canvas root. So padding of ec container\r\n      // should be considered here.\r\n\r\n      var viewportRootOffset = zrPainter && zrPainter.getViewportRootOffset();\r\n\r\n      if (viewportRootOffset) {\r\n        out[0] += viewportRootOffset.offsetLeft;\r\n        out[1] += viewportRootOffset.offsetTop;\r\n      }\r\n    }\r\n\r\n    out[2] = out[0] / zr.getWidth();\r\n    out[3] = out[1] / zr.getHeight();\r\n  }\r\n\r\n  var TooltipHTMLContent =\r\n  /** @class */\r\n  function () {\r\n    function TooltipHTMLContent(container, api, opt) {\r\n      this._show = false;\r\n      this._styleCoord = [0, 0, 0, 0];\r\n      this._enterable = true;\r\n      this._firstShow = true;\r\n      this._longHide = true;\r\n\r\n      if (env.wxa) {\r\n        return null;\r\n      }\r\n\r\n      var el = document.createElement('div'); // TODO: TYPE\r\n\r\n      el.domBelongToZr = true;\r\n      this.el = el;\r\n      var zr = this._zr = api.getZr();\r\n      var appendToBody = this._appendToBody = opt && opt.appendToBody;\r\n      makeStyleCoord(this._styleCoord, zr, appendToBody, api.getWidth() / 2, api.getHeight() / 2);\r\n\r\n      if (appendToBody) {\r\n        document.body.appendChild(el);\r\n      } else {\r\n        container.appendChild(el);\r\n      }\r\n\r\n      this._container = container; // FIXME\r\n      // Is it needed to trigger zr event manually if\r\n      // the browser do not support `pointer-events: none`.\r\n\r\n      var self = this;\r\n\r\n      el.onmouseenter = function () {\r\n        // clear the timeout in hideLater and keep showing tooltip\r\n        if (self._enterable) {\r\n          clearTimeout(self._hideTimeout);\r\n          self._show = true;\r\n        }\r\n\r\n        self._inContent = true;\r\n      };\r\n\r\n      el.onmousemove = function (e) {\r\n        e = e || window.event;\r\n\r\n        if (!self._enterable) {\r\n          // `pointer-events: none` is set to tooltip content div\r\n          // if `enterable` is set as `false`, and `el.onmousemove`\r\n          // can not be triggered. But in browser that do not\r\n          // support `pointer-events`, we need to do this:\r\n          // Try trigger zrender event to avoid mouse\r\n          // in and out shape too frequently\r\n          var handler = zr.handler;\r\n          var zrViewportRoot = zr.painter.getViewportRoot();\r\n          normalizeEvent(zrViewportRoot, e, true);\r\n          handler.dispatch('mousemove', e);\r\n        }\r\n      };\r\n\r\n      el.onmouseleave = function () {\r\n        // set `_inContent` to `false` before `hideLater`\r\n        self._inContent = false;\r\n\r\n        if (self._enterable) {\r\n          if (self._show) {\r\n            self.hideLater(self._hideDelay);\r\n          }\r\n        }\r\n      };\r\n    }\r\n    /**\r\n     * Update when tooltip is rendered\r\n     */\r\n\r\n\r\n    TooltipHTMLContent.prototype.update = function (tooltipModel) {\r\n      // FIXME\r\n      // Move this logic to ec main?\r\n      var container = this._container;\r\n      var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\r\n      var domStyle = container.style;\r\n\r\n      if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\r\n        domStyle.position = 'relative';\r\n      } // move tooltip if chart resized\r\n\r\n\r\n      var alwaysShowContent = tooltipModel.get('alwaysShowContent');\r\n      alwaysShowContent && this._moveIfResized(); // update className\r\n\r\n      this.el.className = tooltipModel.get('className') || ''; // Hide the tooltip\r\n      // PENDING\r\n      // this.hide();\r\n    };\r\n\r\n    TooltipHTMLContent.prototype.show = function (tooltipModel, nearPointColor) {\r\n      clearTimeout(this._hideTimeout);\r\n      clearTimeout(this._longHideTimeout);\r\n      var el = this.el;\r\n      var styleCoord = this._styleCoord;\r\n      var offset = el.offsetHeight / 2;\r\n      nearPointColor = convertToColorString(nearPointColor);\r\n      el.style.cssText = gCssText + assembleCssText(tooltipModel, !this._firstShow, this._longHide) // Because of the reason described in:\r\n      // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\r\n      // we should set initial value to `left` and `top`.\r\n      + ';left:' + styleCoord[0] + 'px;top:' + (styleCoord[1] - offset) + 'px;' + (\"border-color: \" + nearPointColor + \";\") + (tooltipModel.get('extraCssText') || '');\r\n      el.style.display = el.innerHTML ? 'block' : 'none'; // If mouse occasionally move over the tooltip, a mouseout event will be\r\n      // triggered by canvas, and cause some unexpectable result like dragging\r\n      // stop, \"unfocusAdjacency\". Here `pointer-events: none` is used to solve\r\n      // it. Although it is not supported by IE8~IE10, fortunately it is a rare\r\n      // scenario.\r\n\r\n      el.style.pointerEvents = this._enterable ? 'auto' : 'none';\r\n      this._show = true;\r\n      this._firstShow = false;\r\n      this._longHide = false;\r\n    };\r\n\r\n    TooltipHTMLContent.prototype.setContent = function (content, markers, tooltipModel, borderColor, arrowPosition) {\r\n      if (content == null) {\r\n        return;\r\n      }\r\n\r\n      var el = this.el;\r\n\r\n      if (isString(arrowPosition) && tooltipModel.get('trigger') === 'item' && !shouldTooltipConfine(tooltipModel)) {\r\n        content += assembleArrow(tooltipModel.get('backgroundColor'), borderColor, arrowPosition);\r\n      }\r\n\r\n      if (isString(content)) {\r\n        el.innerHTML = content;\r\n      } else if (content) {\r\n        // Clear previous\r\n        el.innerHTML = '';\r\n\r\n        if (!isArray(content)) {\r\n          content = [content];\r\n        }\r\n\r\n        for (var i = 0; i < content.length; i++) {\r\n          if (isDom(content[i]) && content[i].parentNode !== el) {\r\n            el.appendChild(content[i]);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    TooltipHTMLContent.prototype.setEnterable = function (enterable) {\r\n      this._enterable = enterable;\r\n    };\r\n\r\n    TooltipHTMLContent.prototype.getSize = function () {\r\n      var el = this.el;\r\n      return [el.clientWidth, el.clientHeight];\r\n    };\r\n\r\n    TooltipHTMLContent.prototype.moveTo = function (zrX, zrY) {\r\n      var styleCoord = this._styleCoord;\r\n      makeStyleCoord(styleCoord, this._zr, this._appendToBody, zrX, zrY);\r\n\r\n      if (styleCoord[0] != null && styleCoord[1] != null) {\r\n        var style = this.el.style; // If using float on style, the final width of the dom might\r\n        // keep changing slightly while mouse move. So `toFixed(0)` them.\r\n\r\n        style.left = styleCoord[0].toFixed(0) + 'px';\r\n        style.top = styleCoord[1].toFixed(0) + 'px';\r\n      }\r\n    };\r\n    /**\r\n     * when `alwaysShowContent` is true,\r\n     * move the tooltip after chart resized\r\n     */\r\n\r\n\r\n    TooltipHTMLContent.prototype._moveIfResized = function () {\r\n      // The ratio of left to width\r\n      var ratioX = this._styleCoord[2]; // The ratio of top to height\r\n\r\n      var ratioY = this._styleCoord[3];\r\n      this.moveTo(ratioX * this._zr.getWidth(), ratioY * this._zr.getHeight());\r\n    };\r\n\r\n    TooltipHTMLContent.prototype.hide = function () {\r\n      var _this = this;\r\n\r\n      this.el.style.visibility = 'hidden';\r\n      this.el.style.opacity = '0';\r\n      this._show = false;\r\n      this._longHideTimeout = setTimeout(function () {\r\n        return _this._longHide = true;\r\n      }, 500);\r\n    };\r\n\r\n    TooltipHTMLContent.prototype.hideLater = function (time) {\r\n      if (this._show && !(this._inContent && this._enterable)) {\r\n        if (time) {\r\n          this._hideDelay = time; // Set show false to avoid invoke hideLater multiple times\r\n\r\n          this._show = false;\r\n          this._hideTimeout = setTimeout(bind(this.hide, this), time);\r\n        } else {\r\n          this.hide();\r\n        }\r\n      }\r\n    };\r\n\r\n    TooltipHTMLContent.prototype.isShow = function () {\r\n      return this._show;\r\n    };\r\n\r\n    TooltipHTMLContent.prototype.dispose = function () {\r\n      this.el.parentNode.removeChild(this.el);\r\n    };\r\n\r\n    TooltipHTMLContent.prototype.getOuterSize = function () {\r\n      var width = this.el.clientWidth;\r\n      var height = this.el.clientHeight; // Consider browser compatibility.\r\n      // IE8 does not support getComputedStyle.\r\n\r\n      if (document.defaultView && document.defaultView.getComputedStyle) {\r\n        var stl = document.defaultView.getComputedStyle(this.el);\r\n\r\n        if (stl) {\r\n          width += parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\r\n          height += parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\r\n        }\r\n      }\r\n\r\n      return {\r\n        width: width,\r\n        height: height\r\n      };\r\n    };\r\n\r\n    return TooltipHTMLContent;\r\n  }();\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var TooltipRichContent =\r\n  /** @class */\r\n  function () {\r\n    function TooltipRichContent(api) {\r\n      this._show = false;\r\n      this._styleCoord = [0, 0, 0, 0];\r\n      this._enterable = true;\r\n      this._zr = api.getZr();\r\n      makeStyleCoord$1(this._styleCoord, this._zr, api.getWidth() / 2, api.getHeight() / 2);\r\n    }\r\n    /**\r\n     * Update when tooltip is rendered\r\n     */\r\n\r\n\r\n    TooltipRichContent.prototype.update = function (tooltipModel) {\r\n      var alwaysShowContent = tooltipModel.get('alwaysShowContent');\r\n      alwaysShowContent && this._moveIfResized();\r\n    };\r\n\r\n    TooltipRichContent.prototype.show = function () {\r\n      if (this._hideTimeout) {\r\n        clearTimeout(this._hideTimeout);\r\n      }\r\n\r\n      this.el.show();\r\n      this._show = true;\r\n    };\r\n    /**\r\n     * Set tooltip content\r\n     */\r\n\r\n\r\n    TooltipRichContent.prototype.setContent = function (content, markupStyleCreator, tooltipModel, borderColor, arrowPosition) {\r\n      if (isObject$1(content)) {\r\n        throwError('Passing DOM nodes as content is not supported in richText tooltip!');\r\n      }\r\n\r\n      if (this.el) {\r\n        this._zr.remove(this.el);\r\n      }\r\n\r\n      var textStyleModel = tooltipModel.getModel('textStyle');\r\n      this.el = new ZRText({\r\n        style: {\r\n          rich: markupStyleCreator.richTextStyles,\r\n          text: content,\r\n          lineHeight: 22,\r\n          backgroundColor: tooltipModel.get('backgroundColor'),\r\n          borderRadius: tooltipModel.get('borderRadius'),\r\n          borderWidth: 1,\r\n          borderColor: borderColor,\r\n          shadowColor: tooltipModel.get('shadowColor'),\r\n          shadowBlur: tooltipModel.get('shadowBlur'),\r\n          shadowOffsetX: tooltipModel.get('shadowOffsetX'),\r\n          shadowOffsetY: tooltipModel.get('shadowOffsetY'),\r\n          textShadowColor: textStyleModel.get('textShadowColor'),\r\n          textShadowBlur: textStyleModel.get('textShadowBlur') || 0,\r\n          textShadowOffsetX: textStyleModel.get('textShadowOffsetX') || 0,\r\n          textShadowOffsetY: textStyleModel.get('textShadowOffsetY') || 0,\r\n          fill: tooltipModel.get(['textStyle', 'color']),\r\n          padding: getPaddingFromTooltipModel(tooltipModel, 'richText'),\r\n          verticalAlign: 'top',\r\n          align: 'left'\r\n        },\r\n        z: tooltipModel.get('z')\r\n      });\r\n\r\n      this._zr.add(this.el);\r\n\r\n      var self = this;\r\n      this.el.on('mouseover', function () {\r\n        // clear the timeout in hideLater and keep showing tooltip\r\n        if (self._enterable) {\r\n          clearTimeout(self._hideTimeout);\r\n          self._show = true;\r\n        }\r\n\r\n        self._inContent = true;\r\n      });\r\n      this.el.on('mouseout', function () {\r\n        if (self._enterable) {\r\n          if (self._show) {\r\n            self.hideLater(self._hideDelay);\r\n          }\r\n        }\r\n\r\n        self._inContent = false;\r\n      });\r\n    };\r\n\r\n    TooltipRichContent.prototype.setEnterable = function (enterable) {\r\n      this._enterable = enterable;\r\n    };\r\n\r\n    TooltipRichContent.prototype.getSize = function () {\r\n      var el = this.el;\r\n      var bounding = this.el.getBoundingRect(); // bounding rect does not include shadow. For renderMode richText,\r\n      // if overflow, it will be cut. So calculate them accurately.\r\n\r\n      var shadowOuterSize = calcShadowOuterSize(el.style);\r\n      return [bounding.width + shadowOuterSize.left + shadowOuterSize.right, bounding.height + shadowOuterSize.top + shadowOuterSize.bottom];\r\n    };\r\n\r\n    TooltipRichContent.prototype.moveTo = function (x, y) {\r\n      var el = this.el;\r\n\r\n      if (el) {\r\n        var styleCoord = this._styleCoord;\r\n        makeStyleCoord$1(styleCoord, this._zr, x, y);\r\n        x = styleCoord[0];\r\n        y = styleCoord[1];\r\n        var style = el.style;\r\n        var borderWidth = mathMaxWith0(style.borderWidth || 0);\r\n        var shadowOuterSize = calcShadowOuterSize(style); // rich text x, y do not include border.\r\n\r\n        el.x = x + borderWidth + shadowOuterSize.left;\r\n        el.y = y + borderWidth + shadowOuterSize.top;\r\n        el.markRedraw();\r\n      }\r\n    };\r\n    /**\r\n     * when `alwaysShowContent` is true,\r\n     * move the tooltip after chart resized\r\n     */\r\n\r\n\r\n    TooltipRichContent.prototype._moveIfResized = function () {\r\n      // The ratio of left to width\r\n      var ratioX = this._styleCoord[2]; // The ratio of top to height\r\n\r\n      var ratioY = this._styleCoord[3];\r\n      this.moveTo(ratioX * this._zr.getWidth(), ratioY * this._zr.getHeight());\r\n    };\r\n\r\n    TooltipRichContent.prototype.hide = function () {\r\n      if (this.el) {\r\n        this.el.hide();\r\n      }\r\n\r\n      this._show = false;\r\n    };\r\n\r\n    TooltipRichContent.prototype.hideLater = function (time) {\r\n      if (this._show && !(this._inContent && this._enterable)) {\r\n        if (time) {\r\n          this._hideDelay = time; // Set show false to avoid invoke hideLater multiple times\r\n\r\n          this._show = false;\r\n          this._hideTimeout = setTimeout(bind(this.hide, this), time);\r\n        } else {\r\n          this.hide();\r\n        }\r\n      }\r\n    };\r\n\r\n    TooltipRichContent.prototype.isShow = function () {\r\n      return this._show;\r\n    };\r\n\r\n    TooltipRichContent.prototype.getOuterSize = function () {\r\n      var size = this.getSize();\r\n      return {\r\n        width: size[0],\r\n        height: size[1]\r\n      };\r\n    };\r\n\r\n    TooltipRichContent.prototype.dispose = function () {\r\n      this._zr.remove(this.el);\r\n    };\r\n\r\n    return TooltipRichContent;\r\n  }();\r\n\r\n  function mathMaxWith0(val) {\r\n    return Math.max(0, val);\r\n  }\r\n\r\n  function calcShadowOuterSize(style) {\r\n    var shadowBlur = mathMaxWith0(style.shadowBlur || 0);\r\n    var shadowOffsetX = mathMaxWith0(style.shadowOffsetX || 0);\r\n    var shadowOffsetY = mathMaxWith0(style.shadowOffsetY || 0);\r\n    return {\r\n      left: mathMaxWith0(shadowBlur - shadowOffsetX),\r\n      right: mathMaxWith0(shadowBlur + shadowOffsetX),\r\n      top: mathMaxWith0(shadowBlur - shadowOffsetY),\r\n      bottom: mathMaxWith0(shadowBlur + shadowOffsetY)\r\n    };\r\n  }\r\n\r\n  function makeStyleCoord$1(out, zr, zrX, zrY) {\r\n    out[0] = zrX;\r\n    out[1] = zrY;\r\n    out[2] = out[0] / zr.getWidth();\r\n    out[3] = out[1] / zr.getHeight();\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var bind$2 = bind;\r\n  var each$6 = each$1;\r\n  var parsePercent$3 = parsePercent$1;\r\n  var proxyRect = new Rect({\r\n    shape: {\r\n      x: -1,\r\n      y: -1,\r\n      width: 2,\r\n      height: 2\r\n    }\r\n  });\r\n\r\n  var TooltipView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(TooltipView, _super);\r\n\r\n    function TooltipView() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = TooltipView.type;\r\n      return _this;\r\n    }\r\n\r\n    TooltipView.prototype.init = function (ecModel, api) {\r\n      if (env.node) {\r\n        return;\r\n      }\r\n\r\n      var tooltipModel = ecModel.getComponent('tooltip');\r\n      var renderMode = tooltipModel.get('renderMode');\r\n      this._renderMode = getTooltipRenderMode(renderMode);\r\n      this._tooltipContent = this._renderMode === 'richText' ? new TooltipRichContent(api) : new TooltipHTMLContent(api.getDom(), api, {\r\n        appendToBody: tooltipModel.get('appendToBody', true)\r\n      });\r\n    };\r\n\r\n    TooltipView.prototype.render = function (tooltipModel, ecModel, api) {\r\n      if (env.node) {\r\n        return;\r\n      } // Reset\r\n\r\n\r\n      this.group.removeAll();\r\n      this._tooltipModel = tooltipModel;\r\n      this._ecModel = ecModel;\r\n      this._api = api;\r\n      /**\r\n       * @private\r\n       * @type {boolean}\r\n       */\r\n\r\n      this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\r\n      var tooltipContent = this._tooltipContent;\r\n      tooltipContent.update(tooltipModel);\r\n      tooltipContent.setEnterable(tooltipModel.get('enterable'));\r\n\r\n      this._initGlobalListener();\r\n\r\n      this._keepShow();\r\n    };\r\n\r\n    TooltipView.prototype._initGlobalListener = function () {\r\n      var tooltipModel = this._tooltipModel;\r\n      var triggerOn = tooltipModel.get('triggerOn');\r\n      register('itemTooltip', this._api, bind$2(function (currTrigger, e, dispatchAction) {\r\n        // If 'none', it is not controlled by mouse totally.\r\n        if (triggerOn !== 'none') {\r\n          if (triggerOn.indexOf(currTrigger) >= 0) {\r\n            this._tryShow(e, dispatchAction);\r\n          } else if (currTrigger === 'leave') {\r\n            this._hide(dispatchAction);\r\n          }\r\n        }\r\n      }, this));\r\n    };\r\n\r\n    TooltipView.prototype._keepShow = function () {\r\n      var tooltipModel = this._tooltipModel;\r\n      var ecModel = this._ecModel;\r\n      var api = this._api; // Try to keep the tooltip show when refreshing\r\n\r\n      if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\r\n      // self.manuallyShowTip({x, y}) might cause tooltip hide,\r\n      // which is not expected.\r\n      && tooltipModel.get('triggerOn') !== 'none') {\r\n        var self_1 = this;\r\n        clearTimeout(this._refreshUpdateTimeout);\r\n        this._refreshUpdateTimeout = setTimeout(function () {\r\n          // Show tip next tick after other charts are rendered\r\n          // In case highlight action has wrong result\r\n          // FIXME\r\n          !api.isDisposed() && self_1.manuallyShowTip(tooltipModel, ecModel, api, {\r\n            x: self_1._lastX,\r\n            y: self_1._lastY,\r\n            dataByCoordSys: self_1._lastDataByCoordSys\r\n          });\r\n        });\r\n      }\r\n    };\r\n    /**\r\n     * Show tip manually by\r\n     * dispatchAction({\r\n     *     type: 'showTip',\r\n     *     x: 10,\r\n     *     y: 10\r\n     * });\r\n     * Or\r\n     * dispatchAction({\r\n     *      type: 'showTip',\r\n     *      seriesIndex: 0,\r\n     *      dataIndex or dataIndexInside or name\r\n     * });\r\n     *\r\n     *  TODO Batch\r\n     */\r\n\r\n\r\n    TooltipView.prototype.manuallyShowTip = function (tooltipModel, ecModel, api, payload) {\r\n      if (payload.from === this.uid || env.node) {\r\n        return;\r\n      }\r\n\r\n      var dispatchAction = makeDispatchAction$1(payload, api); // Reset ticket\r\n\r\n      this._ticket = ''; // When triggered from axisPointer.\r\n\r\n      var dataByCoordSys = payload.dataByCoordSys;\r\n\r\n      if (payload.tooltip && payload.x != null && payload.y != null) {\r\n        var el = proxyRect;\r\n        el.x = payload.x;\r\n        el.y = payload.y;\r\n        el.update();\r\n        el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\r\n\r\n        this._tryShow({\r\n          offsetX: payload.x,\r\n          offsetY: payload.y,\r\n          target: el\r\n        }, dispatchAction);\r\n      } else if (dataByCoordSys) {\r\n        this._tryShow({\r\n          offsetX: payload.x,\r\n          offsetY: payload.y,\r\n          position: payload.position,\r\n          dataByCoordSys: dataByCoordSys,\r\n          tooltipOption: payload.tooltipOption\r\n        }, dispatchAction);\r\n      } else if (payload.seriesIndex != null) {\r\n        if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\r\n          return;\r\n        }\r\n\r\n        var pointInfo = findPointFromSeries(payload, ecModel);\r\n        var cx = pointInfo.point[0];\r\n        var cy = pointInfo.point[1];\r\n\r\n        if (cx != null && cy != null) {\r\n          this._tryShow({\r\n            offsetX: cx,\r\n            offsetY: cy,\r\n            position: payload.position,\r\n            target: pointInfo.el\r\n          }, dispatchAction);\r\n        }\r\n      } else if (payload.x != null && payload.y != null) {\r\n        // FIXME\r\n        // should wrap dispatchAction like `axisPointer/globalListener` ?\r\n        api.dispatchAction({\r\n          type: 'updateAxisPointer',\r\n          x: payload.x,\r\n          y: payload.y\r\n        });\r\n\r\n        this._tryShow({\r\n          offsetX: payload.x,\r\n          offsetY: payload.y,\r\n          position: payload.position,\r\n          target: api.getZr().findHover(payload.x, payload.y).target\r\n        }, dispatchAction);\r\n      }\r\n    };\r\n\r\n    TooltipView.prototype.manuallyHideTip = function (tooltipModel, ecModel, api, payload) {\r\n      var tooltipContent = this._tooltipContent;\r\n\r\n      if (!this._alwaysShowContent && this._tooltipModel) {\r\n        tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\r\n      }\r\n\r\n      this._lastX = this._lastY = this._lastDataByCoordSys = null;\r\n\r\n      if (payload.from !== this.uid) {\r\n        this._hide(makeDispatchAction$1(payload, api));\r\n      }\r\n    }; // Be compatible with previous design, that is, when tooltip.type is 'axis' and\r\n    // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\r\n    // and tooltip.\r\n\r\n\r\n    TooltipView.prototype._manuallyAxisShowTip = function (tooltipModel, ecModel, api, payload) {\r\n      var seriesIndex = payload.seriesIndex;\r\n      var dataIndex = payload.dataIndex; // @ts-ignore\r\n\r\n      var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\r\n\r\n      if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\r\n        return;\r\n      }\r\n\r\n      var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\r\n\r\n      if (!seriesModel) {\r\n        return;\r\n      }\r\n\r\n      var data = seriesModel.getData();\r\n      var tooltipCascadedModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\r\n\r\n      if (tooltipCascadedModel.get('trigger') !== 'axis') {\r\n        return;\r\n      }\r\n\r\n      api.dispatchAction({\r\n        type: 'updateAxisPointer',\r\n        seriesIndex: seriesIndex,\r\n        dataIndex: dataIndex,\r\n        position: payload.position\r\n      });\r\n      return true;\r\n    };\r\n\r\n    TooltipView.prototype._tryShow = function (e, dispatchAction) {\r\n      var el = e.target;\r\n      var tooltipModel = this._tooltipModel;\r\n\r\n      if (!tooltipModel) {\r\n        return;\r\n      } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\r\n\r\n\r\n      this._lastX = e.offsetX;\r\n      this._lastY = e.offsetY;\r\n      var dataByCoordSys = e.dataByCoordSys;\r\n\r\n      if (dataByCoordSys && dataByCoordSys.length) {\r\n        this._showAxisTooltip(dataByCoordSys, e);\r\n      } // Always show item tooltip if mouse is on the element with dataIndex\r\n      else if (el && findEventDispatcher(el, function (target) {\r\n          return getECData(target).dataIndex != null;\r\n        }, true)) {\r\n          this._lastDataByCoordSys = null;\r\n\r\n          this._showSeriesItemTooltip(e, el, dispatchAction);\r\n        } // Tooltip provided directly. Like legend.\r\n        else if (el && el.tooltip) {\r\n            this._lastDataByCoordSys = null;\r\n\r\n            this._showComponentItemTooltip(e, el, dispatchAction);\r\n          } else {\r\n            this._lastDataByCoordSys = null;\r\n\r\n            this._hide(dispatchAction);\r\n          }\r\n    };\r\n\r\n    TooltipView.prototype._showOrMove = function (tooltipModel, cb) {\r\n      // showDelay is used in this case: tooltip.enterable is set\r\n      // as true. User intent to move mouse into tooltip and click\r\n      // something. `showDelay` makes it easier to enter the content\r\n      // but tooltip do not move immediately.\r\n      var delay = tooltipModel.get('showDelay');\r\n      cb = bind(cb, this);\r\n      clearTimeout(this._showTimout);\r\n      delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\r\n    };\r\n\r\n    TooltipView.prototype._showAxisTooltip = function (dataByCoordSys, e) {\r\n      var ecModel = this._ecModel;\r\n      var globalTooltipModel = this._tooltipModel;\r\n      var point = [e.offsetX, e.offsetY];\r\n      var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\r\n      var renderMode = this._renderMode;\r\n      var cbParamsList = [];\r\n      var articleMarkup = createTooltipMarkup('section', {\r\n        blocks: [],\r\n        noHeader: true\r\n      }); // Only for legacy: `Serise['formatTooltip']` returns a string.\r\n\r\n      var markupTextArrLegacy = [];\r\n      var markupStyleCreator = new TooltipMarkupStyleCreator();\r\n      each$6(dataByCoordSys, function (itemCoordSys) {\r\n        each$6(itemCoordSys.dataByAxis, function (axisItem) {\r\n          var axisModel = ecModel.getComponent(axisItem.axisDim + 'Axis', axisItem.axisIndex);\r\n          var axisValue = axisItem.value;\r\n\r\n          if (!axisModel || axisValue == null) {\r\n            return;\r\n          }\r\n\r\n          var axisValueLabel = getValueLabel(axisValue, axisModel.axis, ecModel, axisItem.seriesDataIndices, axisItem.valueLabelOpt);\r\n          var axisSectionMarkup = createTooltipMarkup('section', {\r\n            header: axisValueLabel,\r\n            noHeader: !trim(axisValueLabel),\r\n            sortBlocks: true,\r\n            blocks: []\r\n          });\r\n          articleMarkup.blocks.push(axisSectionMarkup);\r\n          each$1(axisItem.seriesDataIndices, function (idxItem) {\r\n            var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\r\n            var dataIndex = idxItem.dataIndexInside;\r\n            var cbParams = series.getDataParams(dataIndex);\r\n            cbParams.axisDim = axisItem.axisDim;\r\n            cbParams.axisIndex = axisItem.axisIndex;\r\n            cbParams.axisType = axisItem.axisType;\r\n            cbParams.axisId = axisItem.axisId;\r\n            cbParams.axisValue = getAxisRawValue(axisModel.axis, {\r\n              value: axisValue\r\n            });\r\n            cbParams.axisValueLabel = axisValueLabel; // Pre-create marker style for makers. Users can assemble richText\r\n            // text in `formatter` callback and use those markers style.\r\n\r\n            cbParams.marker = markupStyleCreator.makeTooltipMarker('item', convertToColorString(cbParams.color), renderMode);\r\n            var seriesTooltipResult = normalizeTooltipFormatResult(series.formatTooltip(dataIndex, true, null));\r\n\r\n            if (seriesTooltipResult.markupFragment) {\r\n              axisSectionMarkup.blocks.push(seriesTooltipResult.markupFragment);\r\n            }\r\n\r\n            if (seriesTooltipResult.markupText) {\r\n              markupTextArrLegacy.push(seriesTooltipResult.markupText);\r\n            }\r\n\r\n            cbParamsList.push(cbParams);\r\n          });\r\n        });\r\n      }); // In most cases, the second axis is displays upper on the first one.\r\n      // So we reverse it to look better.\r\n\r\n      articleMarkup.blocks.reverse();\r\n      markupTextArrLegacy.reverse();\r\n      var positionExpr = e.position;\r\n      var orderMode = singleTooltipModel.get('order');\r\n      var builtMarkupText = buildTooltipMarkup(articleMarkup, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), singleTooltipModel.get('textStyle'));\r\n      builtMarkupText && markupTextArrLegacy.unshift(builtMarkupText);\r\n      var blockBreak = renderMode === 'richText' ? '\\n\\n' : '<br/>';\r\n      var allMarkupText = markupTextArrLegacy.join(blockBreak);\r\n\r\n      this._showOrMove(singleTooltipModel, function () {\r\n        if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\r\n          this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, cbParamsList);\r\n        } else {\r\n          this._showTooltipContent(singleTooltipModel, allMarkupText, cbParamsList, Math.random() + '', point[0], point[1], positionExpr, null, markupStyleCreator);\r\n        }\r\n      }); // Do not trigger events here, because this branch only be entered\r\n      // from dispatchAction.\r\n\r\n    };\r\n\r\n    TooltipView.prototype._showSeriesItemTooltip = function (e, el, dispatchAction) {\r\n      var dispatcher = findEventDispatcher(el, function (target) {\r\n        return getECData(target).dataIndex != null;\r\n      }, true);\r\n      var ecModel = this._ecModel;\r\n      var ecData = getECData(dispatcher); // Use dataModel in element if possible\r\n      // Used when mouseover on a element like markPoint or edge\r\n      // In which case, the data is not main data in series.\r\n\r\n      var seriesIndex = ecData.seriesIndex;\r\n      var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\r\n\r\n      var dataModel = ecData.dataModel || seriesModel;\r\n      var dataIndex = ecData.dataIndex;\r\n      var dataType = ecData.dataType;\r\n      var data = dataModel.getData(dataType);\r\n      var renderMode = this._renderMode;\r\n      var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\r\n      var tooltipTrigger = tooltipModel.get('trigger');\r\n\r\n      if (tooltipTrigger != null && tooltipTrigger !== 'item') {\r\n        return;\r\n      }\r\n\r\n      var params = dataModel.getDataParams(dataIndex, dataType);\r\n      var markupStyleCreator = new TooltipMarkupStyleCreator(); // Pre-create marker style for makers. Users can assemble richText\r\n      // text in `formatter` callback and use those markers style.\r\n\r\n      params.marker = markupStyleCreator.makeTooltipMarker('item', convertToColorString(params.color), renderMode);\r\n      var seriesTooltipResult = normalizeTooltipFormatResult(dataModel.formatTooltip(dataIndex, false, dataType));\r\n      var orderMode = tooltipModel.get('order');\r\n      var markupText = seriesTooltipResult.markupFragment ? buildTooltipMarkup(seriesTooltipResult.markupFragment, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), tooltipModel.get('textStyle')) : seriesTooltipResult.markupText;\r\n      var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\r\n\r\n      this._showOrMove(tooltipModel, function () {\r\n        this._showTooltipContent(tooltipModel, markupText, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markupStyleCreator);\r\n      }); // FIXME\r\n      // duplicated showtip if manuallyShowTip is called from dispatchAction.\r\n\r\n\r\n      dispatchAction({\r\n        type: 'showTip',\r\n        dataIndexInside: dataIndex,\r\n        dataIndex: data.getRawIndex(dataIndex),\r\n        seriesIndex: seriesIndex,\r\n        from: this.uid\r\n      });\r\n    };\r\n\r\n    TooltipView.prototype._showComponentItemTooltip = function (e, el, dispatchAction) {\r\n      var tooltipOpt = el.tooltip;\r\n\r\n      if (isString(tooltipOpt)) {\r\n        var content = tooltipOpt;\r\n        tooltipOpt = {\r\n          content: content,\r\n          // Fixed formatter\r\n          formatter: content\r\n        };\r\n      }\r\n\r\n      var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\r\n      var defaultHtml = subTooltipModel.get('content');\r\n      var asyncTicket = Math.random() + ''; // PENDING: this case do not support richText style yet.\r\n\r\n      var markupStyleCreator = new TooltipMarkupStyleCreator(); // Do not check whether `trigger` is 'none' here, because `trigger`\r\n      // only works on coordinate system. In fact, we have not found case\r\n      // that requires setting `trigger` nothing on component yet.\r\n\r\n      this._showOrMove(subTooltipModel, function () {\r\n        this._showTooltipContent( // Use formatterParams from element defined in component\r\n        subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el, markupStyleCreator);\r\n      }); // If not dispatch showTip, tip may be hide triggered by axis.\r\n\r\n\r\n      dispatchAction({\r\n        type: 'showTip',\r\n        from: this.uid\r\n      });\r\n    };\r\n\r\n    TooltipView.prototype._showTooltipContent = function ( // Use Model<TooltipOption> insteadof TooltipModel because this model may be from series or other options.\r\n    // Instead of top level tooltip.\r\n    tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markupStyleCreator) {\r\n      // Reset ticket\r\n      this._ticket = '';\r\n\r\n      if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\r\n        return;\r\n      }\r\n\r\n      var tooltipContent = this._tooltipContent;\r\n      var formatter = tooltipModel.get('formatter');\r\n      positionExpr = positionExpr || tooltipModel.get('position');\r\n      var html = defaultHtml;\r\n\r\n      var nearPoint = this._getNearestPoint([x, y], params, tooltipModel.get('trigger'), tooltipModel.get('borderColor'));\r\n\r\n      if (formatter && isString(formatter)) {\r\n        var useUTC = tooltipModel.ecModel.get('useUTC');\r\n        var params0 = isArray(params) ? params[0] : params;\r\n        var isTimeAxis = params0 && params0.axisType && params0.axisType.indexOf('time') >= 0;\r\n        html = formatter;\r\n\r\n        if (isTimeAxis) {\r\n          html = format(params0.axisValue, html, useUTC);\r\n        }\r\n\r\n        html = formatTpl(html, params, true);\r\n      } else if (isFunction$1(formatter)) {\r\n        var callback = bind$2(function (cbTicket, html) {\r\n          if (cbTicket === this._ticket) {\r\n            tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPoint.color, positionExpr);\r\n\r\n            this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\r\n          }\r\n        }, this);\r\n        this._ticket = asyncTicket;\r\n        html = formatter(params, asyncTicket, callback);\r\n      }\r\n\r\n      tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPoint.color, positionExpr);\r\n      tooltipContent.show(tooltipModel, nearPoint.color);\r\n\r\n      this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\r\n    };\r\n\r\n    TooltipView.prototype._getNearestPoint = function (point, tooltipDataParams, trigger, borderColor) {\r\n      if (trigger === 'axis' || isArray(tooltipDataParams)) {\r\n        return {\r\n          color: borderColor || (this._renderMode === 'html' ? '#fff' : 'none')\r\n        };\r\n      }\r\n\r\n      if (!isArray(tooltipDataParams)) {\r\n        return {\r\n          color: borderColor || tooltipDataParams.color || tooltipDataParams.borderColor\r\n        };\r\n      }\r\n    };\r\n\r\n    TooltipView.prototype._updatePosition = function (tooltipModel, positionExpr, x, // Mouse x\r\n    y, // Mouse y\r\n    content, params, el) {\r\n      var viewWidth = this._api.getWidth();\r\n\r\n      var viewHeight = this._api.getHeight();\r\n\r\n      positionExpr = positionExpr || tooltipModel.get('position');\r\n      var contentSize = content.getSize();\r\n      var align = tooltipModel.get('align');\r\n      var vAlign = tooltipModel.get('verticalAlign');\r\n      var rect = el && el.getBoundingRect().clone();\r\n      el && rect.applyTransform(el.transform);\r\n\r\n      if (isFunction$1(positionExpr)) {\r\n        // Callback of position can be an array or a string specify the position\r\n        positionExpr = positionExpr([x, y], params, content.el, rect, {\r\n          viewSize: [viewWidth, viewHeight],\r\n          contentSize: contentSize.slice()\r\n        });\r\n      }\r\n\r\n      if (isArray(positionExpr)) {\r\n        x = parsePercent$3(positionExpr[0], viewWidth);\r\n        y = parsePercent$3(positionExpr[1], viewHeight);\r\n      } else if (isObject$1(positionExpr)) {\r\n        var boxLayoutPosition = positionExpr;\r\n        boxLayoutPosition.width = contentSize[0];\r\n        boxLayoutPosition.height = contentSize[1];\r\n        var layoutRect = getLayoutRect(boxLayoutPosition, {\r\n          width: viewWidth,\r\n          height: viewHeight\r\n        });\r\n        x = layoutRect.x;\r\n        y = layoutRect.y;\r\n        align = null; // When positionExpr is left/top/right/bottom,\r\n        // align and verticalAlign will not work.\r\n\r\n        vAlign = null;\r\n      } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\r\n      else if (isString(positionExpr) && el) {\r\n          var pos = calcTooltipPosition(positionExpr, rect, contentSize);\r\n          x = pos[0];\r\n          y = pos[1];\r\n        } else {\r\n          var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\r\n          x = pos[0];\r\n          y = pos[1];\r\n        }\r\n\r\n      align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\r\n      vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\r\n\r\n      if (shouldTooltipConfine(tooltipModel)) {\r\n        var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\r\n        x = pos[0];\r\n        y = pos[1];\r\n      }\r\n\r\n      content.moveTo(x, y);\r\n    }; // FIXME\r\n    // Should we remove this but leave this to user?\r\n\r\n\r\n    TooltipView.prototype._updateContentNotChangedOnAxis = function (dataByCoordSys) {\r\n      var lastCoordSys = this._lastDataByCoordSys;\r\n      var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\r\n      contentNotChanged && each$6(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\r\n        var lastDataByAxis = lastItemCoordSys.dataByAxis || [];\r\n        var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\r\n        var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\r\n        contentNotChanged = contentNotChanged && lastDataByAxis.length === thisDataByAxis.length;\r\n        contentNotChanged && each$6(lastDataByAxis, function (lastItem, indexAxis) {\r\n          var thisItem = thisDataByAxis[indexAxis] || {};\r\n          var lastIndices = lastItem.seriesDataIndices || [];\r\n          var newIndices = thisItem.seriesDataIndices || [];\r\n          contentNotChanged = contentNotChanged && lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\r\n          contentNotChanged && each$6(lastIndices, function (lastIdxItem, j) {\r\n            var newIdxItem = newIndices[j];\r\n            contentNotChanged = contentNotChanged && lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\r\n          });\r\n        });\r\n      });\r\n      this._lastDataByCoordSys = dataByCoordSys;\r\n      return !!contentNotChanged;\r\n    };\r\n\r\n    TooltipView.prototype._hide = function (dispatchAction) {\r\n      // Do not directly hideLater here, because this behavior may be prevented\r\n      // in dispatchAction when showTip is dispatched.\r\n      // FIXME\r\n      // duplicated hideTip if manuallyHideTip is called from dispatchAction.\r\n      this._lastDataByCoordSys = null;\r\n      dispatchAction({\r\n        type: 'hideTip',\r\n        from: this.uid\r\n      });\r\n    };\r\n\r\n    TooltipView.prototype.dispose = function (ecModel, api) {\r\n      if (env.node) {\r\n        return;\r\n      }\r\n\r\n      this._tooltipContent.dispose();\r\n\r\n      unregister('itemTooltip', api);\r\n    };\r\n\r\n    TooltipView.type = 'tooltip';\r\n    return TooltipView;\r\n  }(ComponentView);\r\n  /**\r\n   * From top to bottom. (the last one should be globalTooltipModel);\r\n   */\r\n\r\n\r\n  function buildTooltipModel(modelCascade) {\r\n    // Last is always tooltip model.\r\n    var resultModel = modelCascade.pop();\r\n\r\n    while (modelCascade.length) {\r\n      var tooltipOpt = modelCascade.pop();\r\n\r\n      if (tooltipOpt) {\r\n        if (tooltipOpt instanceof Model) {\r\n          tooltipOpt = tooltipOpt.get('tooltip', true);\r\n        } // In each data item tooltip can be simply write:\r\n        // {\r\n        //  value: 10,\r\n        //  tooltip: 'Something you need to know'\r\n        // }\r\n\r\n\r\n        if (isString(tooltipOpt)) {\r\n          tooltipOpt = {\r\n            formatter: tooltipOpt\r\n          };\r\n        }\r\n\r\n        resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\r\n      }\r\n    }\r\n\r\n    return resultModel;\r\n  }\r\n\r\n  function makeDispatchAction$1(payload, api) {\r\n    return payload.dispatchAction || bind(api.dispatchAction, api);\r\n  }\r\n\r\n  function refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\r\n    var size = content.getOuterSize();\r\n    var width = size.width;\r\n    var height = size.height;\r\n\r\n    if (gapH != null) {\r\n      // Add extra 2 pixels for this case:\r\n      // At present the \"values\" in defaut tooltip are using CSS `float: right`.\r\n      // When the right edge of the tooltip box is on the right side of the\r\n      // viewport, the `float` layout might push the \"values\" to the second line.\r\n      if (x + width + gapH + 2 > viewWidth) {\r\n        x -= width + gapH;\r\n      } else {\r\n        x += gapH;\r\n      }\r\n    }\r\n\r\n    if (gapV != null) {\r\n      if (y + height + gapV > viewHeight) {\r\n        y -= height + gapV;\r\n      } else {\r\n        y += gapV;\r\n      }\r\n    }\r\n\r\n    return [x, y];\r\n  }\r\n\r\n  function confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\r\n    var size = content.getOuterSize();\r\n    var width = size.width;\r\n    var height = size.height;\r\n    x = Math.min(x + width, viewWidth) - width;\r\n    y = Math.min(y + height, viewHeight) - height;\r\n    x = Math.max(x, 0);\r\n    y = Math.max(y, 0);\r\n    return [x, y];\r\n  }\r\n\r\n  function calcTooltipPosition(position, rect, contentSize) {\r\n    var domWidth = contentSize[0];\r\n    var domHeight = contentSize[1];\r\n    var gap = 10;\r\n    var offset = 5;\r\n    var x = 0;\r\n    var y = 0;\r\n    var rectWidth = rect.width;\r\n    var rectHeight = rect.height;\r\n\r\n    switch (position) {\r\n      case 'inside':\r\n        x = rect.x + rectWidth / 2 - domWidth / 2;\r\n        y = rect.y + rectHeight / 2 - domHeight / 2;\r\n        break;\r\n\r\n      case 'top':\r\n        x = rect.x + rectWidth / 2 - domWidth / 2;\r\n        y = rect.y - domHeight - gap;\r\n        break;\r\n\r\n      case 'bottom':\r\n        x = rect.x + rectWidth / 2 - domWidth / 2;\r\n        y = rect.y + rectHeight + gap;\r\n        break;\r\n\r\n      case 'left':\r\n        x = rect.x - domWidth - gap - offset;\r\n        y = rect.y + rectHeight / 2 - domHeight / 2;\r\n        break;\r\n\r\n      case 'right':\r\n        x = rect.x + rectWidth + gap + offset;\r\n        y = rect.y + rectHeight / 2 - domHeight / 2;\r\n    }\r\n\r\n    return [x, y];\r\n  }\r\n\r\n  function isCenterAlign(align) {\r\n    return align === 'center' || align === 'middle';\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function install$9(registers) {\r\n    use(install$5);\r\n    registers.registerComponentModel(TooltipModel);\r\n    registers.registerComponentView(TooltipView);\r\n    /**\r\n     * @action\r\n     * @property {string} type\r\n     * @property {number} seriesIndex\r\n     * @property {number} dataIndex\r\n     * @property {number} [x]\r\n     * @property {number} [y]\r\n     */\r\n\r\n    registers.registerAction({\r\n      type: 'showTip',\r\n      event: 'showTip',\r\n      update: 'tooltip:manuallyShowTip'\r\n    }, // noop\r\n    function () {});\r\n    registers.registerAction({\r\n      type: 'hideTip',\r\n      event: 'hideTip',\r\n      update: 'tooltip:manuallyHideTip'\r\n    }, // noop\r\n    function () {});\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  use(install$9);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  function fillLabel(opt) {\r\n    defaultEmphasis(opt, 'label', ['show']);\r\n  } // { [componentType]: MarkerModel }\r\n\r\n\r\n  var inner$11 = makeInner();\r\n\r\n  var MarkerModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(MarkerModel, _super);\r\n\r\n    function MarkerModel() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = MarkerModel.type;\r\n      /**\r\n       * If marker model is created by self from series\r\n       */\r\n\r\n      _this.createdBySelf = false;\r\n      return _this;\r\n    }\r\n    /**\r\n     * @overrite\r\n     */\r\n\r\n\r\n    MarkerModel.prototype.init = function (option, parentModel, ecModel) {\r\n      {\r\n        if (this.type === 'marker') {\r\n          throw new Error('Marker component is abstract component. Use markLine, markPoint, markArea instead.');\r\n        }\r\n      }\r\n      this.mergeDefaultAndTheme(option, ecModel);\r\n\r\n      this._mergeOption(option, ecModel, false, true);\r\n    };\r\n\r\n    MarkerModel.prototype.isAnimationEnabled = function () {\r\n      if (env.node) {\r\n        return false;\r\n      }\r\n\r\n      var hostSeries = this.__hostSeries;\r\n      return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\r\n    };\r\n    /**\r\n     * @overrite\r\n     */\r\n\r\n\r\n    MarkerModel.prototype.mergeOption = function (newOpt, ecModel) {\r\n      this._mergeOption(newOpt, ecModel, false, false);\r\n    };\r\n\r\n    MarkerModel.prototype._mergeOption = function (newOpt, ecModel, createdBySelf, isInit) {\r\n      var componentType = this.mainType;\r\n\r\n      if (!createdBySelf) {\r\n        ecModel.eachSeries(function (seriesModel) {\r\n          // mainType can be markPoint, markLine, markArea\r\n          var markerOpt = seriesModel.get(this.mainType, true);\r\n          var markerModel = inner$11(seriesModel)[componentType];\r\n\r\n          if (!markerOpt || !markerOpt.data) {\r\n            inner$11(seriesModel)[componentType] = null;\r\n            return;\r\n          }\r\n\r\n          if (!markerModel) {\r\n            if (isInit) {\r\n              // Default label emphasis `position` and `show`\r\n              fillLabel(markerOpt);\r\n            }\r\n\r\n            each$1(markerOpt.data, function (item) {\r\n              // FIXME Overwrite fillLabel method ?\r\n              if (item instanceof Array) {\r\n                fillLabel(item[0]);\r\n                fillLabel(item[1]);\r\n              } else {\r\n                fillLabel(item);\r\n              }\r\n            });\r\n            markerModel = this.createMarkerModelFromSeries(markerOpt, this, ecModel); // markerModel = new ImplementedMarkerModel(\r\n            //     markerOpt, this, ecModel\r\n            // );\r\n\r\n            extend(markerModel, {\r\n              mainType: this.mainType,\r\n              // Use the same series index and name\r\n              seriesIndex: seriesModel.seriesIndex,\r\n              name: seriesModel.name,\r\n              createdBySelf: true\r\n            });\r\n            markerModel.__hostSeries = seriesModel;\r\n          } else {\r\n            markerModel._mergeOption(markerOpt, ecModel, true);\r\n          }\r\n\r\n          inner$11(seriesModel)[componentType] = markerModel;\r\n        }, this);\r\n      }\r\n    };\r\n\r\n    MarkerModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\r\n      var data = this.getData();\r\n      var value = this.getRawValue(dataIndex);\r\n      var itemName = data.getName(dataIndex);\r\n      return createTooltipMarkup('section', {\r\n        header: this.name,\r\n        blocks: [createTooltipMarkup('nameValue', {\r\n          name: itemName,\r\n          value: value,\r\n          noName: !itemName,\r\n          noValue: value == null\r\n        })]\r\n      });\r\n    };\r\n\r\n    MarkerModel.prototype.getData = function () {\r\n      return this._data;\r\n    };\r\n\r\n    MarkerModel.prototype.setData = function (data) {\r\n      this._data = data;\r\n    };\r\n\r\n    MarkerModel.getMarkerModelFromSeries = function (seriesModel, // Support three types of markers. Strict check.\r\n    componentType) {\r\n      return inner$11(seriesModel)[componentType];\r\n    };\r\n\r\n    MarkerModel.type = 'marker';\r\n    MarkerModel.dependencies = ['series', 'grid', 'polar', 'geo'];\r\n    return MarkerModel;\r\n  }(ComponentModel);\r\n\r\n  mixin(MarkerModel, DataFormatMixin.prototype);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var MarkPointModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(MarkPointModel, _super);\r\n\r\n    function MarkPointModel() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = MarkPointModel.type;\r\n      return _this;\r\n    }\r\n\r\n    MarkPointModel.prototype.createMarkerModelFromSeries = function (markerOpt, masterMarkerModel, ecModel) {\r\n      return new MarkPointModel(markerOpt, masterMarkerModel, ecModel);\r\n    };\r\n\r\n    MarkPointModel.type = 'markPoint';\r\n    MarkPointModel.defaultOption = {\r\n      zlevel: 0,\r\n      z: 5,\r\n      symbol: 'pin',\r\n      symbolSize: 50,\r\n      //symbolRotate: 0,\r\n      //symbolOffset: [0, 0]\r\n      tooltip: {\r\n        trigger: 'item'\r\n      },\r\n      label: {\r\n        show: true,\r\n        position: 'inside'\r\n      },\r\n      itemStyle: {\r\n        borderWidth: 2\r\n      },\r\n      emphasis: {\r\n        label: {\r\n          show: true\r\n        }\r\n      }\r\n    };\r\n    return MarkPointModel;\r\n  }(MarkerModel);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function hasXOrY(item) {\r\n    return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\r\n  }\r\n\r\n  function hasXAndY(item) {\r\n    return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\r\n  } // Make it simple, do not visit all stacked value to count precision.\r\n  // function getPrecision(data, valueAxisDim, dataIndex) {\r\n  //     let precision = -1;\r\n  //     let stackedDim = data.mapDimension(valueAxisDim);\r\n  //     do {\r\n  //         precision = Math.max(\r\n  //             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\r\n  //             precision\r\n  //         );\r\n  //         let stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\r\n  //         if (stackedOnSeries) {\r\n  //             let byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\r\n  //             data = stackedOnSeries.getData();\r\n  //             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\r\n  //             stackedDim = data.getCalculationInfo('stackedDimension');\r\n  //         }\r\n  //         else {\r\n  //             data = null;\r\n  //         }\r\n  //     } while (data);\r\n  //     return precision;\r\n  // }\r\n\r\n\r\n  function markerTypeCalculatorWithExtent(markerType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\r\n    var coordArr = [];\r\n    var stacked = isDimensionStacked(data, targetDataDim\r\n    /*, otherDataDim*/\r\n    );\r\n    var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\r\n    var value = numCalculate(data, calcDataDim, markerType);\r\n    var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\r\n    coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\r\n    coordArr[targetCoordIndex] = data.get(calcDataDim, dataIndex);\r\n    var coordArrValue = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\r\n\r\n    var precision = getPrecision(data.get(targetDataDim, dataIndex));\r\n    precision = Math.min(precision, 20);\r\n\r\n    if (precision >= 0) {\r\n      coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\r\n    }\r\n\r\n    return [coordArr, coordArrValue];\r\n  } // TODO Specified percent\r\n\r\n\r\n  var markerTypeCalculator = {\r\n    min: curry(markerTypeCalculatorWithExtent, 'min'),\r\n    max: curry(markerTypeCalculatorWithExtent, 'max'),\r\n    average: curry(markerTypeCalculatorWithExtent, 'average'),\r\n    median: curry(markerTypeCalculatorWithExtent, 'median')\r\n  };\r\n  /**\r\n   * Transform markPoint data item to format used in List by do the following\r\n   * 1. Calculate statistic like `max`, `min`, `average`\r\n   * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\r\n   * @param  {module:echarts/model/Series} seriesModel\r\n   * @param  {module:echarts/coord/*} [coordSys]\r\n   * @param  {Object} item\r\n   * @return {Object}\r\n   */\r\n\r\n  function dataTransform(seriesModel, item) {\r\n    var data = seriesModel.getData();\r\n    var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\r\n    // 2. If `coord` is not a data array. Which uses `xAxis`,\r\n    // `yAxis` to specify the coord on each dimension\r\n    // parseFloat first because item.x and item.y can be percent string like '20%'\r\n\r\n    if (item && !hasXAndY(item) && !isArray(item.coord) && coordSys) {\r\n      var dims = coordSys.dimensions;\r\n      var axisInfo = getAxisInfo$1(item, data, coordSys, seriesModel); // Clone the option\r\n      // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\r\n\r\n      item = clone(item);\r\n\r\n      if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\r\n        var otherCoordIndex = indexOf$1(dims, axisInfo.baseAxis.dim);\r\n        var targetCoordIndex = indexOf$1(dims, axisInfo.valueAxis.dim);\r\n        var coordInfo = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex);\r\n        item.coord = coordInfo[0]; // Force to use the value of calculated value.\r\n        // let item use the value without stack.\r\n\r\n        item.value = coordInfo[1];\r\n      } else {\r\n        // FIXME Only has one of xAxis and yAxis.\r\n        var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\r\n\r\n        for (var i = 0; i < 2; i++) {\r\n          if (markerTypeCalculator[coord[i]]) {\r\n            coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\r\n          }\r\n        }\r\n\r\n        item.coord = coord;\r\n      }\r\n    }\r\n\r\n    return item;\r\n  }\r\n\r\n  function getAxisInfo$1(item, data, coordSys, seriesModel) {\r\n    var ret = {};\r\n\r\n    if (item.valueIndex != null || item.valueDim != null) {\r\n      ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\r\n      ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\r\n      ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\r\n      ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\r\n    } else {\r\n      ret.baseAxis = seriesModel.getBaseAxis();\r\n      ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\r\n      ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\r\n      ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  function dataDimToCoordDim(seriesModel, dataDim) {\r\n    var data = seriesModel.getData();\r\n    var dimensions = data.dimensions;\r\n    dataDim = data.getDimension(dataDim);\r\n\r\n    for (var i = 0; i < dimensions.length; i++) {\r\n      var dimItem = data.getDimensionInfo(dimensions[i]);\r\n\r\n      if (dimItem.name === dataDim) {\r\n        return dimItem.coordDim;\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Filter data which is out of coordinateSystem range\r\n   * [dataFilter description]\r\n   */\r\n\r\n\r\n  function dataFilter( // Currently only polar and cartesian has containData.\r\n  coordSys, item) {\r\n    // Alwalys return true if there is no coordSys\r\n    return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\r\n  }\r\n\r\n  function dimValueGetter(item, dimName, dataIndex, dimIndex) {\r\n    // x, y, radius, angle\r\n    if (dimIndex < 2) {\r\n      return item.coord && item.coord[dimIndex];\r\n    }\r\n\r\n    return item.value;\r\n  }\r\n\r\n  function numCalculate(data, valueDataDim, type) {\r\n    if (type === 'average') {\r\n      var sum_1 = 0;\r\n      var count_1 = 0;\r\n      data.each(valueDataDim, function (val, idx) {\r\n        if (!isNaN(val)) {\r\n          sum_1 += val;\r\n          count_1++;\r\n        }\r\n      });\r\n      return sum_1 / count_1;\r\n    } else if (type === 'median') {\r\n      return data.getMedian(valueDataDim);\r\n    } else {\r\n      // max & min\r\n      return data.getDataExtent(valueDataDim)[type === 'max' ? 1 : 0];\r\n    }\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var inner$12 = makeInner();\r\n\r\n  var MarkerView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(MarkerView, _super);\r\n\r\n    function MarkerView() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = MarkerView.type;\r\n      return _this;\r\n    }\r\n\r\n    MarkerView.prototype.init = function () {\r\n      this.markerGroupMap = createHashMap();\r\n    };\r\n\r\n    MarkerView.prototype.render = function (markerModel, ecModel, api) {\r\n      var _this = this;\r\n\r\n      var markerGroupMap = this.markerGroupMap;\r\n      markerGroupMap.each(function (item) {\r\n        inner$12(item).keep = false;\r\n      });\r\n      ecModel.eachSeries(function (seriesModel) {\r\n        var markerModel = MarkerModel.getMarkerModelFromSeries(seriesModel, _this.type);\r\n        markerModel && _this.renderSeries(seriesModel, markerModel, ecModel, api);\r\n      });\r\n      markerGroupMap.each(function (item) {\r\n        !inner$12(item).keep && _this.group.remove(item.group);\r\n      });\r\n    };\r\n\r\n    MarkerView.prototype.markKeep = function (drawGroup) {\r\n      inner$12(drawGroup).keep = true;\r\n    };\r\n\r\n    MarkerView.prototype.blurSeries = function (seriesModelList) {\r\n      var _this = this;\r\n\r\n      each$1(seriesModelList, function (seriesModel) {\r\n        var markerModel = MarkerModel.getMarkerModelFromSeries(seriesModel, _this.type);\r\n\r\n        if (markerModel) {\r\n          var data = markerModel.getData();\r\n          data.eachItemGraphicEl(function (el) {\r\n            if (el) {\r\n              enterBlur(el);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    };\r\n\r\n    MarkerView.type = 'marker';\r\n    return MarkerView;\r\n  }(ComponentView);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function updateMarkerLayout(mpData, seriesModel, api) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    mpData.each(function (idx) {\r\n      var itemModel = mpData.getItemModel(idx);\r\n      var point;\r\n      var xPx = parsePercent$1(itemModel.get('x'), api.getWidth());\r\n      var yPx = parsePercent$1(itemModel.get('y'), api.getHeight());\r\n\r\n      if (!isNaN(xPx) && !isNaN(yPx)) {\r\n        point = [xPx, yPx];\r\n      } // Chart like bar may have there own marker positioning logic\r\n      else if (seriesModel.getMarkerPosition) {\r\n          // Use the getMarkerPoisition\r\n          point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\r\n        } else if (coordSys) {\r\n          var x = mpData.get(coordSys.dimensions[0], idx);\r\n          var y = mpData.get(coordSys.dimensions[1], idx);\r\n          point = coordSys.dataToPoint([x, y]);\r\n        } // Use x, y if has any\r\n\r\n\r\n      if (!isNaN(xPx)) {\r\n        point[0] = xPx;\r\n      }\r\n\r\n      if (!isNaN(yPx)) {\r\n        point[1] = yPx;\r\n      }\r\n\r\n      mpData.setItemLayout(idx, point);\r\n    });\r\n  }\r\n\r\n  var MarkPointView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(MarkPointView, _super);\r\n\r\n    function MarkPointView() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = MarkPointView.type;\r\n      return _this;\r\n    }\r\n\r\n    MarkPointView.prototype.updateTransform = function (markPointModel, ecModel, api) {\r\n      ecModel.eachSeries(function (seriesModel) {\r\n        var mpModel = MarkerModel.getMarkerModelFromSeries(seriesModel, 'markPoint');\r\n\r\n        if (mpModel) {\r\n          updateMarkerLayout(mpModel.getData(), seriesModel, api);\r\n          this.markerGroupMap.get(seriesModel.id).updateLayout();\r\n        }\r\n      }, this);\r\n    };\r\n\r\n    MarkPointView.prototype.renderSeries = function (seriesModel, mpModel, ecModel, api) {\r\n      var coordSys = seriesModel.coordinateSystem;\r\n      var seriesId = seriesModel.id;\r\n      var seriesData = seriesModel.getData();\r\n      var symbolDrawMap = this.markerGroupMap;\r\n      var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\r\n      var mpData = createList$1(coordSys, seriesModel, mpModel); // FIXME\r\n\r\n      mpModel.setData(mpData);\r\n      updateMarkerLayout(mpModel.getData(), seriesModel, api);\r\n      mpData.each(function (idx) {\r\n        var itemModel = mpData.getItemModel(idx);\r\n        var symbol = itemModel.getShallow('symbol');\r\n        var symbolSize = itemModel.getShallow('symbolSize');\r\n        var symbolRotate = itemModel.getShallow('symbolRotate');\r\n\r\n        if (isFunction$1(symbol) || isFunction$1(symbolSize) || isFunction$1(symbolRotate)) {\r\n          var rawIdx = mpModel.getRawValue(idx);\r\n          var dataParams = mpModel.getDataParams(idx);\r\n\r\n          if (isFunction$1(symbol)) {\r\n            symbol = symbol(rawIdx, dataParams);\r\n          }\r\n\r\n          if (isFunction$1(symbolSize)) {\r\n            // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\r\n            symbolSize = symbolSize(rawIdx, dataParams);\r\n          }\r\n\r\n          if (isFunction$1(symbolRotate)) {\r\n            symbolRotate = symbolRotate(rawIdx, dataParams);\r\n          }\r\n        }\r\n\r\n        var style = itemModel.getModel('itemStyle').getItemStyle();\r\n        var color = getVisualFromData(seriesData, 'color');\r\n\r\n        if (!style.fill) {\r\n          style.fill = color;\r\n        }\r\n\r\n        mpData.setItemVisual(idx, {\r\n          symbol: symbol,\r\n          symbolSize: symbolSize,\r\n          symbolRotate: symbolRotate,\r\n          style: style\r\n        });\r\n      }); // TODO Text are wrong\r\n\r\n      symbolDraw.updateData(mpData);\r\n      this.group.add(symbolDraw.group); // Set host model for tooltip\r\n      // FIXME\r\n\r\n      mpData.eachItemGraphicEl(function (el) {\r\n        el.traverse(function (child) {\r\n          getECData(child).dataModel = mpModel;\r\n        });\r\n      });\r\n      this.markKeep(symbolDraw);\r\n      symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\r\n    };\r\n\r\n    MarkPointView.type = 'markPoint';\r\n    return MarkPointView;\r\n  }(MarkerView);\r\n\r\n  function createList$1(coordSys, seriesModel, mpModel) {\r\n    var coordDimsInfos;\r\n\r\n    if (coordSys) {\r\n      coordDimsInfos = map(coordSys && coordSys.dimensions, function (coordDim) {\r\n        var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\r\n\r\n        return defaults({\r\n          name: coordDim\r\n        }, info);\r\n      });\r\n    } else {\r\n      coordDimsInfos = [{\r\n        name: 'value',\r\n        type: 'float'\r\n      }];\r\n    }\r\n\r\n    var mpData = new List(coordDimsInfos, mpModel);\r\n    var dataOpt = map(mpModel.get('data'), curry(dataTransform, seriesModel));\r\n\r\n    if (coordSys) {\r\n      dataOpt = filter(dataOpt, curry(dataFilter, coordSys));\r\n    }\r\n\r\n    mpData.initData(dataOpt, null, coordSys ? dimValueGetter : function (item) {\r\n      return item.value;\r\n    });\r\n    return mpData;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n\r\n  function install$10(registers) {\r\n    registers.registerComponentModel(MarkPointModel);\r\n    registers.registerComponentView(MarkPointView);\r\n    registers.registerPreprocessor(function (opt) {\r\n      // Make sure markPoint component is enabled\r\n      opt.markPoint = opt.markPoint || {};\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n  // HINT Markpoint can't be used too much\r\n\r\n\r\n  use(install$10);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var DATA_ZOOM_AXIS_DIMENSIONS = ['x', 'y', 'radius', 'angle', 'single']; // Supported coords.\r\n  // FIXME: polar has been broken (but rarely used).\r\n\r\n  var SERIES_COORDS = ['cartesian2d', 'polar', 'singleAxis'];\r\n\r\n  function isCoordSupported(seriesModel) {\r\n    var coordType = seriesModel.get('coordinateSystem');\r\n    return indexOf$1(SERIES_COORDS, coordType) >= 0;\r\n  }\r\n\r\n  function getAxisMainType(axisDim) {\r\n    {\r\n      assert$1(axisDim);\r\n    }\r\n    return axisDim + 'Axis';\r\n  }\r\n  /**\r\n   * If two dataZoomModels has the same axis controlled, we say that they are 'linked'.\r\n   * This function finds all linked dataZoomModels start from the given payload.\r\n   */\r\n\r\n\r\n  function findEffectedDataZooms(ecModel, payload) {\r\n    // Key: `DataZoomAxisDimension`\r\n    var axisRecords = createHashMap();\r\n    var effectedModels = []; // Key: uid of dataZoomModel\r\n\r\n    var effectedModelMap = createHashMap(); // Find the dataZooms specified by payload.\r\n\r\n    ecModel.eachComponent({\r\n      mainType: 'dataZoom',\r\n      query: payload\r\n    }, function (dataZoomModel) {\r\n      if (!effectedModelMap.get(dataZoomModel.uid)) {\r\n        addToEffected(dataZoomModel);\r\n      }\r\n    }); // Start from the given dataZoomModels, travel the graph to find\r\n    // all of the linked dataZoom models.\r\n\r\n    var foundNewLink;\r\n\r\n    do {\r\n      foundNewLink = false;\r\n      ecModel.eachComponent('dataZoom', processSingle);\r\n    } while (foundNewLink);\r\n\r\n    function processSingle(dataZoomModel) {\r\n      if (!effectedModelMap.get(dataZoomModel.uid) && isLinked(dataZoomModel)) {\r\n        addToEffected(dataZoomModel);\r\n        foundNewLink = true;\r\n      }\r\n    }\r\n\r\n    function addToEffected(dataZoom) {\r\n      effectedModelMap.set(dataZoom.uid, true);\r\n      effectedModels.push(dataZoom);\r\n      markAxisControlled(dataZoom);\r\n    }\r\n\r\n    function isLinked(dataZoomModel) {\r\n      var isLink = false;\r\n      dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\r\n        var axisIdxArr = axisRecords.get(axisDim);\r\n\r\n        if (axisIdxArr && axisIdxArr[axisIndex]) {\r\n          isLink = true;\r\n        }\r\n      });\r\n      return isLink;\r\n    }\r\n\r\n    function markAxisControlled(dataZoomModel) {\r\n      dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\r\n        (axisRecords.get(axisDim) || axisRecords.set(axisDim, []))[axisIndex] = true;\r\n      });\r\n    }\r\n\r\n    return effectedModels;\r\n  }\r\n  /**\r\n   * Find the first target coordinate system.\r\n   * Available after model built.\r\n   *\r\n   * @return Like {\r\n   *                  grid: [\r\n   *                      {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\r\n   *                      {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\r\n   *                      ...\r\n   *                  ],  // cartesians must not be null/undefined.\r\n   *                  polar: [\r\n   *                      {model: coord0, axisModels: [axis4], coordIndex: 0},\r\n   *                      ...\r\n   *                  ],  // polars must not be null/undefined.\r\n   *                  singleAxis: [\r\n   *                      {model: coord0, axisModels: [], coordIndex: 0}\r\n   *                  ]\r\n   *              }\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var DataZoomAxisInfo =\r\n  /** @class */\r\n  function () {\r\n    function DataZoomAxisInfo() {\r\n      this.indexList = [];\r\n      this.indexMap = [];\r\n    }\r\n\r\n    DataZoomAxisInfo.prototype.add = function (axisCmptIdx) {\r\n      // Remove duplication.\r\n      if (!this.indexMap[axisCmptIdx]) {\r\n        this.indexList.push(axisCmptIdx);\r\n        this.indexMap[axisCmptIdx] = true;\r\n      }\r\n    };\r\n\r\n    return DataZoomAxisInfo;\r\n  }();\r\n\r\n  var DataZoomModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(DataZoomModel, _super);\r\n\r\n    function DataZoomModel() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = DataZoomModel.type;\r\n      _this._autoThrottle = true;\r\n      _this._noTarget = true;\r\n      /**\r\n       * It is `[rangeModeForMin, rangeModeForMax]`.\r\n       * The optional values for `rangeMode`:\r\n       * + `'value'` mode: the axis extent will always be determined by\r\n       *     `dataZoom.startValue` and `dataZoom.endValue`, despite\r\n       *     how data like and how `axis.min` and `axis.max` are.\r\n       * + `'percent'` mode: `100` represents 100% of the `[dMin, dMax]`,\r\n       *     where `dMin` is `axis.min` if `axis.min` specified, otherwise `data.extent[0]`,\r\n       *     and `dMax` is `axis.max` if `axis.max` specified, otherwise `data.extent[1]`.\r\n       *     Axis extent will be determined by the result of the percent of `[dMin, dMax]`.\r\n       *\r\n       * For example, when users are using dynamic data (update data periodically via `setOption`),\r\n       * if in `'value`' mode, the window will be kept in a fixed value range despite how\r\n       * data are appended, while if in `'percent'` mode, whe window range will be changed alone with\r\n       * the appended data (suppose `axis.min` and `axis.max` are not specified).\r\n       */\r\n\r\n      _this._rangePropMode = ['percent', 'percent'];\r\n      return _this;\r\n    }\r\n\r\n    DataZoomModel.prototype.init = function (option, parentModel, ecModel) {\r\n      var inputRawOption = retrieveRawOption(option);\r\n      /**\r\n       * Suppose a \"main process\" start at the point that model prepared (that is,\r\n       * model initialized or merged or method called in `action`).\r\n       * We should keep the `main process` idempotent, that is, given a set of values\r\n       * on `option`, we get the same result.\r\n       *\r\n       * But sometimes, values on `option` will be updated for providing users\r\n       * a \"final calculated value\" (`dataZoomProcessor` will do that). Those value\r\n       * should not be the base/input of the `main process`.\r\n       *\r\n       * So in that case we should save and keep the input of the `main process`\r\n       * separately, called `settledOption`.\r\n       *\r\n       * For example, consider the case:\r\n       * (Step_1) brush zoom the grid by `toolbox.dataZoom`,\r\n       *     where the original input `option.startValue`, `option.endValue` are earsed by\r\n       *     calculated value.\r\n       * (Step)2) click the legend to hide and show a series,\r\n       *     where the new range is calculated by the earsed `startValue` and `endValue`,\r\n       *     which brings incorrect result.\r\n       */\r\n\r\n      this.settledOption = inputRawOption;\r\n      this.mergeDefaultAndTheme(option, ecModel);\r\n\r\n      this._doInit(inputRawOption);\r\n    };\r\n\r\n    DataZoomModel.prototype.mergeOption = function (newOption) {\r\n      var inputRawOption = retrieveRawOption(newOption); //FIX #2591\r\n\r\n      merge(this.option, newOption, true);\r\n      merge(this.settledOption, inputRawOption, true);\r\n\r\n      this._doInit(inputRawOption);\r\n    };\r\n\r\n    DataZoomModel.prototype._doInit = function (inputRawOption) {\r\n      var thisOption = this.option; // if (!env.canvasSupported) {\r\n      //     thisOption.realtime = false;\r\n      // }\r\n\r\n      this._setDefaultThrottle(inputRawOption);\r\n\r\n      this._updateRangeUse(inputRawOption);\r\n\r\n      var settledOption = this.settledOption;\r\n      each$1([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\r\n        // start/end has higher priority over startValue/endValue if they\r\n        // both set, but we should make chart.setOption({endValue: 1000})\r\n        // effective, rather than chart.setOption({endValue: 1000, end: null}).\r\n        if (this._rangePropMode[index] === 'value') {\r\n          thisOption[names[0]] = settledOption[names[0]] = null;\r\n        } // Otherwise do nothing and use the merge result.\r\n\r\n      }, this);\r\n\r\n      this._resetTarget();\r\n    };\r\n\r\n    DataZoomModel.prototype._resetTarget = function () {\r\n      var optionOrient = this.get('orient', true);\r\n      var targetAxisIndexMap = this._targetAxisInfoMap = createHashMap();\r\n\r\n      var hasAxisSpecified = this._fillSpecifiedTargetAxis(targetAxisIndexMap);\r\n\r\n      if (hasAxisSpecified) {\r\n        this._orient = optionOrient || this._makeAutoOrientByTargetAxis();\r\n      } else {\r\n        this._orient = optionOrient || 'horizontal';\r\n\r\n        this._fillAutoTargetAxisByOrient(targetAxisIndexMap, this._orient);\r\n      }\r\n\r\n      this._noTarget = true;\r\n      targetAxisIndexMap.each(function (axisInfo) {\r\n        if (axisInfo.indexList.length) {\r\n          this._noTarget = false;\r\n        }\r\n      }, this);\r\n    };\r\n\r\n    DataZoomModel.prototype._fillSpecifiedTargetAxis = function (targetAxisIndexMap) {\r\n      var hasAxisSpecified = false;\r\n      each$1(DATA_ZOOM_AXIS_DIMENSIONS, function (axisDim) {\r\n        var refering = this.getReferringComponents(getAxisMainType(axisDim), MULTIPLE_REFERRING); // When user set axisIndex as a empty array, we think that user specify axisIndex\r\n        // but do not want use auto mode. Because empty array may be encountered when\r\n        // some error occured.\r\n\r\n        if (!refering.specified) {\r\n          return;\r\n        }\r\n\r\n        hasAxisSpecified = true;\r\n        var axisInfo = new DataZoomAxisInfo();\r\n        each$1(refering.models, function (axisModel) {\r\n          axisInfo.add(axisModel.componentIndex);\r\n        });\r\n        targetAxisIndexMap.set(axisDim, axisInfo);\r\n      }, this);\r\n      return hasAxisSpecified;\r\n    };\r\n\r\n    DataZoomModel.prototype._fillAutoTargetAxisByOrient = function (targetAxisIndexMap, orient) {\r\n      var ecModel = this.ecModel;\r\n      var needAuto = true; // Find axis that parallel to dataZoom as default.\r\n\r\n      if (needAuto) {\r\n        var axisDim = orient === 'vertical' ? 'y' : 'x';\r\n        var axisModels = ecModel.findComponents({\r\n          mainType: axisDim + 'Axis'\r\n        });\r\n        setParallelAxis(axisModels, axisDim);\r\n      } // Find axis that parallel to dataZoom as default.\r\n\r\n\r\n      if (needAuto) {\r\n        var axisModels = ecModel.findComponents({\r\n          mainType: 'singleAxis',\r\n          filter: function (axisModel) {\r\n            return axisModel.get('orient', true) === orient;\r\n          }\r\n        });\r\n        setParallelAxis(axisModels, 'single');\r\n      }\r\n\r\n      function setParallelAxis(axisModels, axisDim) {\r\n        // At least use the first parallel axis as the target axis.\r\n        var axisModel = axisModels[0];\r\n\r\n        if (!axisModel) {\r\n          return;\r\n        }\r\n\r\n        var axisInfo = new DataZoomAxisInfo();\r\n        axisInfo.add(axisModel.componentIndex);\r\n        targetAxisIndexMap.set(axisDim, axisInfo);\r\n        needAuto = false; // Find parallel axes in the same grid.\r\n\r\n        if (axisDim === 'x' || axisDim === 'y') {\r\n          var gridModel_1 = axisModel.getReferringComponents('grid', SINGLE_REFERRING).models[0];\r\n          gridModel_1 && each$1(axisModels, function (axModel) {\r\n            if (axisModel.componentIndex !== axModel.componentIndex && gridModel_1 === axModel.getReferringComponents('grid', SINGLE_REFERRING).models[0]) {\r\n              axisInfo.add(axModel.componentIndex);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if (needAuto) {\r\n        // If no parallel axis, find the first category axis as default. (Also consider polar).\r\n        each$1(DATA_ZOOM_AXIS_DIMENSIONS, function (axisDim) {\r\n          if (!needAuto) {\r\n            return;\r\n          }\r\n\r\n          var axisModels = ecModel.findComponents({\r\n            mainType: getAxisMainType(axisDim),\r\n            filter: function (axisModel) {\r\n              return axisModel.get('type', true) === 'category';\r\n            }\r\n          });\r\n\r\n          if (axisModels[0]) {\r\n            var axisInfo = new DataZoomAxisInfo();\r\n            axisInfo.add(axisModels[0].componentIndex);\r\n            targetAxisIndexMap.set(axisDim, axisInfo);\r\n            needAuto = false;\r\n          }\r\n        }, this);\r\n      }\r\n    };\r\n\r\n    DataZoomModel.prototype._makeAutoOrientByTargetAxis = function () {\r\n      var dim; // Find the first axis\r\n\r\n      this.eachTargetAxis(function (axisDim) {\r\n        !dim && (dim = axisDim);\r\n      }, this);\r\n      return dim === 'y' ? 'vertical' : 'horizontal';\r\n    };\r\n\r\n    DataZoomModel.prototype._setDefaultThrottle = function (inputRawOption) {\r\n      // When first time user set throttle, auto throttle ends.\r\n      if (inputRawOption.hasOwnProperty('throttle')) {\r\n        this._autoThrottle = false;\r\n      }\r\n\r\n      if (this._autoThrottle) {\r\n        var globalOption = this.ecModel.option;\r\n        this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\r\n      }\r\n    };\r\n\r\n    DataZoomModel.prototype._updateRangeUse = function (inputRawOption) {\r\n      var rangePropMode = this._rangePropMode;\r\n      var rangeModeInOption = this.get('rangeMode');\r\n      each$1([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\r\n        var percentSpecified = inputRawOption[names[0]] != null;\r\n        var valueSpecified = inputRawOption[names[1]] != null;\r\n\r\n        if (percentSpecified && !valueSpecified) {\r\n          rangePropMode[index] = 'percent';\r\n        } else if (!percentSpecified && valueSpecified) {\r\n          rangePropMode[index] = 'value';\r\n        } else if (rangeModeInOption) {\r\n          rangePropMode[index] = rangeModeInOption[index];\r\n        } else if (percentSpecified) {\r\n          // percentSpecified && valueSpecified\r\n          rangePropMode[index] = 'percent';\r\n        } // else remain its original setting.\r\n\r\n      });\r\n    };\r\n\r\n    DataZoomModel.prototype.noTarget = function () {\r\n      return this._noTarget;\r\n    };\r\n\r\n    DataZoomModel.prototype.getFirstTargetAxisModel = function () {\r\n      var firstAxisModel;\r\n      this.eachTargetAxis(function (axisDim, axisIndex) {\r\n        if (firstAxisModel == null) {\r\n          firstAxisModel = this.ecModel.getComponent(getAxisMainType(axisDim), axisIndex);\r\n        }\r\n      }, this);\r\n      return firstAxisModel;\r\n    };\r\n    /**\r\n     * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\r\n     */\r\n\r\n\r\n    DataZoomModel.prototype.eachTargetAxis = function (callback, context) {\r\n      this._targetAxisInfoMap.each(function (axisInfo, axisDim) {\r\n        each$1(axisInfo.indexList, function (axisIndex) {\r\n          callback.call(context, axisDim, axisIndex);\r\n        });\r\n      });\r\n    };\r\n    /**\r\n     * @return If not found, return null/undefined.\r\n     */\r\n\r\n\r\n    DataZoomModel.prototype.getAxisProxy = function (axisDim, axisIndex) {\r\n      var axisModel = this.getAxisModel(axisDim, axisIndex);\r\n\r\n      if (axisModel) {\r\n        return axisModel.__dzAxisProxy;\r\n      }\r\n    };\r\n    /**\r\n     * @return If not found, return null/undefined.\r\n     */\r\n\r\n\r\n    DataZoomModel.prototype.getAxisModel = function (axisDim, axisIndex) {\r\n      {\r\n        assert$1(axisDim && axisIndex != null);\r\n      }\r\n\r\n      var axisInfo = this._targetAxisInfoMap.get(axisDim);\r\n\r\n      if (axisInfo && axisInfo.indexMap[axisIndex]) {\r\n        return this.ecModel.getComponent(getAxisMainType(axisDim), axisIndex);\r\n      }\r\n    };\r\n    /**\r\n     * If not specified, set to undefined.\r\n     */\r\n\r\n\r\n    DataZoomModel.prototype.setRawRange = function (opt) {\r\n      var thisOption = this.option;\r\n      var settledOption = this.settledOption;\r\n      each$1([['start', 'startValue'], ['end', 'endValue']], function (names) {\r\n        // Consider the pair <start, startValue>:\r\n        // If one has value and the other one is `null/undefined`, we both set them\r\n        // to `settledOption`. This strategy enables the feature to clear the original\r\n        // value in `settledOption` to `null/undefined`.\r\n        // But if both of them are `null/undefined`, we do not set them to `settledOption`\r\n        // and keep `settledOption` with the original value. This strategy enables users to\r\n        // only set <end or endValue> but not set <start or startValue> when calling\r\n        // `dispatchAction`.\r\n        // The pair <end, endValue> is treated in the same way.\r\n        if (opt[names[0]] != null || opt[names[1]] != null) {\r\n          thisOption[names[0]] = settledOption[names[0]] = opt[names[0]];\r\n          thisOption[names[1]] = settledOption[names[1]] = opt[names[1]];\r\n        }\r\n      }, this);\r\n\r\n      this._updateRangeUse(opt);\r\n    };\r\n\r\n    DataZoomModel.prototype.setCalculatedRange = function (opt) {\r\n      var option = this.option;\r\n      each$1(['start', 'startValue', 'end', 'endValue'], function (name) {\r\n        option[name] = opt[name];\r\n      });\r\n    };\r\n\r\n    DataZoomModel.prototype.getPercentRange = function () {\r\n      var axisProxy = this.findRepresentativeAxisProxy();\r\n\r\n      if (axisProxy) {\r\n        return axisProxy.getDataPercentWindow();\r\n      }\r\n    };\r\n    /**\r\n     * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\r\n     *\r\n     * @return [startValue, endValue] value can only be '-' or finite number.\r\n     */\r\n\r\n\r\n    DataZoomModel.prototype.getValueRange = function (axisDim, axisIndex) {\r\n      if (axisDim == null && axisIndex == null) {\r\n        var axisProxy = this.findRepresentativeAxisProxy();\r\n\r\n        if (axisProxy) {\r\n          return axisProxy.getDataValueWindow();\r\n        }\r\n      } else {\r\n        return this.getAxisProxy(axisDim, axisIndex).getDataValueWindow();\r\n      }\r\n    };\r\n    /**\r\n     * @param axisModel If axisModel given, find axisProxy\r\n     *      corresponding to the axisModel\r\n     */\r\n\r\n\r\n    DataZoomModel.prototype.findRepresentativeAxisProxy = function (axisModel) {\r\n      if (axisModel) {\r\n        return axisModel.__dzAxisProxy;\r\n      } // Find the first hosted axisProxy\r\n\r\n\r\n      var firstProxy;\r\n\r\n      var axisDimList = this._targetAxisInfoMap.keys();\r\n\r\n      for (var i = 0; i < axisDimList.length; i++) {\r\n        var axisDim = axisDimList[i];\r\n\r\n        var axisInfo = this._targetAxisInfoMap.get(axisDim);\r\n\r\n        for (var j = 0; j < axisInfo.indexList.length; j++) {\r\n          var proxy = this.getAxisProxy(axisDim, axisInfo.indexList[j]);\r\n\r\n          if (proxy.hostedBy(this)) {\r\n            return proxy;\r\n          }\r\n\r\n          if (!firstProxy) {\r\n            firstProxy = proxy;\r\n          }\r\n        }\r\n      } // If no hosted proxy found, still need to return a proxy.\r\n      // This case always happens in toolbox dataZoom, where axes are all hosted by\r\n      // other dataZooms.\r\n\r\n\r\n      return firstProxy;\r\n    };\r\n\r\n    DataZoomModel.prototype.getRangePropMode = function () {\r\n      return this._rangePropMode.slice();\r\n    };\r\n\r\n    DataZoomModel.prototype.getOrient = function () {\r\n      {\r\n        // Should not be called before initialized.\r\n        assert$1(this._orient);\r\n      }\r\n      return this._orient;\r\n    };\r\n\r\n    DataZoomModel.type = 'dataZoom';\r\n    DataZoomModel.dependencies = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series', 'toolbox'];\r\n    DataZoomModel.defaultOption = {\r\n      zlevel: 0,\r\n      z: 4,\r\n      filterMode: 'filter',\r\n      start: 0,\r\n      end: 100\r\n    };\r\n    return DataZoomModel;\r\n  }(ComponentModel);\r\n  /**\r\n   * Retrieve the those raw params from option, which will be cached separately.\r\n   * becasue they will be overwritten by normalized/calculated values in the main\r\n   * process.\r\n   */\r\n\r\n\r\n  function retrieveRawOption(option) {\r\n    var ret = {};\r\n    each$1(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\r\n      option.hasOwnProperty(name) && (ret[name] = option[name]);\r\n    });\r\n    return ret;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var SelectDataZoomModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(SelectDataZoomModel, _super);\r\n\r\n    function SelectDataZoomModel() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = SelectDataZoomModel.type;\r\n      return _this;\r\n    }\r\n\r\n    SelectDataZoomModel.type = 'dataZoom.select';\r\n    return SelectDataZoomModel;\r\n  }(DataZoomModel);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var DataZoomView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(DataZoomView, _super);\r\n\r\n    function DataZoomView() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = DataZoomView.type;\r\n      return _this;\r\n    }\r\n\r\n    DataZoomView.prototype.render = function (dataZoomModel, ecModel, api, payload) {\r\n      this.dataZoomModel = dataZoomModel;\r\n      this.ecModel = ecModel;\r\n      this.api = api;\r\n    };\r\n\r\n    DataZoomView.type = 'dataZoom';\r\n    return DataZoomView;\r\n  }(ComponentView);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var SelectDataZoomView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(SelectDataZoomView, _super);\r\n\r\n    function SelectDataZoomView() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = SelectDataZoomView.type;\r\n      return _this;\r\n    }\r\n\r\n    SelectDataZoomView.type = 'dataZoom.select';\r\n    return SelectDataZoomView;\r\n  }(DataZoomView);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * Calculate slider move result.\r\n   * Usage:\r\n   * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\r\n   * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\r\n   * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\r\n   *\r\n   * @param delta Move length.\r\n   * @param handleEnds handleEnds[0] can be bigger then handleEnds[1].\r\n   *              handleEnds will be modified in this method.\r\n   * @param extent handleEnds is restricted by extent.\r\n   *              extent[0] should less or equals than extent[1].\r\n   * @param handleIndex Can be 'all', means that both move the two handleEnds.\r\n   * @param minSpan The range of dataZoom can not be smaller than that.\r\n   *              If not set, handle0 and cross handle1. If set as a non-negative\r\n   *              number (including `0`), handles will push each other when reaching\r\n   *              the minSpan.\r\n   * @param maxSpan The range of dataZoom can not be larger than that.\r\n   * @return The input handleEnds.\r\n   */\r\n\r\n\r\n  function sliderMove(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\r\n    delta = delta || 0;\r\n    var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\r\n\r\n    if (minSpan != null) {\r\n      minSpan = restrict(minSpan, [0, extentSpan]);\r\n    }\r\n\r\n    if (maxSpan != null) {\r\n      maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\r\n    }\r\n\r\n    if (handleIndex === 'all') {\r\n      var handleSpan = Math.abs(handleEnds[1] - handleEnds[0]);\r\n      handleSpan = restrict(handleSpan, [0, extentSpan]);\r\n      minSpan = maxSpan = restrict(handleSpan, [minSpan, maxSpan]);\r\n      handleIndex = 0;\r\n    }\r\n\r\n    handleEnds[0] = restrict(handleEnds[0], extent);\r\n    handleEnds[1] = restrict(handleEnds[1], extent);\r\n    var originalDistSign = getSpanSign(handleEnds, handleIndex);\r\n    handleEnds[handleIndex] += delta; // Restrict in extent.\r\n\r\n    var extentMinSpan = minSpan || 0;\r\n    var realExtent = extent.slice();\r\n    originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\r\n    handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\r\n\r\n    var currDistSign;\r\n    currDistSign = getSpanSign(handleEnds, handleIndex);\r\n\r\n    if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\r\n      // If minSpan exists, 'cross' is forbidden.\r\n      handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\r\n    } // Shrink span.\r\n\r\n\r\n    currDistSign = getSpanSign(handleEnds, handleIndex);\r\n\r\n    if (maxSpan != null && currDistSign.span > maxSpan) {\r\n      handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\r\n    }\r\n\r\n    return handleEnds;\r\n  }\r\n\r\n  function getSpanSign(handleEnds, handleIndex) {\r\n    var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\r\n    // is at left of handleEnds[1] for non-cross case.\r\n\r\n    return {\r\n      span: Math.abs(dist),\r\n      sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\r\n    };\r\n  }\r\n\r\n  function restrict(value, extend) {\r\n    return Math.min(extend[1] != null ? extend[1] : Infinity, Math.max(extend[0] != null ? extend[0] : -Infinity, value));\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var each$7 = each$1;\r\n  var asc$1 = asc;\r\n  /**\r\n   * Operate single axis.\r\n   * One axis can only operated by one axis operator.\r\n   * Different dataZoomModels may be defined to operate the same axis.\r\n   * (i.e. 'inside' data zoom and 'slider' data zoom components)\r\n   * So dataZoomModels share one axisProxy in that case.\r\n   */\r\n\r\n  var AxisProxy =\r\n  /** @class */\r\n  function () {\r\n    function AxisProxy(dimName, axisIndex, dataZoomModel, ecModel) {\r\n      this._dimName = dimName;\r\n      this._axisIndex = axisIndex;\r\n      this.ecModel = ecModel;\r\n      this._dataZoomModel = dataZoomModel; // /**\r\n      //  * @readOnly\r\n      //  * @private\r\n      //  */\r\n      // this.hasSeriesStacked;\r\n    }\r\n    /**\r\n     * Whether the axisProxy is hosted by dataZoomModel.\r\n     */\r\n\r\n\r\n    AxisProxy.prototype.hostedBy = function (dataZoomModel) {\r\n      return this._dataZoomModel === dataZoomModel;\r\n    };\r\n    /**\r\n     * @return Value can only be NaN or finite value.\r\n     */\r\n\r\n\r\n    AxisProxy.prototype.getDataValueWindow = function () {\r\n      return this._valueWindow.slice();\r\n    };\r\n    /**\r\n     * @return {Array.<number>}\r\n     */\r\n\r\n\r\n    AxisProxy.prototype.getDataPercentWindow = function () {\r\n      return this._percentWindow.slice();\r\n    };\r\n\r\n    AxisProxy.prototype.getTargetSeriesModels = function () {\r\n      var seriesModels = [];\r\n      this.ecModel.eachSeries(function (seriesModel) {\r\n        if (isCoordSupported(seriesModel)) {\r\n          var axisMainType = getAxisMainType(this._dimName);\r\n          var axisModel = seriesModel.getReferringComponents(axisMainType, SINGLE_REFERRING).models[0];\r\n\r\n          if (axisModel && this._axisIndex === axisModel.componentIndex) {\r\n            seriesModels.push(seriesModel);\r\n          }\r\n        }\r\n      }, this);\r\n      return seriesModels;\r\n    };\r\n\r\n    AxisProxy.prototype.getAxisModel = function () {\r\n      return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\r\n    };\r\n\r\n    AxisProxy.prototype.getMinMaxSpan = function () {\r\n      return clone(this._minMaxSpan);\r\n    };\r\n    /**\r\n     * Only calculate by given range and this._dataExtent, do not change anything.\r\n     */\r\n\r\n\r\n    AxisProxy.prototype.calculateDataWindow = function (opt) {\r\n      var dataExtent = this._dataExtent;\r\n      var axisModel = this.getAxisModel();\r\n      var scale = axisModel.axis.scale;\r\n\r\n      var rangePropMode = this._dataZoomModel.getRangePropMode();\r\n\r\n      var percentExtent = [0, 100];\r\n      var percentWindow = [];\r\n      var valueWindow = [];\r\n      var hasPropModeValue;\r\n      each$7(['start', 'end'], function (prop, idx) {\r\n        var boundPercent = opt[prop];\r\n        var boundValue = opt[prop + 'Value']; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\r\n        // on `valueProp` ('startValue', 'endValue'). (They are based on the data extent\r\n        // but not min/max of axis, which will be calculated by data window then).\r\n        // The former one is suitable for cases that a dataZoom component controls multiple\r\n        // axes with different unit or extent, and the latter one is suitable for accurate\r\n        // zoom by pixel (e.g., in dataZoomSelect).\r\n        // we use `getRangePropMode()` to mark which prop is used. `rangePropMode` is updated\r\n        // only when setOption or dispatchAction, otherwise it remains its original value.\r\n        // (Why not only record `percentProp` and always map to `valueProp`? Because\r\n        // the map `valueProp` -> `percentProp` -> `valueProp` probably not the original\r\n        // `valueProp`. consider two axes constrolled by one dataZoom. They have different\r\n        // data extent. All of values that are overflow the `dataExtent` will be calculated\r\n        // to percent '100%').\r\n\r\n        if (rangePropMode[idx] === 'percent') {\r\n          boundPercent == null && (boundPercent = percentExtent[idx]); // Use scale.parse to math round for category or time axis.\r\n\r\n          boundValue = scale.parse(linearMap(boundPercent, percentExtent, dataExtent));\r\n        } else {\r\n          hasPropModeValue = true;\r\n          boundValue = boundValue == null ? dataExtent[idx] : scale.parse(boundValue); // Calculating `percent` from `value` may be not accurate, because\r\n          // This calculation can not be inversed, because all of values that\r\n          // are overflow the `dataExtent` will be calculated to percent '100%'\r\n\r\n          boundPercent = linearMap(boundValue, dataExtent, percentExtent);\r\n        } // valueWindow[idx] = round(boundValue);\r\n        // percentWindow[idx] = round(boundPercent);\r\n\r\n\r\n        valueWindow[idx] = boundValue;\r\n        percentWindow[idx] = boundPercent;\r\n      });\r\n      asc$1(valueWindow);\r\n      asc$1(percentWindow); // The windows from user calling of `dispatchAction` might be out of the extent,\r\n      // or do not obey the `min/maxSpan`, `min/maxValueSpan`. But we dont restrict window\r\n      // by `zoomLock` here, because we see `zoomLock` just as a interaction constraint,\r\n      // where API is able to initialize/modify the window size even though `zoomLock`\r\n      // specified.\r\n\r\n      var spans = this._minMaxSpan;\r\n      hasPropModeValue ? restrictSet(valueWindow, percentWindow, dataExtent, percentExtent, false) : restrictSet(percentWindow, valueWindow, percentExtent, dataExtent, true);\r\n\r\n      function restrictSet(fromWindow, toWindow, fromExtent, toExtent, toValue) {\r\n        var suffix = toValue ? 'Span' : 'ValueSpan';\r\n        sliderMove(0, fromWindow, fromExtent, 'all', spans['min' + suffix], spans['max' + suffix]);\r\n\r\n        for (var i = 0; i < 2; i++) {\r\n          toWindow[i] = linearMap(fromWindow[i], fromExtent, toExtent, true);\r\n          toValue && (toWindow[i] = scale.parse(toWindow[i]));\r\n        }\r\n      }\r\n\r\n      return {\r\n        valueWindow: valueWindow,\r\n        percentWindow: percentWindow\r\n      };\r\n    };\r\n    /**\r\n     * Notice: reset should not be called before series.restoreData() called,\r\n     * so it is recommanded to be called in \"process stage\" but not \"model init\r\n     * stage\".\r\n     */\r\n\r\n\r\n    AxisProxy.prototype.reset = function (dataZoomModel) {\r\n      if (dataZoomModel !== this._dataZoomModel) {\r\n        return;\r\n      }\r\n\r\n      var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\r\n\r\n      this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\r\n      // each(targetSeries, function (series) {\r\n      // let data = series.getData();\r\n      // let dataDim = data.mapDimension(this._dimName);\r\n      // let stackedDimension = data.getCalculationInfo('stackedDimension');\r\n      // if (stackedDimension && stackedDimension === dataDim) {\r\n      // this.hasSeriesStacked = true;\r\n      // }\r\n      // }, this);\r\n      // `calculateDataWindow` uses min/maxSpan.\r\n\r\n      this._updateMinMaxSpan();\r\n\r\n      var dataWindow = this.calculateDataWindow(dataZoomModel.settledOption);\r\n      this._valueWindow = dataWindow.valueWindow;\r\n      this._percentWindow = dataWindow.percentWindow; // Update axis setting then.\r\n\r\n      this._setAxisModel();\r\n    };\r\n\r\n    AxisProxy.prototype.filterData = function (dataZoomModel, api) {\r\n      if (dataZoomModel !== this._dataZoomModel) {\r\n        return;\r\n      }\r\n\r\n      var axisDim = this._dimName;\r\n      var seriesModels = this.getTargetSeriesModels();\r\n      var filterMode = dataZoomModel.get('filterMode');\r\n      var valueWindow = this._valueWindow;\r\n\r\n      if (filterMode === 'none') {\r\n        return;\r\n      } // FIXME\r\n      // Toolbox may has dataZoom injected. And if there are stacked bar chart\r\n      // with NaN data, NaN will be filtered and stack will be wrong.\r\n      // So we need to force the mode to be set empty.\r\n      // In fect, it is not a big deal that do not support filterMode-'filter'\r\n      // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\r\n      // selection\" some day, which might need \"adapt to data extent on the\r\n      // otherAxis\", which is disabled by filterMode-'empty'.\r\n      // But currently, stack has been fixed to based on value but not index,\r\n      // so this is not an issue any more.\r\n      // let otherAxisModel = this.getOtherAxisModel();\r\n      // if (dataZoomModel.get('$fromToolbox')\r\n      //     && otherAxisModel\r\n      //     && otherAxisModel.hasSeriesStacked\r\n      // ) {\r\n      //     filterMode = 'empty';\r\n      // }\r\n      // TODO\r\n      // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\r\n\r\n\r\n      each$7(seriesModels, function (seriesModel) {\r\n        var seriesData = seriesModel.getData();\r\n        var dataDims = seriesData.mapDimensionsAll(axisDim);\r\n\r\n        if (!dataDims.length) {\r\n          return;\r\n        }\r\n\r\n        if (filterMode === 'weakFilter') {\r\n          seriesData.filterSelf(function (dataIndex) {\r\n            var leftOut;\r\n            var rightOut;\r\n            var hasValue;\r\n\r\n            for (var i = 0; i < dataDims.length; i++) {\r\n              var value = seriesData.get(dataDims[i], dataIndex);\r\n              var thisHasValue = !isNaN(value);\r\n              var thisLeftOut = value < valueWindow[0];\r\n              var thisRightOut = value > valueWindow[1];\r\n\r\n              if (thisHasValue && !thisLeftOut && !thisRightOut) {\r\n                return true;\r\n              }\r\n\r\n              thisHasValue && (hasValue = true);\r\n              thisLeftOut && (leftOut = true);\r\n              thisRightOut && (rightOut = true);\r\n            } // If both left out and right out, do not filter.\r\n\r\n\r\n            return hasValue && leftOut && rightOut;\r\n          });\r\n        } else {\r\n          each$7(dataDims, function (dim) {\r\n            if (filterMode === 'empty') {\r\n              seriesModel.setData(seriesData = seriesData.map(dim, function (value) {\r\n                return !isInWindow(value) ? NaN : value;\r\n              }));\r\n            } else {\r\n              var range = {};\r\n              range[dim] = valueWindow; // console.time('select');\r\n\r\n              seriesData.selectRange(range); // console.timeEnd('select');\r\n            }\r\n          });\r\n        }\r\n\r\n        each$7(dataDims, function (dim) {\r\n          seriesData.setApproximateExtent(valueWindow, dim);\r\n        });\r\n      });\r\n\r\n      function isInWindow(value) {\r\n        return value >= valueWindow[0] && value <= valueWindow[1];\r\n      }\r\n    };\r\n\r\n    AxisProxy.prototype._updateMinMaxSpan = function () {\r\n      var minMaxSpan = this._minMaxSpan = {};\r\n      var dataZoomModel = this._dataZoomModel;\r\n      var dataExtent = this._dataExtent;\r\n      each$7(['min', 'max'], function (minMax) {\r\n        var percentSpan = dataZoomModel.get(minMax + 'Span');\r\n        var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\r\n        valueSpan != null && (valueSpan = this.getAxisModel().axis.scale.parse(valueSpan)); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\r\n\r\n        if (valueSpan != null) {\r\n          percentSpan = linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\r\n        } else if (percentSpan != null) {\r\n          valueSpan = linearMap(percentSpan, [0, 100], dataExtent, true) - dataExtent[0];\r\n        }\r\n\r\n        minMaxSpan[minMax + 'Span'] = percentSpan;\r\n        minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\r\n      }, this);\r\n    };\r\n\r\n    AxisProxy.prototype._setAxisModel = function () {\r\n      var axisModel = this.getAxisModel();\r\n      var percentWindow = this._percentWindow;\r\n      var valueWindow = this._valueWindow;\r\n\r\n      if (!percentWindow) {\r\n        return;\r\n      } // [0, 500]: arbitrary value, guess axis extent.\r\n\r\n\r\n      var precision = getPixelPrecision(valueWindow, [0, 500]);\r\n      precision = Math.min(precision, 20); // For value axis, if min/max/scale are not set, we just use the extent obtained\r\n      // by series data, which may be a little different from the extent calculated by\r\n      // `axisHelper.getScaleExtent`. But the different just affects the experience a\r\n      // little when zooming. So it will not be fixed until some users require it strongly.\r\n\r\n      var rawExtentInfo = axisModel.axis.scale.rawExtentInfo;\r\n\r\n      if (percentWindow[0] !== 0) {\r\n        rawExtentInfo.setDeterminedMinMax('min', +valueWindow[0].toFixed(precision));\r\n      }\r\n\r\n      if (percentWindow[1] !== 100) {\r\n        rawExtentInfo.setDeterminedMinMax('max', +valueWindow[1].toFixed(precision));\r\n      }\r\n\r\n      rawExtentInfo.freeze();\r\n    };\r\n\r\n    return AxisProxy;\r\n  }();\r\n\r\n  function calculateDataExtent(axisProxy, axisDim, seriesModels) {\r\n    var dataExtent = [Infinity, -Infinity];\r\n    each$7(seriesModels, function (seriesModel) {\r\n      unionAxisExtentFromData(dataExtent, seriesModel.getData(), axisDim);\r\n    }); // It is important to get \"consistent\" extent when more then one axes is\r\n    // controlled by a `dataZoom`, otherwise those axes will not be synchronized\r\n    // when zooming. But it is difficult to know what is \"consistent\", considering\r\n    // axes have different type or even different meanings (For example, two\r\n    // time axes are used to compare data of the same date in different years).\r\n    // So basically dataZoom just obtains extent by series.data (in category axis\r\n    // extent can be obtained from axis.data).\r\n    // Nevertheless, user can set min/max/scale on axes to make extent of axes\r\n    // consistent.\r\n\r\n    var axisModel = axisProxy.getAxisModel();\r\n    var rawExtentResult = ensureScaleRawExtentInfo(axisModel.axis.scale, axisModel, dataExtent).calculate();\r\n    return [rawExtentResult.min, rawExtentResult.max];\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var dataZoomProcessor = {\r\n    // `dataZoomProcessor` will only be performed in needed series. Consider if\r\n    // there is a line series and a pie series, it is better not to update the\r\n    // line series if only pie series is needed to be updated.\r\n    getTargetSeries: function (ecModel) {\r\n      function eachAxisModel(cb) {\r\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\r\n          dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\r\n            var axisModel = ecModel.getComponent(getAxisMainType(axisDim), axisIndex);\r\n            cb(axisDim, axisIndex, axisModel, dataZoomModel);\r\n          });\r\n        });\r\n      } // FIXME: it brings side-effect to `getTargetSeries`.\r\n      // Prepare axis proxies.\r\n\r\n\r\n      eachAxisModel(function (axisDim, axisIndex, axisModel, dataZoomModel) {\r\n        // dispose all last axis proxy, in case that some axis are deleted.\r\n        axisModel.__dzAxisProxy = null;\r\n      });\r\n      var proxyList = [];\r\n      eachAxisModel(function (axisDim, axisIndex, axisModel, dataZoomModel) {\r\n        // Different dataZooms may constrol the same axis. In that case,\r\n        // an axisProxy serves both of them.\r\n        if (!axisModel.__dzAxisProxy) {\r\n          // Use the first dataZoomModel as the main model of axisProxy.\r\n          axisModel.__dzAxisProxy = new AxisProxy(axisDim, axisIndex, dataZoomModel, ecModel);\r\n          proxyList.push(axisModel.__dzAxisProxy);\r\n        }\r\n      });\r\n      var seriesModelMap = createHashMap();\r\n      each$1(proxyList, function (axisProxy) {\r\n        each$1(axisProxy.getTargetSeriesModels(), function (seriesModel) {\r\n          seriesModelMap.set(seriesModel.uid, seriesModel);\r\n        });\r\n      });\r\n      return seriesModelMap;\r\n    },\r\n    // Consider appendData, where filter should be performed. Because data process is\r\n    // in block mode currently, it is not need to worry about that the overallProgress\r\n    // execute every frame.\r\n    overallReset: function (ecModel, api) {\r\n      ecModel.eachComponent('dataZoom', function (dataZoomModel) {\r\n        // We calculate window and reset axis here but not in model\r\n        // init stage and not after action dispatch handler, because\r\n        // reset should be called after seriesData.restoreData.\r\n        dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\r\n          dataZoomModel.getAxisProxy(axisDim, axisIndex).reset(dataZoomModel);\r\n        }); // Caution: data zoom filtering is order sensitive when using\r\n        // percent range and no min/max/scale set on axis.\r\n        // For example, we have dataZoom definition:\r\n        // [\r\n        //      {xAxisIndex: 0, start: 30, end: 70},\r\n        //      {yAxisIndex: 0, start: 20, end: 80}\r\n        // ]\r\n        // In this case, [20, 80] of y-dataZoom should be based on data\r\n        // that have filtered by x-dataZoom using range of [30, 70],\r\n        // but should not be based on full raw data. Thus sliding\r\n        // x-dataZoom will change both ranges of xAxis and yAxis,\r\n        // while sliding y-dataZoom will only change the range of yAxis.\r\n        // So we should filter x-axis after reset x-axis immediately,\r\n        // and then reset y-axis and filter y-axis.\r\n\r\n        dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\r\n          dataZoomModel.getAxisProxy(axisDim, axisIndex).filterData(dataZoomModel, api);\r\n        });\r\n      });\r\n      ecModel.eachComponent('dataZoom', function (dataZoomModel) {\r\n        // Fullfill all of the range props so that user\r\n        // is able to get them from chart.getOption().\r\n        var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\r\n\r\n        if (axisProxy) {\r\n          var percentRange = axisProxy.getDataPercentWindow();\r\n          var valueRange = axisProxy.getDataValueWindow();\r\n          dataZoomModel.setCalculatedRange({\r\n            start: percentRange[0],\r\n            end: percentRange[1],\r\n            startValue: valueRange[0],\r\n            endValue: valueRange[1]\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  function installDataZoomAction(registers) {\r\n    registers.registerAction('dataZoom', function (payload, ecModel) {\r\n      var effectedModels = findEffectedDataZooms(ecModel, payload);\r\n      each$1(effectedModels, function (dataZoomModel) {\r\n        dataZoomModel.setRawRange({\r\n          start: payload.start,\r\n          end: payload.end,\r\n          startValue: payload.startValue,\r\n          endValue: payload.endValue\r\n        });\r\n      });\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var installed = false;\r\n\r\n  function installCommon(registers) {\r\n    if (installed) {\r\n      return;\r\n    }\r\n\r\n    installed = true;\r\n    registers.registerProcessor(registers.PRIORITY.PROCESSOR.FILTER, dataZoomProcessor);\r\n    installDataZoomAction(registers);\r\n    registers.registerSubTypeDefaulter('dataZoom', function () {\r\n      // Default 'slider' when no type specified.\r\n      return 'slider';\r\n    });\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function install$12(registers) {\r\n    registers.registerComponentModel(SelectDataZoomModel);\r\n    registers.registerComponentView(SelectDataZoomView);\r\n    installCommon(registers);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n\r\n  var ToolboxFeature =\r\n  /** @class */\r\n  function () {\r\n    function ToolboxFeature() {}\r\n\r\n    return ToolboxFeature;\r\n  }();\r\n\r\n  var features = {};\r\n\r\n  function registerFeature(name, ctor) {\r\n    features[name] = ctor;\r\n  }\r\n\r\n  function getFeature(name) {\r\n    return features[name];\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var ToolboxModel =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(ToolboxModel, _super);\r\n\r\n    function ToolboxModel() {\r\n      var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n      _this.type = ToolboxModel.type;\r\n      return _this;\r\n    }\r\n\r\n    ToolboxModel.prototype.optionUpdated = function () {\r\n      _super.prototype.optionUpdated.apply(this, arguments);\r\n\r\n      var ecModel = this.ecModel;\r\n      each$1(this.option.feature, function (featureOpt, featureName) {\r\n        var Feature = getFeature(featureName);\r\n\r\n        if (Feature) {\r\n          if (Feature.getDefaultOption) {\r\n            Feature.defaultOption = Feature.getDefaultOption(ecModel);\r\n          }\r\n\r\n          merge(featureOpt, Feature.defaultOption);\r\n        }\r\n      });\r\n    };\r\n\r\n    ToolboxModel.type = 'toolbox';\r\n    ToolboxModel.layoutMode = {\r\n      type: 'box',\r\n      ignoreSize: true\r\n    };\r\n    ToolboxModel.defaultOption = {\r\n      show: true,\r\n      z: 6,\r\n      zlevel: 0,\r\n      orient: 'horizontal',\r\n      left: 'right',\r\n      top: 'top',\r\n      // right\r\n      // bottom\r\n      backgroundColor: 'transparent',\r\n      borderColor: '#ccc',\r\n      borderRadius: 0,\r\n      borderWidth: 0,\r\n      padding: 5,\r\n      itemSize: 15,\r\n      itemGap: 8,\r\n      showTitle: true,\r\n      iconStyle: {\r\n        borderColor: '#666',\r\n        color: 'none'\r\n      },\r\n      emphasis: {\r\n        iconStyle: {\r\n          borderColor: '#3E98C5'\r\n        }\r\n      },\r\n      // textStyle: {},\r\n      // feature\r\n      tooltip: {\r\n        show: false\r\n      }\r\n    };\r\n    return ToolboxModel;\r\n  }(ComponentModel);\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var ToolboxView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(ToolboxView, _super);\r\n\r\n    function ToolboxView() {\r\n      return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n\r\n    ToolboxView.prototype.render = function (toolboxModel, ecModel, api, payload) {\r\n      var group = this.group;\r\n      group.removeAll();\r\n\r\n      if (!toolboxModel.get('show')) {\r\n        return;\r\n      }\r\n\r\n      var itemSize = +toolboxModel.get('itemSize');\r\n      var featureOpts = toolboxModel.get('feature') || {};\r\n      var features = this._features || (this._features = {});\r\n      var featureNames = [];\r\n      each$1(featureOpts, function (opt, name) {\r\n        featureNames.push(name);\r\n      });\r\n      new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(curry(processFeature, null)).execute(); // Keep for diff.\r\n\r\n      this._featureNames = featureNames;\r\n\r\n      function processFeature(newIndex, oldIndex) {\r\n        var featureName = featureNames[newIndex];\r\n        var oldName = featureNames[oldIndex];\r\n        var featureOpt = featureOpts[featureName];\r\n        var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\r\n        var feature; // FIX#11236, merge feature title from MagicType newOption. TODO: consider seriesIndex ?\r\n\r\n        if (payload && payload.newTitle != null && payload.featureName === featureName) {\r\n          featureOpt.title = payload.newTitle;\r\n        }\r\n\r\n        if (featureName && !oldName) {\r\n          // Create\r\n          if (isUserFeatureName(featureName)) {\r\n            feature = {\r\n              onclick: featureModel.option.onclick,\r\n              featureName: featureName\r\n            };\r\n          } else {\r\n            var Feature = getFeature(featureName);\r\n\r\n            if (!Feature) {\r\n              return;\r\n            }\r\n\r\n            feature = new Feature();\r\n          }\r\n\r\n          features[featureName] = feature;\r\n        } else {\r\n          feature = features[oldName]; // If feature does not exsit.\r\n\r\n          if (!feature) {\r\n            return;\r\n          }\r\n        }\r\n\r\n        feature.uid = getUID('toolbox-feature');\r\n        feature.model = featureModel;\r\n        feature.ecModel = ecModel;\r\n        feature.api = api;\r\n\r\n        if (feature instanceof ToolboxFeature) {\r\n          if (!featureName && oldName) {\r\n            feature.dispose && feature.dispose(ecModel, api);\r\n            return;\r\n          }\r\n\r\n          if (!featureModel.get('show') || feature.unusable) {\r\n            feature.remove && feature.remove(ecModel, api);\r\n            return;\r\n          }\r\n        }\r\n\r\n        createIconPaths(featureModel, feature, featureName);\r\n\r\n        featureModel.setIconStatus = function (iconName, status) {\r\n          var option = this.option;\r\n          var iconPaths = this.iconPaths;\r\n          option.iconStatus = option.iconStatus || {};\r\n          option.iconStatus[iconName] = status;\r\n\r\n          if (iconPaths[iconName]) {\r\n            (status === 'emphasis' ? enterEmphasis : leaveEmphasis)(iconPaths[iconName]);\r\n          }\r\n        };\r\n\r\n        if (feature instanceof ToolboxFeature) {\r\n          if (feature.render) {\r\n            feature.render(featureModel, ecModel, api, payload);\r\n          }\r\n        }\r\n      }\r\n\r\n      function createIconPaths(featureModel, feature, featureName) {\r\n        var iconStyleModel = featureModel.getModel('iconStyle');\r\n        var iconStyleEmphasisModel = featureModel.getModel(['emphasis', 'iconStyle']); // If one feature has mutiple icon. they are orginaized as\r\n        // {\r\n        //     icon: {\r\n        //         foo: '',\r\n        //         bar: ''\r\n        //     },\r\n        //     title: {\r\n        //         foo: '',\r\n        //         bar: ''\r\n        //     }\r\n        // }\r\n\r\n        var icons = feature instanceof ToolboxFeature && feature.getIcons ? feature.getIcons() : featureModel.get('icon');\r\n        var titles = featureModel.get('title') || {};\r\n        var iconsMap;\r\n        var titlesMap;\r\n\r\n        if (typeof icons === 'string') {\r\n          iconsMap = {};\r\n          iconsMap[featureName] = icons;\r\n        } else {\r\n          iconsMap = icons;\r\n        }\r\n\r\n        if (typeof titles === 'string') {\r\n          titlesMap = {};\r\n          titlesMap[featureName] = titles;\r\n        } else {\r\n          titlesMap = titles;\r\n        }\r\n\r\n        var iconPaths = featureModel.iconPaths = {};\r\n        each$1(iconsMap, function (iconStr, iconName) {\r\n          var path = createIcon(iconStr, {}, {\r\n            x: -itemSize / 2,\r\n            y: -itemSize / 2,\r\n            width: itemSize,\r\n            height: itemSize\r\n          }); // TODO handling image\r\n\r\n          path.setStyle(iconStyleModel.getItemStyle());\r\n          var pathEmphasisState = path.ensureState('emphasis');\r\n          pathEmphasisState.style = iconStyleEmphasisModel.getItemStyle(); // Text position calculation\r\n\r\n          var textContent = new ZRText({\r\n            style: {\r\n              text: titlesMap[iconName],\r\n              align: iconStyleEmphasisModel.get('textAlign'),\r\n              borderRadius: iconStyleEmphasisModel.get('textBorderRadius'),\r\n              padding: iconStyleEmphasisModel.get('textPadding'),\r\n              fill: null\r\n            },\r\n            ignore: true\r\n          });\r\n          path.setTextContent(textContent);\r\n          var tooltipModel = toolboxModel.getModel('tooltip');\r\n\r\n          if (tooltipModel && tooltipModel.get('show')) {\r\n            path.tooltip = extend({\r\n              content: titlesMap[iconName],\r\n              formatter: tooltipModel.get('formatter', true) || function () {\r\n                return titlesMap[iconName];\r\n              },\r\n              formatterParams: {\r\n                componentType: 'toolbox',\r\n                name: iconName,\r\n                title: titlesMap[iconName],\r\n                $vars: ['name', 'title']\r\n              },\r\n              position: tooltipModel.get('position', true) || 'bottom'\r\n            }, tooltipModel.option);\r\n          } // graphic.enableHoverEmphasis(path);\r\n\r\n\r\n          path.__title = titlesMap[iconName];\r\n          path.on('mouseover', function () {\r\n            // Should not reuse above hoverStyle, which might be modified.\r\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\r\n            var defaultTextPosition = toolboxModel.get('orient') === 'vertical' ? toolboxModel.get('right') == null ? 'right' : 'left' : toolboxModel.get('bottom') == null ? 'bottom' : 'top';\r\n            textContent.setStyle({\r\n              fill: iconStyleEmphasisModel.get('textFill') || hoverStyle.fill || hoverStyle.stroke || '#000',\r\n              backgroundColor: iconStyleEmphasisModel.get('textBackgroundColor')\r\n            });\r\n            path.setTextConfig({\r\n              position: iconStyleEmphasisModel.get('textPosition') || defaultTextPosition\r\n            });\r\n            textContent.ignore = !toolboxModel.get('showTitle'); // Use enterEmphasis and leaveEmphasis provide by ec.\r\n            // There are flags managed by the echarts.\r\n\r\n            enterEmphasis(this);\r\n          }).on('mouseout', function () {\r\n            if (featureModel.get(['iconStatus', iconName]) !== 'emphasis') {\r\n              leaveEmphasis(this);\r\n            }\r\n\r\n            textContent.hide();\r\n          });\r\n          (featureModel.get(['iconStatus', iconName]) === 'emphasis' ? enterEmphasis : leaveEmphasis)(path);\r\n          group.add(path);\r\n          path.on('click', bind(feature.onclick, feature, ecModel, api, iconName));\r\n          iconPaths[iconName] = path;\r\n        });\r\n      }\r\n\r\n      layout$2(group, toolboxModel, api); // Render background after group is layout\r\n      // FIXME\r\n\r\n      group.add(makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\r\n\r\n      group.eachChild(function (icon) {\r\n        var titleText = icon.__title; // const hoverStyle = icon.hoverStyle;\r\n        // TODO simplify code?\r\n\r\n        var emphasisState = icon.ensureState('emphasis');\r\n        var emphasisTextConfig = emphasisState.textConfig || (emphasisState.textConfig = {});\r\n        var textContent = icon.getTextContent();\r\n        var emphasisTextState = textContent && textContent.states.emphasis; // May be background element\r\n\r\n        if (emphasisTextState && !isFunction$1(emphasisTextState) && titleText) {\r\n          var emphasisTextStyle = emphasisTextState.style || (emphasisTextState.style = {});\r\n          var rect = getBoundingRect(titleText, ZRText.makeFont(emphasisTextStyle));\r\n          var offsetX = icon.x + group.x;\r\n          var offsetY = icon.y + group.y + itemSize;\r\n          var needPutOnTop = false;\r\n\r\n          if (offsetY + rect.height > api.getHeight()) {\r\n            emphasisTextConfig.position = 'top';\r\n            needPutOnTop = true;\r\n          }\r\n\r\n          var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\r\n\r\n          if (offsetX + rect.width / 2 > api.getWidth()) {\r\n            emphasisTextConfig.position = ['100%', topOffset];\r\n            emphasisTextStyle.align = 'right';\r\n          } else if (offsetX - rect.width / 2 < 0) {\r\n            emphasisTextConfig.position = [0, topOffset];\r\n            emphasisTextStyle.align = 'left';\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    ToolboxView.prototype.updateView = function (toolboxModel, ecModel, api, payload) {\r\n      each$1(this._features, function (feature) {\r\n        feature instanceof ToolboxFeature && feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\r\n      });\r\n    }; // updateLayout(toolboxModel, ecModel, api, payload) {\r\n    //     zrUtil.each(this._features, function (feature) {\r\n    //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\r\n    //     });\r\n    // },\r\n\r\n\r\n    ToolboxView.prototype.remove = function (ecModel, api) {\r\n      each$1(this._features, function (feature) {\r\n        feature instanceof ToolboxFeature && feature.remove && feature.remove(ecModel, api);\r\n      });\r\n      this.group.removeAll();\r\n    };\r\n\r\n    ToolboxView.prototype.dispose = function (ecModel, api) {\r\n      each$1(this._features, function (feature) {\r\n        feature instanceof ToolboxFeature && feature.dispose && feature.dispose(ecModel, api);\r\n      });\r\n    };\r\n\r\n    ToolboxView.type = 'toolbox';\r\n    return ToolboxView;\r\n  }(ComponentView);\r\n\r\n  function isUserFeatureName(featureName) {\r\n    return featureName.indexOf('my') === 0;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /* global Uint8Array */\r\n\r\n\r\n  var SaveAsImage =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(SaveAsImage, _super);\r\n\r\n    function SaveAsImage() {\r\n      return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n\r\n    SaveAsImage.prototype.onclick = function (ecModel, api) {\r\n      var model = this.model;\r\n      var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\r\n      var isSvg = api.getZr().painter.getType() === 'svg';\r\n      var type = isSvg ? 'svg' : model.get('type', true) || 'png';\r\n      var url = api.getConnectedDataURL({\r\n        type: type,\r\n        backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\r\n        connectedBackgroundColor: model.get('connectedBackgroundColor'),\r\n        excludeComponents: model.get('excludeComponents'),\r\n        pixelRatio: model.get('pixelRatio')\r\n      }); // Chrome, Firefox, New Edge\r\n\r\n      if (typeof MouseEvent === 'function' && (env.browser.newEdge || !env.browser.ie && !env.browser.edge)) {\r\n        var $a = document.createElement('a');\r\n        $a.download = title + '.' + type;\r\n        $a.target = '_blank';\r\n        $a.href = url;\r\n        var evt = new MouseEvent('click', {\r\n          // some micro front-end framework， window maybe is a Proxy\r\n          view: document.defaultView,\r\n          bubbles: true,\r\n          cancelable: false\r\n        });\r\n        $a.dispatchEvent(evt);\r\n      } // IE or old Edge\r\n      else {\r\n          if (window.navigator.msSaveOrOpenBlob || isSvg) {\r\n            var parts = url.split(','); // data:[<mime type>][;charset=<charset>][;base64],<encoded data>\r\n\r\n            var base64Encoded = parts[0].indexOf('base64') > -1;\r\n            var bstr = isSvg // should decode the svg data uri first\r\n            ? decodeURIComponent(parts[1]) : parts[1]; // only `atob` when the data uri is encoded with base64\r\n            // otherwise, like `svg` data uri exported by zrender,\r\n            // there will be an error, for it's not encoded with base64.\r\n            // (just a url-encoded string through `encodeURIComponent`)\r\n\r\n            base64Encoded && (bstr = atob(bstr));\r\n            var filename = title + '.' + type;\r\n\r\n            if (window.navigator.msSaveOrOpenBlob) {\r\n              var n = bstr.length;\r\n              var u8arr = new Uint8Array(n);\r\n\r\n              while (n--) {\r\n                u8arr[n] = bstr.charCodeAt(n);\r\n              }\r\n\r\n              var blob = new Blob([u8arr]);\r\n              window.navigator.msSaveOrOpenBlob(blob, filename);\r\n            } else {\r\n              var frame = document.createElement('iframe');\r\n              document.body.appendChild(frame);\r\n              var cw = frame.contentWindow;\r\n              var doc = cw.document;\r\n              doc.open('image/svg+xml', 'replace');\r\n              doc.write(bstr);\r\n              doc.close();\r\n              cw.focus();\r\n              doc.execCommand('SaveAs', true, filename);\r\n              document.body.removeChild(frame);\r\n            }\r\n          } else {\r\n            var lang = model.get('lang');\r\n            var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\r\n            var tab = window.open();\r\n            tab.document.write(html);\r\n            tab.document.title = title;\r\n          }\r\n        }\r\n    };\r\n\r\n    SaveAsImage.getDefaultOption = function (ecModel) {\r\n      var defaultOption = {\r\n        show: true,\r\n        icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\r\n        title: ecModel.getLocale(['toolbox', 'saveAsImage', 'title']),\r\n        type: 'png',\r\n        // Default use option.backgroundColor\r\n        // backgroundColor: '#fff',\r\n        connectedBackgroundColor: '#fff',\r\n        name: '',\r\n        excludeComponents: ['toolbox'],\r\n        // use current pixel ratio of device by default\r\n        // pixelRatio: 1,\r\n        lang: ecModel.getLocale(['toolbox', 'saveAsImage', 'lang'])\r\n      };\r\n      return defaultOption;\r\n    };\r\n\r\n    return SaveAsImage;\r\n  }(ToolboxFeature);\r\n\r\n  SaveAsImage.prototype.unusable = !env.canvasSupported;\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var INNER_STACK_KEYWORD = '__ec_magicType_stack__';\r\n  var radioTypes = [['line', 'bar'], ['stack']];\r\n\r\n  var MagicType =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(MagicType, _super);\r\n\r\n    function MagicType() {\r\n      return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n\r\n    MagicType.prototype.getIcons = function () {\r\n      var model = this.model;\r\n      var availableIcons = model.get('icon');\r\n      var icons = {};\r\n      each$1(model.get('type'), function (type) {\r\n        if (availableIcons[type]) {\r\n          icons[type] = availableIcons[type];\r\n        }\r\n      });\r\n      return icons;\r\n    };\r\n\r\n    MagicType.getDefaultOption = function (ecModel) {\r\n      var defaultOption = {\r\n        show: true,\r\n        type: [],\r\n        // Icon group\r\n        icon: {\r\n          line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\r\n          bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\r\n          // eslint-disable-next-line\r\n          stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z' // jshint ignore:line\r\n\r\n        },\r\n        // `line`, `bar`, `stack`, `tiled`\r\n        title: ecModel.getLocale(['toolbox', 'magicType', 'title']),\r\n        option: {},\r\n        seriesIndex: {}\r\n      };\r\n      return defaultOption;\r\n    };\r\n\r\n    MagicType.prototype.onclick = function (ecModel, api, type) {\r\n      var model = this.model;\r\n      var seriesIndex = model.get(['seriesIndex', type]); // Not supported magicType\r\n\r\n      if (!seriesOptGenreator[type]) {\r\n        return;\r\n      }\r\n\r\n      var newOption = {\r\n        series: []\r\n      };\r\n\r\n      var generateNewSeriesTypes = function (seriesModel) {\r\n        var seriesType = seriesModel.subType;\r\n        var seriesId = seriesModel.id;\r\n        var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\r\n\r\n        if (newSeriesOpt) {\r\n          // PENDING If merge original option?\r\n          defaults(newSeriesOpt, seriesModel.option);\r\n          newOption.series.push(newSeriesOpt);\r\n        } // Modify boundaryGap\r\n\r\n\r\n        var coordSys = seriesModel.coordinateSystem;\r\n\r\n        if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\r\n          var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\r\n\r\n          if (categoryAxis) {\r\n            var axisDim = categoryAxis.dim;\r\n            var axisType = axisDim + 'Axis';\r\n            var axisModel = seriesModel.getReferringComponents(axisType, SINGLE_REFERRING).models[0];\r\n            var axisIndex = axisModel.componentIndex;\r\n            newOption[axisType] = newOption[axisType] || [];\r\n\r\n            for (var i = 0; i <= axisIndex; i++) {\r\n              newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\r\n            }\r\n\r\n            newOption[axisType][axisIndex].boundaryGap = type === 'bar';\r\n          }\r\n        }\r\n      };\r\n\r\n      each$1(radioTypes, function (radio) {\r\n        if (indexOf$1(radio, type) >= 0) {\r\n          each$1(radio, function (item) {\r\n            model.setIconStatus(item, 'normal');\r\n          });\r\n        }\r\n      });\r\n      model.setIconStatus(type, 'emphasis');\r\n      ecModel.eachComponent({\r\n        mainType: 'series',\r\n        query: seriesIndex == null ? null : {\r\n          seriesIndex: seriesIndex\r\n        }\r\n      }, generateNewSeriesTypes);\r\n      var newTitle; // Change title of stack\r\n\r\n      if (type === 'stack') {\r\n        // use titles in model instead of ecModel\r\n        // as stack and tiled appears in pair, just flip them\r\n        // no need of checking stack state\r\n        newTitle = merge({\r\n          stack: model.option.title.tiled,\r\n          tiled: model.option.title.stack\r\n        }, model.option.title);\r\n      }\r\n\r\n      api.dispatchAction({\r\n        type: 'changeMagicType',\r\n        currentType: type,\r\n        newOption: newOption,\r\n        newTitle: newTitle,\r\n        featureName: 'magicType'\r\n      });\r\n    };\r\n\r\n    return MagicType;\r\n  }(ToolboxFeature);\r\n\r\n  var seriesOptGenreator = {\r\n    'line': function (seriesType, seriesId, seriesModel, model) {\r\n      if (seriesType === 'bar') {\r\n        return merge({\r\n          id: seriesId,\r\n          type: 'line',\r\n          // Preserve data related option\r\n          data: seriesModel.get('data'),\r\n          stack: seriesModel.get('stack'),\r\n          markPoint: seriesModel.get('markPoint'),\r\n          markLine: seriesModel.get('markLine')\r\n        }, model.get(['option', 'line']) || {}, true);\r\n      }\r\n    },\r\n    'bar': function (seriesType, seriesId, seriesModel, model) {\r\n      if (seriesType === 'line') {\r\n        return merge({\r\n          id: seriesId,\r\n          type: 'bar',\r\n          // Preserve data related option\r\n          data: seriesModel.get('data'),\r\n          stack: seriesModel.get('stack'),\r\n          markPoint: seriesModel.get('markPoint'),\r\n          markLine: seriesModel.get('markLine')\r\n        }, model.get(['option', 'bar']) || {}, true);\r\n      }\r\n    },\r\n    'stack': function (seriesType, seriesId, seriesModel, model) {\r\n      var isStack = seriesModel.get('stack') === INNER_STACK_KEYWORD;\r\n\r\n      if (seriesType === 'line' || seriesType === 'bar') {\r\n        model.setIconStatus('stack', isStack ? 'normal' : 'emphasis');\r\n        return merge({\r\n          id: seriesId,\r\n          stack: isStack ? '' : INNER_STACK_KEYWORD\r\n        }, model.get(['option', 'stack']) || {}, true);\r\n      }\r\n    }\r\n  }; // TODO: SELF REGISTERED.\r\n\r\n  registerAction({\r\n    type: 'changeMagicType',\r\n    event: 'magicTypeChanged',\r\n    update: 'prepareAndUpdate'\r\n  }, function (payload, ecModel) {\r\n    ecModel.mergeOption(payload.newOption);\r\n  });\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var BLOCK_SPLITER = new Array(60).join('-');\r\n  var ITEM_SPLITER = '\\t';\r\n  /**\r\n   * Group series into two types\r\n   *  1. on category axis, like line, bar\r\n   *  2. others, like scatter, pie\r\n   */\r\n\r\n  function groupSeries(ecModel) {\r\n    var seriesGroupByCategoryAxis = {};\r\n    var otherSeries = [];\r\n    var meta = [];\r\n    ecModel.eachRawSeries(function (seriesModel) {\r\n      var coordSys = seriesModel.coordinateSystem;\r\n\r\n      if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\r\n        // TODO: TYPE Consider polar? Include polar may increase unecessary bundle size.\r\n        var baseAxis = coordSys.getBaseAxis();\r\n\r\n        if (baseAxis.type === 'category') {\r\n          var key = baseAxis.dim + '_' + baseAxis.index;\r\n\r\n          if (!seriesGroupByCategoryAxis[key]) {\r\n            seriesGroupByCategoryAxis[key] = {\r\n              categoryAxis: baseAxis,\r\n              valueAxis: coordSys.getOtherAxis(baseAxis),\r\n              series: []\r\n            };\r\n            meta.push({\r\n              axisDim: baseAxis.dim,\r\n              axisIndex: baseAxis.index\r\n            });\r\n          }\r\n\r\n          seriesGroupByCategoryAxis[key].series.push(seriesModel);\r\n        } else {\r\n          otherSeries.push(seriesModel);\r\n        }\r\n      } else {\r\n        otherSeries.push(seriesModel);\r\n      }\r\n    });\r\n    return {\r\n      seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\r\n      other: otherSeries,\r\n      meta: meta\r\n    };\r\n  }\r\n  /**\r\n   * Assemble content of series on cateogory axis\r\n   * @inner\r\n   */\r\n\r\n\r\n  function assembleSeriesWithCategoryAxis(groups) {\r\n    var tables = [];\r\n    each$1(groups, function (group, key) {\r\n      var categoryAxis = group.categoryAxis;\r\n      var valueAxis = group.valueAxis;\r\n      var valueAxisDim = valueAxis.dim;\r\n      var headers = [' '].concat(map(group.series, function (series) {\r\n        return series.name;\r\n      })); // @ts-ignore TODO Polar\r\n\r\n      var columns = [categoryAxis.model.getCategories()];\r\n      each$1(group.series, function (series) {\r\n        var rawData = series.getRawData();\r\n        columns.push(series.getRawData().mapArray(rawData.mapDimension(valueAxisDim), function (val) {\r\n          return val;\r\n        }));\r\n      }); // Assemble table content\r\n\r\n      var lines = [headers.join(ITEM_SPLITER)];\r\n\r\n      for (var i = 0; i < columns[0].length; i++) {\r\n        var items = [];\r\n\r\n        for (var j = 0; j < columns.length; j++) {\r\n          items.push(columns[j][i]);\r\n        }\r\n\r\n        lines.push(items.join(ITEM_SPLITER));\r\n      }\r\n\r\n      tables.push(lines.join('\\n'));\r\n    });\r\n    return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\r\n  }\r\n  /**\r\n   * Assemble content of other series\r\n   */\r\n\r\n\r\n  function assembleOtherSeries(series) {\r\n    return map(series, function (series) {\r\n      var data = series.getRawData();\r\n      var lines = [series.name];\r\n      var vals = [];\r\n      data.each(data.dimensions, function () {\r\n        var argLen = arguments.length;\r\n        var dataIndex = arguments[argLen - 1];\r\n        var name = data.getName(dataIndex);\r\n\r\n        for (var i = 0; i < argLen - 1; i++) {\r\n          vals[i] = arguments[i];\r\n        }\r\n\r\n        lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\r\n      });\r\n      return lines.join('\\n');\r\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\r\n  }\r\n\r\n  function getContentFromModel(ecModel) {\r\n    var result = groupSeries(ecModel);\r\n    return {\r\n      value: filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\r\n        return !!str.replace(/[\\n\\t\\s]/g, '');\r\n      }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\r\n      meta: result.meta\r\n    };\r\n  }\r\n\r\n  function trim$1(str) {\r\n    return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\r\n  }\r\n  /**\r\n   * If a block is tsv format\r\n   */\r\n\r\n\r\n  function isTSVFormat(block) {\r\n    // Simple method to find out if a block is tsv format\r\n    var firstLine = block.slice(0, block.indexOf('\\n'));\r\n\r\n    if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  var itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\r\n  /**\r\n   * @param {string} tsv\r\n   * @return {Object}\r\n   */\r\n\r\n  function parseTSVContents(tsv) {\r\n    var tsvLines = tsv.split(/\\n+/g);\r\n    var headers = trim$1(tsvLines.shift()).split(itemSplitRegex);\r\n    var categories = [];\r\n    var series = map(headers, function (header) {\r\n      return {\r\n        name: header,\r\n        data: []\r\n      };\r\n    });\r\n\r\n    for (var i = 0; i < tsvLines.length; i++) {\r\n      var items = trim$1(tsvLines[i]).split(itemSplitRegex);\r\n      categories.push(items.shift());\r\n\r\n      for (var j = 0; j < items.length; j++) {\r\n        series[j] && (series[j].data[i] = items[j]);\r\n      }\r\n    }\r\n\r\n    return {\r\n      series: series,\r\n      categories: categories\r\n    };\r\n  }\r\n\r\n  function parseListContents(str) {\r\n    var lines = str.split(/\\n+/g);\r\n    var seriesName = trim$1(lines.shift());\r\n    var data = [];\r\n\r\n    for (var i = 0; i < lines.length; i++) {\r\n      // if line is empty, ignore it.\r\n      // there is a case that a user forgot to delete `\\n`.\r\n      var line = trim$1(lines[i]);\r\n\r\n      if (!line) {\r\n        continue;\r\n      }\r\n\r\n      var items = line.split(itemSplitRegex);\r\n      var name_1 = '';\r\n      var value = void 0;\r\n      var hasName = false;\r\n\r\n      if (isNaN(items[0])) {\r\n        // First item is name\r\n        hasName = true;\r\n        name_1 = items[0];\r\n        items = items.slice(1);\r\n        data[i] = {\r\n          name: name_1,\r\n          value: []\r\n        };\r\n        value = data[i].value;\r\n      } else {\r\n        value = data[i] = [];\r\n      }\r\n\r\n      for (var j = 0; j < items.length; j++) {\r\n        value.push(+items[j]);\r\n      }\r\n\r\n      if (value.length === 1) {\r\n        hasName ? data[i].value = value[0] : data[i] = value[0];\r\n      }\r\n    }\r\n\r\n    return {\r\n      name: seriesName,\r\n      data: data\r\n    };\r\n  }\r\n\r\n  function parseContents(str, blockMetaList) {\r\n    var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\r\n    var newOption = {\r\n      series: []\r\n    };\r\n    each$1(blocks, function (block, idx) {\r\n      if (isTSVFormat(block)) {\r\n        var result = parseTSVContents(block);\r\n        var blockMeta = blockMetaList[idx];\r\n        var axisKey = blockMeta.axisDim + 'Axis';\r\n\r\n        if (blockMeta) {\r\n          newOption[axisKey] = newOption[axisKey] || [];\r\n          newOption[axisKey][blockMeta.axisIndex] = {\r\n            data: result.categories\r\n          };\r\n          newOption.series = newOption.series.concat(result.series);\r\n        }\r\n      } else {\r\n        var result = parseListContents(block);\r\n        newOption.series.push(result);\r\n      }\r\n    });\r\n    return newOption;\r\n  }\r\n\r\n  var DataView =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(DataView, _super);\r\n\r\n    function DataView() {\r\n      return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n\r\n    DataView.prototype.onclick = function (ecModel, api) {\r\n      var container = api.getDom();\r\n      var model = this.model;\r\n\r\n      if (this._dom) {\r\n        container.removeChild(this._dom);\r\n      }\r\n\r\n      var root = document.createElement('div');\r\n      root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\r\n      root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\r\n\r\n      var header = document.createElement('h4');\r\n      var lang = model.get('lang') || [];\r\n      header.innerHTML = lang[0] || model.get('title');\r\n      header.style.cssText = 'margin: 10px 20px;';\r\n      header.style.color = model.get('textColor');\r\n      var viewMain = document.createElement('div');\r\n      var textarea = document.createElement('textarea');\r\n      viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\r\n      var optionToContent = model.get('optionToContent');\r\n      var contentToOption = model.get('contentToOption');\r\n      var result = getContentFromModel(ecModel);\r\n\r\n      if (typeof optionToContent === 'function') {\r\n        var htmlOrDom = optionToContent(api.getOption());\r\n\r\n        if (typeof htmlOrDom === 'string') {\r\n          viewMain.innerHTML = htmlOrDom;\r\n        } else if (isDom(htmlOrDom)) {\r\n          viewMain.appendChild(htmlOrDom);\r\n        }\r\n      } else {\r\n        // Use default textarea\r\n        viewMain.appendChild(textarea);\r\n        textarea.readOnly = model.get('readOnly');\r\n        textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\r\n        textarea.style.color = model.get('textColor');\r\n        textarea.style.borderColor = model.get('textareaBorderColor');\r\n        textarea.style.backgroundColor = model.get('textareaColor');\r\n        textarea.value = result.value;\r\n      }\r\n\r\n      var blockMetaList = result.meta;\r\n      var buttonContainer = document.createElement('div');\r\n      buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\r\n      var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\r\n      var closeButton = document.createElement('div');\r\n      var refreshButton = document.createElement('div');\r\n      buttonStyle += ';background-color:' + model.get('buttonColor');\r\n      buttonStyle += ';color:' + model.get('buttonTextColor');\r\n      var self = this;\r\n\r\n      function close() {\r\n        container.removeChild(root);\r\n        self._dom = null;\r\n      }\r\n\r\n      addEventListener(closeButton, 'click', close);\r\n      addEventListener(refreshButton, 'click', function () {\r\n        if (contentToOption == null && optionToContent != null || contentToOption != null && optionToContent == null) {\r\n          {\r\n            // eslint-disable-next-line\r\n            console.warn('It seems you have just provided one of `contentToOption` and `optionToContent` functions but missed the other one. Data change is ignored.');\r\n          }\r\n          close();\r\n          return;\r\n        }\r\n\r\n        var newOption;\r\n\r\n        try {\r\n          if (typeof contentToOption === 'function') {\r\n            newOption = contentToOption(viewMain, api.getOption());\r\n          } else {\r\n            newOption = parseContents(textarea.value, blockMetaList);\r\n          }\r\n        } catch (e) {\r\n          close();\r\n          throw new Error('Data view format error ' + e);\r\n        }\r\n\r\n        if (newOption) {\r\n          api.dispatchAction({\r\n            type: 'changeDataView',\r\n            newOption: newOption\r\n          });\r\n        }\r\n\r\n        close();\r\n      });\r\n      closeButton.innerHTML = lang[1];\r\n      refreshButton.innerHTML = lang[2];\r\n      refreshButton.style.cssText = buttonStyle;\r\n      closeButton.style.cssText = buttonStyle;\r\n      !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\r\n      buttonContainer.appendChild(closeButton);\r\n      root.appendChild(header);\r\n      root.appendChild(viewMain);\r\n      root.appendChild(buttonContainer);\r\n      viewMain.style.height = container.clientHeight - 80 + 'px';\r\n      container.appendChild(root);\r\n      this._dom = root;\r\n    };\r\n\r\n    DataView.prototype.remove = function (ecModel, api) {\r\n      this._dom && api.getDom().removeChild(this._dom);\r\n    };\r\n\r\n    DataView.prototype.dispose = function (ecModel, api) {\r\n      this.remove(ecModel, api);\r\n    };\r\n\r\n    DataView.getDefaultOption = function (ecModel) {\r\n      var defaultOption = {\r\n        show: true,\r\n        readOnly: false,\r\n        optionToContent: null,\r\n        contentToOption: null,\r\n        // eslint-disable-next-line\r\n        icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\r\n        title: ecModel.getLocale(['toolbox', 'dataView', 'title']),\r\n        lang: ecModel.getLocale(['toolbox', 'dataView', 'lang']),\r\n        backgroundColor: '#fff',\r\n        textColor: '#000',\r\n        textareaColor: '#fff',\r\n        textareaBorderColor: '#333',\r\n        buttonColor: '#c23531',\r\n        buttonTextColor: '#fff'\r\n      };\r\n      return defaultOption;\r\n    };\r\n\r\n    return DataView;\r\n  }(ToolboxFeature);\r\n  /**\r\n   * @inner\r\n   */\r\n\r\n\r\n  function tryMergeDataOption(newData, originalData) {\r\n    return map(newData, function (newVal, idx) {\r\n      var original = originalData && originalData[idx];\r\n\r\n      if (isObject$1(original) && !isArray(original)) {\r\n        var newValIsObject = isObject$1(newVal) && !isArray(newVal);\r\n\r\n        if (!newValIsObject) {\r\n          newVal = {\r\n            value: newVal\r\n          };\r\n        } // original data has name but new data has no name\r\n\r\n\r\n        var shouldDeleteName = original.name != null && newVal.name == null; // Original data has option\r\n\r\n        newVal = defaults(newVal, original);\r\n        shouldDeleteName && delete newVal.name;\r\n        return newVal;\r\n      } else {\r\n        return newVal;\r\n      }\r\n    });\r\n  } // TODO: SELF REGISTERED.\r\n\r\n\r\n  registerAction({\r\n    type: 'changeDataView',\r\n    event: 'dataViewChanged',\r\n    update: 'prepareAndUpdate'\r\n  }, function (payload, ecModel) {\r\n    var newSeriesOptList = [];\r\n    each$1(payload.newOption.series, function (seriesOpt) {\r\n      var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\r\n\r\n      if (!seriesModel) {\r\n        // New created series\r\n        // Geuss the series type\r\n        newSeriesOptList.push(extend({\r\n          // Default is scatter\r\n          type: 'scatter'\r\n        }, seriesOpt));\r\n      } else {\r\n        var originalData = seriesModel.get('data');\r\n        newSeriesOptList.push({\r\n          name: seriesOpt.name,\r\n          data: tryMergeDataOption(seriesOpt.data, originalData)\r\n        });\r\n      }\r\n    });\r\n    ecModel.mergeOption(defaults({\r\n      series: newSeriesOptList\r\n    }, payload.newOption));\r\n  });\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var each$8 = each$1;\r\n  var inner$13 = makeInner();\r\n  /**\r\n   * @param ecModel\r\n   * @param newSnapshot key is dataZoomId\r\n   */\r\n\r\n  function push(ecModel, newSnapshot) {\r\n    var storedSnapshots = getStoreSnapshots(ecModel); // If previous dataZoom can not be found,\r\n    // complete an range with current range.\r\n\r\n    each$8(newSnapshot, function (batchItem, dataZoomId) {\r\n      var i = storedSnapshots.length - 1;\r\n\r\n      for (; i >= 0; i--) {\r\n        var snapshot = storedSnapshots[i];\r\n\r\n        if (snapshot[dataZoomId]) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (i < 0) {\r\n        // No origin range set, create one by current range.\r\n        var dataZoomModel = ecModel.queryComponents({\r\n          mainType: 'dataZoom',\r\n          subType: 'select',\r\n          id: dataZoomId\r\n        })[0];\r\n\r\n        if (dataZoomModel) {\r\n          var percentRange = dataZoomModel.getPercentRange();\r\n          storedSnapshots[0][dataZoomId] = {\r\n            dataZoomId: dataZoomId,\r\n            start: percentRange[0],\r\n            end: percentRange[1]\r\n          };\r\n        }\r\n      }\r\n    });\r\n    storedSnapshots.push(newSnapshot);\r\n  }\r\n\r\n  function pop(ecModel) {\r\n    var storedSnapshots = getStoreSnapshots(ecModel);\r\n    var head = storedSnapshots[storedSnapshots.length - 1];\r\n    storedSnapshots.length > 1 && storedSnapshots.pop(); // Find top for all dataZoom.\r\n\r\n    var snapshot = {};\r\n    each$8(head, function (batchItem, dataZoomId) {\r\n      for (var i = storedSnapshots.length - 1; i >= 0; i--) {\r\n        batchItem = storedSnapshots[i][dataZoomId];\r\n\r\n        if (batchItem) {\r\n          snapshot[dataZoomId] = batchItem;\r\n          break;\r\n        }\r\n      }\r\n    });\r\n    return snapshot;\r\n  }\r\n\r\n  function clear$1(ecModel) {\r\n    inner$13(ecModel).snapshots = null;\r\n  }\r\n\r\n  function count(ecModel) {\r\n    return getStoreSnapshots(ecModel).length;\r\n  }\r\n  /**\r\n   * History length of each dataZoom may be different.\r\n   * this._history[0] is used to store origin range.\r\n   */\r\n\r\n\r\n  function getStoreSnapshots(ecModel) {\r\n    var store = inner$13(ecModel);\r\n\r\n    if (!store.snapshots) {\r\n      store.snapshots = [{}];\r\n    }\r\n\r\n    return store.snapshots;\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var RestoreOption =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(RestoreOption, _super);\r\n\r\n    function RestoreOption() {\r\n      return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n\r\n    RestoreOption.prototype.onclick = function (ecModel, api) {\r\n      clear$1(ecModel);\r\n      api.dispatchAction({\r\n        type: 'restore',\r\n        from: this.uid\r\n      });\r\n    };\r\n\r\n    RestoreOption.getDefaultOption = function (ecModel) {\r\n      var defaultOption = {\r\n        show: true,\r\n        // eslint-disable-next-line\r\n        icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\r\n        title: ecModel.getLocale(['toolbox', 'restore', 'title'])\r\n      };\r\n      return defaultOption;\r\n    };\r\n\r\n    return RestoreOption;\r\n  }(ToolboxFeature); // TODO: SELF REGISTERED.\r\n\r\n\r\n  registerAction({\r\n    type: 'restore',\r\n    event: 'restore',\r\n    update: 'prepareAndUpdate'\r\n  }, function (payload, ecModel) {\r\n    ecModel.resetOption('recreate');\r\n  });\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  var BRUSH_PANEL_GLOBAL = true;\r\n  var mathMin$5 = Math.min;\r\n  var mathMax$5 = Math.max;\r\n  var mathPow$2 = Math.pow;\r\n  var COVER_Z = 10000;\r\n  var UNSELECT_THRESHOLD = 6;\r\n  var MIN_RESIZE_LINE_WIDTH = 6;\r\n  var MUTEX_RESOURCE_KEY = 'globalPan';\r\n  var DIRECTION_MAP = {\r\n    w: [0, 0],\r\n    e: [0, 1],\r\n    n: [1, 0],\r\n    s: [1, 1]\r\n  };\r\n  var CURSOR_MAP = {\r\n    w: 'ew',\r\n    e: 'ew',\r\n    n: 'ns',\r\n    s: 'ns',\r\n    ne: 'nesw',\r\n    sw: 'nesw',\r\n    nw: 'nwse',\r\n    se: 'nwse'\r\n  };\r\n  var DEFAULT_BRUSH_OPT = {\r\n    brushStyle: {\r\n      lineWidth: 2,\r\n      stroke: 'rgba(210,219,238,0.3)',\r\n      fill: '#D2DBEE'\r\n    },\r\n    transformable: true,\r\n    brushMode: 'single',\r\n    removeOnClick: false\r\n  };\r\n  var baseUID = 0;\r\n  /**\r\n   * params:\r\n   *     areas: Array.<Array>, coord relates to container group,\r\n   *                             If no container specified, to global.\r\n   *     opt {\r\n   *         isEnd: boolean,\r\n   *         removeOnClick: boolean\r\n   *     }\r\n   */\r\n\r\n  var BrushController =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(BrushController, _super);\r\n\r\n    function BrushController(zr) {\r\n      var _this = _super.call(this) || this;\r\n      /**\r\n       * @internal\r\n       */\r\n\r\n\r\n      _this._track = [];\r\n      /**\r\n       * @internal\r\n       */\r\n\r\n      _this._covers = [];\r\n      _this._handlers = {};\r\n      {\r\n        assert$1(zr);\r\n      }\r\n      _this._zr = zr;\r\n      _this.group = new Group();\r\n      _this._uid = 'brushController_' + baseUID++;\r\n      each$1(pointerHandlers, function (handler, eventName) {\r\n        this._handlers[eventName] = bind(handler, this);\r\n      }, _this);\r\n      return _this;\r\n    }\r\n    /**\r\n     * If set to `false`, select disabled.\r\n     */\r\n\r\n\r\n    BrushController.prototype.enableBrush = function (brushOption) {\r\n      {\r\n        assert$1(this._mounted);\r\n      }\r\n      this._brushType && this._doDisableBrush();\r\n      brushOption.brushType && this._doEnableBrush(brushOption);\r\n      return this;\r\n    };\r\n\r\n    BrushController.prototype._doEnableBrush = function (brushOption) {\r\n      var zr = this._zr; // Consider roam, which takes globalPan too.\r\n\r\n      if (!this._enableGlobalPan) {\r\n        take(zr, MUTEX_RESOURCE_KEY, this._uid);\r\n      }\r\n\r\n      each$1(this._handlers, function (handler, eventName) {\r\n        zr.on(eventName, handler);\r\n      });\r\n      this._brushType = brushOption.brushType;\r\n      this._brushOption = merge(clone(DEFAULT_BRUSH_OPT), brushOption, true);\r\n    };\r\n\r\n    BrushController.prototype._doDisableBrush = function () {\r\n      var zr = this._zr;\r\n      release(zr, MUTEX_RESOURCE_KEY, this._uid);\r\n      each$1(this._handlers, function (handler, eventName) {\r\n        zr.off(eventName, handler);\r\n      });\r\n      this._brushType = this._brushOption = null;\r\n    };\r\n    /**\r\n     * @param panelOpts If not pass, it is global brush.\r\n     */\r\n\r\n\r\n    BrushController.prototype.setPanels = function (panelOpts) {\r\n      if (panelOpts && panelOpts.length) {\r\n        var panels_1 = this._panels = {};\r\n        each$1(panelOpts, function (panelOpts) {\r\n          panels_1[panelOpts.panelId] = clone(panelOpts);\r\n        });\r\n      } else {\r\n        this._panels = null;\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    BrushController.prototype.mount = function (opt) {\r\n      opt = opt || {};\r\n      {\r\n        this._mounted = true; // should be at first.\r\n      }\r\n      this._enableGlobalPan = opt.enableGlobalPan;\r\n      var thisGroup = this.group;\r\n\r\n      this._zr.add(thisGroup);\r\n\r\n      thisGroup.attr({\r\n        x: opt.x || 0,\r\n        y: opt.y || 0,\r\n        rotation: opt.rotation || 0,\r\n        scaleX: opt.scaleX || 1,\r\n        scaleY: opt.scaleY || 1\r\n      });\r\n      this._transform = thisGroup.getLocalTransform();\r\n      return this;\r\n    }; // eachCover(cb, context): void {\r\n    //     each(this._covers, cb, context);\r\n    // }\r\n\r\n    /**\r\n     * Update covers.\r\n     * @param coverConfigList\r\n     *        If coverConfigList is null/undefined, all covers removed.\r\n     */\r\n\r\n\r\n    BrushController.prototype.updateCovers = function (coverConfigList) {\r\n      {\r\n        assert$1(this._mounted);\r\n      }\r\n      coverConfigList = map(coverConfigList, function (coverConfig) {\r\n        return merge(clone(DEFAULT_BRUSH_OPT), coverConfig, true);\r\n      });\r\n      var tmpIdPrefix = '\\0-brush-index-';\r\n      var oldCovers = this._covers;\r\n      var newCovers = this._covers = [];\r\n      var controller = this;\r\n      var creatingCover = this._creatingCover;\r\n      new DataDiffer(oldCovers, coverConfigList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\r\n      return this;\r\n\r\n      function getKey(brushOption, index) {\r\n        return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\r\n      }\r\n\r\n      function oldGetKey(cover, index) {\r\n        return getKey(cover.__brushOption, index);\r\n      }\r\n\r\n      function addOrUpdate(newIndex, oldIndex) {\r\n        var newBrushInternal = coverConfigList[newIndex]; // Consider setOption in event listener of brushSelect,\r\n        // where updating cover when creating should be forbiden.\r\n\r\n        if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\r\n          newCovers[newIndex] = oldCovers[oldIndex];\r\n        } else {\r\n          var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushInternal, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushInternal));\r\n          updateCoverAfterCreation(controller, cover);\r\n        }\r\n      }\r\n\r\n      function remove(oldIndex) {\r\n        if (oldCovers[oldIndex] !== creatingCover) {\r\n          controller.group.remove(oldCovers[oldIndex]);\r\n        }\r\n      }\r\n    };\r\n\r\n    BrushController.prototype.unmount = function () {\r\n      {\r\n        if (!this._mounted) {\r\n          return;\r\n        }\r\n      }\r\n      this.enableBrush(false); // container may 'removeAll' outside.\r\n\r\n      clearCovers(this);\r\n\r\n      this._zr.remove(this.group);\r\n\r\n      {\r\n        this._mounted = false; // should be at last.\r\n      }\r\n      return this;\r\n    };\r\n\r\n    BrushController.prototype.dispose = function () {\r\n      this.unmount();\r\n      this.off();\r\n    };\r\n\r\n    return BrushController;\r\n  }(Eventful);\r\n\r\n  function createCover(controller, brushOption) {\r\n    var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\r\n    cover.__brushOption = brushOption;\r\n    updateZ(cover, brushOption);\r\n    controller.group.add(cover);\r\n    return cover;\r\n  }\r\n\r\n  function endCreating(controller, creatingCover) {\r\n    var coverRenderer = getCoverRenderer(creatingCover);\r\n\r\n    if (coverRenderer.endCreating) {\r\n      coverRenderer.endCreating(controller, creatingCover);\r\n      updateZ(creatingCover, creatingCover.__brushOption);\r\n    }\r\n\r\n    return creatingCover;\r\n  }\r\n\r\n  function updateCoverShape(controller, cover) {\r\n    var brushOption = cover.__brushOption;\r\n    getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\r\n  }\r\n\r\n  function updateZ(cover, brushOption) {\r\n    var z = brushOption.z;\r\n    z == null && (z = COVER_Z);\r\n    cover.traverse(function (el) {\r\n      el.z = z;\r\n      el.z2 = z; // Consider in given container.\r\n    });\r\n  }\r\n\r\n  function updateCoverAfterCreation(controller, cover) {\r\n    getCoverRenderer(cover).updateCommon(controller, cover);\r\n    updateCoverShape(controller, cover);\r\n  }\r\n\r\n  function getCoverRenderer(cover) {\r\n    return coverRenderers[cover.__brushOption.brushType];\r\n  } // return target panel or `true` (means global panel)\r\n\r\n\r\n  function getPanelByPoint(controller, e, localCursorPoint) {\r\n    var panels = controller._panels;\r\n\r\n    if (!panels) {\r\n      return BRUSH_PANEL_GLOBAL; // Global panel\r\n    }\r\n\r\n    var panel;\r\n    var transform = controller._transform;\r\n    each$1(panels, function (pn) {\r\n      pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\r\n    });\r\n    return panel;\r\n  } // Return a panel or true\r\n\r\n\r\n  function getPanelByCover(controller, cover) {\r\n    var panels = controller._panels;\r\n\r\n    if (!panels) {\r\n      return BRUSH_PANEL_GLOBAL; // Global panel\r\n    }\r\n\r\n    var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\r\n    // which is then treated as global panel.\r\n\r\n    return panelId != null ? panels[panelId] : BRUSH_PANEL_GLOBAL;\r\n  }\r\n\r\n  function clearCovers(controller) {\r\n    var covers = controller._covers;\r\n    var originalLength = covers.length;\r\n    each$1(covers, function (cover) {\r\n      controller.group.remove(cover);\r\n    }, controller);\r\n    covers.length = 0;\r\n    return !!originalLength;\r\n  }\r\n\r\n  function trigger$1(controller, opt) {\r\n    var areas = map(controller._covers, function (cover) {\r\n      var brushOption = cover.__brushOption;\r\n      var range = clone(brushOption.range);\r\n      return {\r\n        brushType: brushOption.brushType,\r\n        panelId: brushOption.panelId,\r\n        range: range\r\n      };\r\n    });\r\n    controller.trigger('brush', {\r\n      areas: areas,\r\n      isEnd: !!opt.isEnd,\r\n      removeOnClick: !!opt.removeOnClick\r\n    });\r\n  }\r\n\r\n  function shouldShowCover(controller) {\r\n    var track = controller._track;\r\n\r\n    if (!track.length) {\r\n      return false;\r\n    }\r\n\r\n    var p2 = track[track.length - 1];\r\n    var p1 = track[0];\r\n    var dx = p2[0] - p1[0];\r\n    var dy = p2[1] - p1[1];\r\n    var dist = mathPow$2(dx * dx + dy * dy, 0.5);\r\n    return dist > UNSELECT_THRESHOLD;\r\n  }\r\n\r\n  function getTrackEnds(track) {\r\n    var tail = track.length - 1;\r\n    tail < 0 && (tail = 0);\r\n    return [track[0], track[tail]];\r\n  }\r\n\r\n  function createBaseRectCover(rectRangeConverter, controller, brushOption, edgeNameSequences) {\r\n    var cover = new Group();\r\n    cover.add(new Rect({\r\n      name: 'main',\r\n      style: makeStyle(brushOption),\r\n      silent: true,\r\n      draggable: true,\r\n      cursor: 'move',\r\n      drift: curry(driftRect, rectRangeConverter, controller, cover, ['n', 's', 'w', 'e']),\r\n      ondragend: curry(trigger$1, controller, {\r\n        isEnd: true\r\n      })\r\n    }));\r\n    each$1(edgeNameSequences, function (nameSequence) {\r\n      cover.add(new Rect({\r\n        name: nameSequence.join(''),\r\n        style: {\r\n          opacity: 0\r\n        },\r\n        draggable: true,\r\n        silent: true,\r\n        invisible: true,\r\n        drift: curry(driftRect, rectRangeConverter, controller, cover, nameSequence),\r\n        ondragend: curry(trigger$1, controller, {\r\n          isEnd: true\r\n        })\r\n      }));\r\n    });\r\n    return cover;\r\n  }\r\n\r\n  function updateBaseRect(controller, cover, localRange, brushOption) {\r\n    var lineWidth = brushOption.brushStyle.lineWidth || 0;\r\n    var handleSize = mathMax$5(lineWidth, MIN_RESIZE_LINE_WIDTH);\r\n    var x = localRange[0][0];\r\n    var y = localRange[1][0];\r\n    var xa = x - lineWidth / 2;\r\n    var ya = y - lineWidth / 2;\r\n    var x2 = localRange[0][1];\r\n    var y2 = localRange[1][1];\r\n    var x2a = x2 - handleSize + lineWidth / 2;\r\n    var y2a = y2 - handleSize + lineWidth / 2;\r\n    var width = x2 - x;\r\n    var height = y2 - y;\r\n    var widtha = width + lineWidth;\r\n    var heighta = height + lineWidth;\r\n    updateRectShape(controller, cover, 'main', x, y, width, height);\r\n\r\n    if (brushOption.transformable) {\r\n      updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\r\n      updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\r\n      updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\r\n      updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\r\n      updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\r\n      updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\r\n      updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\r\n      updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\r\n    }\r\n  }\r\n\r\n  function updateCommon(controller, cover) {\r\n    var brushOption = cover.__brushOption;\r\n    var transformable = brushOption.transformable;\r\n    var mainEl = cover.childAt(0);\r\n    mainEl.useStyle(makeStyle(brushOption));\r\n    mainEl.attr({\r\n      silent: !transformable,\r\n      cursor: transformable ? 'move' : 'default'\r\n    });\r\n    each$1([['w'], ['e'], ['n'], ['s'], ['s', 'e'], ['s', 'w'], ['n', 'e'], ['n', 'w']], function (nameSequence) {\r\n      var el = cover.childOfName(nameSequence.join(''));\r\n      var globalDir = nameSequence.length === 1 ? getGlobalDirection1(controller, nameSequence[0]) : getGlobalDirection2(controller, nameSequence);\r\n      el && el.attr({\r\n        silent: !transformable,\r\n        invisible: !transformable,\r\n        cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\r\n      });\r\n    });\r\n  }\r\n\r\n  function updateRectShape(controller, cover, name, x, y, w, h) {\r\n    var el = cover.childOfName(name);\r\n    el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\r\n  }\r\n\r\n  function makeStyle(brushOption) {\r\n    return defaults({\r\n      strokeNoScale: true\r\n    }, brushOption.brushStyle);\r\n  }\r\n\r\n  function formatRectRange(x, y, x2, y2) {\r\n    var min = [mathMin$5(x, x2), mathMin$5(y, y2)];\r\n    var max = [mathMax$5(x, x2), mathMax$5(y, y2)];\r\n    return [[min[0], max[0]], [min[1], max[1]] // y range\r\n    ];\r\n  }\r\n\r\n  function getTransform$1(controller) {\r\n    return getTransform(controller.group);\r\n  }\r\n\r\n  function getGlobalDirection1(controller, localDirName) {\r\n    var map$$1 = {\r\n      w: 'left',\r\n      e: 'right',\r\n      n: 'top',\r\n      s: 'bottom'\r\n    };\r\n    var inverseMap = {\r\n      left: 'w',\r\n      right: 'e',\r\n      top: 'n',\r\n      bottom: 's'\r\n    };\r\n    var dir = transformDirection(map$$1[localDirName], getTransform$1(controller));\r\n    return inverseMap[dir];\r\n  }\r\n\r\n  function getGlobalDirection2(controller, localDirNameSeq) {\r\n    var globalDir = [getGlobalDirection1(controller, localDirNameSeq[0]), getGlobalDirection1(controller, localDirNameSeq[1])];\r\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\r\n    return globalDir.join('');\r\n  }\r\n\r\n  function driftRect(rectRangeConverter, controller, cover, dirNameSequence, dx, dy) {\r\n    var brushOption = cover.__brushOption;\r\n    var rectRange = rectRangeConverter.toRectRange(brushOption.range);\r\n    var localDelta = toLocalDelta(controller, dx, dy);\r\n    each$1(dirNameSequence, function (dirName) {\r\n      var ind = DIRECTION_MAP[dirName];\r\n      rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\r\n    });\r\n    brushOption.range = rectRangeConverter.fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\r\n    updateCoverAfterCreation(controller, cover);\r\n    trigger$1(controller, {\r\n      isEnd: false\r\n    });\r\n  }\r\n\r\n  function driftPolygon(controller, cover, dx, dy) {\r\n    var range = cover.__brushOption.range;\r\n    var localDelta = toLocalDelta(controller, dx, dy);\r\n    each$1(range, function (point) {\r\n      point[0] += localDelta[0];\r\n      point[1] += localDelta[1];\r\n    });\r\n    updateCoverAfterCreation(controller, cover);\r\n    trigger$1(controller, {\r\n      isEnd: false\r\n    });\r\n  }\r\n\r\n  function toLocalDelta(controller, dx, dy) {\r\n    var thisGroup = controller.group;\r\n    var localD = thisGroup.transformCoordToLocal(dx, dy);\r\n    var localZero = thisGroup.transformCoordToLocal(0, 0);\r\n    return [localD[0] - localZero[0], localD[1] - localZero[1]];\r\n  }\r\n\r\n  function clipByPanel(controller, cover, data) {\r\n    var panel = getPanelByCover(controller, cover);\r\n    return panel && panel !== BRUSH_PANEL_GLOBAL ? panel.clipPath(data, controller._transform) : clone(data);\r\n  }\r\n\r\n  function pointsToRect(points) {\r\n    var xmin = mathMin$5(points[0][0], points[1][0]);\r\n    var ymin = mathMin$5(points[0][1], points[1][1]);\r\n    var xmax = mathMax$5(points[0][0], points[1][0]);\r\n    var ymax = mathMax$5(points[0][1], points[1][1]);\r\n    return {\r\n      x: xmin,\r\n      y: ymin,\r\n      width: xmax - xmin,\r\n      height: ymax - ymin\r\n    };\r\n  }\r\n\r\n  function resetCursor(controller, e, localCursorPoint) {\r\n    if ( // Check active\r\n    !controller._brushType // resetCursor should be always called when mouse is in zr area,\r\n    // but not called when mouse is out of zr area to avoid bad influence\r\n    // if `mousemove`, `mouseup` are triggered from `document` event.\r\n    || isOutsideZrArea(controller, e.offsetX, e.offsetY)) {\r\n      return;\r\n    }\r\n\r\n    var zr = controller._zr;\r\n    var covers = controller._covers;\r\n    var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\r\n\r\n    if (!controller._dragging) {\r\n      for (var i = 0; i < covers.length; i++) {\r\n        var brushOption = covers[i].__brushOption;\r\n\r\n        if (currPanel && (currPanel === BRUSH_PANEL_GLOBAL || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\r\n          // Use cursor style set on cover.\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    currPanel && zr.setCursorStyle('crosshair');\r\n  }\r\n\r\n  function preventDefault(e) {\r\n    var rawE = e.event;\r\n    rawE.preventDefault && rawE.preventDefault();\r\n  }\r\n\r\n  function mainShapeContain(cover, x, y) {\r\n    return cover.childOfName('main').contain(x, y);\r\n  }\r\n\r\n  function updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\r\n    var creatingCover = controller._creatingCover;\r\n    var panel = controller._creatingPanel;\r\n    var thisBrushOption = controller._brushOption;\r\n    var eventParams;\r\n\r\n    controller._track.push(localCursorPoint.slice());\r\n\r\n    if (shouldShowCover(controller) || creatingCover) {\r\n      if (panel && !creatingCover) {\r\n        thisBrushOption.brushMode === 'single' && clearCovers(controller);\r\n        var brushOption = clone(thisBrushOption);\r\n        brushOption.brushType = determineBrushType(brushOption.brushType, panel);\r\n        brushOption.panelId = panel === BRUSH_PANEL_GLOBAL ? null : panel.panelId;\r\n        creatingCover = controller._creatingCover = createCover(controller, brushOption);\r\n\r\n        controller._covers.push(creatingCover);\r\n      }\r\n\r\n      if (creatingCover) {\r\n        var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\r\n        var coverBrushOption = creatingCover.__brushOption;\r\n        coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\r\n\r\n        if (isEnd) {\r\n          endCreating(controller, creatingCover);\r\n          coverRenderer.updateCommon(controller, creatingCover);\r\n        }\r\n\r\n        updateCoverShape(controller, creatingCover);\r\n        eventParams = {\r\n          isEnd: isEnd\r\n        };\r\n      }\r\n    } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\r\n      // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\r\n      // But a single click do not clear covers, because user may have casual\r\n      // clicks (for example, click on other component and do not expect covers\r\n      // disappear).\r\n      // Only some cover removed, trigger action, but not every click trigger action.\r\n      if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\r\n        eventParams = {\r\n          isEnd: isEnd,\r\n          removeOnClick: true\r\n        };\r\n      }\r\n    }\r\n\r\n    return eventParams;\r\n  }\r\n\r\n  function determineBrushType(brushType, panel) {\r\n    if (brushType === 'auto') {\r\n      {\r\n        assert$1(panel && panel.defaultBrushType, 'MUST have defaultBrushType when brushType is \"atuo\"');\r\n      }\r\n      return panel.defaultBrushType;\r\n    }\r\n\r\n    return brushType;\r\n  }\r\n\r\n  var pointerHandlers = {\r\n    mousedown: function (e) {\r\n      if (this._dragging) {\r\n        // In case some browser do not support globalOut,\r\n        // and release mouse out side the browser.\r\n        handleDragEnd(this, e);\r\n      } else if (!e.target || !e.target.draggable) {\r\n        preventDefault(e);\r\n        var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\r\n        this._creatingCover = null;\r\n        var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\r\n\r\n        if (panel) {\r\n          this._dragging = true;\r\n          this._track = [localCursorPoint.slice()];\r\n        }\r\n      }\r\n    },\r\n    mousemove: function (e) {\r\n      var x = e.offsetX;\r\n      var y = e.offsetY;\r\n      var localCursorPoint = this.group.transformCoordToLocal(x, y);\r\n      resetCursor(this, e, localCursorPoint);\r\n\r\n      if (this._dragging) {\r\n        preventDefault(e);\r\n        var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\r\n        eventParams && trigger$1(this, eventParams);\r\n      }\r\n    },\r\n    mouseup: function (e) {\r\n      handleDragEnd(this, e);\r\n    }\r\n  };\r\n\r\n  function handleDragEnd(controller, e) {\r\n    if (controller._dragging) {\r\n      preventDefault(e);\r\n      var x = e.offsetX;\r\n      var y = e.offsetY;\r\n      var localCursorPoint = controller.group.transformCoordToLocal(x, y);\r\n      var eventParams = updateCoverByMouse(controller, e, localCursorPoint, true);\r\n      controller._dragging = false;\r\n      controller._track = [];\r\n      controller._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\r\n\r\n      eventParams && trigger$1(controller, eventParams);\r\n    }\r\n  }\r\n\r\n  function isOutsideZrArea(controller, x, y) {\r\n    var zr = controller._zr;\r\n    return x < 0 || x > zr.getWidth() || y < 0 || y > zr.getHeight();\r\n  }\r\n  /**\r\n   * key: brushType\r\n   */\r\n\r\n\r\n  var coverRenderers = {\r\n    lineX: getLineRenderer(0),\r\n    lineY: getLineRenderer(1),\r\n    rect: {\r\n      createCover: function (controller, brushOption) {\r\n        function returnInput(range) {\r\n          return range;\r\n        }\r\n\r\n        return createBaseRectCover({\r\n          toRectRange: returnInput,\r\n          fromRectRange: returnInput\r\n        }, controller, brushOption, [['w'], ['e'], ['n'], ['s'], ['s', 'e'], ['s', 'w'], ['n', 'e'], ['n', 'w']]);\r\n      },\r\n      getCreatingRange: function (localTrack) {\r\n        var ends = getTrackEnds(localTrack);\r\n        return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\r\n      },\r\n      updateCoverShape: function (controller, cover, localRange, brushOption) {\r\n        updateBaseRect(controller, cover, localRange, brushOption);\r\n      },\r\n      updateCommon: updateCommon,\r\n      contain: mainShapeContain\r\n    },\r\n    polygon: {\r\n      createCover: function (controller, brushOption) {\r\n        var cover = new Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\r\n        // border of the shape when drawing, which is a better experience for user.\r\n\r\n        cover.add(new Polyline({\r\n          name: 'main',\r\n          style: makeStyle(brushOption),\r\n          silent: true\r\n        }));\r\n        return cover;\r\n      },\r\n      getCreatingRange: function (localTrack) {\r\n        return localTrack;\r\n      },\r\n      endCreating: function (controller, cover) {\r\n        cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\r\n\r\n        cover.add(new Polygon({\r\n          name: 'main',\r\n          draggable: true,\r\n          drift: curry(driftPolygon, controller, cover),\r\n          ondragend: curry(trigger$1, controller, {\r\n            isEnd: true\r\n          })\r\n        }));\r\n      },\r\n      updateCoverShape: function (controller, cover, localRange, brushOption) {\r\n        cover.childAt(0).setShape({\r\n          points: clipByPanel(controller, cover, localRange)\r\n        });\r\n      },\r\n      updateCommon: updateCommon,\r\n      contain: mainShapeContain\r\n    }\r\n  };\r\n\r\n  function getLineRenderer(xyIndex) {\r\n    return {\r\n      createCover: function (controller, brushOption) {\r\n        return createBaseRectCover({\r\n          toRectRange: function (range) {\r\n            var rectRange = [range, [0, 100]];\r\n            xyIndex && rectRange.reverse();\r\n            return rectRange;\r\n          },\r\n          fromRectRange: function (rectRange) {\r\n            return rectRange[xyIndex];\r\n          }\r\n        }, controller, brushOption, [[['w'], ['e']], [['n'], ['s']]][xyIndex]);\r\n      },\r\n      getCreatingRange: function (localTrack) {\r\n        var ends = getTrackEnds(localTrack);\r\n        var min = mathMin$5(ends[0][xyIndex], ends[1][xyIndex]);\r\n        var max = mathMax$5(ends[0][xyIndex], ends[1][xyIndex]);\r\n        return [min, max];\r\n      },\r\n      updateCoverShape: function (controller, cover, localRange, brushOption) {\r\n        var otherExtent; // If brushWidth not specified, fit the panel.\r\n\r\n        var panel = getPanelByCover(controller, cover);\r\n\r\n        if (panel !== BRUSH_PANEL_GLOBAL && panel.getLinearBrushOtherExtent) {\r\n          otherExtent = panel.getLinearBrushOtherExtent(xyIndex);\r\n        } else {\r\n          var zr = controller._zr;\r\n          otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\r\n        }\r\n\r\n        var rectRange = [localRange, otherExtent];\r\n        xyIndex && rectRange.reverse();\r\n        updateBaseRect(controller, cover, rectRange, brushOption);\r\n      },\r\n      updateCommon: updateCommon,\r\n      contain: mainShapeContain\r\n    };\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  function makeRectPanelClipPath(rect) {\r\n    rect = normalizeRect(rect);\r\n    return function (localPoints) {\r\n      return clipPointsByRect(localPoints, rect);\r\n    };\r\n  }\r\n\r\n  function makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\r\n    rect = normalizeRect(rect);\r\n    return function (xyIndex) {\r\n      var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\r\n      var brushWidth = idx ? rect.width : rect.height;\r\n      var base = idx ? rect.x : rect.y;\r\n      return [base, base + (brushWidth || 0)];\r\n    };\r\n  }\r\n\r\n  function makeRectIsTargetByCursor(rect, api, targetModel) {\r\n    var boundingRect = normalizeRect(rect);\r\n    return function (e, localCursorPoint) {\r\n      return boundingRect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\r\n    };\r\n  } // Consider width/height is negative.\r\n\r\n\r\n  function normalizeRect(rect) {\r\n    return BoundingRect.create(rect);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\r\n  // how to genarialize to more coordinate systems.\r\n\r\n  var INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\r\n\r\n  var BrushTargetManager =\r\n  /** @class */\r\n  function () {\r\n    /**\r\n     * @param finder contains Index/Id/Name of xAxis/yAxis/geo/grid\r\n     *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\r\n     * @param opt.include include coordinate system types.\r\n     */\r\n    function BrushTargetManager(finder, ecModel, opt) {\r\n      var _this = this;\r\n\r\n      this._targetInfoList = [];\r\n      var foundCpts = parseFinder$1(ecModel, finder);\r\n      each$1(targetInfoBuilders, function (builder, type) {\r\n        if (!opt || !opt.include || indexOf$1(opt.include, type) >= 0) {\r\n          builder(foundCpts, _this._targetInfoList);\r\n        }\r\n      });\r\n    }\r\n\r\n    BrushTargetManager.prototype.setOutputRanges = function (areas, ecModel) {\r\n      this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\r\n        (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\r\n\r\n        if (!area.coordRange) {\r\n          area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\r\n          // rebuild range by coordRange accrately, which may bring trouble when\r\n          // brushing only one item. So we use __rangeOffset to rebuilding range\r\n          // by coordRange. And this it only used in brush component so it is no\r\n          // need to be adapted to coordRanges.\r\n\r\n          var result = coordConvert[area.brushType](0, coordSys, coordRange);\r\n          area.__rangeOffset = {\r\n            offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\r\n            xyMinMax: result.xyMinMax\r\n          };\r\n        }\r\n      });\r\n      return areas;\r\n    };\r\n\r\n    BrushTargetManager.prototype.matchOutputRanges = function (areas, ecModel, cb) {\r\n      each$1(areas, function (area) {\r\n        var targetInfo = this.findTargetInfo(area, ecModel);\r\n\r\n        if (targetInfo && targetInfo !== true) {\r\n          each$1(targetInfo.coordSyses, function (coordSys) {\r\n            var result = coordConvert[area.brushType](1, coordSys, area.range);\r\n            cb(area, result.values, coordSys, ecModel);\r\n          });\r\n        }\r\n      }, this);\r\n    };\r\n    /**\r\n     * the `areas` is `BrushModel.areas`.\r\n     * Called in layout stage.\r\n     * convert `area.coordRange` to global range and set panelId to `area.range`.\r\n     */\r\n\r\n\r\n    BrushTargetManager.prototype.setInputRanges = function (areas, ecModel) {\r\n      each$1(areas, function (area) {\r\n        var targetInfo = this.findTargetInfo(area, ecModel);\r\n        {\r\n          assert$1(!targetInfo || targetInfo === true || area.coordRange, 'coordRange must be specified when coord index specified.');\r\n          assert$1(!targetInfo || targetInfo !== true || area.range, 'range must be specified in global brush.');\r\n        }\r\n        area.range = area.range || []; // convert coordRange to global range and set panelId.\r\n\r\n        if (targetInfo && targetInfo !== true) {\r\n          area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\r\n          // not keep its original value, for the sake of the dataZoom scenario,\r\n          // where area.coordRange remains unchanged but area.range may be changed.\r\n          // (2) Only support converting one coordRange to pixel range in brush\r\n          // component. So do not consider `coordRanges`.\r\n          // (3) About __rangeOffset, see comment above.\r\n\r\n          var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\r\n          var rangeOffset = area.__rangeOffset;\r\n          area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\r\n        }\r\n      }, this);\r\n    };\r\n\r\n    BrushTargetManager.prototype.makePanelOpts = function (api, getDefaultBrushType) {\r\n      return map(this._targetInfoList, function (targetInfo) {\r\n        var rect = targetInfo.getPanelRect();\r\n        return {\r\n          panelId: targetInfo.panelId,\r\n          defaultBrushType: getDefaultBrushType ? getDefaultBrushType(targetInfo) : null,\r\n          clipPath: makeRectPanelClipPath(rect),\r\n          isTargetByCursor: makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\r\n          getLinearBrushOtherExtent: makeLinearBrushOtherExtent(rect)\r\n        };\r\n      });\r\n    };\r\n\r\n    BrushTargetManager.prototype.controlSeries = function (area, seriesModel, ecModel) {\r\n      // Check whether area is bound in coord, and series do not belong to that coord.\r\n      // If do not do this check, some brush (like lineX) will controll all axes.\r\n      var targetInfo = this.findTargetInfo(area, ecModel);\r\n      return targetInfo === true || targetInfo && indexOf$1(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\r\n    };\r\n    /**\r\n     * If return Object, a coord found.\r\n     * If reutrn true, global found.\r\n     * Otherwise nothing found.\r\n     */\r\n\r\n\r\n    BrushTargetManager.prototype.findTargetInfo = function (area, ecModel) {\r\n      var targetInfoList = this._targetInfoList;\r\n      var foundCpts = parseFinder$1(ecModel, area);\r\n\r\n      for (var i = 0; i < targetInfoList.length; i++) {\r\n        var targetInfo = targetInfoList[i];\r\n        var areaPanelId = area.panelId;\r\n\r\n        if (areaPanelId) {\r\n          if (targetInfo.panelId === areaPanelId) {\r\n            return targetInfo;\r\n          }\r\n        } else {\r\n          for (var j = 0; j < targetInfoMatchers.length; j++) {\r\n            if (targetInfoMatchers[j](foundCpts, targetInfo)) {\r\n              return targetInfo;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return true;\r\n    };\r\n\r\n    return BrushTargetManager;\r\n  }();\r\n\r\n  function formatMinMax(minMax) {\r\n    minMax[0] > minMax[1] && minMax.reverse();\r\n    return minMax;\r\n  }\r\n\r\n  function parseFinder$1(ecModel, finder) {\r\n    return parseFinder(ecModel, finder, {\r\n      includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\r\n    });\r\n  }\r\n\r\n  var targetInfoBuilders = {\r\n    grid: function (foundCpts, targetInfoList) {\r\n      var xAxisModels = foundCpts.xAxisModels;\r\n      var yAxisModels = foundCpts.yAxisModels;\r\n      var gridModels = foundCpts.gridModels; // Remove duplicated.\r\n\r\n      var gridModelMap = createHashMap();\r\n      var xAxesHas = {};\r\n      var yAxesHas = {};\r\n\r\n      if (!xAxisModels && !yAxisModels && !gridModels) {\r\n        return;\r\n      }\r\n\r\n      each$1(xAxisModels, function (axisModel) {\r\n        var gridModel = axisModel.axis.grid.model;\r\n        gridModelMap.set(gridModel.id, gridModel);\r\n        xAxesHas[gridModel.id] = true;\r\n      });\r\n      each$1(yAxisModels, function (axisModel) {\r\n        var gridModel = axisModel.axis.grid.model;\r\n        gridModelMap.set(gridModel.id, gridModel);\r\n        yAxesHas[gridModel.id] = true;\r\n      });\r\n      each$1(gridModels, function (gridModel) {\r\n        gridModelMap.set(gridModel.id, gridModel);\r\n        xAxesHas[gridModel.id] = true;\r\n        yAxesHas[gridModel.id] = true;\r\n      });\r\n      gridModelMap.each(function (gridModel) {\r\n        var grid = gridModel.coordinateSystem;\r\n        var cartesians = [];\r\n        each$1(grid.getCartesians(), function (cartesian, index) {\r\n          if (indexOf$1(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf$1(yAxisModels, cartesian.getAxis('y').model) >= 0) {\r\n            cartesians.push(cartesian);\r\n          }\r\n        });\r\n        targetInfoList.push({\r\n          panelId: 'grid--' + gridModel.id,\r\n          gridModel: gridModel,\r\n          coordSysModel: gridModel,\r\n          // Use the first one as the representitive coordSys.\r\n          coordSys: cartesians[0],\r\n          coordSyses: cartesians,\r\n          getPanelRect: panelRectBuilders.grid,\r\n          xAxisDeclared: xAxesHas[gridModel.id],\r\n          yAxisDeclared: yAxesHas[gridModel.id]\r\n        });\r\n      });\r\n    },\r\n    geo: function (foundCpts, targetInfoList) {\r\n      each$1(foundCpts.geoModels, function (geoModel) {\r\n        var coordSys = geoModel.coordinateSystem;\r\n        targetInfoList.push({\r\n          panelId: 'geo--' + geoModel.id,\r\n          geoModel: geoModel,\r\n          coordSysModel: geoModel,\r\n          coordSys: coordSys,\r\n          coordSyses: [coordSys],\r\n          getPanelRect: panelRectBuilders.geo\r\n        });\r\n      });\r\n    }\r\n  };\r\n  var targetInfoMatchers = [// grid\r\n  function (foundCpts, targetInfo) {\r\n    var xAxisModel = foundCpts.xAxisModel;\r\n    var yAxisModel = foundCpts.yAxisModel;\r\n    var gridModel = foundCpts.gridModel;\r\n    !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\r\n    !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\r\n    return gridModel && gridModel === targetInfo.gridModel;\r\n  }, // geo\r\n  function (foundCpts, targetInfo) {\r\n    var geoModel = foundCpts.geoModel;\r\n    return geoModel && geoModel === targetInfo.geoModel;\r\n  }];\r\n  var panelRectBuilders = {\r\n    grid: function () {\r\n      // grid is not Transformable.\r\n      return this.coordSys.master.getRect().clone();\r\n    },\r\n    geo: function () {\r\n      var coordSys = this.coordSys;\r\n      var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\r\n\r\n      rect.applyTransform(getTransform(coordSys));\r\n      return rect;\r\n    }\r\n  };\r\n  var coordConvert = {\r\n    lineX: curry(axisConvert, 0),\r\n    lineY: curry(axisConvert, 1),\r\n    rect: function (to, coordSys, rangeOrCoordRange) {\r\n      var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\r\n      var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\r\n      var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\r\n      return {\r\n        values: values,\r\n        xyMinMax: values\r\n      };\r\n    },\r\n    polygon: function (to, coordSys, rangeOrCoordRange) {\r\n      var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\r\n      var values = map(rangeOrCoordRange, function (item) {\r\n        var p = coordSys[COORD_CONVERTS[to]](item);\r\n        xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\r\n        xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\r\n        xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\r\n        xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\r\n        return p;\r\n      });\r\n      return {\r\n        values: values,\r\n        xyMinMax: xyMinMax\r\n      };\r\n    }\r\n  };\r\n\r\n  function axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\r\n    {\r\n      assert$1(coordSys.type === 'cartesian2d', 'lineX/lineY brush is available only in cartesian2d.');\r\n    }\r\n    var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\r\n    var values = formatMinMax(map([0, 1], function (i) {\r\n      return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\r\n    }));\r\n    var xyMinMax = [];\r\n    xyMinMax[axisNameIndex] = values;\r\n    xyMinMax[1 - axisNameIndex] = [NaN, NaN];\r\n    return {\r\n      values: values,\r\n      xyMinMax: xyMinMax\r\n    };\r\n  }\r\n\r\n  var diffProcessor = {\r\n    lineX: curry(axisDiffProcessor, 0),\r\n    lineY: curry(axisDiffProcessor, 1),\r\n    rect: function (values, refer, scales) {\r\n      return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\r\n    },\r\n    polygon: function (values, refer, scales) {\r\n      return map(values, function (item, idx) {\r\n        return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\r\n      });\r\n    }\r\n  };\r\n\r\n  function axisDiffProcessor(axisNameIndex, values, refer, scales) {\r\n    return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\r\n  } // We have to process scale caused by dataZoom manually,\r\n  // although it might be not accurate.\r\n  // Return [0~1, 0~1]\r\n\r\n\r\n  function getScales(xyMinMaxCurr, xyMinMaxOrigin) {\r\n    var sizeCurr = getSize(xyMinMaxCurr);\r\n    var sizeOrigin = getSize(xyMinMaxOrigin);\r\n    var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\r\n    isNaN(scales[0]) && (scales[0] = 1);\r\n    isNaN(scales[1]) && (scales[1] = 1);\r\n    return scales;\r\n  }\r\n\r\n  function getSize(xyMinMax) {\r\n    return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  var each$9 = each$1;\r\n  var DATA_ZOOM_ID_BASE = makeInternalComponentId('toolbox-dataZoom_');\r\n\r\n  var DataZoomFeature =\r\n  /** @class */\r\n  function (_super) {\r\n    __extends(DataZoomFeature, _super);\r\n\r\n    function DataZoomFeature() {\r\n      return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n\r\n    DataZoomFeature.prototype.render = function (featureModel, ecModel, api, payload) {\r\n      if (!this._brushController) {\r\n        this._brushController = new BrushController(api.getZr());\r\n\r\n        this._brushController.on('brush', bind(this._onBrush, this)).mount();\r\n      }\r\n\r\n      updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\r\n      updateBackBtnStatus(featureModel, ecModel);\r\n    };\r\n\r\n    DataZoomFeature.prototype.onclick = function (ecModel, api, type) {\r\n      handlers[type].call(this);\r\n    };\r\n\r\n    DataZoomFeature.prototype.remove = function (ecModel, api) {\r\n      this._brushController && this._brushController.unmount();\r\n    };\r\n\r\n    DataZoomFeature.prototype.dispose = function (ecModel, api) {\r\n      this._brushController && this._brushController.dispose();\r\n    };\r\n\r\n    DataZoomFeature.prototype._onBrush = function (eventParam) {\r\n      var areas = eventParam.areas;\r\n\r\n      if (!eventParam.isEnd || !areas.length) {\r\n        return;\r\n      }\r\n\r\n      var snapshot = {};\r\n      var ecModel = this.ecModel;\r\n\r\n      this._brushController.updateCovers([]); // remove cover\r\n\r\n\r\n      var brushTargetManager = new BrushTargetManager(makeAxisFinder(this.model), ecModel, {\r\n        include: ['grid']\r\n      });\r\n      brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\r\n        if (coordSys.type !== 'cartesian2d') {\r\n          return;\r\n        }\r\n\r\n        var brushType = area.brushType;\r\n\r\n        if (brushType === 'rect') {\r\n          setBatch('x', coordSys, coordRange[0]);\r\n          setBatch('y', coordSys, coordRange[1]);\r\n        } else {\r\n          setBatch({\r\n            lineX: 'x',\r\n            lineY: 'y'\r\n          }[brushType], coordSys, coordRange);\r\n        }\r\n      });\r\n      push(ecModel, snapshot);\r\n\r\n      this._dispatchZoomAction(snapshot);\r\n\r\n      function setBatch(dimName, coordSys, minMax) {\r\n        var axis = coordSys.getAxis(dimName);\r\n        var axisModel = axis.model;\r\n        var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\r\n\r\n        var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\r\n\r\n        if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\r\n          minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\r\n        }\r\n\r\n        dataZoomModel && (snapshot[dataZoomModel.id] = {\r\n          dataZoomId: dataZoomModel.id,\r\n          startValue: minMax[0],\r\n          endValue: minMax[1]\r\n        });\r\n      }\r\n\r\n      function findDataZoom(dimName, axisModel, ecModel) {\r\n        var found;\r\n        ecModel.eachComponent({\r\n          mainType: 'dataZoom',\r\n          subType: 'select'\r\n        }, function (dzModel) {\r\n          var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\r\n          has && (found = dzModel);\r\n        });\r\n        return found;\r\n      }\r\n    };\r\n\r\n    DataZoomFeature.prototype._dispatchZoomAction = function (snapshot) {\r\n      var batch = []; // Convert from hash map to array.\r\n\r\n      each$9(snapshot, function (batchItem, dataZoomId) {\r\n        batch.push(clone(batchItem));\r\n      });\r\n      batch.length && this.api.dispatchAction({\r\n        type: 'dataZoom',\r\n        from: this.uid,\r\n        batch: batch\r\n      });\r\n    };\r\n\r\n    DataZoomFeature.getDefaultOption = function (ecModel) {\r\n      var defaultOption = {\r\n        show: true,\r\n        filterMode: 'filter',\r\n        // Icon group\r\n        icon: {\r\n          zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\r\n          back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\r\n        },\r\n        // `zoom`, `back`\r\n        title: ecModel.getLocale(['toolbox', 'dataZoom', 'title']),\r\n        brushStyle: {\r\n          borderWidth: 0,\r\n          color: 'rgba(210,219,238,0.2)'\r\n        }\r\n      };\r\n      return defaultOption;\r\n    };\r\n\r\n    return DataZoomFeature;\r\n  }(ToolboxFeature);\r\n\r\n  var handlers = {\r\n    zoom: function () {\r\n      var nextActive = !this._isZoomActive;\r\n      this.api.dispatchAction({\r\n        type: 'takeGlobalCursor',\r\n        key: 'dataZoomSelect',\r\n        dataZoomSelectActive: nextActive\r\n      });\r\n    },\r\n    back: function () {\r\n      this._dispatchZoomAction(pop(this.ecModel));\r\n    }\r\n  };\r\n\r\n  function makeAxisFinder(dzFeatureModel) {\r\n    var setting = {\r\n      xAxisIndex: dzFeatureModel.get('xAxisIndex', true),\r\n      yAxisIndex: dzFeatureModel.get('yAxisIndex', true),\r\n      xAxisId: dzFeatureModel.get('xAxisId', true),\r\n      yAxisId: dzFeatureModel.get('yAxisId', true)\r\n    }; // If both `xAxisIndex` `xAxisId` not set, it means 'all'.\r\n    // If both `yAxisIndex` `yAxisId` not set, it means 'all'.\r\n    // Some old cases set like this below to close yAxis control but leave xAxis control:\r\n    // `{ feature: { dataZoom: { yAxisIndex: false } }`.\r\n\r\n    if (setting.xAxisIndex == null && setting.xAxisId == null) {\r\n      setting.xAxisIndex = 'all';\r\n    }\r\n\r\n    if (setting.yAxisIndex == null && setting.yAxisId == null) {\r\n      setting.yAxisIndex = 'all';\r\n    }\r\n\r\n    return setting;\r\n  }\r\n\r\n  function updateBackBtnStatus(featureModel, ecModel) {\r\n    featureModel.setIconStatus('back', count(ecModel) > 1 ? 'emphasis' : 'normal');\r\n  }\r\n\r\n  function updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\r\n    var zoomActive = view._isZoomActive;\r\n\r\n    if (payload && payload.type === 'takeGlobalCursor') {\r\n      zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\r\n    }\r\n\r\n    view._isZoomActive = zoomActive;\r\n    featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\r\n    var brushTargetManager = new BrushTargetManager(makeAxisFinder(featureModel), ecModel, {\r\n      include: ['grid']\r\n    });\r\n    var panels = brushTargetManager.makePanelOpts(api, function (targetInfo) {\r\n      return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\r\n    });\r\n\r\n    view._brushController.setPanels(panels).enableBrush(zoomActive && panels.length ? {\r\n      brushType: 'auto',\r\n      brushStyle: featureModel.getModel('brushStyle').getItemStyle()\r\n    } : false);\r\n  }\r\n\r\n  registerInternalOptionCreator('dataZoom', function (ecModel) {\r\n    var toolboxModel = ecModel.getComponent('toolbox', 0);\r\n\r\n    if (!toolboxModel) {\r\n      return;\r\n    }\r\n\r\n    var dzFeatureModel = toolboxModel.getModel(['feature', 'dataZoom']);\r\n    var dzOptions = [];\r\n    var finder = makeAxisFinder(dzFeatureModel);\r\n    var finderResult = parseFinder(ecModel, finder);\r\n    each$9(finderResult.xAxisModels, function (axisModel) {\r\n      return buildInternalOptions(axisModel, 'xAxis', 'xAxisIndex');\r\n    });\r\n    each$9(finderResult.yAxisModels, function (axisModel) {\r\n      return buildInternalOptions(axisModel, 'yAxis', 'yAxisIndex');\r\n    });\r\n\r\n    function buildInternalOptions(axisModel, axisMainType, axisIndexPropName) {\r\n      var axisIndex = axisModel.componentIndex;\r\n      var newOpt = {\r\n        type: 'select',\r\n        $fromToolbox: true,\r\n        // Default to be filter\r\n        filterMode: dzFeatureModel.get('filterMode', true) || 'filter',\r\n        // Id for merge mapping.\r\n        id: DATA_ZOOM_ID_BASE + axisMainType + axisIndex\r\n      };\r\n      newOpt[axisIndexPropName] = axisIndex;\r\n      dzOptions.push(newOpt);\r\n    }\r\n\r\n    return dzOptions;\r\n  });\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  function install$11(registers) {\r\n    registers.registerComponentModel(ToolboxModel);\r\n    registers.registerComponentView(ToolboxView);\r\n    registerFeature('saveAsImage', SaveAsImage);\r\n    registerFeature('magicType', MagicType);\r\n    registerFeature('dataView', DataView);\r\n    registerFeature('dataZoom', DataZoomFeature);\r\n    registerFeature('restore', RestoreOption);\r\n    use(install$12);\r\n  }\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n  /**\r\n   * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n   */\r\n\r\n  /*\r\n  * Licensed to the Apache Software Foundation (ASF) under one\r\n  * or more contributor license agreements.  See the NOTICE file\r\n  * distributed with this work for additional information\r\n  * regarding copyright ownership.  The ASF licenses this file\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  * KIND, either express or implied.  See the License for the\r\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n\r\n\r\n  use(install$11);\r\n  exports.version = version;\r\n  exports.dependencies = dependencies;\r\n  exports.PRIORITY = PRIORITY;\r\n  exports.init = init;\r\n  exports.connect = connect;\r\n  exports.disConnect = disConnect;\r\n  exports.disconnect = disconnect;\r\n  exports.dispose = dispose;\r\n  exports.getInstanceByDom = getInstanceByDom;\r\n  exports.getInstanceById = getInstanceById;\r\n  exports.registerTheme = registerTheme;\r\n  exports.registerPreprocessor = registerPreprocessor;\r\n  exports.registerProcessor = registerProcessor;\r\n  exports.registerPostInit = registerPostInit;\r\n  exports.registerPostUpdate = registerPostUpdate;\r\n  exports.registerAction = registerAction;\r\n  exports.registerCoordinateSystem = registerCoordinateSystem;\r\n  exports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\r\n  exports.registerLayout = registerLayout;\r\n  exports.registerVisual = registerVisual;\r\n  exports.registerLoading = registerLoading;\r\n  exports.setCanvasCreator = setCanvasCreator;\r\n  exports.registerMap = registerMap;\r\n  exports.getMap = getMap;\r\n  exports.registerTransform = registerTransform;\r\n  exports.dataTool = dataTool;\r\n  exports.registerLocale = registerLocale;\r\n  exports.zrender = zrender;\r\n  exports.matrix = matrix;\r\n  exports.vector = vector;\r\n  exports.zrUtil = util;\r\n  exports.color = color;\r\n  exports.helper = helper;\r\n  exports.number = number;\r\n  exports.time = time;\r\n  exports.graphic = graphic$1;\r\n  exports.format = format$1;\r\n  exports.util = util$1;\r\n  exports.ComponentModel = ComponentModel;\r\n  exports.ComponentView = ComponentView;\r\n  exports.SeriesModel = SeriesModel;\r\n  exports.ChartView = ChartView;\r\n  exports.extendComponentModel = extendComponentModel;\r\n  exports.extendComponentView = extendComponentView;\r\n  exports.extendSeriesModel = extendSeriesModel;\r\n  exports.extendChartView = extendChartView;\r\n  exports.throttle = throttle;\r\n  exports.use = use;\r\n  exports.parseGeoJSON = parseGeoJSON;\r\n  exports.parseGeoJson = parseGeoJSON;\r\n  exports.env = env;\r\n  exports.List = List;\r\n  exports.Model = Model;\r\n  exports.Axis = Axis;\r\n  exports.innerDrawElementOnCanvas = brushSingle;\r\n});\n\n//# sourceURL=webpack://ascdc-sna/./lib/echarts.js?");

/***/ }),

/***/ "./node_modules/@simonwep/pickr/dist/pickr.min.js":
/*!********************************************************!*\
  !*** ./node_modules/@simonwep/pickr/dist/pickr.min.js ***!
  \********************************************************/
/***/ ((module) => {

eval("/*! Pickr 1.8.0 MIT | https://github.com/Simonwep/pickr */\n!function(t,e){ true?module.exports=e():0}(window,(function(){return function(t){var e={};function o(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,o),i.l=!0,i.exports}return o.m=t,o.c=e,o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},o.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var i in t)o.d(n,i,function(e){return t[e]}.bind(null,i));return n},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,\"a\",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p=\"\",o(o.s=0)}([function(t,e,o){\"use strict\";o.r(e);var n={};function i(t,e,o,n,i={}){e instanceof HTMLCollection||e instanceof NodeList?e=Array.from(e):Array.isArray(e)||(e=[e]),Array.isArray(o)||(o=[o]);for(const r of e)for(const e of o)r[t](e,n,{capture:!1,...i});return Array.prototype.slice.call(arguments,1)}o.r(n),o.d(n,\"on\",(function(){return r})),o.d(n,\"off\",(function(){return s})),o.d(n,\"createElementFromString\",(function(){return a})),o.d(n,\"createFromTemplate\",(function(){return l})),o.d(n,\"eventPath\",(function(){return c})),o.d(n,\"resolveElement\",(function(){return p})),o.d(n,\"adjustableInputNumbers\",(function(){return u}));const r=i.bind(null,\"addEventListener\"),s=i.bind(null,\"removeEventListener\");function a(t){const e=document.createElement(\"div\");return e.innerHTML=t.trim(),e.firstElementChild}function l(t){const e=(t,e)=>{const o=t.getAttribute(e);return t.removeAttribute(e),o},o=(t,n={})=>{const i=e(t,\":obj\"),r=e(t,\":ref\"),s=i?n[i]={}:n;r&&(n[r]=t);for(const n of Array.from(t.children)){const t=e(n,\":arr\"),i=o(n,t?{}:s);t&&(s[t]||(s[t]=[])).push(Object.keys(i).length?i:n)}return n};return o(a(t))}function c(t){let e=t.path||t.composedPath&&t.composedPath();if(e)return e;let o=t.target.parentElement;for(e=[t.target,o];o=o.parentElement;)e.push(o);return e.push(document,window),e}function p(t){return t instanceof Element?t:\"string\"==typeof t?t.split(/>>/g).reduce((t,e,o,n)=>(t=t.querySelector(e),o<n.length-1?t.shadowRoot:t),document):null}function u(t,e=(t=>t)){function o(o){const n=[.001,.01,.1][Number(o.shiftKey||2*o.ctrlKey)]*(o.deltaY<0?1:-1);let i=0,r=t.selectionStart;t.value=t.value.replace(/[\\d.]+/g,(t,o)=>o<=r&&o+t.length>=r?(r=o,e(Number(t),n,i)):(i++,t)),t.focus(),t.setSelectionRange(r,r),o.preventDefault(),t.dispatchEvent(new Event(\"input\"))}r(t,\"focus\",()=>r(window,\"wheel\",o,{passive:!1})),r(t,\"blur\",()=>s(window,\"wheel\",o))}const{min:h,max:d,floor:f,round:m}=Math;function v(t,e,o){e/=100,o/=100;const n=f(t=t/360*6),i=t-n,r=o*(1-e),s=o*(1-i*e),a=o*(1-(1-i)*e),l=n%6;return[255*[o,s,r,r,a,o][l],255*[a,o,o,s,r,r][l],255*[r,r,a,o,o,s][l]]}function b(t,e,o){const n=(2-(e/=100))*(o/=100)/2;return 0!==n&&(e=1===n?0:n<.5?e*o/(2*n):e*o/(2-2*n)),[t,100*e,100*n]}function g(t,e,o){const n=h(t/=255,e/=255,o/=255),i=d(t,e,o),r=i-n;let s,a;if(0===r)s=a=0;else{a=r/i;const n=((i-t)/6+r/2)/r,l=((i-e)/6+r/2)/r,c=((i-o)/6+r/2)/r;t===i?s=c-l:e===i?s=1/3+n-c:o===i&&(s=2/3+l-n),s<0?s+=1:s>1&&(s-=1)}return[360*s,100*a,100*i]}function y(t,e,o,n){e/=100,o/=100;return[...g(255*(1-h(1,(t/=100)*(1-(n/=100))+n)),255*(1-h(1,e*(1-n)+n)),255*(1-h(1,o*(1-n)+n)))]}function _(t,e,o){e/=100;const n=2*(e*=(o/=100)<.5?o:1-o)/(o+e)*100,i=100*(o+e);return[t,isNaN(n)?0:n,i]}function w(t){return g(...t.match(/.{2}/g).map(t=>parseInt(t,16)))}function A(t){t=t.match(/^[a-zA-Z]+$/)?function(t){if(\"black\"===t.toLowerCase())return\"#000\";const e=document.createElement(\"canvas\").getContext(\"2d\");return e.fillStyle=t,\"#000\"===e.fillStyle?null:e.fillStyle}(t):t;const e={cmyk:/^cmyk[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)/i,rgba:/^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,hsla:/^((hsla)|hsl)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,hsva:/^((hsva)|hsv)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,hexa:/^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i},o=t=>t.map(t=>/^(|\\d+)\\.\\d+|\\d+$/.test(t)?Number(t):void 0);let n;t:for(const i in e){if(!(n=e[i].exec(t)))continue;const r=t=>!!n[2]==(\"number\"==typeof t);switch(i){case\"cmyk\":{const[,t,e,r,s]=o(n);if(t>100||e>100||r>100||s>100)break t;return{values:y(t,e,r,s),type:i}}case\"rgba\":{const[,,,t,e,s,a]=o(n);if(t>255||e>255||s>255||a<0||a>1||!r(a))break t;return{values:[...g(t,e,s),a],a:a,type:i}}case\"hexa\":{let[,t]=n;4!==t.length&&3!==t.length||(t=t.split(\"\").map(t=>t+t).join(\"\"));const e=t.substring(0,6);let o=t.substring(6);return o=o?parseInt(o,16)/255:void 0,{values:[...w(e),o],a:o,type:i}}case\"hsla\":{const[,,,t,e,s,a]=o(n);if(t>360||e>100||s>100||a<0||a>1||!r(a))break t;return{values:[..._(t,e,s),a],a:a,type:i}}case\"hsva\":{const[,,,t,e,s,a]=o(n);if(t>360||e>100||s>100||a<0||a>1||!r(a))break t;return{values:[t,e,s,a],a:a,type:i}}}}return{values:null,type:null}}function C(t=0,e=0,o=0,n=1){const i=(t,e)=>(o=-1)=>e(~o?t.map(t=>Number(t.toFixed(o))):t),r={h:t,s:e,v:o,a:n,toHSVA(){const t=[r.h,r.s,r.v,r.a];return t.toString=i(t,t=>`hsva(${t[0]}, ${t[1]}%, ${t[2]}%, ${r.a})`),t},toHSLA(){const t=[...b(r.h,r.s,r.v),r.a];return t.toString=i(t,t=>`hsla(${t[0]}, ${t[1]}%, ${t[2]}%, ${r.a})`),t},toRGBA(){const t=[...v(r.h,r.s,r.v),r.a];return t.toString=i(t,t=>`rgba(${t[0]}, ${t[1]}, ${t[2]}, ${r.a})`),t},toCMYK(){const t=function(t,e,o){const n=v(t,e,o),i=n[0]/255,r=n[1]/255,s=n[2]/255,a=h(1-i,1-r,1-s);return[100*(1===a?0:(1-i-a)/(1-a)),100*(1===a?0:(1-r-a)/(1-a)),100*(1===a?0:(1-s-a)/(1-a)),100*a]}(r.h,r.s,r.v);return t.toString=i(t,t=>`cmyk(${t[0]}%, ${t[1]}%, ${t[2]}%, ${t[3]}%)`),t},toHEXA(){const t=function(t,e,o){return v(t,e,o).map(t=>m(t).toString(16).padStart(2,\"0\"))}(r.h,r.s,r.v),e=r.a>=1?\"\":Number((255*r.a).toFixed(0)).toString(16).toUpperCase().padStart(2,\"0\");return e&&t.push(e),t.toString=()=>\"#\"+t.join(\"\").toUpperCase(),t},clone:()=>C(r.h,r.s,r.v,r.a)};return r}const k=t=>Math.max(Math.min(t,1),0);function $(t){const e={options:Object.assign({lock:null,onchange:()=>0,onstop:()=>0},t),_keyboard(t){const{options:o}=e,{type:n,key:i}=t;if(document.activeElement===o.wrapper){const{lock:o}=e.options,r=\"ArrowUp\"===i,s=\"ArrowRight\"===i,a=\"ArrowDown\"===i,l=\"ArrowLeft\"===i;if(\"keydown\"===n&&(r||s||a||l)){let n=0,i=0;\"v\"===o?n=r||s?1:-1:\"h\"===o?n=r||s?-1:1:(i=r?-1:a?1:0,n=l?-1:s?1:0),e.update(k(e.cache.x+.01*n),k(e.cache.y+.01*i)),t.preventDefault()}else i.startsWith(\"Arrow\")&&(e.options.onstop(),t.preventDefault())}},_tapstart(t){r(document,[\"mouseup\",\"touchend\",\"touchcancel\"],e._tapstop),r(document,[\"mousemove\",\"touchmove\"],e._tapmove),t.cancelable&&t.preventDefault(),e._tapmove(t)},_tapmove(t){const{options:o,cache:n}=e,{lock:i,element:r,wrapper:s}=o,a=s.getBoundingClientRect();let l=0,c=0;if(t){const e=t&&t.touches&&t.touches[0];l=t?(e||t).clientX:0,c=t?(e||t).clientY:0,l<a.left?l=a.left:l>a.left+a.width&&(l=a.left+a.width),c<a.top?c=a.top:c>a.top+a.height&&(c=a.top+a.height),l-=a.left,c-=a.top}else n&&(l=n.x*a.width,c=n.y*a.height);\"h\"!==i&&(r.style.left=`calc(${l/a.width*100}% - ${r.offsetWidth/2}px)`),\"v\"!==i&&(r.style.top=`calc(${c/a.height*100}% - ${r.offsetHeight/2}px)`),e.cache={x:l/a.width,y:c/a.height};const p=k(l/a.width),u=k(c/a.height);switch(i){case\"v\":return o.onchange(p);case\"h\":return o.onchange(u);default:return o.onchange(p,u)}},_tapstop(){e.options.onstop(),s(document,[\"mouseup\",\"touchend\",\"touchcancel\"],e._tapstop),s(document,[\"mousemove\",\"touchmove\"],e._tapmove)},trigger(){e._tapmove()},update(t=0,o=0){const{left:n,top:i,width:r,height:s}=e.options.wrapper.getBoundingClientRect();\"h\"===e.options.lock&&(o=t),e._tapmove({clientX:n+r*t,clientY:i+s*o})},destroy(){const{options:t,_tapstart:o,_keyboard:n}=e;s(document,[\"keydown\",\"keyup\"],n),s([t.wrapper,t.element],\"mousedown\",o),s([t.wrapper,t.element],\"touchstart\",o,{passive:!1})}},{options:o,_tapstart:n,_keyboard:i}=e;return r([o.wrapper,o.element],\"mousedown\",n),r([o.wrapper,o.element],\"touchstart\",n,{passive:!1}),r(document,[\"keydown\",\"keyup\"],i),e}function S(t={}){t=Object.assign({onchange:()=>0,className:\"\",elements:[]},t);const e=r(t.elements,\"click\",e=>{t.elements.forEach(o=>o.classList[e.target===o?\"add\":\"remove\"](t.className)),t.onchange(e),e.stopPropagation()});return{destroy:()=>s(...e)}}\n/*! NanoPop 2.1.0 MIT | https://github.com/Simonwep/nanopop */\nconst O={variantFlipOrder:{start:\"sme\",middle:\"mse\",end:\"ems\"},positionFlipOrder:{top:\"tbrl\",right:\"rltb\",bottom:\"btrl\",left:\"lrbt\"},position:\"bottom\",margin:8},E=(t,e,o)=>{const n=\"object\"!=typeof t||t instanceof HTMLElement?{reference:t,popper:e,...o}:t;return{update(t=n){const{reference:e,popper:o}=Object.assign(n,t);if(!o||!e)throw new Error(\"Popper- or reference-element missing.\");return((t,e,o)=>{const{container:n,margin:i,position:r,variantFlipOrder:s,positionFlipOrder:a}={container:document.documentElement.getBoundingClientRect(),...O,...o},{left:l,top:c}=e.style;e.style.left=\"0\",e.style.top=\"0\";const p=t.getBoundingClientRect(),u=e.getBoundingClientRect(),h={t:p.top-u.height-i,b:p.bottom+i,r:p.right+i,l:p.left-u.width-i},d={vs:p.left,vm:p.left+p.width/2+-u.width/2,ve:p.left+p.width-u.width,hs:p.top,hm:p.bottom-p.height/2-u.height/2,he:p.bottom-u.height},[f,m=\"middle\"]=r.split(\"-\"),v=a[f],b=s[m],{top:g,left:y,bottom:_,right:w}=n;for(const t of v){const o=\"t\"===t||\"b\"===t,n=h[t],[i,r]=o?[\"top\",\"left\"]:[\"left\",\"top\"],[s,a]=o?[u.height,u.width]:[u.width,u.height],[l,c]=o?[_,w]:[w,_],[p,f]=o?[g,y]:[y,g];if(!(n<p||n+s>l))for(const s of b){const l=d[(o?\"v\":\"h\")+s];if(!(l<f||l+a>c))return e.style[r]=l-u[r]+\"px\",e.style[i]=n-u[i]+\"px\",t+s}}return e.style.left=l,e.style.top=c,null})(e,o,n)}}};function L(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}class x{constructor(t){L(this,\"_initializingActive\",!0),L(this,\"_recalc\",!0),L(this,\"_nanopop\",null),L(this,\"_root\",null),L(this,\"_color\",C()),L(this,\"_lastColor\",C()),L(this,\"_swatchColors\",[]),L(this,\"_setupAnimationFrame\",null),L(this,\"_eventListener\",{init:[],save:[],hide:[],show:[],clear:[],change:[],changestop:[],cancel:[],swatchselect:[]}),this.options=t=Object.assign({...x.DEFAULT_OPTIONS},t);const{swatches:e,components:o,theme:n,sliders:i,lockOpacity:r,padding:s}=t;[\"nano\",\"monolith\"].includes(n)&&!i&&(t.sliders=\"h\"),o.interaction||(o.interaction={});const{preview:a,opacity:l,hue:c,palette:p}=o;o.opacity=!r&&l,o.palette=p||a||l||c,this._preBuild(),this._buildComponents(),this._bindEvents(),this._finalBuild(),e&&e.length&&e.forEach(t=>this.addSwatch(t));const{button:u,app:h}=this._root;this._nanopop=E(u,h,{margin:s}),u.setAttribute(\"role\",\"button\"),u.setAttribute(\"aria-label\",this._t(\"btn:toggle\"));const d=this;this._setupAnimationFrame=requestAnimationFrame((function e(){if(!h.offsetWidth)return requestAnimationFrame(e);d.setColor(t.default),d._rePositioningPicker(),t.defaultRepresentation&&(d._representation=t.defaultRepresentation,d.setColorRepresentation(d._representation)),t.showAlways&&d.show(),d._initializingActive=!1,d._emit(\"init\")}))}_preBuild(){const{options:t}=this;for(const e of[\"el\",\"container\"])t[e]=p(t[e]);this._root=(t=>{const{components:e,useAsButton:o,inline:n,appClass:i,theme:r,lockOpacity:s}=t.options,a=t=>t?\"\":'style=\"display:none\" hidden',c=e=>t._t(e),p=l(`\\n      <div :ref=\"root\" class=\"pickr\">\\n\\n        ${o?\"\":'<button type=\"button\" :ref=\"button\" class=\"pcr-button\"></button>'}\\n\\n        <div :ref=\"app\" class=\"pcr-app ${i||\"\"}\" data-theme=\"${r}\" ${n?'style=\"position: unset\"':\"\"} aria-label=\"${c(\"ui:dialog\")}\" role=\"window\">\\n          <div class=\"pcr-selection\" ${a(e.palette)}>\\n            <div :obj=\"preview\" class=\"pcr-color-preview\" ${a(e.preview)}>\\n              <button type=\"button\" :ref=\"lastColor\" class=\"pcr-last-color\" aria-label=\"${c(\"btn:last-color\")}\"></button>\\n              <div :ref=\"currentColor\" class=\"pcr-current-color\"></div>\\n            </div>\\n\\n            <div :obj=\"palette\" class=\"pcr-color-palette\">\\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\\n              <div :ref=\"palette\" class=\"pcr-palette\" tabindex=\"0\" aria-label=\"${c(\"aria:palette\")}\" role=\"listbox\"></div>\\n            </div>\\n\\n            <div :obj=\"hue\" class=\"pcr-color-chooser\" ${a(e.hue)}>\\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\\n              <div :ref=\"slider\" class=\"pcr-hue pcr-slider\" tabindex=\"0\" aria-label=\"${c(\"aria:hue\")}\" role=\"slider\"></div>\\n            </div>\\n\\n            <div :obj=\"opacity\" class=\"pcr-color-opacity\" ${a(e.opacity)}>\\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\\n              <div :ref=\"slider\" class=\"pcr-opacity pcr-slider\" tabindex=\"0\" aria-label=\"${c(\"aria:opacity\")}\" role=\"slider\"></div>\\n            </div>\\n          </div>\\n\\n          <div class=\"pcr-swatches ${e.palette?\"\":\"pcr-last\"}\" :ref=\"swatches\"></div>\\n\\n          <div :obj=\"interaction\" class=\"pcr-interaction\" ${a(Object.keys(e.interaction).length)}>\\n            <input :ref=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${a(e.interaction.input)} aria-label=\"${c(\"aria:input\")}\">\\n\\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"${s?\"HEX\":\"HEXA\"}\" type=\"button\" ${a(e.interaction.hex)}>\\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"${s?\"RGB\":\"RGBA\"}\" type=\"button\" ${a(e.interaction.rgba)}>\\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"${s?\"HSL\":\"HSLA\"}\" type=\"button\" ${a(e.interaction.hsla)}>\\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"${s?\"HSV\":\"HSVA\"}\" type=\"button\" ${a(e.interaction.hsva)}>\\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${a(e.interaction.cmyk)}>\\n\\n            <input :ref=\"save\" class=\"pcr-save\" value=\"${c(\"btn:save\")}\" type=\"button\" ${a(e.interaction.save)} aria-label=\"${c(\"aria:btn:save\")}\">\\n            <input :ref=\"cancel\" class=\"pcr-cancel\" value=\"${c(\"btn:cancel\")}\" type=\"button\" ${a(e.interaction.cancel)} aria-label=\"${c(\"aria:btn:cancel\")}\">\\n            <input :ref=\"clear\" class=\"pcr-clear\" value=\"${c(\"btn:clear\")}\" type=\"button\" ${a(e.interaction.clear)} aria-label=\"${c(\"aria:btn:clear\")}\">\\n          </div>\\n        </div>\\n      </div>\\n    `),u=p.interaction;return u.options.find(t=>!t.hidden&&!t.classList.add(\"active\")),u.type=()=>u.options.find(t=>t.classList.contains(\"active\")),p})(this),t.useAsButton&&(this._root.button=t.el),t.container.appendChild(this._root.root)}_finalBuild(){const t=this.options,e=this._root;if(t.container.removeChild(e.root),t.inline){const o=t.el.parentElement;t.el.nextSibling?o.insertBefore(e.app,t.el.nextSibling):o.appendChild(e.app)}else t.container.appendChild(e.app);t.useAsButton?t.inline&&t.el.remove():t.el.parentNode.replaceChild(e.root,t.el),t.disabled&&this.disable(),t.comparison||(e.button.style.transition=\"none\",t.useAsButton||(e.preview.lastColor.style.transition=\"none\")),this.hide()}_buildComponents(){const t=this,e=this.options.components,o=(t.options.sliders||\"v\").repeat(2),[n,i]=o.match(/^[vh]+$/g)?o:[],r=()=>this._color||(this._color=this._lastColor.clone()),s={palette:$({element:t._root.palette.picker,wrapper:t._root.palette.palette,onstop:()=>t._emit(\"changestop\",\"slider\",t),onchange(o,n){if(!e.palette)return;const i=r(),{_root:s,options:a}=t,{lastColor:l,currentColor:c}=s.preview;t._recalc&&(i.s=100*o,i.v=100-100*n,i.v<0&&(i.v=0),t._updateOutput(\"slider\"));const p=i.toRGBA().toString(0);this.element.style.background=p,this.wrapper.style.background=`\\n                        linear-gradient(to top, rgba(0, 0, 0, ${i.a}), transparent),\\n                        linear-gradient(to left, hsla(${i.h}, 100%, 50%, ${i.a}), rgba(255, 255, 255, ${i.a}))\\n                    `,a.comparison?a.useAsButton||t._lastColor||(l.style.color=p):(s.button.style.color=p,s.button.classList.remove(\"clear\"));const u=i.toHEXA().toString();for(const{el:e,color:o}of t._swatchColors)e.classList[u===o.toHEXA().toString()?\"add\":\"remove\"](\"pcr-active\");c.style.color=p}}),hue:$({lock:\"v\"===i?\"h\":\"v\",element:t._root.hue.picker,wrapper:t._root.hue.slider,onstop:()=>t._emit(\"changestop\",\"slider\",t),onchange(o){if(!e.hue||!e.palette)return;const n=r();t._recalc&&(n.h=360*o),this.element.style.backgroundColor=`hsl(${n.h}, 100%, 50%)`,s.palette.trigger()}}),opacity:$({lock:\"v\"===n?\"h\":\"v\",element:t._root.opacity.picker,wrapper:t._root.opacity.slider,onstop:()=>t._emit(\"changestop\",\"slider\",t),onchange(o){if(!e.opacity||!e.palette)return;const n=r();t._recalc&&(n.a=Math.round(100*o)/100),this.element.style.background=`rgba(0, 0, 0, ${n.a})`,s.palette.trigger()}}),selectable:S({elements:t._root.interaction.options,className:\"active\",onchange(e){t._representation=e.target.getAttribute(\"data-type\").toUpperCase(),t._recalc&&t._updateOutput(\"swatch\")}})};this._components=s}_bindEvents(){const{_root:t,options:e}=this,o=[r(t.interaction.clear,\"click\",()=>this._clearColor()),r([t.interaction.cancel,t.preview.lastColor],\"click\",()=>{this._emit(\"cancel\"),this.setHSVA(...(this._lastColor||this._color).toHSVA(),!0)}),r(t.interaction.save,\"click\",()=>{!this.applyColor()&&!e.showAlways&&this.hide()}),r(t.interaction.result,[\"keyup\",\"input\"],t=>{this.setColor(t.target.value,!0)&&!this._initializingActive&&(this._emit(\"change\",this._color,\"input\",this),this._emit(\"changestop\",\"input\",this)),t.stopImmediatePropagation()}),r(t.interaction.result,[\"focus\",\"blur\"],t=>{this._recalc=\"blur\"===t.type,this._recalc&&this._updateOutput(null)}),r([t.palette.palette,t.palette.picker,t.hue.slider,t.hue.picker,t.opacity.slider,t.opacity.picker],[\"mousedown\",\"touchstart\"],()=>this._recalc=!0,{passive:!0})];if(!e.showAlways){const n=e.closeWithKey;o.push(r(t.button,\"click\",()=>this.isOpen()?this.hide():this.show()),r(document,\"keyup\",t=>this.isOpen()&&(t.key===n||t.code===n)&&this.hide()),r(document,[\"touchstart\",\"mousedown\"],e=>{this.isOpen()&&!c(e).some(e=>e===t.app||e===t.button)&&this.hide()},{capture:!0}))}if(e.adjustableNumbers){const e={rgba:[255,255,255,1],hsva:[360,100,100,1],hsla:[360,100,100,1],cmyk:[100,100,100,100]};u(t.interaction.result,(t,o,n)=>{const i=e[this.getColorRepresentation().toLowerCase()];if(i){const e=i[n],r=t+(e>=100?1e3*o:o);return r<=0?0:Number((r<e?r:e).toPrecision(3))}return t})}if(e.autoReposition&&!e.inline){let t=null;const n=this;o.push(r(window,[\"scroll\",\"resize\"],()=>{n.isOpen()&&(e.closeOnScroll&&n.hide(),null===t?(t=setTimeout(()=>t=null,100),requestAnimationFrame((function e(){n._rePositioningPicker(),null!==t&&requestAnimationFrame(e)}))):(clearTimeout(t),t=setTimeout(()=>t=null,100)))},{capture:!0}))}this._eventBindings=o}_rePositioningPicker(){const{options:t}=this;if(!t.inline){if(!this._nanopop.update({container:document.body.getBoundingClientRect(),position:t.position})){const t=this._root.app,e=t.getBoundingClientRect();t.style.top=(window.innerHeight-e.height)/2+\"px\",t.style.left=(window.innerWidth-e.width)/2+\"px\"}}}_updateOutput(t){const{_root:e,_color:o,options:n}=this;if(e.interaction.type()){const t=\"to\"+e.interaction.type().getAttribute(\"data-type\");e.interaction.result.value=\"function\"==typeof o[t]?o[t]().toString(n.outputPrecision):\"\"}!this._initializingActive&&this._recalc&&this._emit(\"change\",o,t,this)}_clearColor(t=!1){const{_root:e,options:o}=this;o.useAsButton||(e.button.style.color=\"rgba(0, 0, 0, 0.15)\"),e.button.classList.add(\"clear\"),o.showAlways||this.hide(),this._lastColor=null,this._initializingActive||t||(this._emit(\"save\",null),this._emit(\"clear\"))}_parseLocalColor(t){const{values:e,type:o,a:n}=A(t),{lockOpacity:i}=this.options,r=void 0!==n&&1!==n;return e&&3===e.length&&(e[3]=void 0),{values:!e||i&&r?null:e,type:o}}_t(t){return this.options.i18n[t]||x.I18N_DEFAULTS[t]}_emit(t,...e){this._eventListener[t].forEach(t=>t(...e,this))}on(t,e){return this._eventListener[t].push(e),this}off(t,e){const o=this._eventListener[t]||[],n=o.indexOf(e);return~n&&o.splice(n,1),this}addSwatch(t){const{values:e}=this._parseLocalColor(t);if(e){const{_swatchColors:t,_root:o}=this,n=C(...e),i=a(`<button type=\"button\" style=\"color: ${n.toRGBA().toString(0)}\" aria-label=\"${this._t(\"btn:swatch\")}\"/>`);return o.swatches.appendChild(i),t.push({el:i,color:n}),this._eventBindings.push(r(i,\"click\",()=>{this.setHSVA(...n.toHSVA(),!0),this._emit(\"swatchselect\",n),this._emit(\"change\",n,\"swatch\",this)})),!0}return!1}removeSwatch(t){const e=this._swatchColors[t];if(e){const{el:o}=e;return this._root.swatches.removeChild(o),this._swatchColors.splice(t,1),!0}return!1}applyColor(t=!1){const{preview:e,button:o}=this._root,n=this._color.toRGBA().toString(0);return e.lastColor.style.color=n,this.options.useAsButton||(o.style.color=n),o.classList.remove(\"clear\"),this._lastColor=this._color.clone(),this._initializingActive||t||this._emit(\"save\",this._color),this}destroy(){cancelAnimationFrame(this._setupAnimationFrame),this._eventBindings.forEach(t=>s(...t)),Object.keys(this._components).forEach(t=>this._components[t].destroy())}destroyAndRemove(){this.destroy();const{root:t,app:e}=this._root;t.parentElement&&t.parentElement.removeChild(t),e.parentElement.removeChild(e),Object.keys(this).forEach(t=>this[t]=null)}hide(){return this._root.app.classList.remove(\"visible\"),this._emit(\"hide\"),this}show(){return this.options.disabled||(this._root.app.classList.add(\"visible\"),this._rePositioningPicker(),this._emit(\"show\",this._color)),this}isOpen(){return this._root.app.classList.contains(\"visible\")}setHSVA(t=360,e=0,o=0,n=1,i=!1){const r=this._recalc;if(this._recalc=!1,t<0||t>360||e<0||e>100||o<0||o>100||n<0||n>1)return!1;this._color=C(t,e,o,n);const{hue:s,opacity:a,palette:l}=this._components;return s.update(t/360),a.update(n),l.update(e/100,1-o/100),i||this.applyColor(),r&&this._updateOutput(),this._recalc=r,!0}setColor(t,e=!1){if(null===t)return this._clearColor(e),!0;const{values:o,type:n}=this._parseLocalColor(t);if(o){const t=n.toUpperCase(),{options:i}=this._root.interaction,r=i.find(e=>e.getAttribute(\"data-type\")===t);if(r&&!r.hidden)for(const t of i)t.classList[t===r?\"add\":\"remove\"](\"active\");return!!this.setHSVA(...o,e)&&this.setColorRepresentation(t)}return!1}setColorRepresentation(t){return t=t.toUpperCase(),!!this._root.interaction.options.find(e=>e.getAttribute(\"data-type\").startsWith(t)&&!e.click())}getColorRepresentation(){return this._representation}getColor(){return this._color}getSelectedColor(){return this._lastColor}getRoot(){return this._root}disable(){return this.hide(),this.options.disabled=!0,this._root.button.classList.add(\"disabled\"),this}enable(){return this.options.disabled=!1,this._root.button.classList.remove(\"disabled\"),this}}L(x,\"utils\",n),L(x,\"version\",\"1.8.0\"),L(x,\"I18N_DEFAULTS\",{\"ui:dialog\":\"color picker dialog\",\"btn:toggle\":\"toggle color picker dialog\",\"btn:swatch\":\"color swatch\",\"btn:last-color\":\"use previous color\",\"btn:save\":\"Save\",\"btn:cancel\":\"Cancel\",\"btn:clear\":\"Clear\",\"aria:btn:save\":\"save and close\",\"aria:btn:cancel\":\"cancel and close\",\"aria:btn:clear\":\"clear and close\",\"aria:input\":\"color input field\",\"aria:palette\":\"color selection area\",\"aria:hue\":\"hue selection slider\",\"aria:opacity\":\"selection slider\"}),L(x,\"DEFAULT_OPTIONS\",{appClass:null,theme:\"classic\",useAsButton:!1,padding:8,disabled:!1,comparison:!0,closeOnScroll:!1,outputPrecision:0,lockOpacity:!1,autoReposition:!0,container:\"body\",components:{interaction:{}},i18n:{},swatches:null,inline:!1,sliders:null,default:\"#42445a\",defaultRepresentation:null,position:\"bottom-middle\",adjustableNumbers:!0,showAlways:!1,closeWithKey:\"Escape\"}),L(x,\"create\",t=>new x(t));e.default=x}]).default}));\n//# sourceMappingURL=pickr.min.js.map\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/@simonwep/pickr/dist/pickr.min.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./css/index.css":
/*!*************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./css/index.css ***!
  \*************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* wrap */\\r\\n.wrap {\\r\\n    overflow: hidden;\\r\\n}\\r\\np,h1,h2,h3,h4,h5,h6,summary,option,select{font-family: 'Noto Sans TC', sans-serif;}\\r\\n/* canvas */\\r\\n#main {\\r\\n    z-index: 0;\\r\\n    position: relative;\\r\\n}\\r\\n/* sidebar */\\r\\n.sidebar {\\r\\n    position : fixed;\\r\\n    top : 10px;\\r\\n    left : 5px;\\r\\n    background-color: rgb(243, 243, 243);\\r\\n    width: 220px;\\r\\n    padding : 15px 15px;\\r\\n    border-radius: 10px;\\r\\n    z-index: 1;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n#road{\\r\\n    position : fixed;\\r\\n    top : 10px;\\r\\n    left : 250px;\\r\\n    width: 200px;\\r\\n    padding : 20px 15px;\\r\\n    border-radius: 10px;\\r\\n    z-index: 1;\\r\\n}\\r\\n.slider {\\r\\n    overflow-y: hidden;\\r\\n    overflow-x: hidden;\\r\\n}\\r\\n.slider_describe {\\r\\n    display: inline-block;\\r\\n}\\r\\n.slider_item > input {\\r\\n    background-color: rgb(243, 243, 243);\\r\\n    width: 80px;\\r\\n    border: 0px;\\r\\n}\\r\\n.slider_slider {\\r\\n    margin: 10px;\\r\\n}\\r\\n.ui-slider .ui-slider-handle {\\r\\n    width: 0.9em;\\r\\n}\\r\\n.ui-slider-horizontal {\\r\\n    width : 180px;\\r\\n    margin-left: 10px;\\r\\n}\\r\\n.ui-widget.ui-widget-content, .ui-widget-content {\\r\\n    border: 0px;\\r\\n}\\r\\n\\r\\n/* keyword_search */\\r\\n.keyword_search {\\r\\n    width: 160px;\\r\\n    height: 100px;\\r\\n    margin-top : 10px; \\r\\n    margin-bottom: 65px;\\r\\n}\\r\\n#keyword_search_field {\\r\\n    width : 100px;\\r\\n    height: 20px;\\r\\n    padding-left: 5px;\\r\\n    border-color: rgb(231, 231, 231);\\r\\n}#keyword_search_field2 {\\r\\n    width : 100px;\\r\\n    height: 20px;\\r\\n    padding-left: 5px;\\r\\n    border-color: rgb(231, 231, 231);\\r\\n}\\r\\n.keyword {\\r\\n    margin-top: 10px;\\r\\n    width: 200px;\\r\\n    height: 100px;\\r\\n    background-color: rgb(231, 229, 229);\\r\\n    overflow-x: hidden;\\r\\n    overflow-y: scroll;\\r\\n}\\r\\n.nodeSelected {\\r\\n    margin-top: 10px;\\r\\n    width: 200px;\\r\\n    height: 80px;\\r\\n    background-color: rgb(231, 229, 229);\\r\\n    overflow-x: hidden;\\r\\n    overflow-y: scroll;\\r\\n}\\r\\n.lineSelected {\\r\\n    margin-top: 10px;\\r\\n    width: 200px;\\r\\n    height: 80px;\\r\\n    background-color: rgb(231, 229, 229);\\r\\n    overflow-x: hidden;\\r\\n    overflow-y: scroll;\\r\\n}\\r\\n.lineSelected_item{\\r\\n    clear:left;\\r\\n    float : left;\\r\\n    margin: 0px 0px;\\r\\n    padding-left: 5px;\\r\\n}\\r\\n.keyword_item {\\r\\n    margin: 0px 0px;\\r\\n    padding-left: 5px;\\r\\n}\\r\\n.keyword_name {\\r\\n    display: inline;\\r\\n    margin-right: 5px;\\r\\n}\\r\\n.keyword_delete {\\r\\n    width: 45px;\\r\\n}\\r\\n.choose_color{\\r\\n    margin-top:10px;\\r\\n}\\r\\n.radio{\\r\\n    margin-top:15px;\\r\\n}\\r\\n.current_relation{\\r\\n    margin-top:3px;\\r\\n    margin-bottom:3px;\\r\\n}\\r\\n.current_node{\\r\\n    margin-top:3px;\\r\\n    margin-bottom:3px;\\r\\n}\\r\\nlabel{\\r\\n\\tfont-family: 'Noto Sans TC', sans-serif;\\r\\n    margin-top: 0px;\\r\\n    margin-bottom: 0px;\\r\\n}\\r\\n.color-lump{\\r\\n    margin-top: 5px;\\r\\n    width: 25px;\\r\\n    height: 15px;\\r\\n    margin-right: 40px;\\r\\n    float : right;\\r\\n    border: 2px;\\r\\n    border-color: white;\\r\\n    border-style: solid;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n/* switch sstyle setting */\\r\\n.switch-left-right .switch-label {\\r\\n\\toverflow: hidden;\\r\\n}\\r\\n.switch-left-right .switch-label:before, .switch-left-right .switch-label:after {\\r\\n\\twidth: 20px;\\r\\n\\theight: 20px;\\r\\n\\ttop: 4px;\\r\\n\\tleft: 0;\\r\\n\\tright: 0;\\r\\n\\tbottom: 0;\\r\\n\\tpadding: 11px 0 0 0;\\r\\n\\ttext-indent: -12px;\\r\\n\\tborder-radius: 20px;\\r\\n\\tbox-shadow: inset 0 1px 4px rgba(0, 0, 0, 0.2), inset 0 0 3px rgba(0, 0, 0, 0.1);\\r\\n}\\r\\n.switch-left-right .switch-label:before {\\r\\n\\tbackground: #2fe90a;\\r\\n    text-align: left;\\r\\n    text-indent: -50px;\\r\\n\\tpadding-left: 80px;\\r\\n\\topacity: 1;\\r\\n\\twidth: 100%;\\r\\n}\\r\\n.switch-left-right .switch-label:after {\\r\\n\\ttext-align: left;\\r\\n\\ttext-indent: 9px;\\r\\n\\tbackground: #FF7F50;\\r\\n\\tleft: -100px;\\r\\n\\topacity: 1;\\r\\n\\twidth: 100%;\\r\\n}\\r\\n\\r\\n.switch-left-right .switch-input:checked ~ .switch-label:after {\\r\\n\\tleft: 0;\\r\\n}\\r\\n/* common switch */\\r\\n.switch {\\r\\n\\tposition: relative;\\r\\n\\tdisplay: block;\\r\\n\\tvertical-align: top;\\r\\n\\twidth: 100px;\\r\\n\\theight: 30px;\\r\\n\\tpadding: 3px;\\r\\n\\tmargin: 0 10px 10px 0;\\r\\n\\tbackground: linear-gradient(to bottom, #eeeeee, #FFFFFF 25px);\\r\\n\\tbackground-image: -webkit-linear-gradient(top, #eeeeee, #FFFFFF 25px);\\r\\n\\tborder-radius: 18px;\\r\\n\\tbox-shadow: inset 0 -1px white, inset 0 1px 1px rgba(0, 0, 0, 0.05);\\r\\n\\tcursor: pointer;\\r\\n\\tbox-sizing:content-box;\\r\\n}\\r\\n.switch-input {\\r\\n\\tposition: absolute;\\r\\n\\ttop: 0;\\r\\n\\tleft: 0;\\r\\n\\topacity: 0;\\r\\n\\tbox-sizing:content-box;\\r\\n}\\r\\n.switch-label {\\r\\n\\tfont-family: 'Noto Sans TC', sans-serif;\\r\\n\\tposition: relative;\\r\\n\\tdisplay: block;\\r\\n\\theight: inherit;\\r\\n\\tfont-size: 13px;\\r\\n\\ttext-transform: uppercase;\\r\\n\\tbackground: #eceeef;\\r\\n\\tborder-radius: inherit;\\r\\n\\tbox-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.12), inset 0 0 2px rgba(0, 0, 0, 0.15);\\r\\n\\tbox-sizing:content-box;\\r\\n}\\r\\n.switch-label:before, .switch-label:after {\\r\\n\\tposition: absolute;\\r\\n\\ttop: 50%;\\r\\n\\tmargin-top: -.5em;\\r\\n\\tline-height: 1;\\r\\n\\t-webkit-transition: inherit;\\r\\n\\t-moz-transition: inherit;\\r\\n\\t-o-transition: inherit;\\r\\n\\ttransition: inherit;\\r\\n\\tbox-sizing:content-box;\\r\\n}\\r\\n.switch-label:before {\\r\\n\\tfont-family: 'Noto Sans TC', sans-serif;\\r\\n\\tcontent: attr(data-off);\\r\\n\\tright: 110px;\\r\\n\\tcolor: #ffffff;\\r\\n\\ttext-shadow: 0 1px rgba(255, 255, 255, 0.5);\\r\\n}\\r\\n.switch-label:after {\\r\\n\\tfont-family: 'Noto Sans TC', sans-serif;\\r\\n\\tcontent: attr(data-on);\\r\\n\\tleft: 11px;\\r\\n\\tcolor: #FFFFFF;\\r\\n\\ttext-shadow: 0 1px rgba(0, 0, 0, 0.2);\\r\\n\\topacity: 0;\\r\\n}\\r\\n.switch-handle {\\r\\n\\tposition: absolute;\\r\\n\\ttop: 4px;\\r\\n\\tleft: 4px;\\r\\n\\twidth: 28px;\\r\\n\\theight: 28px;\\r\\n\\tbackground: linear-gradient(to bottom, #FFFFFF 40%, #f0f0f0);\\r\\n\\tbackground-image: -webkit-linear-gradient(top, #FFFFFF 40%, #f0f0f0);\\r\\n\\tborder-radius: 100%;\\r\\n\\tbox-shadow: 1px 1px 5px rgba(0, 0, 0, 0.2);\\r\\n}\\r\\n\\r\\n.switch-input:checked ~ .switch-handle {\\r\\n\\tleft: 74px;\\r\\n\\tbox-shadow: -1px 1px 5px rgba(0, 0, 0, 0.2);\\r\\n}\\r\\n \\r\\n/* Transition\\r\\n========================== */\\r\\n.switch-label, .switch-handle {\\r\\n\\ttransition: All 0.3s ease;\\r\\n\\t-webkit-transition: All 0.3s ease;\\r\\n\\t-moz-transition: All 0.3s ease;\\r\\n\\t-o-transition: All 0.3s ease;\\r\\n}\\r\\n.color-lump[role=\\\"button\\\"] {\\r\\n\\twidth: 30px;\\r\\n    height: 18px;\\r\\n    border: 2px solid #ffffff;\\r\\n}\\r\\n\\r\\nbutton[aria-pressed=\\\"true\\\"],\\r\\n[role=\\\"button\\\"][aria-pressed=\\\"true\\\"] {\\r\\n    border: 4px solid #000;\\r\\n}\\r\\n.autocomplete {\\r\\nposition: relative;\\r\\ndisplay: inline-block;\\r\\n}\\r\\n.autocomplete-items {\\r\\nposition: absolute;\\r\\nborder: 1px solid #d4d4d4;\\r\\nborder-bottom: none;\\r\\nborder-top: none;\\r\\nz-index: 99;\\r\\n/*position the autocomplete items to be the same width as the container:*/\\r\\ntop: 100%;\\r\\nleft: 0;\\r\\nright: 0;\\r\\n}\\r\\n\\r\\n.autocomplete-items div {\\r\\npadding: 10px;\\r\\ncursor: pointer;\\r\\nbackground-color: #fff; \\r\\nborder-bottom: 1px solid #d4d4d4; \\r\\n}\\r\\n\\r\\n/*when hovering an item:*/\\r\\n.autocomplete-items div:hover {\\r\\nbackground-color: #e9e9e9; \\r\\n}\\r\\n\\r\\n/*when navigating through the items using the arrow keys:*/\\r\\n.autocomplete-active {\\r\\nbackground-color: DodgerBlue !important; \\r\\ncolor: #ffffff; \\r\\n}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://ascdc-sna/./css/index.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/@simonwep/pickr/dist/themes/nano.min.css":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/@simonwep/pickr/dist/themes/nano.min.css ***!
  \*****************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*! Pickr 1.8.0 MIT | https://github.com/Simonwep/pickr */.pickr{position:relative;overflow:visible;transform:translateY(0)}.pickr *{box-sizing:border-box;outline:none;border:none;-webkit-appearance:none}.pickr .pcr-button{position:relative;height:2em;width:2em;padding:.5em;cursor:pointer;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;border-radius:.15em;background:url('data:image/svg+xml;utf8, <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 50 50\\\" stroke=\\\"%2342445A\\\" stroke-width=\\\"5px\\\" stroke-linecap=\\\"round\\\"><path d=\\\"M45,45L5,5\\\"></path><path d=\\\"M45,5L5,45\\\"></path></svg>') no-repeat 50%;background-size:0;transition:all .3s}.pickr .pcr-button:before{background:url('data:image/svg+xml;utf8, <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 2 2\\\"><path fill=\\\"white\\\" d=\\\"M1,0H2V1H1V0ZM0,1H1V2H0V1Z\\\"/><path fill=\\\"gray\\\" d=\\\"M0,0H1V1H0V0ZM1,1H2V2H1V1Z\\\"/></svg>');background-size:.5em;z-index:-1;z-index:auto}.pickr .pcr-button:after,.pickr .pcr-button:before{position:absolute;content:\\\"\\\";top:0;left:0;width:100%;height:100%;border-radius:.15em}.pickr .pcr-button:after{transition:background .3s;background:currentColor}.pickr .pcr-button.clear{background-size:70%}.pickr .pcr-button.clear:before{opacity:0}.pickr .pcr-button.clear:focus{box-shadow:0 0 0 1px hsla(0,0%,100%,.85),0 0 0 3px currentColor}.pickr .pcr-button.disabled{cursor:not-allowed}.pcr-app *,.pickr *{box-sizing:border-box;outline:none;border:none;-webkit-appearance:none}.pcr-app button.pcr-active,.pcr-app button:focus,.pcr-app input.pcr-active,.pcr-app input:focus,.pickr button.pcr-active,.pickr button:focus,.pickr input.pcr-active,.pickr input:focus{box-shadow:0 0 0 1px hsla(0,0%,100%,.85),0 0 0 3px currentColor}.pcr-app .pcr-palette,.pcr-app .pcr-slider,.pickr .pcr-palette,.pickr .pcr-slider{transition:box-shadow .3s}.pcr-app .pcr-palette:focus,.pcr-app .pcr-slider:focus,.pickr .pcr-palette:focus,.pickr .pcr-slider:focus{box-shadow:0 0 0 1px hsla(0,0%,100%,.85),0 0 0 3px rgba(0,0,0,.25)}.pcr-app{position:fixed;display:flex;flex-direction:column;z-index:10000;border-radius:.1em;background:#fff;opacity:0;visibility:hidden;transition:opacity .3s,visibility 0s .3s;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;box-shadow:0 .15em 1.5em 0 rgba(0,0,0,.1),0 0 1em 0 rgba(0,0,0,.03);left:0;top:0}.pcr-app.visible{transition:opacity .3s;visibility:visible;opacity:1}.pcr-app .pcr-swatches{display:flex;flex-wrap:wrap;margin-top:.75em}.pcr-app .pcr-swatches.pcr-last{margin:0}@supports (display:grid){.pcr-app .pcr-swatches{display:grid;align-items:center;grid-template-columns:repeat(auto-fit,1.75em)}}.pcr-app .pcr-swatches>button{font-size:1em;position:relative;width:calc(1.75em - 5px);height:calc(1.75em - 5px);border-radius:.15em;cursor:pointer;margin:2.5px;flex-shrink:0;justify-self:center;transition:all .15s;overflow:hidden;background:transparent;z-index:1}.pcr-app .pcr-swatches>button:before{position:absolute;content:\\\"\\\";top:0;left:0;width:100%;height:100%;background:url('data:image/svg+xml;utf8, <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 2 2\\\"><path fill=\\\"white\\\" d=\\\"M1,0H2V1H1V0ZM0,1H1V2H0V1Z\\\"/><path fill=\\\"gray\\\" d=\\\"M0,0H1V1H0V0ZM1,1H2V2H1V1Z\\\"/></svg>');background-size:6px;border-radius:.15em;z-index:-1}.pcr-app .pcr-swatches>button:after{content:\\\"\\\";position:absolute;top:0;left:0;width:100%;height:100%;background:currentColor;border:1px solid rgba(0,0,0,.05);border-radius:.15em;box-sizing:border-box}.pcr-app .pcr-swatches>button:hover{filter:brightness(1.05)}.pcr-app .pcr-swatches>button:not(.pcr-active){box-shadow:none}.pcr-app .pcr-interaction{display:flex;flex-wrap:wrap;align-items:center;margin:0 -.2em}.pcr-app .pcr-interaction>*{margin:0 .2em}.pcr-app .pcr-interaction input{letter-spacing:.07em;font-size:.75em;text-align:center;cursor:pointer;color:#75797e;background:#f1f3f4;border-radius:.15em;transition:all .15s;padding:.45em .5em;margin-top:.75em}.pcr-app .pcr-interaction input:hover{filter:brightness(.975)}.pcr-app .pcr-interaction input:focus{box-shadow:0 0 0 1px hsla(0,0%,100%,.85),0 0 0 3px rgba(66,133,244,.75)}.pcr-app .pcr-interaction .pcr-result{color:#75797e;text-align:left;flex:1 1 8em;min-width:8em;transition:all .2s;border-radius:.15em;background:#f1f3f4;cursor:text}.pcr-app .pcr-interaction .pcr-result::-moz-selection{background:#4285f4;color:#fff}.pcr-app .pcr-interaction .pcr-result::selection{background:#4285f4;color:#fff}.pcr-app .pcr-interaction .pcr-type.active{color:#fff;background:#4285f4}.pcr-app .pcr-interaction .pcr-cancel,.pcr-app .pcr-interaction .pcr-clear,.pcr-app .pcr-interaction .pcr-save{width:auto;color:#fff}.pcr-app .pcr-interaction .pcr-cancel:hover,.pcr-app .pcr-interaction .pcr-clear:hover,.pcr-app .pcr-interaction .pcr-save:hover{filter:brightness(.925)}.pcr-app .pcr-interaction .pcr-save{background:#4285f4}.pcr-app .pcr-interaction .pcr-cancel,.pcr-app .pcr-interaction .pcr-clear{background:#f44250}.pcr-app .pcr-interaction .pcr-cancel:focus,.pcr-app .pcr-interaction .pcr-clear:focus{box-shadow:0 0 0 1px hsla(0,0%,100%,.85),0 0 0 3px rgba(244,66,80,.75)}.pcr-app .pcr-selection .pcr-picker{position:absolute;height:18px;width:18px;border:2px solid #fff;border-radius:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.pcr-app .pcr-selection .pcr-color-chooser,.pcr-app .pcr-selection .pcr-color-opacity,.pcr-app .pcr-selection .pcr-color-palette{position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:flex;flex-direction:column;cursor:grab;cursor:-webkit-grab}.pcr-app .pcr-selection .pcr-color-chooser:active,.pcr-app .pcr-selection .pcr-color-opacity:active,.pcr-app .pcr-selection .pcr-color-palette:active{cursor:grabbing;cursor:-webkit-grabbing}.pcr-app[data-theme=nano]{width:14.25em;max-width:95vw}.pcr-app[data-theme=nano] .pcr-swatches{margin-top:.6em;padding:0 .6em}.pcr-app[data-theme=nano] .pcr-interaction{padding:0 .6em .6em}.pcr-app[data-theme=nano] .pcr-selection{display:grid;grid-gap:.6em;grid-template-columns:1fr 4fr;grid-template-rows:5fr auto auto;align-items:center;height:10.5em;width:100%;align-self:flex-start}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview{grid-area:2/1/4/1;height:100%;width:100%;display:flex;flex-direction:row;justify-content:center;margin-left:.6em}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview .pcr-last-color{display:none}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview .pcr-current-color{position:relative;background:currentColor;width:2em;height:2em;border-radius:50em;overflow:hidden}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview .pcr-current-color:before{position:absolute;content:\\\"\\\";top:0;left:0;width:100%;height:100%;background:url('data:image/svg+xml;utf8, <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 2 2\\\"><path fill=\\\"white\\\" d=\\\"M1,0H2V1H1V0ZM0,1H1V2H0V1Z\\\"/><path fill=\\\"gray\\\" d=\\\"M0,0H1V1H0V0ZM1,1H2V2H1V1Z\\\"/></svg>');background-size:.5em;border-radius:.15em;z-index:-1}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-palette{grid-area:1/1/2/3;width:100%;height:100%;z-index:1}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-palette .pcr-palette{border-radius:.15em;width:100%;height:100%}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-palette .pcr-palette:before{position:absolute;content:\\\"\\\";top:0;left:0;width:100%;height:100%;background:url('data:image/svg+xml;utf8, <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 2 2\\\"><path fill=\\\"white\\\" d=\\\"M1,0H2V1H1V0ZM0,1H1V2H0V1Z\\\"/><path fill=\\\"gray\\\" d=\\\"M0,0H1V1H0V0ZM1,1H2V2H1V1Z\\\"/></svg>');background-size:.5em;border-radius:.15em;z-index:-1}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser{grid-area:2/2/2/2}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity{grid-area:3/2/3/2}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser,.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity{height:.5em;margin:0 .6em}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser .pcr-picker,.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity .pcr-picker{top:50%;transform:translateY(-50%)}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser .pcr-slider,.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity .pcr-slider{flex-grow:1;border-radius:50em}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser .pcr-slider{background:linear-gradient(90deg,red,#ff0,#0f0,#0ff,#00f,#f0f,red)}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity .pcr-slider{background:linear-gradient(90deg,transparent,#000),url('data:image/svg+xml;utf8, <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 2 2\\\"><path fill=\\\"white\\\" d=\\\"M1,0H2V1H1V0ZM0,1H1V2H0V1Z\\\"/><path fill=\\\"gray\\\" d=\\\"M0,0H1V1H0V0ZM1,1H2V2H1V1Z\\\"/></svg>');background-size:100%,.25em}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/@simonwep/pickr/dist/themes/nano.min.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/jquery-ui-dist/jquery-ui.min.js":
/*!******************************************************!*\
  !*** ./node_modules/jquery-ui-dist/jquery-ui.min.js ***!
  \******************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! jQuery UI - v1.12.1 - 2016-09-14\n* http://jqueryui.com\n* Includes: widget.js, position.js, data.js, disable-selection.js, effect.js, effects/effect-blind.js, effects/effect-bounce.js, effects/effect-clip.js, effects/effect-drop.js, effects/effect-explode.js, effects/effect-fade.js, effects/effect-fold.js, effects/effect-highlight.js, effects/effect-puff.js, effects/effect-pulsate.js, effects/effect-scale.js, effects/effect-shake.js, effects/effect-size.js, effects/effect-slide.js, effects/effect-transfer.js, focusable.js, form-reset-mixin.js, jquery-1-7.js, keycode.js, labels.js, scroll-parent.js, tabbable.js, unique-id.js, widgets/accordion.js, widgets/autocomplete.js, widgets/button.js, widgets/checkboxradio.js, widgets/controlgroup.js, widgets/datepicker.js, widgets/dialog.js, widgets/draggable.js, widgets/droppable.js, widgets/menu.js, widgets/mouse.js, widgets/progressbar.js, widgets/resizable.js, widgets/selectable.js, widgets/selectmenu.js, widgets/slider.js, widgets/sortable.js, widgets/spinner.js, widgets/tabs.js, widgets/tooltip.js\n* Copyright jQuery Foundation and other contributors; Licensed MIT */\n\n(function(t){ true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):0})(function(t){function e(t){for(var e=t.css(\"visibility\");\"inherit\"===e;)t=t.parent(),e=t.css(\"visibility\");return\"hidden\"!==e}function i(t){for(var e,i;t.length&&t[0]!==document;){if(e=t.css(\"position\"),(\"absolute\"===e||\"relative\"===e||\"fixed\"===e)&&(i=parseInt(t.css(\"zIndex\"),10),!isNaN(i)&&0!==i))return i;t=t.parent()}return 0}function s(){this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId=\"ui-datepicker-div\",this._inlineClass=\"ui-datepicker-inline\",this._appendClass=\"ui-datepicker-append\",this._triggerClass=\"ui-datepicker-trigger\",this._dialogClass=\"ui-datepicker-dialog\",this._disableClass=\"ui-datepicker-disabled\",this._unselectableClass=\"ui-datepicker-unselectable\",this._currentClass=\"ui-datepicker-current-day\",this._dayOverClass=\"ui-datepicker-days-cell-over\",this.regional=[],this.regional[\"\"]={closeText:\"Done\",prevText:\"Prev\",nextText:\"Next\",currentText:\"Today\",monthNames:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],monthNamesShort:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],dayNames:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],dayNamesShort:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],dayNamesMin:[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],weekHeader:\"Wk\",dateFormat:\"mm/dd/yy\",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:\"\"},this._defaults={showOn:\"focus\",showAnim:\"fadeIn\",showOptions:{},defaultDate:null,appendText:\"\",buttonText:\"...\",buttonImage:\"\",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:\"c-10:c+10\",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:\"+10\",minDate:null,maxDate:null,duration:\"fast\",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:\"\",altFormat:\"\",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},t.extend(this._defaults,this.regional[\"\"]),this.regional.en=t.extend(!0,{},this.regional[\"\"]),this.regional[\"en-US\"]=t.extend(!0,{},this.regional.en),this.dpDiv=n(t(\"<div id='\"+this._mainDivId+\"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>\"))}function n(e){var i=\"button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a\";return e.on(\"mouseout\",i,function(){t(this).removeClass(\"ui-state-hover\"),-1!==this.className.indexOf(\"ui-datepicker-prev\")&&t(this).removeClass(\"ui-datepicker-prev-hover\"),-1!==this.className.indexOf(\"ui-datepicker-next\")&&t(this).removeClass(\"ui-datepicker-next-hover\")}).on(\"mouseover\",i,o)}function o(){t.datepicker._isDisabledDatepicker(m.inline?m.dpDiv.parent()[0]:m.input[0])||(t(this).parents(\".ui-datepicker-calendar\").find(\"a\").removeClass(\"ui-state-hover\"),t(this).addClass(\"ui-state-hover\"),-1!==this.className.indexOf(\"ui-datepicker-prev\")&&t(this).addClass(\"ui-datepicker-prev-hover\"),-1!==this.className.indexOf(\"ui-datepicker-next\")&&t(this).addClass(\"ui-datepicker-next-hover\"))}function a(e,i){t.extend(e,i);for(var s in i)null==i[s]&&(e[s]=i[s]);return e}function r(t){return function(){var e=this.element.val();t.apply(this,arguments),this._refresh(),e!==this.element.val()&&this._trigger(\"change\")}}t.ui=t.ui||{},t.ui.version=\"1.12.1\";var h=0,l=Array.prototype.slice;t.cleanData=function(e){return function(i){var s,n,o;for(o=0;null!=(n=i[o]);o++)try{s=t._data(n,\"events\"),s&&s.remove&&t(n).triggerHandler(\"remove\")}catch(a){}e(i)}}(t.cleanData),t.widget=function(e,i,s){var n,o,a,r={},h=e.split(\".\")[0];e=e.split(\".\")[1];var l=h+\"-\"+e;return s||(s=i,i=t.Widget),t.isArray(s)&&(s=t.extend.apply(null,[{}].concat(s))),t.expr[\":\"][l.toLowerCase()]=function(e){return!!t.data(e,l)},t[h]=t[h]||{},n=t[h][e],o=t[h][e]=function(t,e){return this._createWidget?(arguments.length&&this._createWidget(t,e),void 0):new o(t,e)},t.extend(o,n,{version:s.version,_proto:t.extend({},s),_childConstructors:[]}),a=new i,a.options=t.widget.extend({},a.options),t.each(s,function(e,s){return t.isFunction(s)?(r[e]=function(){function t(){return i.prototype[e].apply(this,arguments)}function n(t){return i.prototype[e].apply(this,t)}return function(){var e,i=this._super,o=this._superApply;return this._super=t,this._superApply=n,e=s.apply(this,arguments),this._super=i,this._superApply=o,e}}(),void 0):(r[e]=s,void 0)}),o.prototype=t.widget.extend(a,{widgetEventPrefix:n?a.widgetEventPrefix||e:e},r,{constructor:o,namespace:h,widgetName:e,widgetFullName:l}),n?(t.each(n._childConstructors,function(e,i){var s=i.prototype;t.widget(s.namespace+\".\"+s.widgetName,o,i._proto)}),delete n._childConstructors):i._childConstructors.push(o),t.widget.bridge(e,o),o},t.widget.extend=function(e){for(var i,s,n=l.call(arguments,1),o=0,a=n.length;a>o;o++)for(i in n[o])s=n[o][i],n[o].hasOwnProperty(i)&&void 0!==s&&(e[i]=t.isPlainObject(s)?t.isPlainObject(e[i])?t.widget.extend({},e[i],s):t.widget.extend({},s):s);return e},t.widget.bridge=function(e,i){var s=i.prototype.widgetFullName||e;t.fn[e]=function(n){var o=\"string\"==typeof n,a=l.call(arguments,1),r=this;return o?this.length||\"instance\"!==n?this.each(function(){var i,o=t.data(this,s);return\"instance\"===n?(r=o,!1):o?t.isFunction(o[n])&&\"_\"!==n.charAt(0)?(i=o[n].apply(o,a),i!==o&&void 0!==i?(r=i&&i.jquery?r.pushStack(i.get()):i,!1):void 0):t.error(\"no such method '\"+n+\"' for \"+e+\" widget instance\"):t.error(\"cannot call methods on \"+e+\" prior to initialization; \"+\"attempted to call method '\"+n+\"'\")}):r=void 0:(a.length&&(n=t.widget.extend.apply(null,[n].concat(a))),this.each(function(){var e=t.data(this,s);e?(e.option(n||{}),e._init&&e._init()):t.data(this,s,new i(n,this))})),r}},t.Widget=function(){},t.Widget._childConstructors=[],t.Widget.prototype={widgetName:\"widget\",widgetEventPrefix:\"\",defaultElement:\"<div>\",options:{classes:{},disabled:!1,create:null},_createWidget:function(e,i){i=t(i||this.defaultElement||this)[0],this.element=t(i),this.uuid=h++,this.eventNamespace=\".\"+this.widgetName+this.uuid,this.bindings=t(),this.hoverable=t(),this.focusable=t(),this.classesElementLookup={},i!==this&&(t.data(i,this.widgetFullName,this),this._on(!0,this.element,{remove:function(t){t.target===i&&this.destroy()}}),this.document=t(i.style?i.ownerDocument:i.document||i),this.window=t(this.document[0].defaultView||this.document[0].parentWindow)),this.options=t.widget.extend({},this.options,this._getCreateOptions(),e),this._create(),this.options.disabled&&this._setOptionDisabled(this.options.disabled),this._trigger(\"create\",null,this._getCreateEventData()),this._init()},_getCreateOptions:function(){return{}},_getCreateEventData:t.noop,_create:t.noop,_init:t.noop,destroy:function(){var e=this;this._destroy(),t.each(this.classesElementLookup,function(t,i){e._removeClass(i,t)}),this.element.off(this.eventNamespace).removeData(this.widgetFullName),this.widget().off(this.eventNamespace).removeAttr(\"aria-disabled\"),this.bindings.off(this.eventNamespace)},_destroy:t.noop,widget:function(){return this.element},option:function(e,i){var s,n,o,a=e;if(0===arguments.length)return t.widget.extend({},this.options);if(\"string\"==typeof e)if(a={},s=e.split(\".\"),e=s.shift(),s.length){for(n=a[e]=t.widget.extend({},this.options[e]),o=0;s.length-1>o;o++)n[s[o]]=n[s[o]]||{},n=n[s[o]];if(e=s.pop(),1===arguments.length)return void 0===n[e]?null:n[e];n[e]=i}else{if(1===arguments.length)return void 0===this.options[e]?null:this.options[e];a[e]=i}return this._setOptions(a),this},_setOptions:function(t){var e;for(e in t)this._setOption(e,t[e]);return this},_setOption:function(t,e){return\"classes\"===t&&this._setOptionClasses(e),this.options[t]=e,\"disabled\"===t&&this._setOptionDisabled(e),this},_setOptionClasses:function(e){var i,s,n;for(i in e)n=this.classesElementLookup[i],e[i]!==this.options.classes[i]&&n&&n.length&&(s=t(n.get()),this._removeClass(n,i),s.addClass(this._classes({element:s,keys:i,classes:e,add:!0})))},_setOptionDisabled:function(t){this._toggleClass(this.widget(),this.widgetFullName+\"-disabled\",null,!!t),t&&(this._removeClass(this.hoverable,null,\"ui-state-hover\"),this._removeClass(this.focusable,null,\"ui-state-focus\"))},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_classes:function(e){function i(i,o){var a,r;for(r=0;i.length>r;r++)a=n.classesElementLookup[i[r]]||t(),a=e.add?t(t.unique(a.get().concat(e.element.get()))):t(a.not(e.element).get()),n.classesElementLookup[i[r]]=a,s.push(i[r]),o&&e.classes[i[r]]&&s.push(e.classes[i[r]])}var s=[],n=this;return e=t.extend({element:this.element,classes:this.options.classes||{}},e),this._on(e.element,{remove:\"_untrackClassesElement\"}),e.keys&&i(e.keys.match(/\\S+/g)||[],!0),e.extra&&i(e.extra.match(/\\S+/g)||[]),s.join(\" \")},_untrackClassesElement:function(e){var i=this;t.each(i.classesElementLookup,function(s,n){-1!==t.inArray(e.target,n)&&(i.classesElementLookup[s]=t(n.not(e.target).get()))})},_removeClass:function(t,e,i){return this._toggleClass(t,e,i,!1)},_addClass:function(t,e,i){return this._toggleClass(t,e,i,!0)},_toggleClass:function(t,e,i,s){s=\"boolean\"==typeof s?s:i;var n=\"string\"==typeof t||null===t,o={extra:n?e:i,keys:n?t:e,element:n?this.element:t,add:s};return o.element.toggleClass(this._classes(o),s),this},_on:function(e,i,s){var n,o=this;\"boolean\"!=typeof e&&(s=i,i=e,e=!1),s?(i=n=t(i),this.bindings=this.bindings.add(i)):(s=i,i=this.element,n=this.widget()),t.each(s,function(s,a){function r(){return e||o.options.disabled!==!0&&!t(this).hasClass(\"ui-state-disabled\")?(\"string\"==typeof a?o[a]:a).apply(o,arguments):void 0}\"string\"!=typeof a&&(r.guid=a.guid=a.guid||r.guid||t.guid++);var h=s.match(/^([\\w:-]*)\\s*(.*)$/),l=h[1]+o.eventNamespace,c=h[2];c?n.on(l,c,r):i.on(l,r)})},_off:function(e,i){i=(i||\"\").split(\" \").join(this.eventNamespace+\" \")+this.eventNamespace,e.off(i).off(i),this.bindings=t(this.bindings.not(e).get()),this.focusable=t(this.focusable.not(e).get()),this.hoverable=t(this.hoverable.not(e).get())},_delay:function(t,e){function i(){return(\"string\"==typeof t?s[t]:t).apply(s,arguments)}var s=this;return setTimeout(i,e||0)},_hoverable:function(e){this.hoverable=this.hoverable.add(e),this._on(e,{mouseenter:function(e){this._addClass(t(e.currentTarget),null,\"ui-state-hover\")},mouseleave:function(e){this._removeClass(t(e.currentTarget),null,\"ui-state-hover\")}})},_focusable:function(e){this.focusable=this.focusable.add(e),this._on(e,{focusin:function(e){this._addClass(t(e.currentTarget),null,\"ui-state-focus\")},focusout:function(e){this._removeClass(t(e.currentTarget),null,\"ui-state-focus\")}})},_trigger:function(e,i,s){var n,o,a=this.options[e];if(s=s||{},i=t.Event(i),i.type=(e===this.widgetEventPrefix?e:this.widgetEventPrefix+e).toLowerCase(),i.target=this.element[0],o=i.originalEvent)for(n in o)n in i||(i[n]=o[n]);return this.element.trigger(i,s),!(t.isFunction(a)&&a.apply(this.element[0],[i].concat(s))===!1||i.isDefaultPrevented())}},t.each({show:\"fadeIn\",hide:\"fadeOut\"},function(e,i){t.Widget.prototype[\"_\"+e]=function(s,n,o){\"string\"==typeof n&&(n={effect:n});var a,r=n?n===!0||\"number\"==typeof n?i:n.effect||i:e;n=n||{},\"number\"==typeof n&&(n={duration:n}),a=!t.isEmptyObject(n),n.complete=o,n.delay&&s.delay(n.delay),a&&t.effects&&t.effects.effect[r]?s[e](n):r!==e&&s[r]?s[r](n.duration,n.easing,o):s.queue(function(i){t(this)[e](),o&&o.call(s[0]),i()})}}),t.widget,function(){function e(t,e,i){return[parseFloat(t[0])*(u.test(t[0])?e/100:1),parseFloat(t[1])*(u.test(t[1])?i/100:1)]}function i(e,i){return parseInt(t.css(e,i),10)||0}function s(e){var i=e[0];return 9===i.nodeType?{width:e.width(),height:e.height(),offset:{top:0,left:0}}:t.isWindow(i)?{width:e.width(),height:e.height(),offset:{top:e.scrollTop(),left:e.scrollLeft()}}:i.preventDefault?{width:0,height:0,offset:{top:i.pageY,left:i.pageX}}:{width:e.outerWidth(),height:e.outerHeight(),offset:e.offset()}}var n,o=Math.max,a=Math.abs,r=/left|center|right/,h=/top|center|bottom/,l=/[\\+\\-]\\d+(\\.[\\d]+)?%?/,c=/^\\w+/,u=/%$/,d=t.fn.position;t.position={scrollbarWidth:function(){if(void 0!==n)return n;var e,i,s=t(\"<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>\"),o=s.children()[0];return t(\"body\").append(s),e=o.offsetWidth,s.css(\"overflow\",\"scroll\"),i=o.offsetWidth,e===i&&(i=s[0].clientWidth),s.remove(),n=e-i},getScrollInfo:function(e){var i=e.isWindow||e.isDocument?\"\":e.element.css(\"overflow-x\"),s=e.isWindow||e.isDocument?\"\":e.element.css(\"overflow-y\"),n=\"scroll\"===i||\"auto\"===i&&e.width<e.element[0].scrollWidth,o=\"scroll\"===s||\"auto\"===s&&e.height<e.element[0].scrollHeight;return{width:o?t.position.scrollbarWidth():0,height:n?t.position.scrollbarWidth():0}},getWithinInfo:function(e){var i=t(e||window),s=t.isWindow(i[0]),n=!!i[0]&&9===i[0].nodeType,o=!s&&!n;return{element:i,isWindow:s,isDocument:n,offset:o?t(e).offset():{left:0,top:0},scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:i.outerWidth(),height:i.outerHeight()}}},t.fn.position=function(n){if(!n||!n.of)return d.apply(this,arguments);n=t.extend({},n);var u,p,f,g,m,_,v=t(n.of),b=t.position.getWithinInfo(n.within),y=t.position.getScrollInfo(b),w=(n.collision||\"flip\").split(\" \"),k={};return _=s(v),v[0].preventDefault&&(n.at=\"left top\"),p=_.width,f=_.height,g=_.offset,m=t.extend({},g),t.each([\"my\",\"at\"],function(){var t,e,i=(n[this]||\"\").split(\" \");1===i.length&&(i=r.test(i[0])?i.concat([\"center\"]):h.test(i[0])?[\"center\"].concat(i):[\"center\",\"center\"]),i[0]=r.test(i[0])?i[0]:\"center\",i[1]=h.test(i[1])?i[1]:\"center\",t=l.exec(i[0]),e=l.exec(i[1]),k[this]=[t?t[0]:0,e?e[0]:0],n[this]=[c.exec(i[0])[0],c.exec(i[1])[0]]}),1===w.length&&(w[1]=w[0]),\"right\"===n.at[0]?m.left+=p:\"center\"===n.at[0]&&(m.left+=p/2),\"bottom\"===n.at[1]?m.top+=f:\"center\"===n.at[1]&&(m.top+=f/2),u=e(k.at,p,f),m.left+=u[0],m.top+=u[1],this.each(function(){var s,r,h=t(this),l=h.outerWidth(),c=h.outerHeight(),d=i(this,\"marginLeft\"),_=i(this,\"marginTop\"),x=l+d+i(this,\"marginRight\")+y.width,C=c+_+i(this,\"marginBottom\")+y.height,D=t.extend({},m),I=e(k.my,h.outerWidth(),h.outerHeight());\"right\"===n.my[0]?D.left-=l:\"center\"===n.my[0]&&(D.left-=l/2),\"bottom\"===n.my[1]?D.top-=c:\"center\"===n.my[1]&&(D.top-=c/2),D.left+=I[0],D.top+=I[1],s={marginLeft:d,marginTop:_},t.each([\"left\",\"top\"],function(e,i){t.ui.position[w[e]]&&t.ui.position[w[e]][i](D,{targetWidth:p,targetHeight:f,elemWidth:l,elemHeight:c,collisionPosition:s,collisionWidth:x,collisionHeight:C,offset:[u[0]+I[0],u[1]+I[1]],my:n.my,at:n.at,within:b,elem:h})}),n.using&&(r=function(t){var e=g.left-D.left,i=e+p-l,s=g.top-D.top,r=s+f-c,u={target:{element:v,left:g.left,top:g.top,width:p,height:f},element:{element:h,left:D.left,top:D.top,width:l,height:c},horizontal:0>i?\"left\":e>0?\"right\":\"center\",vertical:0>r?\"top\":s>0?\"bottom\":\"middle\"};l>p&&p>a(e+i)&&(u.horizontal=\"center\"),c>f&&f>a(s+r)&&(u.vertical=\"middle\"),u.important=o(a(e),a(i))>o(a(s),a(r))?\"horizontal\":\"vertical\",n.using.call(this,t,u)}),h.offset(t.extend(D,{using:r}))})},t.ui.position={fit:{left:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollLeft:s.offset.left,a=s.width,r=t.left-e.collisionPosition.marginLeft,h=n-r,l=r+e.collisionWidth-a-n;e.collisionWidth>a?h>0&&0>=l?(i=t.left+h+e.collisionWidth-a-n,t.left+=h-i):t.left=l>0&&0>=h?n:h>l?n+a-e.collisionWidth:n:h>0?t.left+=h:l>0?t.left-=l:t.left=o(t.left-r,t.left)},top:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollTop:s.offset.top,a=e.within.height,r=t.top-e.collisionPosition.marginTop,h=n-r,l=r+e.collisionHeight-a-n;e.collisionHeight>a?h>0&&0>=l?(i=t.top+h+e.collisionHeight-a-n,t.top+=h-i):t.top=l>0&&0>=h?n:h>l?n+a-e.collisionHeight:n:h>0?t.top+=h:l>0?t.top-=l:t.top=o(t.top-r,t.top)}},flip:{left:function(t,e){var i,s,n=e.within,o=n.offset.left+n.scrollLeft,r=n.width,h=n.isWindow?n.scrollLeft:n.offset.left,l=t.left-e.collisionPosition.marginLeft,c=l-h,u=l+e.collisionWidth-r-h,d=\"left\"===e.my[0]?-e.elemWidth:\"right\"===e.my[0]?e.elemWidth:0,p=\"left\"===e.at[0]?e.targetWidth:\"right\"===e.at[0]?-e.targetWidth:0,f=-2*e.offset[0];0>c?(i=t.left+d+p+f+e.collisionWidth-r-o,(0>i||a(c)>i)&&(t.left+=d+p+f)):u>0&&(s=t.left-e.collisionPosition.marginLeft+d+p+f-h,(s>0||u>a(s))&&(t.left+=d+p+f))},top:function(t,e){var i,s,n=e.within,o=n.offset.top+n.scrollTop,r=n.height,h=n.isWindow?n.scrollTop:n.offset.top,l=t.top-e.collisionPosition.marginTop,c=l-h,u=l+e.collisionHeight-r-h,d=\"top\"===e.my[1],p=d?-e.elemHeight:\"bottom\"===e.my[1]?e.elemHeight:0,f=\"top\"===e.at[1]?e.targetHeight:\"bottom\"===e.at[1]?-e.targetHeight:0,g=-2*e.offset[1];0>c?(s=t.top+p+f+g+e.collisionHeight-r-o,(0>s||a(c)>s)&&(t.top+=p+f+g)):u>0&&(i=t.top-e.collisionPosition.marginTop+p+f+g-h,(i>0||u>a(i))&&(t.top+=p+f+g))}},flipfit:{left:function(){t.ui.position.flip.left.apply(this,arguments),t.ui.position.fit.left.apply(this,arguments)},top:function(){t.ui.position.flip.top.apply(this,arguments),t.ui.position.fit.top.apply(this,arguments)}}}}(),t.ui.position,t.extend(t.expr[\":\"],{data:t.expr.createPseudo?t.expr.createPseudo(function(e){return function(i){return!!t.data(i,e)}}):function(e,i,s){return!!t.data(e,s[3])}}),t.fn.extend({disableSelection:function(){var t=\"onselectstart\"in document.createElement(\"div\")?\"selectstart\":\"mousedown\";return function(){return this.on(t+\".ui-disableSelection\",function(t){t.preventDefault()})}}(),enableSelection:function(){return this.off(\".ui-disableSelection\")}});var c=\"ui-effects-\",u=\"ui-effects-style\",d=\"ui-effects-animated\",p=t;t.effects={effect:{}},function(t,e){function i(t,e,i){var s=u[e.type]||{};return null==t?i||!e.def?null:e.def:(t=s.floor?~~t:parseFloat(t),isNaN(t)?e.def:s.mod?(t+s.mod)%s.mod:0>t?0:t>s.max?s.max:t)}function s(i){var s=l(),n=s._rgba=[];return i=i.toLowerCase(),f(h,function(t,o){var a,r=o.re.exec(i),h=r&&o.parse(r),l=o.space||\"rgba\";return h?(a=s[l](h),s[c[l].cache]=a[c[l].cache],n=s._rgba=a._rgba,!1):e}),n.length?(\"0,0,0,0\"===n.join()&&t.extend(n,o.transparent),s):o[i]}function n(t,e,i){return i=(i+1)%1,1>6*i?t+6*(e-t)*i:1>2*i?e:2>3*i?t+6*(e-t)*(2/3-i):t}var o,a=\"backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor\",r=/^([\\-+])=\\s*(\\d+\\.?\\d*)/,h=[{re:/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,parse:function(t){return[t[1],t[2],t[3],t[4]]}},{re:/rgba?\\(\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,parse:function(t){return[2.55*t[1],2.55*t[2],2.55*t[3],t[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)]}},{re:/hsla?\\(\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,space:\"hsla\",parse:function(t){return[t[1],t[2]/100,t[3]/100,t[4]]}}],l=t.Color=function(e,i,s,n){return new t.Color.fn.parse(e,i,s,n)},c={rgba:{props:{red:{idx:0,type:\"byte\"},green:{idx:1,type:\"byte\"},blue:{idx:2,type:\"byte\"}}},hsla:{props:{hue:{idx:0,type:\"degrees\"},saturation:{idx:1,type:\"percent\"},lightness:{idx:2,type:\"percent\"}}}},u={\"byte\":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},d=l.support={},p=t(\"<p>\")[0],f=t.each;p.style.cssText=\"background-color:rgba(1,1,1,.5)\",d.rgba=p.style.backgroundColor.indexOf(\"rgba\")>-1,f(c,function(t,e){e.cache=\"_\"+t,e.props.alpha={idx:3,type:\"percent\",def:1}}),l.fn=t.extend(l.prototype,{parse:function(n,a,r,h){if(n===e)return this._rgba=[null,null,null,null],this;(n.jquery||n.nodeType)&&(n=t(n).css(a),a=e);var u=this,d=t.type(n),p=this._rgba=[];return a!==e&&(n=[n,a,r,h],d=\"array\"),\"string\"===d?this.parse(s(n)||o._default):\"array\"===d?(f(c.rgba.props,function(t,e){p[e.idx]=i(n[e.idx],e)}),this):\"object\"===d?(n instanceof l?f(c,function(t,e){n[e.cache]&&(u[e.cache]=n[e.cache].slice())}):f(c,function(e,s){var o=s.cache;f(s.props,function(t,e){if(!u[o]&&s.to){if(\"alpha\"===t||null==n[t])return;u[o]=s.to(u._rgba)}u[o][e.idx]=i(n[t],e,!0)}),u[o]&&0>t.inArray(null,u[o].slice(0,3))&&(u[o][3]=1,s.from&&(u._rgba=s.from(u[o])))}),this):e},is:function(t){var i=l(t),s=!0,n=this;return f(c,function(t,o){var a,r=i[o.cache];return r&&(a=n[o.cache]||o.to&&o.to(n._rgba)||[],f(o.props,function(t,i){return null!=r[i.idx]?s=r[i.idx]===a[i.idx]:e})),s}),s},_space:function(){var t=[],e=this;return f(c,function(i,s){e[s.cache]&&t.push(i)}),t.pop()},transition:function(t,e){var s=l(t),n=s._space(),o=c[n],a=0===this.alpha()?l(\"transparent\"):this,r=a[o.cache]||o.to(a._rgba),h=r.slice();return s=s[o.cache],f(o.props,function(t,n){var o=n.idx,a=r[o],l=s[o],c=u[n.type]||{};null!==l&&(null===a?h[o]=l:(c.mod&&(l-a>c.mod/2?a+=c.mod:a-l>c.mod/2&&(a-=c.mod)),h[o]=i((l-a)*e+a,n)))}),this[n](h)},blend:function(e){if(1===this._rgba[3])return this;var i=this._rgba.slice(),s=i.pop(),n=l(e)._rgba;return l(t.map(i,function(t,e){return(1-s)*n[e]+s*t}))},toRgbaString:function(){var e=\"rgba(\",i=t.map(this._rgba,function(t,e){return null==t?e>2?1:0:t});return 1===i[3]&&(i.pop(),e=\"rgb(\"),e+i.join()+\")\"},toHslaString:function(){var e=\"hsla(\",i=t.map(this.hsla(),function(t,e){return null==t&&(t=e>2?1:0),e&&3>e&&(t=Math.round(100*t)+\"%\"),t});return 1===i[3]&&(i.pop(),e=\"hsl(\"),e+i.join()+\")\"},toHexString:function(e){var i=this._rgba.slice(),s=i.pop();return e&&i.push(~~(255*s)),\"#\"+t.map(i,function(t){return t=(t||0).toString(16),1===t.length?\"0\"+t:t}).join(\"\")},toString:function(){return 0===this._rgba[3]?\"transparent\":this.toRgbaString()}}),l.fn.parse.prototype=l.fn,c.hsla.to=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e,i,s=t[0]/255,n=t[1]/255,o=t[2]/255,a=t[3],r=Math.max(s,n,o),h=Math.min(s,n,o),l=r-h,c=r+h,u=.5*c;return e=h===r?0:s===r?60*(n-o)/l+360:n===r?60*(o-s)/l+120:60*(s-n)/l+240,i=0===l?0:.5>=u?l/c:l/(2-c),[Math.round(e)%360,i,u,null==a?1:a]},c.hsla.from=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e=t[0]/360,i=t[1],s=t[2],o=t[3],a=.5>=s?s*(1+i):s+i-s*i,r=2*s-a;return[Math.round(255*n(r,a,e+1/3)),Math.round(255*n(r,a,e)),Math.round(255*n(r,a,e-1/3)),o]},f(c,function(s,n){var o=n.props,a=n.cache,h=n.to,c=n.from;l.fn[s]=function(s){if(h&&!this[a]&&(this[a]=h(this._rgba)),s===e)return this[a].slice();var n,r=t.type(s),u=\"array\"===r||\"object\"===r?s:arguments,d=this[a].slice();return f(o,function(t,e){var s=u[\"object\"===r?t:e.idx];null==s&&(s=d[e.idx]),d[e.idx]=i(s,e)}),c?(n=l(c(d)),n[a]=d,n):l(d)},f(o,function(e,i){l.fn[e]||(l.fn[e]=function(n){var o,a=t.type(n),h=\"alpha\"===e?this._hsla?\"hsla\":\"rgba\":s,l=this[h](),c=l[i.idx];return\"undefined\"===a?c:(\"function\"===a&&(n=n.call(this,c),a=t.type(n)),null==n&&i.empty?this:(\"string\"===a&&(o=r.exec(n),o&&(n=c+parseFloat(o[2])*(\"+\"===o[1]?1:-1))),l[i.idx]=n,this[h](l)))})})}),l.hook=function(e){var i=e.split(\" \");f(i,function(e,i){t.cssHooks[i]={set:function(e,n){var o,a,r=\"\";if(\"transparent\"!==n&&(\"string\"!==t.type(n)||(o=s(n)))){if(n=l(o||n),!d.rgba&&1!==n._rgba[3]){for(a=\"backgroundColor\"===i?e.parentNode:e;(\"\"===r||\"transparent\"===r)&&a&&a.style;)try{r=t.css(a,\"backgroundColor\"),a=a.parentNode}catch(h){}n=n.blend(r&&\"transparent\"!==r?r:\"_default\")}n=n.toRgbaString()}try{e.style[i]=n}catch(h){}}},t.fx.step[i]=function(e){e.colorInit||(e.start=l(e.elem,i),e.end=l(e.end),e.colorInit=!0),t.cssHooks[i].set(e.elem,e.start.transition(e.end,e.pos))}})},l.hook(a),t.cssHooks.borderColor={expand:function(t){var e={};return f([\"Top\",\"Right\",\"Bottom\",\"Left\"],function(i,s){e[\"border\"+s+\"Color\"]=t}),e}},o=t.Color.names={aqua:\"#00ffff\",black:\"#000000\",blue:\"#0000ff\",fuchsia:\"#ff00ff\",gray:\"#808080\",green:\"#008000\",lime:\"#00ff00\",maroon:\"#800000\",navy:\"#000080\",olive:\"#808000\",purple:\"#800080\",red:\"#ff0000\",silver:\"#c0c0c0\",teal:\"#008080\",white:\"#ffffff\",yellow:\"#ffff00\",transparent:[null,null,null,0],_default:\"#ffffff\"}}(p),function(){function e(e){var i,s,n=e.ownerDocument.defaultView?e.ownerDocument.defaultView.getComputedStyle(e,null):e.currentStyle,o={};if(n&&n.length&&n[0]&&n[n[0]])for(s=n.length;s--;)i=n[s],\"string\"==typeof n[i]&&(o[t.camelCase(i)]=n[i]);else for(i in n)\"string\"==typeof n[i]&&(o[i]=n[i]);return o}function i(e,i){var s,o,a={};for(s in i)o=i[s],e[s]!==o&&(n[s]||(t.fx.step[s]||!isNaN(parseFloat(o)))&&(a[s]=o));return a}var s=[\"add\",\"remove\",\"toggle\"],n={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};t.each([\"borderLeftStyle\",\"borderRightStyle\",\"borderBottomStyle\",\"borderTopStyle\"],function(e,i){t.fx.step[i]=function(t){(\"none\"!==t.end&&!t.setAttr||1===t.pos&&!t.setAttr)&&(p.style(t.elem,i,t.end),t.setAttr=!0)}}),t.fn.addBack||(t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t.effects.animateClass=function(n,o,a,r){var h=t.speed(o,a,r);return this.queue(function(){var o,a=t(this),r=a.attr(\"class\")||\"\",l=h.children?a.find(\"*\").addBack():a;l=l.map(function(){var i=t(this);return{el:i,start:e(this)}}),o=function(){t.each(s,function(t,e){n[e]&&a[e+\"Class\"](n[e])})},o(),l=l.map(function(){return this.end=e(this.el[0]),this.diff=i(this.start,this.end),this}),a.attr(\"class\",r),l=l.map(function(){var e=this,i=t.Deferred(),s=t.extend({},h,{queue:!1,complete:function(){i.resolve(e)}});return this.el.animate(this.diff,s),i.promise()}),t.when.apply(t,l.get()).done(function(){o(),t.each(arguments,function(){var e=this.el;t.each(this.diff,function(t){e.css(t,\"\")})}),h.complete.call(a[0])})})},t.fn.extend({addClass:function(e){return function(i,s,n,o){return s?t.effects.animateClass.call(this,{add:i},s,n,o):e.apply(this,arguments)}}(t.fn.addClass),removeClass:function(e){return function(i,s,n,o){return arguments.length>1?t.effects.animateClass.call(this,{remove:i},s,n,o):e.apply(this,arguments)}}(t.fn.removeClass),toggleClass:function(e){return function(i,s,n,o,a){return\"boolean\"==typeof s||void 0===s?n?t.effects.animateClass.call(this,s?{add:i}:{remove:i},n,o,a):e.apply(this,arguments):t.effects.animateClass.call(this,{toggle:i},s,n,o)}}(t.fn.toggleClass),switchClass:function(e,i,s,n,o){return t.effects.animateClass.call(this,{add:i,remove:e},s,n,o)}})}(),function(){function e(e,i,s,n){return t.isPlainObject(e)&&(i=e,e=e.effect),e={effect:e},null==i&&(i={}),t.isFunction(i)&&(n=i,s=null,i={}),(\"number\"==typeof i||t.fx.speeds[i])&&(n=s,s=i,i={}),t.isFunction(s)&&(n=s,s=null),i&&t.extend(e,i),s=s||i.duration,e.duration=t.fx.off?0:\"number\"==typeof s?s:s in t.fx.speeds?t.fx.speeds[s]:t.fx.speeds._default,e.complete=n||i.complete,e}function i(e){return!e||\"number\"==typeof e||t.fx.speeds[e]?!0:\"string\"!=typeof e||t.effects.effect[e]?t.isFunction(e)?!0:\"object\"!=typeof e||e.effect?!1:!0:!0}function s(t,e){var i=e.outerWidth(),s=e.outerHeight(),n=/^rect\\((-?\\d*\\.?\\d*px|-?\\d+%|auto),?\\s*(-?\\d*\\.?\\d*px|-?\\d+%|auto),?\\s*(-?\\d*\\.?\\d*px|-?\\d+%|auto),?\\s*(-?\\d*\\.?\\d*px|-?\\d+%|auto)\\)$/,o=n.exec(t)||[\"\",0,i,s,0];return{top:parseFloat(o[1])||0,right:\"auto\"===o[2]?i:parseFloat(o[2]),bottom:\"auto\"===o[3]?s:parseFloat(o[3]),left:parseFloat(o[4])||0}}t.expr&&t.expr.filters&&t.expr.filters.animated&&(t.expr.filters.animated=function(e){return function(i){return!!t(i).data(d)||e(i)}}(t.expr.filters.animated)),t.uiBackCompat!==!1&&t.extend(t.effects,{save:function(t,e){for(var i=0,s=e.length;s>i;i++)null!==e[i]&&t.data(c+e[i],t[0].style[e[i]])},restore:function(t,e){for(var i,s=0,n=e.length;n>s;s++)null!==e[s]&&(i=t.data(c+e[s]),t.css(e[s],i))},setMode:function(t,e){return\"toggle\"===e&&(e=t.is(\":hidden\")?\"show\":\"hide\"),e},createWrapper:function(e){if(e.parent().is(\".ui-effects-wrapper\"))return e.parent();var i={width:e.outerWidth(!0),height:e.outerHeight(!0),\"float\":e.css(\"float\")},s=t(\"<div></div>\").addClass(\"ui-effects-wrapper\").css({fontSize:\"100%\",background:\"transparent\",border:\"none\",margin:0,padding:0}),n={width:e.width(),height:e.height()},o=document.activeElement;try{o.id}catch(a){o=document.body}return e.wrap(s),(e[0]===o||t.contains(e[0],o))&&t(o).trigger(\"focus\"),s=e.parent(),\"static\"===e.css(\"position\")?(s.css({position:\"relative\"}),e.css({position:\"relative\"})):(t.extend(i,{position:e.css(\"position\"),zIndex:e.css(\"z-index\")}),t.each([\"top\",\"left\",\"bottom\",\"right\"],function(t,s){i[s]=e.css(s),isNaN(parseInt(i[s],10))&&(i[s]=\"auto\")}),e.css({position:\"relative\",top:0,left:0,right:\"auto\",bottom:\"auto\"})),e.css(n),s.css(i).show()},removeWrapper:function(e){var i=document.activeElement;return e.parent().is(\".ui-effects-wrapper\")&&(e.parent().replaceWith(e),(e[0]===i||t.contains(e[0],i))&&t(i).trigger(\"focus\")),e}}),t.extend(t.effects,{version:\"1.12.1\",define:function(e,i,s){return s||(s=i,i=\"effect\"),t.effects.effect[e]=s,t.effects.effect[e].mode=i,s},scaledDimensions:function(t,e,i){if(0===e)return{height:0,width:0,outerHeight:0,outerWidth:0};var s=\"horizontal\"!==i?(e||100)/100:1,n=\"vertical\"!==i?(e||100)/100:1;return{height:t.height()*n,width:t.width()*s,outerHeight:t.outerHeight()*n,outerWidth:t.outerWidth()*s}},clipToBox:function(t){return{width:t.clip.right-t.clip.left,height:t.clip.bottom-t.clip.top,left:t.clip.left,top:t.clip.top}},unshift:function(t,e,i){var s=t.queue();e>1&&s.splice.apply(s,[1,0].concat(s.splice(e,i))),t.dequeue()},saveStyle:function(t){t.data(u,t[0].style.cssText)},restoreStyle:function(t){t[0].style.cssText=t.data(u)||\"\",t.removeData(u)},mode:function(t,e){var i=t.is(\":hidden\");return\"toggle\"===e&&(e=i?\"show\":\"hide\"),(i?\"hide\"===e:\"show\"===e)&&(e=\"none\"),e},getBaseline:function(t,e){var i,s;switch(t[0]){case\"top\":i=0;break;case\"middle\":i=.5;break;case\"bottom\":i=1;break;default:i=t[0]/e.height}switch(t[1]){case\"left\":s=0;break;case\"center\":s=.5;break;case\"right\":s=1;break;default:s=t[1]/e.width}return{x:s,y:i}},createPlaceholder:function(e){var i,s=e.css(\"position\"),n=e.position();return e.css({marginTop:e.css(\"marginTop\"),marginBottom:e.css(\"marginBottom\"),marginLeft:e.css(\"marginLeft\"),marginRight:e.css(\"marginRight\")}).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()),/^(static|relative)/.test(s)&&(s=\"absolute\",i=t(\"<\"+e[0].nodeName+\">\").insertAfter(e).css({display:/^(inline|ruby)/.test(e.css(\"display\"))?\"inline-block\":\"block\",visibility:\"hidden\",marginTop:e.css(\"marginTop\"),marginBottom:e.css(\"marginBottom\"),marginLeft:e.css(\"marginLeft\"),marginRight:e.css(\"marginRight\"),\"float\":e.css(\"float\")}).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).addClass(\"ui-effects-placeholder\"),e.data(c+\"placeholder\",i)),e.css({position:s,left:n.left,top:n.top}),i},removePlaceholder:function(t){var e=c+\"placeholder\",i=t.data(e);i&&(i.remove(),t.removeData(e))},cleanUp:function(e){t.effects.restoreStyle(e),t.effects.removePlaceholder(e)},setTransition:function(e,i,s,n){return n=n||{},t.each(i,function(t,i){var o=e.cssUnit(i);o[0]>0&&(n[i]=o[0]*s+o[1])}),n}}),t.fn.extend({effect:function(){function i(e){function i(){r.removeData(d),t.effects.cleanUp(r),\"hide\"===s.mode&&r.hide(),a()}function a(){t.isFunction(h)&&h.call(r[0]),t.isFunction(e)&&e()}var r=t(this);s.mode=c.shift(),t.uiBackCompat===!1||o?\"none\"===s.mode?(r[l](),a()):n.call(r[0],s,i):(r.is(\":hidden\")?\"hide\"===l:\"show\"===l)?(r[l](),a()):n.call(r[0],s,a)}var s=e.apply(this,arguments),n=t.effects.effect[s.effect],o=n.mode,a=s.queue,r=a||\"fx\",h=s.complete,l=s.mode,c=[],u=function(e){var i=t(this),s=t.effects.mode(i,l)||o;i.data(d,!0),c.push(s),o&&(\"show\"===s||s===o&&\"hide\"===s)&&i.show(),o&&\"none\"===s||t.effects.saveStyle(i),t.isFunction(e)&&e()};return t.fx.off||!n?l?this[l](s.duration,h):this.each(function(){h&&h.call(this)}):a===!1?this.each(u).each(i):this.queue(r,u).queue(r,i)},show:function(t){return function(s){if(i(s))return t.apply(this,arguments);var n=e.apply(this,arguments);return n.mode=\"show\",this.effect.call(this,n)\n}}(t.fn.show),hide:function(t){return function(s){if(i(s))return t.apply(this,arguments);var n=e.apply(this,arguments);return n.mode=\"hide\",this.effect.call(this,n)}}(t.fn.hide),toggle:function(t){return function(s){if(i(s)||\"boolean\"==typeof s)return t.apply(this,arguments);var n=e.apply(this,arguments);return n.mode=\"toggle\",this.effect.call(this,n)}}(t.fn.toggle),cssUnit:function(e){var i=this.css(e),s=[];return t.each([\"em\",\"px\",\"%\",\"pt\"],function(t,e){i.indexOf(e)>0&&(s=[parseFloat(i),e])}),s},cssClip:function(t){return t?this.css(\"clip\",\"rect(\"+t.top+\"px \"+t.right+\"px \"+t.bottom+\"px \"+t.left+\"px)\"):s(this.css(\"clip\"),this)},transfer:function(e,i){var s=t(this),n=t(e.to),o=\"fixed\"===n.css(\"position\"),a=t(\"body\"),r=o?a.scrollTop():0,h=o?a.scrollLeft():0,l=n.offset(),c={top:l.top-r,left:l.left-h,height:n.innerHeight(),width:n.innerWidth()},u=s.offset(),d=t(\"<div class='ui-effects-transfer'></div>\").appendTo(\"body\").addClass(e.className).css({top:u.top-r,left:u.left-h,height:s.innerHeight(),width:s.innerWidth(),position:o?\"fixed\":\"absolute\"}).animate(c,e.duration,e.easing,function(){d.remove(),t.isFunction(i)&&i()})}}),t.fx.step.clip=function(e){e.clipInit||(e.start=t(e.elem).cssClip(),\"string\"==typeof e.end&&(e.end=s(e.end,e.elem)),e.clipInit=!0),t(e.elem).cssClip({top:e.pos*(e.end.top-e.start.top)+e.start.top,right:e.pos*(e.end.right-e.start.right)+e.start.right,bottom:e.pos*(e.end.bottom-e.start.bottom)+e.start.bottom,left:e.pos*(e.end.left-e.start.left)+e.start.left})}}(),function(){var e={};t.each([\"Quad\",\"Cubic\",\"Quart\",\"Quint\",\"Expo\"],function(t,i){e[i]=function(e){return Math.pow(e,t+2)}}),t.extend(e,{Sine:function(t){return 1-Math.cos(t*Math.PI/2)},Circ:function(t){return 1-Math.sqrt(1-t*t)},Elastic:function(t){return 0===t||1===t?t:-Math.pow(2,8*(t-1))*Math.sin((80*(t-1)-7.5)*Math.PI/15)},Back:function(t){return t*t*(3*t-2)},Bounce:function(t){for(var e,i=4;((e=Math.pow(2,--i))-1)/11>t;);return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*e-2)/22-t,2)}}),t.each(e,function(e,i){t.easing[\"easeIn\"+e]=i,t.easing[\"easeOut\"+e]=function(t){return 1-i(1-t)},t.easing[\"easeInOut\"+e]=function(t){return.5>t?i(2*t)/2:1-i(-2*t+2)/2}})}();var f=t.effects;t.effects.define(\"blind\",\"hide\",function(e,i){var s={up:[\"bottom\",\"top\"],vertical:[\"bottom\",\"top\"],down:[\"top\",\"bottom\"],left:[\"right\",\"left\"],horizontal:[\"right\",\"left\"],right:[\"left\",\"right\"]},n=t(this),o=e.direction||\"up\",a=n.cssClip(),r={clip:t.extend({},a)},h=t.effects.createPlaceholder(n);r.clip[s[o][0]]=r.clip[s[o][1]],\"show\"===e.mode&&(n.cssClip(r.clip),h&&h.css(t.effects.clipToBox(r)),r.clip=a),h&&h.animate(t.effects.clipToBox(r),e.duration,e.easing),n.animate(r,{queue:!1,duration:e.duration,easing:e.easing,complete:i})}),t.effects.define(\"bounce\",function(e,i){var s,n,o,a=t(this),r=e.mode,h=\"hide\"===r,l=\"show\"===r,c=e.direction||\"up\",u=e.distance,d=e.times||5,p=2*d+(l||h?1:0),f=e.duration/p,g=e.easing,m=\"up\"===c||\"down\"===c?\"top\":\"left\",_=\"up\"===c||\"left\"===c,v=0,b=a.queue().length;for(t.effects.createPlaceholder(a),o=a.css(m),u||(u=a[\"top\"===m?\"outerHeight\":\"outerWidth\"]()/3),l&&(n={opacity:1},n[m]=o,a.css(\"opacity\",0).css(m,_?2*-u:2*u).animate(n,f,g)),h&&(u/=Math.pow(2,d-1)),n={},n[m]=o;d>v;v++)s={},s[m]=(_?\"-=\":\"+=\")+u,a.animate(s,f,g).animate(n,f,g),u=h?2*u:u/2;h&&(s={opacity:0},s[m]=(_?\"-=\":\"+=\")+u,a.animate(s,f,g)),a.queue(i),t.effects.unshift(a,b,p+1)}),t.effects.define(\"clip\",\"hide\",function(e,i){var s,n={},o=t(this),a=e.direction||\"vertical\",r=\"both\"===a,h=r||\"horizontal\"===a,l=r||\"vertical\"===a;s=o.cssClip(),n.clip={top:l?(s.bottom-s.top)/2:s.top,right:h?(s.right-s.left)/2:s.right,bottom:l?(s.bottom-s.top)/2:s.bottom,left:h?(s.right-s.left)/2:s.left},t.effects.createPlaceholder(o),\"show\"===e.mode&&(o.cssClip(n.clip),n.clip=s),o.animate(n,{queue:!1,duration:e.duration,easing:e.easing,complete:i})}),t.effects.define(\"drop\",\"hide\",function(e,i){var s,n=t(this),o=e.mode,a=\"show\"===o,r=e.direction||\"left\",h=\"up\"===r||\"down\"===r?\"top\":\"left\",l=\"up\"===r||\"left\"===r?\"-=\":\"+=\",c=\"+=\"===l?\"-=\":\"+=\",u={opacity:0};t.effects.createPlaceholder(n),s=e.distance||n[\"top\"===h?\"outerHeight\":\"outerWidth\"](!0)/2,u[h]=l+s,a&&(n.css(u),u[h]=c+s,u.opacity=1),n.animate(u,{queue:!1,duration:e.duration,easing:e.easing,complete:i})}),t.effects.define(\"explode\",\"hide\",function(e,i){function s(){b.push(this),b.length===u*d&&n()}function n(){p.css({visibility:\"visible\"}),t(b).remove(),i()}var o,a,r,h,l,c,u=e.pieces?Math.round(Math.sqrt(e.pieces)):3,d=u,p=t(this),f=e.mode,g=\"show\"===f,m=p.show().css(\"visibility\",\"hidden\").offset(),_=Math.ceil(p.outerWidth()/d),v=Math.ceil(p.outerHeight()/u),b=[];for(o=0;u>o;o++)for(h=m.top+o*v,c=o-(u-1)/2,a=0;d>a;a++)r=m.left+a*_,l=a-(d-1)/2,p.clone().appendTo(\"body\").wrap(\"<div></div>\").css({position:\"absolute\",visibility:\"visible\",left:-a*_,top:-o*v}).parent().addClass(\"ui-effects-explode\").css({position:\"absolute\",overflow:\"hidden\",width:_,height:v,left:r+(g?l*_:0),top:h+(g?c*v:0),opacity:g?0:1}).animate({left:r+(g?0:l*_),top:h+(g?0:c*v),opacity:g?1:0},e.duration||500,e.easing,s)}),t.effects.define(\"fade\",\"toggle\",function(e,i){var s=\"show\"===e.mode;t(this).css(\"opacity\",s?0:1).animate({opacity:s?1:0},{queue:!1,duration:e.duration,easing:e.easing,complete:i})}),t.effects.define(\"fold\",\"hide\",function(e,i){var s=t(this),n=e.mode,o=\"show\"===n,a=\"hide\"===n,r=e.size||15,h=/([0-9]+)%/.exec(r),l=!!e.horizFirst,c=l?[\"right\",\"bottom\"]:[\"bottom\",\"right\"],u=e.duration/2,d=t.effects.createPlaceholder(s),p=s.cssClip(),f={clip:t.extend({},p)},g={clip:t.extend({},p)},m=[p[c[0]],p[c[1]]],_=s.queue().length;h&&(r=parseInt(h[1],10)/100*m[a?0:1]),f.clip[c[0]]=r,g.clip[c[0]]=r,g.clip[c[1]]=0,o&&(s.cssClip(g.clip),d&&d.css(t.effects.clipToBox(g)),g.clip=p),s.queue(function(i){d&&d.animate(t.effects.clipToBox(f),u,e.easing).animate(t.effects.clipToBox(g),u,e.easing),i()}).animate(f,u,e.easing).animate(g,u,e.easing).queue(i),t.effects.unshift(s,_,4)}),t.effects.define(\"highlight\",\"show\",function(e,i){var s=t(this),n={backgroundColor:s.css(\"backgroundColor\")};\"hide\"===e.mode&&(n.opacity=0),t.effects.saveStyle(s),s.css({backgroundImage:\"none\",backgroundColor:e.color||\"#ffff99\"}).animate(n,{queue:!1,duration:e.duration,easing:e.easing,complete:i})}),t.effects.define(\"size\",function(e,i){var s,n,o,a=t(this),r=[\"fontSize\"],h=[\"borderTopWidth\",\"borderBottomWidth\",\"paddingTop\",\"paddingBottom\"],l=[\"borderLeftWidth\",\"borderRightWidth\",\"paddingLeft\",\"paddingRight\"],c=e.mode,u=\"effect\"!==c,d=e.scale||\"both\",p=e.origin||[\"middle\",\"center\"],f=a.css(\"position\"),g=a.position(),m=t.effects.scaledDimensions(a),_=e.from||m,v=e.to||t.effects.scaledDimensions(a,0);t.effects.createPlaceholder(a),\"show\"===c&&(o=_,_=v,v=o),n={from:{y:_.height/m.height,x:_.width/m.width},to:{y:v.height/m.height,x:v.width/m.width}},(\"box\"===d||\"both\"===d)&&(n.from.y!==n.to.y&&(_=t.effects.setTransition(a,h,n.from.y,_),v=t.effects.setTransition(a,h,n.to.y,v)),n.from.x!==n.to.x&&(_=t.effects.setTransition(a,l,n.from.x,_),v=t.effects.setTransition(a,l,n.to.x,v))),(\"content\"===d||\"both\"===d)&&n.from.y!==n.to.y&&(_=t.effects.setTransition(a,r,n.from.y,_),v=t.effects.setTransition(a,r,n.to.y,v)),p&&(s=t.effects.getBaseline(p,m),_.top=(m.outerHeight-_.outerHeight)*s.y+g.top,_.left=(m.outerWidth-_.outerWidth)*s.x+g.left,v.top=(m.outerHeight-v.outerHeight)*s.y+g.top,v.left=(m.outerWidth-v.outerWidth)*s.x+g.left),a.css(_),(\"content\"===d||\"both\"===d)&&(h=h.concat([\"marginTop\",\"marginBottom\"]).concat(r),l=l.concat([\"marginLeft\",\"marginRight\"]),a.find(\"*[width]\").each(function(){var i=t(this),s=t.effects.scaledDimensions(i),o={height:s.height*n.from.y,width:s.width*n.from.x,outerHeight:s.outerHeight*n.from.y,outerWidth:s.outerWidth*n.from.x},a={height:s.height*n.to.y,width:s.width*n.to.x,outerHeight:s.height*n.to.y,outerWidth:s.width*n.to.x};n.from.y!==n.to.y&&(o=t.effects.setTransition(i,h,n.from.y,o),a=t.effects.setTransition(i,h,n.to.y,a)),n.from.x!==n.to.x&&(o=t.effects.setTransition(i,l,n.from.x,o),a=t.effects.setTransition(i,l,n.to.x,a)),u&&t.effects.saveStyle(i),i.css(o),i.animate(a,e.duration,e.easing,function(){u&&t.effects.restoreStyle(i)})})),a.animate(v,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){var e=a.offset();0===v.opacity&&a.css(\"opacity\",_.opacity),u||(a.css(\"position\",\"static\"===f?\"relative\":f).offset(e),t.effects.saveStyle(a)),i()}})}),t.effects.define(\"scale\",function(e,i){var s=t(this),n=e.mode,o=parseInt(e.percent,10)||(0===parseInt(e.percent,10)?0:\"effect\"!==n?0:100),a=t.extend(!0,{from:t.effects.scaledDimensions(s),to:t.effects.scaledDimensions(s,o,e.direction||\"both\"),origin:e.origin||[\"middle\",\"center\"]},e);e.fade&&(a.from.opacity=1,a.to.opacity=0),t.effects.effect.size.call(this,a,i)}),t.effects.define(\"puff\",\"hide\",function(e,i){var s=t.extend(!0,{},e,{fade:!0,percent:parseInt(e.percent,10)||150});t.effects.effect.scale.call(this,s,i)}),t.effects.define(\"pulsate\",\"show\",function(e,i){var s=t(this),n=e.mode,o=\"show\"===n,a=\"hide\"===n,r=o||a,h=2*(e.times||5)+(r?1:0),l=e.duration/h,c=0,u=1,d=s.queue().length;for((o||!s.is(\":visible\"))&&(s.css(\"opacity\",0).show(),c=1);h>u;u++)s.animate({opacity:c},l,e.easing),c=1-c;s.animate({opacity:c},l,e.easing),s.queue(i),t.effects.unshift(s,d,h+1)}),t.effects.define(\"shake\",function(e,i){var s=1,n=t(this),o=e.direction||\"left\",a=e.distance||20,r=e.times||3,h=2*r+1,l=Math.round(e.duration/h),c=\"up\"===o||\"down\"===o?\"top\":\"left\",u=\"up\"===o||\"left\"===o,d={},p={},f={},g=n.queue().length;for(t.effects.createPlaceholder(n),d[c]=(u?\"-=\":\"+=\")+a,p[c]=(u?\"+=\":\"-=\")+2*a,f[c]=(u?\"-=\":\"+=\")+2*a,n.animate(d,l,e.easing);r>s;s++)n.animate(p,l,e.easing).animate(f,l,e.easing);n.animate(p,l,e.easing).animate(d,l/2,e.easing).queue(i),t.effects.unshift(n,g,h+1)}),t.effects.define(\"slide\",\"show\",function(e,i){var s,n,o=t(this),a={up:[\"bottom\",\"top\"],down:[\"top\",\"bottom\"],left:[\"right\",\"left\"],right:[\"left\",\"right\"]},r=e.mode,h=e.direction||\"left\",l=\"up\"===h||\"down\"===h?\"top\":\"left\",c=\"up\"===h||\"left\"===h,u=e.distance||o[\"top\"===l?\"outerHeight\":\"outerWidth\"](!0),d={};t.effects.createPlaceholder(o),s=o.cssClip(),n=o.position()[l],d[l]=(c?-1:1)*u+n,d.clip=o.cssClip(),d.clip[a[h][1]]=d.clip[a[h][0]],\"show\"===r&&(o.cssClip(d.clip),o.css(l,d[l]),d.clip=s,d[l]=n),o.animate(d,{queue:!1,duration:e.duration,easing:e.easing,complete:i})});var f;t.uiBackCompat!==!1&&(f=t.effects.define(\"transfer\",function(e,i){t(this).transfer(e,i)})),t.ui.focusable=function(i,s){var n,o,a,r,h,l=i.nodeName.toLowerCase();return\"area\"===l?(n=i.parentNode,o=n.name,i.href&&o&&\"map\"===n.nodeName.toLowerCase()?(a=t(\"img[usemap='#\"+o+\"']\"),a.length>0&&a.is(\":visible\")):!1):(/^(input|select|textarea|button|object)$/.test(l)?(r=!i.disabled,r&&(h=t(i).closest(\"fieldset\")[0],h&&(r=!h.disabled))):r=\"a\"===l?i.href||s:s,r&&t(i).is(\":visible\")&&e(t(i)))},t.extend(t.expr[\":\"],{focusable:function(e){return t.ui.focusable(e,null!=t.attr(e,\"tabindex\"))}}),t.ui.focusable,t.fn.form=function(){return\"string\"==typeof this[0].form?this.closest(\"form\"):t(this[0].form)},t.ui.formResetMixin={_formResetHandler:function(){var e=t(this);setTimeout(function(){var i=e.data(\"ui-form-reset-instances\");t.each(i,function(){this.refresh()})})},_bindFormResetHandler:function(){if(this.form=this.element.form(),this.form.length){var t=this.form.data(\"ui-form-reset-instances\")||[];t.length||this.form.on(\"reset.ui-form-reset\",this._formResetHandler),t.push(this),this.form.data(\"ui-form-reset-instances\",t)}},_unbindFormResetHandler:function(){if(this.form.length){var e=this.form.data(\"ui-form-reset-instances\");e.splice(t.inArray(this,e),1),e.length?this.form.data(\"ui-form-reset-instances\",e):this.form.removeData(\"ui-form-reset-instances\").off(\"reset.ui-form-reset\")}}},\"1.7\"===t.fn.jquery.substring(0,3)&&(t.each([\"Width\",\"Height\"],function(e,i){function s(e,i,s,o){return t.each(n,function(){i-=parseFloat(t.css(e,\"padding\"+this))||0,s&&(i-=parseFloat(t.css(e,\"border\"+this+\"Width\"))||0),o&&(i-=parseFloat(t.css(e,\"margin\"+this))||0)}),i}var n=\"Width\"===i?[\"Left\",\"Right\"]:[\"Top\",\"Bottom\"],o=i.toLowerCase(),a={innerWidth:t.fn.innerWidth,innerHeight:t.fn.innerHeight,outerWidth:t.fn.outerWidth,outerHeight:t.fn.outerHeight};t.fn[\"inner\"+i]=function(e){return void 0===e?a[\"inner\"+i].call(this):this.each(function(){t(this).css(o,s(this,e)+\"px\")})},t.fn[\"outer\"+i]=function(e,n){return\"number\"!=typeof e?a[\"outer\"+i].call(this,e):this.each(function(){t(this).css(o,s(this,e,!0,n)+\"px\")})}}),t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t.ui.keyCode={BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38},t.ui.escapeSelector=function(){var t=/([!\"#$%&'()*+,.\\/:;<=>?@[\\]^`{|}~])/g;return function(e){return e.replace(t,\"\\\\$1\")}}(),t.fn.labels=function(){var e,i,s,n,o;return this[0].labels&&this[0].labels.length?this.pushStack(this[0].labels):(n=this.eq(0).parents(\"label\"),s=this.attr(\"id\"),s&&(e=this.eq(0).parents().last(),o=e.add(e.length?e.siblings():this.siblings()),i=\"label[for='\"+t.ui.escapeSelector(s)+\"']\",n=n.add(o.find(i).addBack(i))),this.pushStack(n))},t.fn.scrollParent=function(e){var i=this.css(\"position\"),s=\"absolute\"===i,n=e?/(auto|scroll|hidden)/:/(auto|scroll)/,o=this.parents().filter(function(){var e=t(this);return s&&\"static\"===e.css(\"position\")?!1:n.test(e.css(\"overflow\")+e.css(\"overflow-y\")+e.css(\"overflow-x\"))}).eq(0);return\"fixed\"!==i&&o.length?o:t(this[0].ownerDocument||document)},t.extend(t.expr[\":\"],{tabbable:function(e){var i=t.attr(e,\"tabindex\"),s=null!=i;return(!s||i>=0)&&t.ui.focusable(e,s)}}),t.fn.extend({uniqueId:function(){var t=0;return function(){return this.each(function(){this.id||(this.id=\"ui-id-\"+ ++t)})}}(),removeUniqueId:function(){return this.each(function(){/^ui-id-\\d+$/.test(this.id)&&t(this).removeAttr(\"id\")})}}),t.widget(\"ui.accordion\",{version:\"1.12.1\",options:{active:0,animate:{},classes:{\"ui-accordion-header\":\"ui-corner-top\",\"ui-accordion-header-collapsed\":\"ui-corner-all\",\"ui-accordion-content\":\"ui-corner-bottom\"},collapsible:!1,event:\"click\",header:\"> li > :first-child, > :not(li):even\",heightStyle:\"auto\",icons:{activeHeader:\"ui-icon-triangle-1-s\",header:\"ui-icon-triangle-1-e\"},activate:null,beforeActivate:null},hideProps:{borderTopWidth:\"hide\",borderBottomWidth:\"hide\",paddingTop:\"hide\",paddingBottom:\"hide\",height:\"hide\"},showProps:{borderTopWidth:\"show\",borderBottomWidth:\"show\",paddingTop:\"show\",paddingBottom:\"show\",height:\"show\"},_create:function(){var e=this.options;this.prevShow=this.prevHide=t(),this._addClass(\"ui-accordion\",\"ui-widget ui-helper-reset\"),this.element.attr(\"role\",\"tablist\"),e.collapsible||e.active!==!1&&null!=e.active||(e.active=0),this._processPanels(),0>e.active&&(e.active+=this.headers.length),this._refresh()},_getCreateEventData:function(){return{header:this.active,panel:this.active.length?this.active.next():t()}},_createIcons:function(){var e,i,s=this.options.icons;s&&(e=t(\"<span>\"),this._addClass(e,\"ui-accordion-header-icon\",\"ui-icon \"+s.header),e.prependTo(this.headers),i=this.active.children(\".ui-accordion-header-icon\"),this._removeClass(i,s.header)._addClass(i,null,s.activeHeader)._addClass(this.headers,\"ui-accordion-icons\"))},_destroyIcons:function(){this._removeClass(this.headers,\"ui-accordion-icons\"),this.headers.children(\".ui-accordion-header-icon\").remove()},_destroy:function(){var t;this.element.removeAttr(\"role\"),this.headers.removeAttr(\"role aria-expanded aria-selected aria-controls tabIndex\").removeUniqueId(),this._destroyIcons(),t=this.headers.next().css(\"display\",\"\").removeAttr(\"role aria-hidden aria-labelledby\").removeUniqueId(),\"content\"!==this.options.heightStyle&&t.css(\"height\",\"\")},_setOption:function(t,e){return\"active\"===t?(this._activate(e),void 0):(\"event\"===t&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(e)),this._super(t,e),\"collapsible\"!==t||e||this.options.active!==!1||this._activate(0),\"icons\"===t&&(this._destroyIcons(),e&&this._createIcons()),void 0)},_setOptionDisabled:function(t){this._super(t),this.element.attr(\"aria-disabled\",t),this._toggleClass(null,\"ui-state-disabled\",!!t),this._toggleClass(this.headers.add(this.headers.next()),null,\"ui-state-disabled\",!!t)},_keydown:function(e){if(!e.altKey&&!e.ctrlKey){var i=t.ui.keyCode,s=this.headers.length,n=this.headers.index(e.target),o=!1;switch(e.keyCode){case i.RIGHT:case i.DOWN:o=this.headers[(n+1)%s];break;case i.LEFT:case i.UP:o=this.headers[(n-1+s)%s];break;case i.SPACE:case i.ENTER:this._eventHandler(e);break;case i.HOME:o=this.headers[0];break;case i.END:o=this.headers[s-1]}o&&(t(e.target).attr(\"tabIndex\",-1),t(o).attr(\"tabIndex\",0),t(o).trigger(\"focus\"),e.preventDefault())}},_panelKeyDown:function(e){e.keyCode===t.ui.keyCode.UP&&e.ctrlKey&&t(e.currentTarget).prev().trigger(\"focus\")},refresh:function(){var e=this.options;this._processPanels(),e.active===!1&&e.collapsible===!0||!this.headers.length?(e.active=!1,this.active=t()):e.active===!1?this._activate(0):this.active.length&&!t.contains(this.element[0],this.active[0])?this.headers.length===this.headers.find(\".ui-state-disabled\").length?(e.active=!1,this.active=t()):this._activate(Math.max(0,e.active-1)):e.active=this.headers.index(this.active),this._destroyIcons(),this._refresh()},_processPanels:function(){var t=this.headers,e=this.panels;this.headers=this.element.find(this.options.header),this._addClass(this.headers,\"ui-accordion-header ui-accordion-header-collapsed\",\"ui-state-default\"),this.panels=this.headers.next().filter(\":not(.ui-accordion-content-active)\").hide(),this._addClass(this.panels,\"ui-accordion-content\",\"ui-helper-reset ui-widget-content\"),e&&(this._off(t.not(this.headers)),this._off(e.not(this.panels)))},_refresh:function(){var e,i=this.options,s=i.heightStyle,n=this.element.parent();this.active=this._findActive(i.active),this._addClass(this.active,\"ui-accordion-header-active\",\"ui-state-active\")._removeClass(this.active,\"ui-accordion-header-collapsed\"),this._addClass(this.active.next(),\"ui-accordion-content-active\"),this.active.next().show(),this.headers.attr(\"role\",\"tab\").each(function(){var e=t(this),i=e.uniqueId().attr(\"id\"),s=e.next(),n=s.uniqueId().attr(\"id\");e.attr(\"aria-controls\",n),s.attr(\"aria-labelledby\",i)}).next().attr(\"role\",\"tabpanel\"),this.headers.not(this.active).attr({\"aria-selected\":\"false\",\"aria-expanded\":\"false\",tabIndex:-1}).next().attr({\"aria-hidden\":\"true\"}).hide(),this.active.length?this.active.attr({\"aria-selected\":\"true\",\"aria-expanded\":\"true\",tabIndex:0}).next().attr({\"aria-hidden\":\"false\"}):this.headers.eq(0).attr(\"tabIndex\",0),this._createIcons(),this._setupEvents(i.event),\"fill\"===s?(e=n.height(),this.element.siblings(\":visible\").each(function(){var i=t(this),s=i.css(\"position\");\"absolute\"!==s&&\"fixed\"!==s&&(e-=i.outerHeight(!0))}),this.headers.each(function(){e-=t(this).outerHeight(!0)}),this.headers.next().each(function(){t(this).height(Math.max(0,e-t(this).innerHeight()+t(this).height()))}).css(\"overflow\",\"auto\")):\"auto\"===s&&(e=0,this.headers.next().each(function(){var i=t(this).is(\":visible\");i||t(this).show(),e=Math.max(e,t(this).css(\"height\",\"\").height()),i||t(this).hide()}).height(e))},_activate:function(e){var i=this._findActive(e)[0];i!==this.active[0]&&(i=i||this.active[0],this._eventHandler({target:i,currentTarget:i,preventDefault:t.noop}))},_findActive:function(e){return\"number\"==typeof e?this.headers.eq(e):t()},_setupEvents:function(e){var i={keydown:\"_keydown\"};e&&t.each(e.split(\" \"),function(t,e){i[e]=\"_eventHandler\"}),this._off(this.headers.add(this.headers.next())),this._on(this.headers,i),this._on(this.headers.next(),{keydown:\"_panelKeyDown\"}),this._hoverable(this.headers),this._focusable(this.headers)},_eventHandler:function(e){var i,s,n=this.options,o=this.active,a=t(e.currentTarget),r=a[0]===o[0],h=r&&n.collapsible,l=h?t():a.next(),c=o.next(),u={oldHeader:o,oldPanel:c,newHeader:h?t():a,newPanel:l};e.preventDefault(),r&&!n.collapsible||this._trigger(\"beforeActivate\",e,u)===!1||(n.active=h?!1:this.headers.index(a),this.active=r?t():a,this._toggle(u),this._removeClass(o,\"ui-accordion-header-active\",\"ui-state-active\"),n.icons&&(i=o.children(\".ui-accordion-header-icon\"),this._removeClass(i,null,n.icons.activeHeader)._addClass(i,null,n.icons.header)),r||(this._removeClass(a,\"ui-accordion-header-collapsed\")._addClass(a,\"ui-accordion-header-active\",\"ui-state-active\"),n.icons&&(s=a.children(\".ui-accordion-header-icon\"),this._removeClass(s,null,n.icons.header)._addClass(s,null,n.icons.activeHeader)),this._addClass(a.next(),\"ui-accordion-content-active\")))},_toggle:function(e){var i=e.newPanel,s=this.prevShow.length?this.prevShow:e.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=i,this.prevHide=s,this.options.animate?this._animate(i,s,e):(s.hide(),i.show(),this._toggleComplete(e)),s.attr({\"aria-hidden\":\"true\"}),s.prev().attr({\"aria-selected\":\"false\",\"aria-expanded\":\"false\"}),i.length&&s.length?s.prev().attr({tabIndex:-1,\"aria-expanded\":\"false\"}):i.length&&this.headers.filter(function(){return 0===parseInt(t(this).attr(\"tabIndex\"),10)}).attr(\"tabIndex\",-1),i.attr(\"aria-hidden\",\"false\").prev().attr({\"aria-selected\":\"true\",\"aria-expanded\":\"true\",tabIndex:0})},_animate:function(t,e,i){var s,n,o,a=this,r=0,h=t.css(\"box-sizing\"),l=t.length&&(!e.length||t.index()<e.index()),c=this.options.animate||{},u=l&&c.down||c,d=function(){a._toggleComplete(i)};return\"number\"==typeof u&&(o=u),\"string\"==typeof u&&(n=u),n=n||u.easing||c.easing,o=o||u.duration||c.duration,e.length?t.length?(s=t.show().outerHeight(),e.animate(this.hideProps,{duration:o,easing:n,step:function(t,e){e.now=Math.round(t)}}),t.hide().animate(this.showProps,{duration:o,easing:n,complete:d,step:function(t,i){i.now=Math.round(t),\"height\"!==i.prop?\"content-box\"===h&&(r+=i.now):\"content\"!==a.options.heightStyle&&(i.now=Math.round(s-e.outerHeight()-r),r=0)}}),void 0):e.animate(this.hideProps,o,n,d):t.animate(this.showProps,o,n,d)},_toggleComplete:function(t){var e=t.oldPanel,i=e.prev();this._removeClass(e,\"ui-accordion-content-active\"),this._removeClass(i,\"ui-accordion-header-active\")._addClass(i,\"ui-accordion-header-collapsed\"),e.length&&(e.parent()[0].className=e.parent()[0].className),this._trigger(\"activate\",null,t)}}),t.ui.safeActiveElement=function(t){var e;try{e=t.activeElement}catch(i){e=t.body}return e||(e=t.body),e.nodeName||(e=t.body),e},t.widget(\"ui.menu\",{version:\"1.12.1\",defaultElement:\"<ul>\",delay:300,options:{icons:{submenu:\"ui-icon-caret-1-e\"},items:\"> *\",menus:\"ul\",position:{my:\"left top\",at:\"right top\"},role:\"menu\",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.mouseHandled=!1,this.element.uniqueId().attr({role:this.options.role,tabIndex:0}),this._addClass(\"ui-menu\",\"ui-widget ui-widget-content\"),this._on({\"mousedown .ui-menu-item\":function(t){t.preventDefault()},\"click .ui-menu-item\":function(e){var i=t(e.target),s=t(t.ui.safeActiveElement(this.document[0]));!this.mouseHandled&&i.not(\".ui-state-disabled\").length&&(this.select(e),e.isPropagationStopped()||(this.mouseHandled=!0),i.has(\".ui-menu\").length?this.expand(e):!this.element.is(\":focus\")&&s.closest(\".ui-menu\").length&&(this.element.trigger(\"focus\",[!0]),this.active&&1===this.active.parents(\".ui-menu\").length&&clearTimeout(this.timer)))},\"mouseenter .ui-menu-item\":function(e){if(!this.previousFilter){var i=t(e.target).closest(\".ui-menu-item\"),s=t(e.currentTarget);i[0]===s[0]&&(this._removeClass(s.siblings().children(\".ui-state-active\"),null,\"ui-state-active\"),this.focus(e,s))}},mouseleave:\"collapseAll\",\"mouseleave .ui-menu\":\"collapseAll\",focus:function(t,e){var i=this.active||this.element.find(this.options.items).eq(0);e||this.focus(t,i)},blur:function(e){this._delay(function(){var i=!t.contains(this.element[0],t.ui.safeActiveElement(this.document[0]));i&&this.collapseAll(e)})},keydown:\"_keydown\"}),this.refresh(),this._on(this.document,{click:function(t){this._closeOnDocumentClick(t)&&this.collapseAll(t),this.mouseHandled=!1}})},_destroy:function(){var e=this.element.find(\".ui-menu-item\").removeAttr(\"role aria-disabled\"),i=e.children(\".ui-menu-item-wrapper\").removeUniqueId().removeAttr(\"tabIndex role aria-haspopup\");this.element.removeAttr(\"aria-activedescendant\").find(\".ui-menu\").addBack().removeAttr(\"role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex\").removeUniqueId().show(),i.children().each(function(){var e=t(this);e.data(\"ui-menu-submenu-caret\")&&e.remove()})},_keydown:function(e){var i,s,n,o,a=!0;switch(e.keyCode){case t.ui.keyCode.PAGE_UP:this.previousPage(e);break;case t.ui.keyCode.PAGE_DOWN:this.nextPage(e);break;case t.ui.keyCode.HOME:this._move(\"first\",\"first\",e);break;case t.ui.keyCode.END:this._move(\"last\",\"last\",e);break;case t.ui.keyCode.UP:this.previous(e);break;case t.ui.keyCode.DOWN:this.next(e);break;case t.ui.keyCode.LEFT:this.collapse(e);break;case t.ui.keyCode.RIGHT:this.active&&!this.active.is(\".ui-state-disabled\")&&this.expand(e);break;case t.ui.keyCode.ENTER:case t.ui.keyCode.SPACE:this._activate(e);break;case t.ui.keyCode.ESCAPE:this.collapse(e);break;default:a=!1,s=this.previousFilter||\"\",o=!1,n=e.keyCode>=96&&105>=e.keyCode?\"\"+(e.keyCode-96):String.fromCharCode(e.keyCode),clearTimeout(this.filterTimer),n===s?o=!0:n=s+n,i=this._filterMenuItems(n),i=o&&-1!==i.index(this.active.next())?this.active.nextAll(\".ui-menu-item\"):i,i.length||(n=String.fromCharCode(e.keyCode),i=this._filterMenuItems(n)),i.length?(this.focus(e,i),this.previousFilter=n,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter}a&&e.preventDefault()},_activate:function(t){this.active&&!this.active.is(\".ui-state-disabled\")&&(this.active.children(\"[aria-haspopup='true']\").length?this.expand(t):this.select(t))},refresh:function(){var e,i,s,n,o,a=this,r=this.options.icons.submenu,h=this.element.find(this.options.menus);this._toggleClass(\"ui-menu-icons\",null,!!this.element.find(\".ui-icon\").length),s=h.filter(\":not(.ui-menu)\").hide().attr({role:this.options.role,\"aria-hidden\":\"true\",\"aria-expanded\":\"false\"}).each(function(){var e=t(this),i=e.prev(),s=t(\"<span>\").data(\"ui-menu-submenu-caret\",!0);a._addClass(s,\"ui-menu-icon\",\"ui-icon \"+r),i.attr(\"aria-haspopup\",\"true\").prepend(s),e.attr(\"aria-labelledby\",i.attr(\"id\"))}),this._addClass(s,\"ui-menu\",\"ui-widget ui-widget-content ui-front\"),e=h.add(this.element),i=e.find(this.options.items),i.not(\".ui-menu-item\").each(function(){var e=t(this);a._isDivider(e)&&a._addClass(e,\"ui-menu-divider\",\"ui-widget-content\")}),n=i.not(\".ui-menu-item, .ui-menu-divider\"),o=n.children().not(\".ui-menu\").uniqueId().attr({tabIndex:-1,role:this._itemRole()}),this._addClass(n,\"ui-menu-item\")._addClass(o,\"ui-menu-item-wrapper\"),i.filter(\".ui-state-disabled\").attr(\"aria-disabled\",\"true\"),this.active&&!t.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:\"menuitem\",listbox:\"option\"}[this.options.role]},_setOption:function(t,e){if(\"icons\"===t){var i=this.element.find(\".ui-menu-icon\");this._removeClass(i,null,this.options.icons.submenu)._addClass(i,null,e.submenu)}this._super(t,e)},_setOptionDisabled:function(t){this._super(t),this.element.attr(\"aria-disabled\",t+\"\"),this._toggleClass(null,\"ui-state-disabled\",!!t)},focus:function(t,e){var i,s,n;this.blur(t,t&&\"focus\"===t.type),this._scrollIntoView(e),this.active=e.first(),s=this.active.children(\".ui-menu-item-wrapper\"),this._addClass(s,null,\"ui-state-active\"),this.options.role&&this.element.attr(\"aria-activedescendant\",s.attr(\"id\")),n=this.active.parent().closest(\".ui-menu-item\").children(\".ui-menu-item-wrapper\"),this._addClass(n,null,\"ui-state-active\"),t&&\"keydown\"===t.type?this._close():this.timer=this._delay(function(){this._close()},this.delay),i=e.children(\".ui-menu\"),i.length&&t&&/^mouse/.test(t.type)&&this._startOpening(i),this.activeMenu=e.parent(),this._trigger(\"focus\",t,{item:e})},_scrollIntoView:function(e){var i,s,n,o,a,r;this._hasScroll()&&(i=parseFloat(t.css(this.activeMenu[0],\"borderTopWidth\"))||0,s=parseFloat(t.css(this.activeMenu[0],\"paddingTop\"))||0,n=e.offset().top-this.activeMenu.offset().top-i-s,o=this.activeMenu.scrollTop(),a=this.activeMenu.height(),r=e.outerHeight(),0>n?this.activeMenu.scrollTop(o+n):n+r>a&&this.activeMenu.scrollTop(o+n-a+r))},blur:function(t,e){e||clearTimeout(this.timer),this.active&&(this._removeClass(this.active.children(\".ui-menu-item-wrapper\"),null,\"ui-state-active\"),this._trigger(\"blur\",t,{item:this.active}),this.active=null)},_startOpening:function(t){clearTimeout(this.timer),\"true\"===t.attr(\"aria-hidden\")&&(this.timer=this._delay(function(){this._close(),this._open(t)},this.delay))},_open:function(e){var i=t.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(\".ui-menu\").not(e.parents(\".ui-menu\")).hide().attr(\"aria-hidden\",\"true\"),e.show().removeAttr(\"aria-hidden\").attr(\"aria-expanded\",\"true\").position(i)},collapseAll:function(e,i){clearTimeout(this.timer),this.timer=this._delay(function(){var s=i?this.element:t(e&&e.target).closest(this.element.find(\".ui-menu\"));s.length||(s=this.element),this._close(s),this.blur(e),this._removeClass(s.find(\".ui-state-active\"),null,\"ui-state-active\"),this.activeMenu=s},this.delay)},_close:function(t){t||(t=this.active?this.active.parent():this.element),t.find(\".ui-menu\").hide().attr(\"aria-hidden\",\"true\").attr(\"aria-expanded\",\"false\")},_closeOnDocumentClick:function(e){return!t(e.target).closest(\".ui-menu\").length},_isDivider:function(t){return!/[^\\-\\u2014\\u2013\\s]/.test(t.text())},collapse:function(t){var e=this.active&&this.active.parent().closest(\".ui-menu-item\",this.element);e&&e.length&&(this._close(),this.focus(t,e))},expand:function(t){var e=this.active&&this.active.children(\".ui-menu \").find(this.options.items).first();e&&e.length&&(this._open(e.parent()),this._delay(function(){this.focus(t,e)}))},next:function(t){this._move(\"next\",\"first\",t)},previous:function(t){this._move(\"prev\",\"last\",t)},isFirstItem:function(){return this.active&&!this.active.prevAll(\".ui-menu-item\").length},isLastItem:function(){return this.active&&!this.active.nextAll(\".ui-menu-item\").length},_move:function(t,e,i){var s;this.active&&(s=\"first\"===t||\"last\"===t?this.active[\"first\"===t?\"prevAll\":\"nextAll\"](\".ui-menu-item\").eq(-1):this.active[t+\"All\"](\".ui-menu-item\").eq(0)),s&&s.length&&this.active||(s=this.activeMenu.find(this.options.items)[e]()),this.focus(i,s)},nextPage:function(e){var i,s,n;return this.active?(this.isLastItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.height(),this.active.nextAll(\".ui-menu-item\").each(function(){return i=t(this),0>i.offset().top-s-n}),this.focus(e,i)):this.focus(e,this.activeMenu.find(this.options.items)[this.active?\"last\":\"first\"]())),void 0):(this.next(e),void 0)},previousPage:function(e){var i,s,n;return this.active?(this.isFirstItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.height(),this.active.prevAll(\".ui-menu-item\").each(function(){return i=t(this),i.offset().top-s+n>0}),this.focus(e,i)):this.focus(e,this.activeMenu.find(this.options.items).first())),void 0):(this.next(e),void 0)},_hasScroll:function(){return this.element.outerHeight()<this.element.prop(\"scrollHeight\")},select:function(e){this.active=this.active||t(e.target).closest(\".ui-menu-item\");var i={item:this.active};this.active.has(\".ui-menu\").length||this.collapseAll(e,!0),this._trigger(\"select\",e,i)},_filterMenuItems:function(e){var i=e.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g,\"\\\\$&\"),s=RegExp(\"^\"+i,\"i\");return this.activeMenu.find(this.options.items).filter(\".ui-menu-item\").filter(function(){return s.test(t.trim(t(this).children(\".ui-menu-item-wrapper\").text()))})}}),t.widget(\"ui.autocomplete\",{version:\"1.12.1\",defaultElement:\"<input>\",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:\"left top\",at:\"left bottom\",collision:\"none\"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},requestIndex:0,pending:0,_create:function(){var e,i,s,n=this.element[0].nodeName.toLowerCase(),o=\"textarea\"===n,a=\"input\"===n;\nthis.isMultiLine=o||!a&&this._isContentEditable(this.element),this.valueMethod=this.element[o||a?\"val\":\"text\"],this.isNewMenu=!0,this._addClass(\"ui-autocomplete-input\"),this.element.attr(\"autocomplete\",\"off\"),this._on(this.element,{keydown:function(n){if(this.element.prop(\"readOnly\"))return e=!0,s=!0,i=!0,void 0;e=!1,s=!1,i=!1;var o=t.ui.keyCode;switch(n.keyCode){case o.PAGE_UP:e=!0,this._move(\"previousPage\",n);break;case o.PAGE_DOWN:e=!0,this._move(\"nextPage\",n);break;case o.UP:e=!0,this._keyEvent(\"previous\",n);break;case o.DOWN:e=!0,this._keyEvent(\"next\",n);break;case o.ENTER:this.menu.active&&(e=!0,n.preventDefault(),this.menu.select(n));break;case o.TAB:this.menu.active&&this.menu.select(n);break;case o.ESCAPE:this.menu.element.is(\":visible\")&&(this.isMultiLine||this._value(this.term),this.close(n),n.preventDefault());break;default:i=!0,this._searchTimeout(n)}},keypress:function(s){if(e)return e=!1,(!this.isMultiLine||this.menu.element.is(\":visible\"))&&s.preventDefault(),void 0;if(!i){var n=t.ui.keyCode;switch(s.keyCode){case n.PAGE_UP:this._move(\"previousPage\",s);break;case n.PAGE_DOWN:this._move(\"nextPage\",s);break;case n.UP:this._keyEvent(\"previous\",s);break;case n.DOWN:this._keyEvent(\"next\",s)}}},input:function(t){return s?(s=!1,t.preventDefault(),void 0):(this._searchTimeout(t),void 0)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(t){return this.cancelBlur?(delete this.cancelBlur,void 0):(clearTimeout(this.searching),this.close(t),this._change(t),void 0)}}),this._initSource(),this.menu=t(\"<ul>\").appendTo(this._appendTo()).menu({role:null}).hide().menu(\"instance\"),this._addClass(this.menu.element,\"ui-autocomplete\",\"ui-front\"),this._on(this.menu.element,{mousedown:function(e){e.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,this.element[0]!==t.ui.safeActiveElement(this.document[0])&&this.element.trigger(\"focus\")})},menufocus:function(e,i){var s,n;return this.isNewMenu&&(this.isNewMenu=!1,e.originalEvent&&/^mouse/.test(e.originalEvent.type))?(this.menu.blur(),this.document.one(\"mousemove\",function(){t(e.target).trigger(e.originalEvent)}),void 0):(n=i.item.data(\"ui-autocomplete-item\"),!1!==this._trigger(\"focus\",e,{item:n})&&e.originalEvent&&/^key/.test(e.originalEvent.type)&&this._value(n.value),s=i.item.attr(\"aria-label\")||n.value,s&&t.trim(s).length&&(this.liveRegion.children().hide(),t(\"<div>\").text(s).appendTo(this.liveRegion)),void 0)},menuselect:function(e,i){var s=i.item.data(\"ui-autocomplete-item\"),n=this.previous;this.element[0]!==t.ui.safeActiveElement(this.document[0])&&(this.element.trigger(\"focus\"),this.previous=n,this._delay(function(){this.previous=n,this.selectedItem=s})),!1!==this._trigger(\"select\",e,{item:s})&&this._value(s.value),this.term=this._value(),this.close(e),this.selectedItem=s}}),this.liveRegion=t(\"<div>\",{role:\"status\",\"aria-live\":\"assertive\",\"aria-relevant\":\"additions\"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,\"ui-helper-hidden-accessible\"),this._on(this.window,{beforeunload:function(){this.element.removeAttr(\"autocomplete\")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeAttr(\"autocomplete\"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(t,e){this._super(t,e),\"source\"===t&&this._initSource(),\"appendTo\"===t&&this.menu.element.appendTo(this._appendTo()),\"disabled\"===t&&e&&this.xhr&&this.xhr.abort()},_isEventTargetInWidget:function(e){var i=this.menu.element[0];return e.target===this.element[0]||e.target===i||t.contains(i,e.target)},_closeOnClickOutside:function(t){this._isEventTargetInWidget(t)||this.close()},_appendTo:function(){var e=this.options.appendTo;return e&&(e=e.jquery||e.nodeType?t(e):this.document.find(e).eq(0)),e&&e[0]||(e=this.element.closest(\".ui-front, dialog\")),e.length||(e=this.document[0].body),e},_initSource:function(){var e,i,s=this;t.isArray(this.options.source)?(e=this.options.source,this.source=function(i,s){s(t.ui.autocomplete.filter(e,i.term))}):\"string\"==typeof this.options.source?(i=this.options.source,this.source=function(e,n){s.xhr&&s.xhr.abort(),s.xhr=t.ajax({url:i,data:e,dataType:\"json\",success:function(t){n(t)},error:function(){n([])}})}):this.source=this.options.source},_searchTimeout:function(t){clearTimeout(this.searching),this.searching=this._delay(function(){var e=this.term===this._value(),i=this.menu.element.is(\":visible\"),s=t.altKey||t.ctrlKey||t.metaKey||t.shiftKey;(!e||e&&!i&&!s)&&(this.selectedItem=null,this.search(null,t))},this.options.delay)},search:function(t,e){return t=null!=t?t:this._value(),this.term=this._value(),t.length<this.options.minLength?this.close(e):this._trigger(\"search\",e)!==!1?this._search(t):void 0},_search:function(t){this.pending++,this._addClass(\"ui-autocomplete-loading\"),this.cancelSearch=!1,this.source({term:t},this._response())},_response:function(){var e=++this.requestIndex;return t.proxy(function(t){e===this.requestIndex&&this.__response(t),this.pending--,this.pending||this._removeClass(\"ui-autocomplete-loading\")},this)},__response:function(t){t&&(t=this._normalize(t)),this._trigger(\"response\",null,{content:t}),!this.options.disabled&&t&&t.length&&!this.cancelSearch?(this._suggest(t),this._trigger(\"open\")):this._close()},close:function(t){this.cancelSearch=!0,this._close(t)},_close:function(t){this._off(this.document,\"mousedown\"),this.menu.element.is(\":visible\")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger(\"close\",t))},_change:function(t){this.previous!==this._value()&&this._trigger(\"change\",t,{item:this.selectedItem})},_normalize:function(e){return e.length&&e[0].label&&e[0].value?e:t.map(e,function(e){return\"string\"==typeof e?{label:e,value:e}:t.extend({},e,{label:e.label||e.value,value:e.value||e.label})})},_suggest:function(e){var i=this.menu.element.empty();this._renderMenu(i,e),this.isNewMenu=!0,this.menu.refresh(),i.show(),this._resizeMenu(),i.position(t.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next(),this._on(this.document,{mousedown:\"_closeOnClickOutside\"})},_resizeMenu:function(){var t=this.menu.element;t.outerWidth(Math.max(t.width(\"\").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(e,i){var s=this;t.each(i,function(t,i){s._renderItemData(e,i)})},_renderItemData:function(t,e){return this._renderItem(t,e).data(\"ui-autocomplete-item\",e)},_renderItem:function(e,i){return t(\"<li>\").append(t(\"<div>\").text(i.label)).appendTo(e)},_move:function(t,e){return this.menu.element.is(\":visible\")?this.menu.isFirstItem()&&/^previous/.test(t)||this.menu.isLastItem()&&/^next/.test(t)?(this.isMultiLine||this._value(this.term),this.menu.blur(),void 0):(this.menu[t](e),void 0):(this.search(null,e),void 0)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(t,e){(!this.isMultiLine||this.menu.element.is(\":visible\"))&&(this._move(t,e),e.preventDefault())},_isContentEditable:function(t){if(!t.length)return!1;var e=t.prop(\"contentEditable\");return\"inherit\"===e?this._isContentEditable(t.parent()):\"true\"===e}}),t.extend(t.ui.autocomplete,{escapeRegex:function(t){return t.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g,\"\\\\$&\")},filter:function(e,i){var s=RegExp(t.ui.autocomplete.escapeRegex(i),\"i\");return t.grep(e,function(t){return s.test(t.label||t.value||t)})}}),t.widget(\"ui.autocomplete\",t.ui.autocomplete,{options:{messages:{noResults:\"No search results.\",results:function(t){return t+(t>1?\" results are\":\" result is\")+\" available, use up and down arrow keys to navigate.\"}}},__response:function(e){var i;this._superApply(arguments),this.options.disabled||this.cancelSearch||(i=e&&e.length?this.options.messages.results(e.length):this.options.messages.noResults,this.liveRegion.children().hide(),t(\"<div>\").text(i).appendTo(this.liveRegion))}}),t.ui.autocomplete;var g=/ui-corner-([a-z]){2,6}/g;t.widget(\"ui.controlgroup\",{version:\"1.12.1\",defaultElement:\"<div>\",options:{direction:\"horizontal\",disabled:null,onlyVisible:!0,items:{button:\"input[type=button], input[type=submit], input[type=reset], button, a\",controlgroupLabel:\".ui-controlgroup-label\",checkboxradio:\"input[type='checkbox'], input[type='radio']\",selectmenu:\"select\",spinner:\".ui-spinner-input\"}},_create:function(){this._enhance()},_enhance:function(){this.element.attr(\"role\",\"toolbar\"),this.refresh()},_destroy:function(){this._callChildMethod(\"destroy\"),this.childWidgets.removeData(\"ui-controlgroup-data\"),this.element.removeAttr(\"role\"),this.options.items.controlgroupLabel&&this.element.find(this.options.items.controlgroupLabel).find(\".ui-controlgroup-label-contents\").contents().unwrap()},_initWidgets:function(){var e=this,i=[];t.each(this.options.items,function(s,n){var o,a={};return n?\"controlgroupLabel\"===s?(o=e.element.find(n),o.each(function(){var e=t(this);e.children(\".ui-controlgroup-label-contents\").length||e.contents().wrapAll(\"<span class='ui-controlgroup-label-contents'></span>\")}),e._addClass(o,null,\"ui-widget ui-widget-content ui-state-default\"),i=i.concat(o.get()),void 0):(t.fn[s]&&(a=e[\"_\"+s+\"Options\"]?e[\"_\"+s+\"Options\"](\"middle\"):{classes:{}},e.element.find(n).each(function(){var n=t(this),o=n[s](\"instance\"),r=t.widget.extend({},a);if(\"button\"!==s||!n.parent(\".ui-spinner\").length){o||(o=n[s]()[s](\"instance\")),o&&(r.classes=e._resolveClassesValues(r.classes,o)),n[s](r);var h=n[s](\"widget\");t.data(h[0],\"ui-controlgroup-data\",o?o:n[s](\"instance\")),i.push(h[0])}})),void 0):void 0}),this.childWidgets=t(t.unique(i)),this._addClass(this.childWidgets,\"ui-controlgroup-item\")},_callChildMethod:function(e){this.childWidgets.each(function(){var i=t(this),s=i.data(\"ui-controlgroup-data\");s&&s[e]&&s[e]()})},_updateCornerClass:function(t,e){var i=\"ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all\",s=this._buildSimpleOptions(e,\"label\").classes.label;this._removeClass(t,null,i),this._addClass(t,null,s)},_buildSimpleOptions:function(t,e){var i=\"vertical\"===this.options.direction,s={classes:{}};return s.classes[e]={middle:\"\",first:\"ui-corner-\"+(i?\"top\":\"left\"),last:\"ui-corner-\"+(i?\"bottom\":\"right\"),only:\"ui-corner-all\"}[t],s},_spinnerOptions:function(t){var e=this._buildSimpleOptions(t,\"ui-spinner\");return e.classes[\"ui-spinner-up\"]=\"\",e.classes[\"ui-spinner-down\"]=\"\",e},_buttonOptions:function(t){return this._buildSimpleOptions(t,\"ui-button\")},_checkboxradioOptions:function(t){return this._buildSimpleOptions(t,\"ui-checkboxradio-label\")},_selectmenuOptions:function(t){var e=\"vertical\"===this.options.direction;return{width:e?\"auto\":!1,classes:{middle:{\"ui-selectmenu-button-open\":\"\",\"ui-selectmenu-button-closed\":\"\"},first:{\"ui-selectmenu-button-open\":\"ui-corner-\"+(e?\"top\":\"tl\"),\"ui-selectmenu-button-closed\":\"ui-corner-\"+(e?\"top\":\"left\")},last:{\"ui-selectmenu-button-open\":e?\"\":\"ui-corner-tr\",\"ui-selectmenu-button-closed\":\"ui-corner-\"+(e?\"bottom\":\"right\")},only:{\"ui-selectmenu-button-open\":\"ui-corner-top\",\"ui-selectmenu-button-closed\":\"ui-corner-all\"}}[t]}},_resolveClassesValues:function(e,i){var s={};return t.each(e,function(n){var o=i.options.classes[n]||\"\";o=t.trim(o.replace(g,\"\")),s[n]=(o+\" \"+e[n]).replace(/\\s+/g,\" \")}),s},_setOption:function(t,e){return\"direction\"===t&&this._removeClass(\"ui-controlgroup-\"+this.options.direction),this._super(t,e),\"disabled\"===t?(this._callChildMethod(e?\"disable\":\"enable\"),void 0):(this.refresh(),void 0)},refresh:function(){var e,i=this;this._addClass(\"ui-controlgroup ui-controlgroup-\"+this.options.direction),\"horizontal\"===this.options.direction&&this._addClass(null,\"ui-helper-clearfix\"),this._initWidgets(),e=this.childWidgets,this.options.onlyVisible&&(e=e.filter(\":visible\")),e.length&&(t.each([\"first\",\"last\"],function(t,s){var n=e[s]().data(\"ui-controlgroup-data\");if(n&&i[\"_\"+n.widgetName+\"Options\"]){var o=i[\"_\"+n.widgetName+\"Options\"](1===e.length?\"only\":s);o.classes=i._resolveClassesValues(o.classes,n),n.element[n.widgetName](o)}else i._updateCornerClass(e[s](),s)}),this._callChildMethod(\"refresh\"))}}),t.widget(\"ui.checkboxradio\",[t.ui.formResetMixin,{version:\"1.12.1\",options:{disabled:null,label:null,icon:!0,classes:{\"ui-checkboxradio-label\":\"ui-corner-all\",\"ui-checkboxradio-icon\":\"ui-corner-all\"}},_getCreateOptions:function(){var e,i,s=this,n=this._super()||{};return this._readType(),i=this.element.labels(),this.label=t(i[i.length-1]),this.label.length||t.error(\"No label found for checkboxradio widget\"),this.originalLabel=\"\",this.label.contents().not(this.element[0]).each(function(){s.originalLabel+=3===this.nodeType?t(this).text():this.outerHTML}),this.originalLabel&&(n.label=this.originalLabel),e=this.element[0].disabled,null!=e&&(n.disabled=e),n},_create:function(){var t=this.element[0].checked;this._bindFormResetHandler(),null==this.options.disabled&&(this.options.disabled=this.element[0].disabled),this._setOption(\"disabled\",this.options.disabled),this._addClass(\"ui-checkboxradio\",\"ui-helper-hidden-accessible\"),this._addClass(this.label,\"ui-checkboxradio-label\",\"ui-button ui-widget\"),\"radio\"===this.type&&this._addClass(this.label,\"ui-checkboxradio-radio-label\"),this.options.label&&this.options.label!==this.originalLabel?this._updateLabel():this.originalLabel&&(this.options.label=this.originalLabel),this._enhance(),t&&(this._addClass(this.label,\"ui-checkboxradio-checked\",\"ui-state-active\"),this.icon&&this._addClass(this.icon,null,\"ui-state-hover\")),this._on({change:\"_toggleClasses\",focus:function(){this._addClass(this.label,null,\"ui-state-focus ui-visual-focus\")},blur:function(){this._removeClass(this.label,null,\"ui-state-focus ui-visual-focus\")}})},_readType:function(){var e=this.element[0].nodeName.toLowerCase();this.type=this.element[0].type,\"input\"===e&&/radio|checkbox/.test(this.type)||t.error(\"Can't create checkboxradio on element.nodeName=\"+e+\" and element.type=\"+this.type)},_enhance:function(){this._updateIcon(this.element[0].checked)},widget:function(){return this.label},_getRadioGroup:function(){var e,i=this.element[0].name,s=\"input[name='\"+t.ui.escapeSelector(i)+\"']\";return i?(e=this.form.length?t(this.form[0].elements).filter(s):t(s).filter(function(){return 0===t(this).form().length}),e.not(this.element)):t([])},_toggleClasses:function(){var e=this.element[0].checked;this._toggleClass(this.label,\"ui-checkboxradio-checked\",\"ui-state-active\",e),this.options.icon&&\"checkbox\"===this.type&&this._toggleClass(this.icon,null,\"ui-icon-check ui-state-checked\",e)._toggleClass(this.icon,null,\"ui-icon-blank\",!e),\"radio\"===this.type&&this._getRadioGroup().each(function(){var e=t(this).checkboxradio(\"instance\");e&&e._removeClass(e.label,\"ui-checkboxradio-checked\",\"ui-state-active\")})},_destroy:function(){this._unbindFormResetHandler(),this.icon&&(this.icon.remove(),this.iconSpace.remove())},_setOption:function(t,e){return\"label\"!==t||e?(this._super(t,e),\"disabled\"===t?(this._toggleClass(this.label,null,\"ui-state-disabled\",e),this.element[0].disabled=e,void 0):(this.refresh(),void 0)):void 0},_updateIcon:function(e){var i=\"ui-icon ui-icon-background \";this.options.icon?(this.icon||(this.icon=t(\"<span>\"),this.iconSpace=t(\"<span> </span>\"),this._addClass(this.iconSpace,\"ui-checkboxradio-icon-space\")),\"checkbox\"===this.type?(i+=e?\"ui-icon-check ui-state-checked\":\"ui-icon-blank\",this._removeClass(this.icon,null,e?\"ui-icon-blank\":\"ui-icon-check\")):i+=\"ui-icon-blank\",this._addClass(this.icon,\"ui-checkboxradio-icon\",i),e||this._removeClass(this.icon,null,\"ui-icon-check ui-state-checked\"),this.icon.prependTo(this.label).after(this.iconSpace)):void 0!==this.icon&&(this.icon.remove(),this.iconSpace.remove(),delete this.icon)},_updateLabel:function(){var t=this.label.contents().not(this.element[0]);this.icon&&(t=t.not(this.icon[0])),this.iconSpace&&(t=t.not(this.iconSpace[0])),t.remove(),this.label.append(this.options.label)},refresh:function(){var t=this.element[0].checked,e=this.element[0].disabled;this._updateIcon(t),this._toggleClass(this.label,\"ui-checkboxradio-checked\",\"ui-state-active\",t),null!==this.options.label&&this._updateLabel(),e!==this.options.disabled&&this._setOptions({disabled:e})}}]),t.ui.checkboxradio,t.widget(\"ui.button\",{version:\"1.12.1\",defaultElement:\"<button>\",options:{classes:{\"ui-button\":\"ui-corner-all\"},disabled:null,icon:null,iconPosition:\"beginning\",label:null,showLabel:!0},_getCreateOptions:function(){var t,e=this._super()||{};return this.isInput=this.element.is(\"input\"),t=this.element[0].disabled,null!=t&&(e.disabled=t),this.originalLabel=this.isInput?this.element.val():this.element.html(),this.originalLabel&&(e.label=this.originalLabel),e},_create:function(){!this.option.showLabel&!this.options.icon&&(this.options.showLabel=!0),null==this.options.disabled&&(this.options.disabled=this.element[0].disabled||!1),this.hasTitle=!!this.element.attr(\"title\"),this.options.label&&this.options.label!==this.originalLabel&&(this.isInput?this.element.val(this.options.label):this.element.html(this.options.label)),this._addClass(\"ui-button\",\"ui-widget\"),this._setOption(\"disabled\",this.options.disabled),this._enhance(),this.element.is(\"a\")&&this._on({keyup:function(e){e.keyCode===t.ui.keyCode.SPACE&&(e.preventDefault(),this.element[0].click?this.element[0].click():this.element.trigger(\"click\"))}})},_enhance:function(){this.element.is(\"button\")||this.element.attr(\"role\",\"button\"),this.options.icon&&(this._updateIcon(\"icon\",this.options.icon),this._updateTooltip())},_updateTooltip:function(){this.title=this.element.attr(\"title\"),this.options.showLabel||this.title||this.element.attr(\"title\",this.options.label)},_updateIcon:function(e,i){var s=\"iconPosition\"!==e,n=s?this.options.iconPosition:i,o=\"top\"===n||\"bottom\"===n;this.icon?s&&this._removeClass(this.icon,null,this.options.icon):(this.icon=t(\"<span>\"),this._addClass(this.icon,\"ui-button-icon\",\"ui-icon\"),this.options.showLabel||this._addClass(\"ui-button-icon-only\")),s&&this._addClass(this.icon,null,i),this._attachIcon(n),o?(this._addClass(this.icon,null,\"ui-widget-icon-block\"),this.iconSpace&&this.iconSpace.remove()):(this.iconSpace||(this.iconSpace=t(\"<span> </span>\"),this._addClass(this.iconSpace,\"ui-button-icon-space\")),this._removeClass(this.icon,null,\"ui-wiget-icon-block\"),this._attachIconSpace(n))},_destroy:function(){this.element.removeAttr(\"role\"),this.icon&&this.icon.remove(),this.iconSpace&&this.iconSpace.remove(),this.hasTitle||this.element.removeAttr(\"title\")},_attachIconSpace:function(t){this.icon[/^(?:end|bottom)/.test(t)?\"before\":\"after\"](this.iconSpace)},_attachIcon:function(t){this.element[/^(?:end|bottom)/.test(t)?\"append\":\"prepend\"](this.icon)},_setOptions:function(t){var e=void 0===t.showLabel?this.options.showLabel:t.showLabel,i=void 0===t.icon?this.options.icon:t.icon;e||i||(t.showLabel=!0),this._super(t)},_setOption:function(t,e){\"icon\"===t&&(e?this._updateIcon(t,e):this.icon&&(this.icon.remove(),this.iconSpace&&this.iconSpace.remove())),\"iconPosition\"===t&&this._updateIcon(t,e),\"showLabel\"===t&&(this._toggleClass(\"ui-button-icon-only\",null,!e),this._updateTooltip()),\"label\"===t&&(this.isInput?this.element.val(e):(this.element.html(e),this.icon&&(this._attachIcon(this.options.iconPosition),this._attachIconSpace(this.options.iconPosition)))),this._super(t,e),\"disabled\"===t&&(this._toggleClass(null,\"ui-state-disabled\",e),this.element[0].disabled=e,e&&this.element.blur())},refresh:function(){var t=this.element.is(\"input, button\")?this.element[0].disabled:this.element.hasClass(\"ui-button-disabled\");t!==this.options.disabled&&this._setOptions({disabled:t}),this._updateTooltip()}}),t.uiBackCompat!==!1&&(t.widget(\"ui.button\",t.ui.button,{options:{text:!0,icons:{primary:null,secondary:null}},_create:function(){this.options.showLabel&&!this.options.text&&(this.options.showLabel=this.options.text),!this.options.showLabel&&this.options.text&&(this.options.text=this.options.showLabel),this.options.icon||!this.options.icons.primary&&!this.options.icons.secondary?this.options.icon&&(this.options.icons.primary=this.options.icon):this.options.icons.primary?this.options.icon=this.options.icons.primary:(this.options.icon=this.options.icons.secondary,this.options.iconPosition=\"end\"),this._super()},_setOption:function(t,e){return\"text\"===t?(this._super(\"showLabel\",e),void 0):(\"showLabel\"===t&&(this.options.text=e),\"icon\"===t&&(this.options.icons.primary=e),\"icons\"===t&&(e.primary?(this._super(\"icon\",e.primary),this._super(\"iconPosition\",\"beginning\")):e.secondary&&(this._super(\"icon\",e.secondary),this._super(\"iconPosition\",\"end\"))),this._superApply(arguments),void 0)}}),t.fn.button=function(e){return function(){return!this.length||this.length&&\"INPUT\"!==this[0].tagName||this.length&&\"INPUT\"===this[0].tagName&&\"checkbox\"!==this.attr(\"type\")&&\"radio\"!==this.attr(\"type\")?e.apply(this,arguments):(t.ui.checkboxradio||t.error(\"Checkboxradio widget missing\"),0===arguments.length?this.checkboxradio({icon:!1}):this.checkboxradio.apply(this,arguments))}}(t.fn.button),t.fn.buttonset=function(){return t.ui.controlgroup||t.error(\"Controlgroup widget missing\"),\"option\"===arguments[0]&&\"items\"===arguments[1]&&arguments[2]?this.controlgroup.apply(this,[arguments[0],\"items.button\",arguments[2]]):\"option\"===arguments[0]&&\"items\"===arguments[1]?this.controlgroup.apply(this,[arguments[0],\"items.button\"]):(\"object\"==typeof arguments[0]&&arguments[0].items&&(arguments[0].items={button:arguments[0].items}),this.controlgroup.apply(this,arguments))}),t.ui.button,t.extend(t.ui,{datepicker:{version:\"1.12.1\"}});var m;t.extend(s.prototype,{markerClassName:\"hasDatepicker\",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(t){return a(this._defaults,t||{}),this},_attachDatepicker:function(e,i){var s,n,o;s=e.nodeName.toLowerCase(),n=\"div\"===s||\"span\"===s,e.id||(this.uuid+=1,e.id=\"dp\"+this.uuid),o=this._newInst(t(e),n),o.settings=t.extend({},i||{}),\"input\"===s?this._connectDatepicker(e,o):n&&this._inlineDatepicker(e,o)},_newInst:function(e,i){var s=e[0].id.replace(/([^A-Za-z0-9_\\-])/g,\"\\\\\\\\$1\");return{id:s,input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:i,dpDiv:i?n(t(\"<div class='\"+this._inlineClass+\" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>\")):this.dpDiv}},_connectDatepicker:function(e,i){var s=t(e);i.append=t([]),i.trigger=t([]),s.hasClass(this.markerClassName)||(this._attachments(s,i),s.addClass(this.markerClassName).on(\"keydown\",this._doKeyDown).on(\"keypress\",this._doKeyPress).on(\"keyup\",this._doKeyUp),this._autoSize(i),t.data(e,\"datepicker\",i),i.settings.disabled&&this._disableDatepicker(e))},_attachments:function(e,i){var s,n,o,a=this._get(i,\"appendText\"),r=this._get(i,\"isRTL\");i.append&&i.append.remove(),a&&(i.append=t(\"<span class='\"+this._appendClass+\"'>\"+a+\"</span>\"),e[r?\"before\":\"after\"](i.append)),e.off(\"focus\",this._showDatepicker),i.trigger&&i.trigger.remove(),s=this._get(i,\"showOn\"),(\"focus\"===s||\"both\"===s)&&e.on(\"focus\",this._showDatepicker),(\"button\"===s||\"both\"===s)&&(n=this._get(i,\"buttonText\"),o=this._get(i,\"buttonImage\"),i.trigger=t(this._get(i,\"buttonImageOnly\")?t(\"<img/>\").addClass(this._triggerClass).attr({src:o,alt:n,title:n}):t(\"<button type='button'></button>\").addClass(this._triggerClass).html(o?t(\"<img/>\").attr({src:o,alt:n,title:n}):n)),e[r?\"before\":\"after\"](i.trigger),i.trigger.on(\"click\",function(){return t.datepicker._datepickerShowing&&t.datepicker._lastInput===e[0]?t.datepicker._hideDatepicker():t.datepicker._datepickerShowing&&t.datepicker._lastInput!==e[0]?(t.datepicker._hideDatepicker(),t.datepicker._showDatepicker(e[0])):t.datepicker._showDatepicker(e[0]),!1}))},_autoSize:function(t){if(this._get(t,\"autoSize\")&&!t.inline){var e,i,s,n,o=new Date(2009,11,20),a=this._get(t,\"dateFormat\");a.match(/[DM]/)&&(e=function(t){for(i=0,s=0,n=0;t.length>n;n++)t[n].length>i&&(i=t[n].length,s=n);return s},o.setMonth(e(this._get(t,a.match(/MM/)?\"monthNames\":\"monthNamesShort\"))),o.setDate(e(this._get(t,a.match(/DD/)?\"dayNames\":\"dayNamesShort\"))+20-o.getDay())),t.input.attr(\"size\",this._formatDate(t,o).length)}},_inlineDatepicker:function(e,i){var s=t(e);s.hasClass(this.markerClassName)||(s.addClass(this.markerClassName).append(i.dpDiv),t.data(e,\"datepicker\",i),this._setDate(i,this._getDefaultDate(i),!0),this._updateDatepicker(i),this._updateAlternate(i),i.settings.disabled&&this._disableDatepicker(e),i.dpDiv.css(\"display\",\"block\"))},_dialogDatepicker:function(e,i,s,n,o){var r,h,l,c,u,d=this._dialogInst;return d||(this.uuid+=1,r=\"dp\"+this.uuid,this._dialogInput=t(\"<input type='text' id='\"+r+\"' style='position: absolute; top: -100px; width: 0px;'/>\"),this._dialogInput.on(\"keydown\",this._doKeyDown),t(\"body\").append(this._dialogInput),d=this._dialogInst=this._newInst(this._dialogInput,!1),d.settings={},t.data(this._dialogInput[0],\"datepicker\",d)),a(d.settings,n||{}),i=i&&i.constructor===Date?this._formatDate(d,i):i,this._dialogInput.val(i),this._pos=o?o.length?o:[o.pageX,o.pageY]:null,this._pos||(h=document.documentElement.clientWidth,l=document.documentElement.clientHeight,c=document.documentElement.scrollLeft||document.body.scrollLeft,u=document.documentElement.scrollTop||document.body.scrollTop,this._pos=[h/2-100+c,l/2-150+u]),this._dialogInput.css(\"left\",this._pos[0]+20+\"px\").css(\"top\",this._pos[1]+\"px\"),d.settings.onSelect=s,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),t.blockUI&&t.blockUI(this.dpDiv),t.data(this._dialogInput[0],\"datepicker\",d),this},_destroyDatepicker:function(e){var i,s=t(e),n=t.data(e,\"datepicker\");s.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),t.removeData(e,\"datepicker\"),\"input\"===i?(n.append.remove(),n.trigger.remove(),s.removeClass(this.markerClassName).off(\"focus\",this._showDatepicker).off(\"keydown\",this._doKeyDown).off(\"keypress\",this._doKeyPress).off(\"keyup\",this._doKeyUp)):(\"div\"===i||\"span\"===i)&&s.removeClass(this.markerClassName).empty(),m===n&&(m=null))},_enableDatepicker:function(e){var i,s,n=t(e),o=t.data(e,\"datepicker\");n.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),\"input\"===i?(e.disabled=!1,o.trigger.filter(\"button\").each(function(){this.disabled=!1}).end().filter(\"img\").css({opacity:\"1.0\",cursor:\"\"})):(\"div\"===i||\"span\"===i)&&(s=n.children(\".\"+this._inlineClass),s.children().removeClass(\"ui-state-disabled\"),s.find(\"select.ui-datepicker-month, select.ui-datepicker-year\").prop(\"disabled\",!1)),this._disabledInputs=t.map(this._disabledInputs,function(t){return t===e?null:t}))},_disableDatepicker:function(e){var i,s,n=t(e),o=t.data(e,\"datepicker\");n.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),\"input\"===i?(e.disabled=!0,o.trigger.filter(\"button\").each(function(){this.disabled=!0}).end().filter(\"img\").css({opacity:\"0.5\",cursor:\"default\"})):(\"div\"===i||\"span\"===i)&&(s=n.children(\".\"+this._inlineClass),s.children().addClass(\"ui-state-disabled\"),s.find(\"select.ui-datepicker-month, select.ui-datepicker-year\").prop(\"disabled\",!0)),this._disabledInputs=t.map(this._disabledInputs,function(t){return t===e?null:t}),this._disabledInputs[this._disabledInputs.length]=e)},_isDisabledDatepicker:function(t){if(!t)return!1;for(var e=0;this._disabledInputs.length>e;e++)if(this._disabledInputs[e]===t)return!0;return!1},_getInst:function(e){try{return t.data(e,\"datepicker\")}catch(i){throw\"Missing instance data for this datepicker\"}},_optionDatepicker:function(e,i,s){var n,o,r,h,l=this._getInst(e);return 2===arguments.length&&\"string\"==typeof i?\"defaults\"===i?t.extend({},t.datepicker._defaults):l?\"all\"===i?t.extend({},l.settings):this._get(l,i):null:(n=i||{},\"string\"==typeof i&&(n={},n[i]=s),l&&(this._curInst===l&&this._hideDatepicker(),o=this._getDateDatepicker(e,!0),r=this._getMinMaxDate(l,\"min\"),h=this._getMinMaxDate(l,\"max\"),a(l.settings,n),null!==r&&void 0!==n.dateFormat&&void 0===n.minDate&&(l.settings.minDate=this._formatDate(l,r)),null!==h&&void 0!==n.dateFormat&&void 0===n.maxDate&&(l.settings.maxDate=this._formatDate(l,h)),\"disabled\"in n&&(n.disabled?this._disableDatepicker(e):this._enableDatepicker(e)),this._attachments(t(e),l),this._autoSize(l),this._setDate(l,o),this._updateAlternate(l),this._updateDatepicker(l)),void 0)},_changeDatepicker:function(t,e,i){this._optionDatepicker(t,e,i)},_refreshDatepicker:function(t){var e=this._getInst(t);e&&this._updateDatepicker(e)},_setDateDatepicker:function(t,e){var i=this._getInst(t);i&&(this._setDate(i,e),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(t,e){var i=this._getInst(t);return i&&!i.inline&&this._setDateFromField(i,e),i?this._getDate(i):null},_doKeyDown:function(e){var i,s,n,o=t.datepicker._getInst(e.target),a=!0,r=o.dpDiv.is(\".ui-datepicker-rtl\");if(o._keyEvent=!0,t.datepicker._datepickerShowing)switch(e.keyCode){case 9:t.datepicker._hideDatepicker(),a=!1;break;case 13:return n=t(\"td.\"+t.datepicker._dayOverClass+\":not(.\"+t.datepicker._currentClass+\")\",o.dpDiv),n[0]&&t.datepicker._selectDay(e.target,o.selectedMonth,o.selectedYear,n[0]),i=t.datepicker._get(o,\"onSelect\"),i?(s=t.datepicker._formatDate(o),i.apply(o.input?o.input[0]:null,[s,o])):t.datepicker._hideDatepicker(),!1;case 27:t.datepicker._hideDatepicker();break;case 33:t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(o,\"stepBigMonths\"):-t.datepicker._get(o,\"stepMonths\"),\"M\");break;case 34:t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(o,\"stepBigMonths\"):+t.datepicker._get(o,\"stepMonths\"),\"M\");break;case 35:(e.ctrlKey||e.metaKey)&&t.datepicker._clearDate(e.target),a=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&t.datepicker._gotoToday(e.target),a=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,r?1:-1,\"D\"),a=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(o,\"stepBigMonths\"):-t.datepicker._get(o,\"stepMonths\"),\"M\");break;case 38:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,-7,\"D\"),a=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,r?-1:1,\"D\"),a=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(o,\"stepBigMonths\"):+t.datepicker._get(o,\"stepMonths\"),\"M\");break;case 40:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,7,\"D\"),a=e.ctrlKey||e.metaKey;break;default:a=!1}else 36===e.keyCode&&e.ctrlKey?t.datepicker._showDatepicker(this):a=!1;a&&(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(e){var i,s,n=t.datepicker._getInst(e.target);return t.datepicker._get(n,\"constrainInput\")?(i=t.datepicker._possibleChars(t.datepicker._get(n,\"dateFormat\")),s=String.fromCharCode(null==e.charCode?e.keyCode:e.charCode),e.ctrlKey||e.metaKey||\" \">s||!i||i.indexOf(s)>-1):void 0},_doKeyUp:function(e){var i,s=t.datepicker._getInst(e.target);if(s.input.val()!==s.lastVal)try{i=t.datepicker.parseDate(t.datepicker._get(s,\"dateFormat\"),s.input?s.input.val():null,t.datepicker._getFormatConfig(s)),i&&(t.datepicker._setDateFromField(s),t.datepicker._updateAlternate(s),t.datepicker._updateDatepicker(s))}catch(n){}return!0},_showDatepicker:function(e){if(e=e.target||e,\"input\"!==e.nodeName.toLowerCase()&&(e=t(\"input\",e.parentNode)[0]),!t.datepicker._isDisabledDatepicker(e)&&t.datepicker._lastInput!==e){var s,n,o,r,h,l,c;s=t.datepicker._getInst(e),t.datepicker._curInst&&t.datepicker._curInst!==s&&(t.datepicker._curInst.dpDiv.stop(!0,!0),s&&t.datepicker._datepickerShowing&&t.datepicker._hideDatepicker(t.datepicker._curInst.input[0])),n=t.datepicker._get(s,\"beforeShow\"),o=n?n.apply(e,[e,s]):{},o!==!1&&(a(s.settings,o),s.lastVal=null,t.datepicker._lastInput=e,t.datepicker._setDateFromField(s),t.datepicker._inDialog&&(e.value=\"\"),t.datepicker._pos||(t.datepicker._pos=t.datepicker._findPos(e),t.datepicker._pos[1]+=e.offsetHeight),r=!1,t(e).parents().each(function(){return r|=\"fixed\"===t(this).css(\"position\"),!r}),h={left:t.datepicker._pos[0],top:t.datepicker._pos[1]},t.datepicker._pos=null,s.dpDiv.empty(),s.dpDiv.css({position:\"absolute\",display:\"block\",top:\"-1000px\"}),t.datepicker._updateDatepicker(s),h=t.datepicker._checkOffset(s,h,r),s.dpDiv.css({position:t.datepicker._inDialog&&t.blockUI?\"static\":r?\"fixed\":\"absolute\",display:\"none\",left:h.left+\"px\",top:h.top+\"px\"}),s.inline||(l=t.datepicker._get(s,\"showAnim\"),c=t.datepicker._get(s,\"duration\"),s.dpDiv.css(\"z-index\",i(t(e))+1),t.datepicker._datepickerShowing=!0,t.effects&&t.effects.effect[l]?s.dpDiv.show(l,t.datepicker._get(s,\"showOptions\"),c):s.dpDiv[l||\"show\"](l?c:null),t.datepicker._shouldFocusInput(s)&&s.input.trigger(\"focus\"),t.datepicker._curInst=s))\n}},_updateDatepicker:function(e){this.maxRows=4,m=e,e.dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e);var i,s=this._getNumberOfMonths(e),n=s[1],a=17,r=e.dpDiv.find(\".\"+this._dayOverClass+\" a\");r.length>0&&o.apply(r.get(0)),e.dpDiv.removeClass(\"ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4\").width(\"\"),n>1&&e.dpDiv.addClass(\"ui-datepicker-multi-\"+n).css(\"width\",a*n+\"em\"),e.dpDiv[(1!==s[0]||1!==s[1]?\"add\":\"remove\")+\"Class\"](\"ui-datepicker-multi\"),e.dpDiv[(this._get(e,\"isRTL\")?\"add\":\"remove\")+\"Class\"](\"ui-datepicker-rtl\"),e===t.datepicker._curInst&&t.datepicker._datepickerShowing&&t.datepicker._shouldFocusInput(e)&&e.input.trigger(\"focus\"),e.yearshtml&&(i=e.yearshtml,setTimeout(function(){i===e.yearshtml&&e.yearshtml&&e.dpDiv.find(\"select.ui-datepicker-year:first\").replaceWith(e.yearshtml),i=e.yearshtml=null},0))},_shouldFocusInput:function(t){return t.input&&t.input.is(\":visible\")&&!t.input.is(\":disabled\")&&!t.input.is(\":focus\")},_checkOffset:function(e,i,s){var n=e.dpDiv.outerWidth(),o=e.dpDiv.outerHeight(),a=e.input?e.input.outerWidth():0,r=e.input?e.input.outerHeight():0,h=document.documentElement.clientWidth+(s?0:t(document).scrollLeft()),l=document.documentElement.clientHeight+(s?0:t(document).scrollTop());return i.left-=this._get(e,\"isRTL\")?n-a:0,i.left-=s&&i.left===e.input.offset().left?t(document).scrollLeft():0,i.top-=s&&i.top===e.input.offset().top+r?t(document).scrollTop():0,i.left-=Math.min(i.left,i.left+n>h&&h>n?Math.abs(i.left+n-h):0),i.top-=Math.min(i.top,i.top+o>l&&l>o?Math.abs(o+r):0),i},_findPos:function(e){for(var i,s=this._getInst(e),n=this._get(s,\"isRTL\");e&&(\"hidden\"===e.type||1!==e.nodeType||t.expr.filters.hidden(e));)e=e[n?\"previousSibling\":\"nextSibling\"];return i=t(e).offset(),[i.left,i.top]},_hideDatepicker:function(e){var i,s,n,o,a=this._curInst;!a||e&&a!==t.data(e,\"datepicker\")||this._datepickerShowing&&(i=this._get(a,\"showAnim\"),s=this._get(a,\"duration\"),n=function(){t.datepicker._tidyDialog(a)},t.effects&&(t.effects.effect[i]||t.effects[i])?a.dpDiv.hide(i,t.datepicker._get(a,\"showOptions\"),s,n):a.dpDiv[\"slideDown\"===i?\"slideUp\":\"fadeIn\"===i?\"fadeOut\":\"hide\"](i?s:null,n),i||n(),this._datepickerShowing=!1,o=this._get(a,\"onClose\"),o&&o.apply(a.input?a.input[0]:null,[a.input?a.input.val():\"\",a]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:\"absolute\",left:\"0\",top:\"-100px\"}),t.blockUI&&(t.unblockUI(),t(\"body\").append(this.dpDiv))),this._inDialog=!1)},_tidyDialog:function(t){t.dpDiv.removeClass(this._dialogClass).off(\".ui-datepicker-calendar\")},_checkExternalClick:function(e){if(t.datepicker._curInst){var i=t(e.target),s=t.datepicker._getInst(i[0]);(i[0].id!==t.datepicker._mainDivId&&0===i.parents(\"#\"+t.datepicker._mainDivId).length&&!i.hasClass(t.datepicker.markerClassName)&&!i.closest(\".\"+t.datepicker._triggerClass).length&&t.datepicker._datepickerShowing&&(!t.datepicker._inDialog||!t.blockUI)||i.hasClass(t.datepicker.markerClassName)&&t.datepicker._curInst!==s)&&t.datepicker._hideDatepicker()}},_adjustDate:function(e,i,s){var n=t(e),o=this._getInst(n[0]);this._isDisabledDatepicker(n[0])||(this._adjustInstDate(o,i+(\"M\"===s?this._get(o,\"showCurrentAtPos\"):0),s),this._updateDatepicker(o))},_gotoToday:function(e){var i,s=t(e),n=this._getInst(s[0]);this._get(n,\"gotoCurrent\")&&n.currentDay?(n.selectedDay=n.currentDay,n.drawMonth=n.selectedMonth=n.currentMonth,n.drawYear=n.selectedYear=n.currentYear):(i=new Date,n.selectedDay=i.getDate(),n.drawMonth=n.selectedMonth=i.getMonth(),n.drawYear=n.selectedYear=i.getFullYear()),this._notifyChange(n),this._adjustDate(s)},_selectMonthYear:function(e,i,s){var n=t(e),o=this._getInst(n[0]);o[\"selected\"+(\"M\"===s?\"Month\":\"Year\")]=o[\"draw\"+(\"M\"===s?\"Month\":\"Year\")]=parseInt(i.options[i.selectedIndex].value,10),this._notifyChange(o),this._adjustDate(n)},_selectDay:function(e,i,s,n){var o,a=t(e);t(n).hasClass(this._unselectableClass)||this._isDisabledDatepicker(a[0])||(o=this._getInst(a[0]),o.selectedDay=o.currentDay=t(\"a\",n).html(),o.selectedMonth=o.currentMonth=i,o.selectedYear=o.currentYear=s,this._selectDate(e,this._formatDate(o,o.currentDay,o.currentMonth,o.currentYear)))},_clearDate:function(e){var i=t(e);this._selectDate(i,\"\")},_selectDate:function(e,i){var s,n=t(e),o=this._getInst(n[0]);i=null!=i?i:this._formatDate(o),o.input&&o.input.val(i),this._updateAlternate(o),s=this._get(o,\"onSelect\"),s?s.apply(o.input?o.input[0]:null,[i,o]):o.input&&o.input.trigger(\"change\"),o.inline?this._updateDatepicker(o):(this._hideDatepicker(),this._lastInput=o.input[0],\"object\"!=typeof o.input[0]&&o.input.trigger(\"focus\"),this._lastInput=null)},_updateAlternate:function(e){var i,s,n,o=this._get(e,\"altField\");o&&(i=this._get(e,\"altFormat\")||this._get(e,\"dateFormat\"),s=this._getDate(e),n=this.formatDate(i,s,this._getFormatConfig(e)),t(o).val(n))},noWeekends:function(t){var e=t.getDay();return[e>0&&6>e,\"\"]},iso8601Week:function(t){var e,i=new Date(t.getTime());return i.setDate(i.getDate()+4-(i.getDay()||7)),e=i.getTime(),i.setMonth(0),i.setDate(1),Math.floor(Math.round((e-i)/864e5)/7)+1},parseDate:function(e,i,s){if(null==e||null==i)throw\"Invalid arguments\";if(i=\"object\"==typeof i?\"\"+i:i+\"\",\"\"===i)return null;var n,o,a,r,h=0,l=(s?s.shortYearCutoff:null)||this._defaults.shortYearCutoff,c=\"string\"!=typeof l?l:(new Date).getFullYear()%100+parseInt(l,10),u=(s?s.dayNamesShort:null)||this._defaults.dayNamesShort,d=(s?s.dayNames:null)||this._defaults.dayNames,p=(s?s.monthNamesShort:null)||this._defaults.monthNamesShort,f=(s?s.monthNames:null)||this._defaults.monthNames,g=-1,m=-1,_=-1,v=-1,b=!1,y=function(t){var i=e.length>n+1&&e.charAt(n+1)===t;return i&&n++,i},w=function(t){var e=y(t),s=\"@\"===t?14:\"!\"===t?20:\"y\"===t&&e?4:\"o\"===t?3:2,n=\"y\"===t?s:1,o=RegExp(\"^\\\\d{\"+n+\",\"+s+\"}\"),a=i.substring(h).match(o);if(!a)throw\"Missing number at position \"+h;return h+=a[0].length,parseInt(a[0],10)},k=function(e,s,n){var o=-1,a=t.map(y(e)?n:s,function(t,e){return[[e,t]]}).sort(function(t,e){return-(t[1].length-e[1].length)});if(t.each(a,function(t,e){var s=e[1];return i.substr(h,s.length).toLowerCase()===s.toLowerCase()?(o=e[0],h+=s.length,!1):void 0}),-1!==o)return o+1;throw\"Unknown name at position \"+h},x=function(){if(i.charAt(h)!==e.charAt(n))throw\"Unexpected literal at position \"+h;h++};for(n=0;e.length>n;n++)if(b)\"'\"!==e.charAt(n)||y(\"'\")?x():b=!1;else switch(e.charAt(n)){case\"d\":_=w(\"d\");break;case\"D\":k(\"D\",u,d);break;case\"o\":v=w(\"o\");break;case\"m\":m=w(\"m\");break;case\"M\":m=k(\"M\",p,f);break;case\"y\":g=w(\"y\");break;case\"@\":r=new Date(w(\"@\")),g=r.getFullYear(),m=r.getMonth()+1,_=r.getDate();break;case\"!\":r=new Date((w(\"!\")-this._ticksTo1970)/1e4),g=r.getFullYear(),m=r.getMonth()+1,_=r.getDate();break;case\"'\":y(\"'\")?x():b=!0;break;default:x()}if(i.length>h&&(a=i.substr(h),!/^\\s+/.test(a)))throw\"Extra/unparsed characters found in date: \"+a;if(-1===g?g=(new Date).getFullYear():100>g&&(g+=(new Date).getFullYear()-(new Date).getFullYear()%100+(c>=g?0:-100)),v>-1)for(m=1,_=v;;){if(o=this._getDaysInMonth(g,m-1),o>=_)break;m++,_-=o}if(r=this._daylightSavingAdjust(new Date(g,m-1,_)),r.getFullYear()!==g||r.getMonth()+1!==m||r.getDate()!==_)throw\"Invalid date\";return r},ATOM:\"yy-mm-dd\",COOKIE:\"D, dd M yy\",ISO_8601:\"yy-mm-dd\",RFC_822:\"D, d M y\",RFC_850:\"DD, dd-M-y\",RFC_1036:\"D, d M y\",RFC_1123:\"D, d M yy\",RFC_2822:\"D, d M yy\",RSS:\"D, d M y\",TICKS:\"!\",TIMESTAMP:\"@\",W3C:\"yy-mm-dd\",_ticksTo1970:1e7*60*60*24*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function(t,e,i){if(!e)return\"\";var s,n=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,o=(i?i.dayNames:null)||this._defaults.dayNames,a=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,r=(i?i.monthNames:null)||this._defaults.monthNames,h=function(e){var i=t.length>s+1&&t.charAt(s+1)===e;return i&&s++,i},l=function(t,e,i){var s=\"\"+e;if(h(t))for(;i>s.length;)s=\"0\"+s;return s},c=function(t,e,i,s){return h(t)?s[e]:i[e]},u=\"\",d=!1;if(e)for(s=0;t.length>s;s++)if(d)\"'\"!==t.charAt(s)||h(\"'\")?u+=t.charAt(s):d=!1;else switch(t.charAt(s)){case\"d\":u+=l(\"d\",e.getDate(),2);break;case\"D\":u+=c(\"D\",e.getDay(),n,o);break;case\"o\":u+=l(\"o\",Math.round((new Date(e.getFullYear(),e.getMonth(),e.getDate()).getTime()-new Date(e.getFullYear(),0,0).getTime())/864e5),3);break;case\"m\":u+=l(\"m\",e.getMonth()+1,2);break;case\"M\":u+=c(\"M\",e.getMonth(),a,r);break;case\"y\":u+=h(\"y\")?e.getFullYear():(10>e.getFullYear()%100?\"0\":\"\")+e.getFullYear()%100;break;case\"@\":u+=e.getTime();break;case\"!\":u+=1e4*e.getTime()+this._ticksTo1970;break;case\"'\":h(\"'\")?u+=\"'\":d=!0;break;default:u+=t.charAt(s)}return u},_possibleChars:function(t){var e,i=\"\",s=!1,n=function(i){var s=t.length>e+1&&t.charAt(e+1)===i;return s&&e++,s};for(e=0;t.length>e;e++)if(s)\"'\"!==t.charAt(e)||n(\"'\")?i+=t.charAt(e):s=!1;else switch(t.charAt(e)){case\"d\":case\"m\":case\"y\":case\"@\":i+=\"0123456789\";break;case\"D\":case\"M\":return null;case\"'\":n(\"'\")?i+=\"'\":s=!0;break;default:i+=t.charAt(e)}return i},_get:function(t,e){return void 0!==t.settings[e]?t.settings[e]:this._defaults[e]},_setDateFromField:function(t,e){if(t.input.val()!==t.lastVal){var i=this._get(t,\"dateFormat\"),s=t.lastVal=t.input?t.input.val():null,n=this._getDefaultDate(t),o=n,a=this._getFormatConfig(t);try{o=this.parseDate(i,s,a)||n}catch(r){s=e?\"\":s}t.selectedDay=o.getDate(),t.drawMonth=t.selectedMonth=o.getMonth(),t.drawYear=t.selectedYear=o.getFullYear(),t.currentDay=s?o.getDate():0,t.currentMonth=s?o.getMonth():0,t.currentYear=s?o.getFullYear():0,this._adjustInstDate(t)}},_getDefaultDate:function(t){return this._restrictMinMax(t,this._determineDate(t,this._get(t,\"defaultDate\"),new Date))},_determineDate:function(e,i,s){var n=function(t){var e=new Date;return e.setDate(e.getDate()+t),e},o=function(i){try{return t.datepicker.parseDate(t.datepicker._get(e,\"dateFormat\"),i,t.datepicker._getFormatConfig(e))}catch(s){}for(var n=(i.toLowerCase().match(/^c/)?t.datepicker._getDate(e):null)||new Date,o=n.getFullYear(),a=n.getMonth(),r=n.getDate(),h=/([+\\-]?[0-9]+)\\s*(d|D|w|W|m|M|y|Y)?/g,l=h.exec(i);l;){switch(l[2]||\"d\"){case\"d\":case\"D\":r+=parseInt(l[1],10);break;case\"w\":case\"W\":r+=7*parseInt(l[1],10);break;case\"m\":case\"M\":a+=parseInt(l[1],10),r=Math.min(r,t.datepicker._getDaysInMonth(o,a));break;case\"y\":case\"Y\":o+=parseInt(l[1],10),r=Math.min(r,t.datepicker._getDaysInMonth(o,a))}l=h.exec(i)}return new Date(o,a,r)},a=null==i||\"\"===i?s:\"string\"==typeof i?o(i):\"number\"==typeof i?isNaN(i)?s:n(i):new Date(i.getTime());return a=a&&\"Invalid Date\"==\"\"+a?s:a,a&&(a.setHours(0),a.setMinutes(0),a.setSeconds(0),a.setMilliseconds(0)),this._daylightSavingAdjust(a)},_daylightSavingAdjust:function(t){return t?(t.setHours(t.getHours()>12?t.getHours()+2:0),t):null},_setDate:function(t,e,i){var s=!e,n=t.selectedMonth,o=t.selectedYear,a=this._restrictMinMax(t,this._determineDate(t,e,new Date));t.selectedDay=t.currentDay=a.getDate(),t.drawMonth=t.selectedMonth=t.currentMonth=a.getMonth(),t.drawYear=t.selectedYear=t.currentYear=a.getFullYear(),n===t.selectedMonth&&o===t.selectedYear||i||this._notifyChange(t),this._adjustInstDate(t),t.input&&t.input.val(s?\"\":this._formatDate(t))},_getDate:function(t){var e=!t.currentYear||t.input&&\"\"===t.input.val()?null:this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return e},_attachHandlers:function(e){var i=this._get(e,\"stepMonths\"),s=\"#\"+e.id.replace(/\\\\\\\\/g,\"\\\\\");e.dpDiv.find(\"[data-handler]\").map(function(){var e={prev:function(){t.datepicker._adjustDate(s,-i,\"M\")},next:function(){t.datepicker._adjustDate(s,+i,\"M\")},hide:function(){t.datepicker._hideDatepicker()},today:function(){t.datepicker._gotoToday(s)},selectDay:function(){return t.datepicker._selectDay(s,+this.getAttribute(\"data-month\"),+this.getAttribute(\"data-year\"),this),!1},selectMonth:function(){return t.datepicker._selectMonthYear(s,this,\"M\"),!1},selectYear:function(){return t.datepicker._selectMonthYear(s,this,\"Y\"),!1}};t(this).on(this.getAttribute(\"data-event\"),e[this.getAttribute(\"data-handler\")])})},_generateHTML:function(t){var e,i,s,n,o,a,r,h,l,c,u,d,p,f,g,m,_,v,b,y,w,k,x,C,D,I,T,P,M,S,H,z,O,A,N,W,E,F,L,R=new Date,B=this._daylightSavingAdjust(new Date(R.getFullYear(),R.getMonth(),R.getDate())),Y=this._get(t,\"isRTL\"),j=this._get(t,\"showButtonPanel\"),q=this._get(t,\"hideIfNoPrevNext\"),K=this._get(t,\"navigationAsDateFormat\"),U=this._getNumberOfMonths(t),V=this._get(t,\"showCurrentAtPos\"),$=this._get(t,\"stepMonths\"),X=1!==U[0]||1!==U[1],G=this._daylightSavingAdjust(t.currentDay?new Date(t.currentYear,t.currentMonth,t.currentDay):new Date(9999,9,9)),Q=this._getMinMaxDate(t,\"min\"),J=this._getMinMaxDate(t,\"max\"),Z=t.drawMonth-V,te=t.drawYear;if(0>Z&&(Z+=12,te--),J)for(e=this._daylightSavingAdjust(new Date(J.getFullYear(),J.getMonth()-U[0]*U[1]+1,J.getDate())),e=Q&&Q>e?Q:e;this._daylightSavingAdjust(new Date(te,Z,1))>e;)Z--,0>Z&&(Z=11,te--);for(t.drawMonth=Z,t.drawYear=te,i=this._get(t,\"prevText\"),i=K?this.formatDate(i,this._daylightSavingAdjust(new Date(te,Z-$,1)),this._getFormatConfig(t)):i,s=this._canAdjustMonth(t,-1,te,Z)?\"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='\"+i+\"'><span class='ui-icon ui-icon-circle-triangle-\"+(Y?\"e\":\"w\")+\"'>\"+i+\"</span></a>\":q?\"\":\"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='\"+i+\"'><span class='ui-icon ui-icon-circle-triangle-\"+(Y?\"e\":\"w\")+\"'>\"+i+\"</span></a>\",n=this._get(t,\"nextText\"),n=K?this.formatDate(n,this._daylightSavingAdjust(new Date(te,Z+$,1)),this._getFormatConfig(t)):n,o=this._canAdjustMonth(t,1,te,Z)?\"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='\"+n+\"'><span class='ui-icon ui-icon-circle-triangle-\"+(Y?\"w\":\"e\")+\"'>\"+n+\"</span></a>\":q?\"\":\"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='\"+n+\"'><span class='ui-icon ui-icon-circle-triangle-\"+(Y?\"w\":\"e\")+\"'>\"+n+\"</span></a>\",a=this._get(t,\"currentText\"),r=this._get(t,\"gotoCurrent\")&&t.currentDay?G:B,a=K?this.formatDate(a,r,this._getFormatConfig(t)):a,h=t.inline?\"\":\"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>\"+this._get(t,\"closeText\")+\"</button>\",l=j?\"<div class='ui-datepicker-buttonpane ui-widget-content'>\"+(Y?h:\"\")+(this._isInRange(t,r)?\"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>\"+a+\"</button>\":\"\")+(Y?\"\":h)+\"</div>\":\"\",c=parseInt(this._get(t,\"firstDay\"),10),c=isNaN(c)?0:c,u=this._get(t,\"showWeek\"),d=this._get(t,\"dayNames\"),p=this._get(t,\"dayNamesMin\"),f=this._get(t,\"monthNames\"),g=this._get(t,\"monthNamesShort\"),m=this._get(t,\"beforeShowDay\"),_=this._get(t,\"showOtherMonths\"),v=this._get(t,\"selectOtherMonths\"),b=this._getDefaultDate(t),y=\"\",k=0;U[0]>k;k++){for(x=\"\",this.maxRows=4,C=0;U[1]>C;C++){if(D=this._daylightSavingAdjust(new Date(te,Z,t.selectedDay)),I=\" ui-corner-all\",T=\"\",X){if(T+=\"<div class='ui-datepicker-group\",U[1]>1)switch(C){case 0:T+=\" ui-datepicker-group-first\",I=\" ui-corner-\"+(Y?\"right\":\"left\");break;case U[1]-1:T+=\" ui-datepicker-group-last\",I=\" ui-corner-\"+(Y?\"left\":\"right\");break;default:T+=\" ui-datepicker-group-middle\",I=\"\"}T+=\"'>\"}for(T+=\"<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix\"+I+\"'>\"+(/all|left/.test(I)&&0===k?Y?o:s:\"\")+(/all|right/.test(I)&&0===k?Y?s:o:\"\")+this._generateMonthYearHeader(t,Z,te,Q,J,k>0||C>0,f,g)+\"</div><table class='ui-datepicker-calendar'><thead>\"+\"<tr>\",P=u?\"<th class='ui-datepicker-week-col'>\"+this._get(t,\"weekHeader\")+\"</th>\":\"\",w=0;7>w;w++)M=(w+c)%7,P+=\"<th scope='col'\"+((w+c+6)%7>=5?\" class='ui-datepicker-week-end'\":\"\")+\">\"+\"<span title='\"+d[M]+\"'>\"+p[M]+\"</span></th>\";for(T+=P+\"</tr></thead><tbody>\",S=this._getDaysInMonth(te,Z),te===t.selectedYear&&Z===t.selectedMonth&&(t.selectedDay=Math.min(t.selectedDay,S)),H=(this._getFirstDayOfMonth(te,Z)-c+7)%7,z=Math.ceil((H+S)/7),O=X?this.maxRows>z?this.maxRows:z:z,this.maxRows=O,A=this._daylightSavingAdjust(new Date(te,Z,1-H)),N=0;O>N;N++){for(T+=\"<tr>\",W=u?\"<td class='ui-datepicker-week-col'>\"+this._get(t,\"calculateWeek\")(A)+\"</td>\":\"\",w=0;7>w;w++)E=m?m.apply(t.input?t.input[0]:null,[A]):[!0,\"\"],F=A.getMonth()!==Z,L=F&&!v||!E[0]||Q&&Q>A||J&&A>J,W+=\"<td class='\"+((w+c+6)%7>=5?\" ui-datepicker-week-end\":\"\")+(F?\" ui-datepicker-other-month\":\"\")+(A.getTime()===D.getTime()&&Z===t.selectedMonth&&t._keyEvent||b.getTime()===A.getTime()&&b.getTime()===D.getTime()?\" \"+this._dayOverClass:\"\")+(L?\" \"+this._unselectableClass+\" ui-state-disabled\":\"\")+(F&&!_?\"\":\" \"+E[1]+(A.getTime()===G.getTime()?\" \"+this._currentClass:\"\")+(A.getTime()===B.getTime()?\" ui-datepicker-today\":\"\"))+\"'\"+(F&&!_||!E[2]?\"\":\" title='\"+E[2].replace(/'/g,\"&#39;\")+\"'\")+(L?\"\":\" data-handler='selectDay' data-event='click' data-month='\"+A.getMonth()+\"' data-year='\"+A.getFullYear()+\"'\")+\">\"+(F&&!_?\"&#xa0;\":L?\"<span class='ui-state-default'>\"+A.getDate()+\"</span>\":\"<a class='ui-state-default\"+(A.getTime()===B.getTime()?\" ui-state-highlight\":\"\")+(A.getTime()===G.getTime()?\" ui-state-active\":\"\")+(F?\" ui-priority-secondary\":\"\")+\"' href='#'>\"+A.getDate()+\"</a>\")+\"</td>\",A.setDate(A.getDate()+1),A=this._daylightSavingAdjust(A);T+=W+\"</tr>\"}Z++,Z>11&&(Z=0,te++),T+=\"</tbody></table>\"+(X?\"</div>\"+(U[0]>0&&C===U[1]-1?\"<div class='ui-datepicker-row-break'></div>\":\"\"):\"\"),x+=T}y+=x}return y+=l,t._keyEvent=!1,y},_generateMonthYearHeader:function(t,e,i,s,n,o,a,r){var h,l,c,u,d,p,f,g,m=this._get(t,\"changeMonth\"),_=this._get(t,\"changeYear\"),v=this._get(t,\"showMonthAfterYear\"),b=\"<div class='ui-datepicker-title'>\",y=\"\";if(o||!m)y+=\"<span class='ui-datepicker-month'>\"+a[e]+\"</span>\";else{for(h=s&&s.getFullYear()===i,l=n&&n.getFullYear()===i,y+=\"<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>\",c=0;12>c;c++)(!h||c>=s.getMonth())&&(!l||n.getMonth()>=c)&&(y+=\"<option value='\"+c+\"'\"+(c===e?\" selected='selected'\":\"\")+\">\"+r[c]+\"</option>\");y+=\"</select>\"}if(v||(b+=y+(!o&&m&&_?\"\":\"&#xa0;\")),!t.yearshtml)if(t.yearshtml=\"\",o||!_)b+=\"<span class='ui-datepicker-year'>\"+i+\"</span>\";else{for(u=this._get(t,\"yearRange\").split(\":\"),d=(new Date).getFullYear(),p=function(t){var e=t.match(/c[+\\-].*/)?i+parseInt(t.substring(1),10):t.match(/[+\\-].*/)?d+parseInt(t,10):parseInt(t,10);return isNaN(e)?d:e},f=p(u[0]),g=Math.max(f,p(u[1]||\"\")),f=s?Math.max(f,s.getFullYear()):f,g=n?Math.min(g,n.getFullYear()):g,t.yearshtml+=\"<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>\";g>=f;f++)t.yearshtml+=\"<option value='\"+f+\"'\"+(f===i?\" selected='selected'\":\"\")+\">\"+f+\"</option>\";t.yearshtml+=\"</select>\",b+=t.yearshtml,t.yearshtml=null}return b+=this._get(t,\"yearSuffix\"),v&&(b+=(!o&&m&&_?\"\":\"&#xa0;\")+y),b+=\"</div>\"},_adjustInstDate:function(t,e,i){var s=t.selectedYear+(\"Y\"===i?e:0),n=t.selectedMonth+(\"M\"===i?e:0),o=Math.min(t.selectedDay,this._getDaysInMonth(s,n))+(\"D\"===i?e:0),a=this._restrictMinMax(t,this._daylightSavingAdjust(new Date(s,n,o)));t.selectedDay=a.getDate(),t.drawMonth=t.selectedMonth=a.getMonth(),t.drawYear=t.selectedYear=a.getFullYear(),(\"M\"===i||\"Y\"===i)&&this._notifyChange(t)},_restrictMinMax:function(t,e){var i=this._getMinMaxDate(t,\"min\"),s=this._getMinMaxDate(t,\"max\"),n=i&&i>e?i:e;return s&&n>s?s:n},_notifyChange:function(t){var e=this._get(t,\"onChangeMonthYear\");e&&e.apply(t.input?t.input[0]:null,[t.selectedYear,t.selectedMonth+1,t])},_getNumberOfMonths:function(t){var e=this._get(t,\"numberOfMonths\");return null==e?[1,1]:\"number\"==typeof e?[1,e]:e},_getMinMaxDate:function(t,e){return this._determineDate(t,this._get(t,e+\"Date\"),null)},_getDaysInMonth:function(t,e){return 32-this._daylightSavingAdjust(new Date(t,e,32)).getDate()},_getFirstDayOfMonth:function(t,e){return new Date(t,e,1).getDay()},_canAdjustMonth:function(t,e,i,s){var n=this._getNumberOfMonths(t),o=this._daylightSavingAdjust(new Date(i,s+(0>e?e:n[0]*n[1]),1));return 0>e&&o.setDate(this._getDaysInMonth(o.getFullYear(),o.getMonth())),this._isInRange(t,o)},_isInRange:function(t,e){var i,s,n=this._getMinMaxDate(t,\"min\"),o=this._getMinMaxDate(t,\"max\"),a=null,r=null,h=this._get(t,\"yearRange\");return h&&(i=h.split(\":\"),s=(new Date).getFullYear(),a=parseInt(i[0],10),r=parseInt(i[1],10),i[0].match(/[+\\-].*/)&&(a+=s),i[1].match(/[+\\-].*/)&&(r+=s)),(!n||e.getTime()>=n.getTime())&&(!o||e.getTime()<=o.getTime())&&(!a||e.getFullYear()>=a)&&(!r||r>=e.getFullYear())},_getFormatConfig:function(t){var e=this._get(t,\"shortYearCutoff\");return e=\"string\"!=typeof e?e:(new Date).getFullYear()%100+parseInt(e,10),{shortYearCutoff:e,dayNamesShort:this._get(t,\"dayNamesShort\"),dayNames:this._get(t,\"dayNames\"),monthNamesShort:this._get(t,\"monthNamesShort\"),monthNames:this._get(t,\"monthNames\")}},_formatDate:function(t,e,i,s){e||(t.currentDay=t.selectedDay,t.currentMonth=t.selectedMonth,t.currentYear=t.selectedYear);var n=e?\"object\"==typeof e?e:this._daylightSavingAdjust(new Date(s,i,e)):this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return this.formatDate(this._get(t,\"dateFormat\"),n,this._getFormatConfig(t))}}),t.fn.datepicker=function(e){if(!this.length)return this;t.datepicker.initialized||(t(document).on(\"mousedown\",t.datepicker._checkExternalClick),t.datepicker.initialized=!0),0===t(\"#\"+t.datepicker._mainDivId).length&&t(\"body\").append(t.datepicker.dpDiv);var i=Array.prototype.slice.call(arguments,1);return\"string\"!=typeof e||\"isDisabled\"!==e&&\"getDate\"!==e&&\"widget\"!==e?\"option\"===e&&2===arguments.length&&\"string\"==typeof arguments[1]?t.datepicker[\"_\"+e+\"Datepicker\"].apply(t.datepicker,[this[0]].concat(i)):this.each(function(){\"string\"==typeof e?t.datepicker[\"_\"+e+\"Datepicker\"].apply(t.datepicker,[this].concat(i)):t.datepicker._attachDatepicker(this,e)}):t.datepicker[\"_\"+e+\"Datepicker\"].apply(t.datepicker,[this[0]].concat(i))},t.datepicker=new s,t.datepicker.initialized=!1,t.datepicker.uuid=(new Date).getTime(),t.datepicker.version=\"1.12.1\",t.datepicker,t.ui.ie=!!/msie [\\w.]+/.exec(navigator.userAgent.toLowerCase());var _=!1;t(document).on(\"mouseup\",function(){_=!1}),t.widget(\"ui.mouse\",{version:\"1.12.1\",options:{cancel:\"input, textarea, button, select, option\",distance:1,delay:0},_mouseInit:function(){var e=this;this.element.on(\"mousedown.\"+this.widgetName,function(t){return e._mouseDown(t)}).on(\"click.\"+this.widgetName,function(i){return!0===t.data(i.target,e.widgetName+\".preventClickEvent\")?(t.removeData(i.target,e.widgetName+\".preventClickEvent\"),i.stopImmediatePropagation(),!1):void 0}),this.started=!1},_mouseDestroy:function(){this.element.off(\".\"+this.widgetName),this._mouseMoveDelegate&&this.document.off(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).off(\"mouseup.\"+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(e){if(!_){this._mouseMoved=!1,this._mouseStarted&&this._mouseUp(e),this._mouseDownEvent=e;var i=this,s=1===e.which,n=\"string\"==typeof this.options.cancel&&e.target.nodeName?t(e.target).closest(this.options.cancel).length:!1;return s&&!n&&this._mouseCapture(e)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){i.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(e)!==!1,!this._mouseStarted)?(e.preventDefault(),!0):(!0===t.data(e.target,this.widgetName+\".preventClickEvent\")&&t.removeData(e.target,this.widgetName+\".preventClickEvent\"),this._mouseMoveDelegate=function(t){return i._mouseMove(t)},this._mouseUpDelegate=function(t){return i._mouseUp(t)},this.document.on(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).on(\"mouseup.\"+this.widgetName,this._mouseUpDelegate),e.preventDefault(),_=!0,!0)):!0}},_mouseMove:function(e){if(this._mouseMoved){if(t.ui.ie&&(!document.documentMode||9>document.documentMode)&&!e.button)return this._mouseUp(e);if(!e.which)if(e.originalEvent.altKey||e.originalEvent.ctrlKey||e.originalEvent.metaKey||e.originalEvent.shiftKey)this.ignoreMissingWhich=!0;else if(!this.ignoreMissingWhich)return this._mouseUp(e)}return(e.which||e.button)&&(this._mouseMoved=!0),this._mouseStarted?(this._mouseDrag(e),e.preventDefault()):(this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,e)!==!1,this._mouseStarted?this._mouseDrag(e):this._mouseUp(e)),!this._mouseStarted)},_mouseUp:function(e){this.document.off(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).off(\"mouseup.\"+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,e.target===this._mouseDownEvent.target&&t.data(e.target,this.widgetName+\".preventClickEvent\",!0),this._mouseStop(e)),this._mouseDelayTimer&&(clearTimeout(this._mouseDelayTimer),delete this._mouseDelayTimer),this.ignoreMissingWhich=!1,_=!1,e.preventDefault()},_mouseDistanceMet:function(t){return Math.max(Math.abs(this._mouseDownEvent.pageX-t.pageX),Math.abs(this._mouseDownEvent.pageY-t.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}}),t.ui.plugin={add:function(e,i,s){var n,o=t.ui[e].prototype;for(n in s)o.plugins[n]=o.plugins[n]||[],o.plugins[n].push([i,s[n]])},call:function(t,e,i,s){var n,o=t.plugins[e];if(o&&(s||t.element[0].parentNode&&11!==t.element[0].parentNode.nodeType))for(n=0;o.length>n;n++)t.options[o[n][0]]&&o[n][1].apply(t.element,i)}},t.ui.safeBlur=function(e){e&&\"body\"!==e.nodeName.toLowerCase()&&t(e).trigger(\"blur\")},t.widget(\"ui.draggable\",t.ui.mouse,{version:\"1.12.1\",widgetEventPrefix:\"drag\",options:{addClasses:!0,appendTo:\"parent\",axis:!1,connectToSortable:!1,containment:!1,cursor:\"auto\",cursorAt:!1,grid:!1,handle:!1,helper:\"original\",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:\"default\",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:\"both\",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){\"original\"===this.options.helper&&this._setPositionRelative(),this.options.addClasses&&this._addClass(\"ui-draggable\"),this._setHandleClassName(),this._mouseInit()},_setOption:function(t,e){this._super(t,e),\"handle\"===t&&(this._removeHandleClassName(),this._setHandleClassName())},_destroy:function(){return(this.helper||this.element).is(\".ui-draggable-dragging\")?(this.destroyOnClear=!0,void 0):(this._removeHandleClassName(),this._mouseDestroy(),void 0)},_mouseCapture:function(e){var i=this.options;return this.helper||i.disabled||t(e.target).closest(\".ui-resizable-handle\").length>0?!1:(this.handle=this._getHandle(e),this.handle?(this._blurActiveElement(e),this._blockFrames(i.iframeFix===!0?\"iframe\":i.iframeFix),!0):!1)},_blockFrames:function(e){this.iframeBlocks=this.document.find(e).map(function(){var e=t(this);return t(\"<div>\").css(\"position\",\"absolute\").appendTo(e.parent()).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).offset(e.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_blurActiveElement:function(e){var i=t.ui.safeActiveElement(this.document[0]),s=t(e.target);s.closest(i).length||t.ui.safeBlur(i)},_mouseStart:function(e){var i=this.options;return this.helper=this._createHelper(e),this._addClass(this.helper,\"ui-draggable-dragging\"),this._cacheHelperProportions(),t.ui.ddmanager&&(t.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css(\"position\"),this.scrollParent=this.helper.scrollParent(!0),this.offsetParent=this.helper.offsetParent(),this.hasFixedAncestor=this.helper.parents().filter(function(){return\"fixed\"===t(this).css(\"position\")}).length>0,this.positionAbs=this.element.offset(),this._refreshOffsets(e),this.originalPosition=this.position=this._generatePosition(e,!1),this.originalPageX=e.pageX,this.originalPageY=e.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),this._trigger(\"start\",e)===!1?(this._clear(),!1):(this._cacheHelperProportions(),t.ui.ddmanager&&!i.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this._mouseDrag(e,!0),t.ui.ddmanager&&t.ui.ddmanager.dragStart(this,e),!0)},_refreshOffsets:function(t){this.offset={top:this.positionAbs.top-this.margins.top,left:this.positionAbs.left-this.margins.left,scroll:!1,parent:this._getParentOffset(),relative:this._getRelativeOffset()},this.offset.click={left:t.pageX-this.offset.left,top:t.pageY-this.offset.top}},_mouseDrag:function(e,i){if(this.hasFixedAncestor&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(e,!0),this.positionAbs=this._convertPositionTo(\"absolute\"),!i){var s=this._uiHash();if(this._trigger(\"drag\",e,s)===!1)return this._mouseUp(new t.Event(\"mouseup\",e)),!1;this.position=s.position}return this.helper[0].style.left=this.position.left+\"px\",this.helper[0].style.top=this.position.top+\"px\",t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),!1},_mouseStop:function(e){var i=this,s=!1;return t.ui.ddmanager&&!this.options.dropBehaviour&&(s=t.ui.ddmanager.drop(this,e)),this.dropped&&(s=this.dropped,this.dropped=!1),\"invalid\"===this.options.revert&&!s||\"valid\"===this.options.revert&&s||this.options.revert===!0||t.isFunction(this.options.revert)&&this.options.revert.call(this.element,s)?t(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){i._trigger(\"stop\",e)!==!1&&i._clear()}):this._trigger(\"stop\",e)!==!1&&this._clear(),!1},_mouseUp:function(e){return this._unblockFrames(),t.ui.ddmanager&&t.ui.ddmanager.dragStop(this,e),this.handleElement.is(e.target)&&this.element.trigger(\"focus\"),t.ui.mouse.prototype._mouseUp.call(this,e)},cancel:function(){return this.helper.is(\".ui-draggable-dragging\")?this._mouseUp(new t.Event(\"mouseup\",{target:this.element[0]})):this._clear(),this},_getHandle:function(e){return this.options.handle?!!t(e.target).closest(this.element.find(this.options.handle)).length:!0},_setHandleClassName:function(){this.handleElement=this.options.handle?this.element.find(this.options.handle):this.element,this._addClass(this.handleElement,\"ui-draggable-handle\")},_removeHandleClassName:function(){this._removeClass(this.handleElement,\"ui-draggable-handle\")},_createHelper:function(e){var i=this.options,s=t.isFunction(i.helper),n=s?t(i.helper.apply(this.element[0],[e])):\"clone\"===i.helper?this.element.clone().removeAttr(\"id\"):this.element;return n.parents(\"body\").length||n.appendTo(\"parent\"===i.appendTo?this.element[0].parentNode:i.appendTo),s&&n[0]===this.element[0]&&this._setPositionRelative(),n[0]===this.element[0]||/(fixed|absolute)/.test(n.css(\"position\"))||n.css(\"position\",\"absolute\"),n},_setPositionRelative:function(){/^(?:r|a|f)/.test(this.element.css(\"position\"))||(this.element[0].style.position=\"relative\")},_adjustOffsetFromHelper:function(e){\"string\"==typeof e&&(e=e.split(\" \")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),\"left\"in e&&(this.offset.click.left=e.left+this.margins.left),\"right\"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),\"top\"in e&&(this.offset.click.top=e.top+this.margins.top),\"bottom\"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_isRootNode:function(t){return/(html|body)/i.test(t.tagName)||t===this.document[0]},_getParentOffset:function(){var e=this.offsetParent.offset(),i=this.document[0];return\"absolute\"===this.cssPosition&&this.scrollParent[0]!==i&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),this._isRootNode(this.offsetParent[0])&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css(\"borderTopWidth\"),10)||0),left:e.left+(parseInt(this.offsetParent.css(\"borderLeftWidth\"),10)||0)}},_getRelativeOffset:function(){if(\"relative\"!==this.cssPosition)return{top:0,left:0};var t=this.element.position(),e=this._isRootNode(this.scrollParent[0]);return{top:t.top-(parseInt(this.helper.css(\"top\"),10)||0)+(e?0:this.scrollParent.scrollTop()),left:t.left-(parseInt(this.helper.css(\"left\"),10)||0)+(e?0:this.scrollParent.scrollLeft())}\n},_cacheMargins:function(){this.margins={left:parseInt(this.element.css(\"marginLeft\"),10)||0,top:parseInt(this.element.css(\"marginTop\"),10)||0,right:parseInt(this.element.css(\"marginRight\"),10)||0,bottom:parseInt(this.element.css(\"marginBottom\"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,s,n=this.options,o=this.document[0];return this.relativeContainer=null,n.containment?\"window\"===n.containment?(this.containment=[t(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,t(window).scrollLeft()+t(window).width()-this.helperProportions.width-this.margins.left,t(window).scrollTop()+(t(window).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],void 0):\"document\"===n.containment?(this.containment=[0,0,t(o).width()-this.helperProportions.width-this.margins.left,(t(o).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],void 0):n.containment.constructor===Array?(this.containment=n.containment,void 0):(\"parent\"===n.containment&&(n.containment=this.helper[0].parentNode),i=t(n.containment),s=i[0],s&&(e=/(scroll|auto)/.test(i.css(\"overflow\")),this.containment=[(parseInt(i.css(\"borderLeftWidth\"),10)||0)+(parseInt(i.css(\"paddingLeft\"),10)||0),(parseInt(i.css(\"borderTopWidth\"),10)||0)+(parseInt(i.css(\"paddingTop\"),10)||0),(e?Math.max(s.scrollWidth,s.offsetWidth):s.offsetWidth)-(parseInt(i.css(\"borderRightWidth\"),10)||0)-(parseInt(i.css(\"paddingRight\"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(e?Math.max(s.scrollHeight,s.offsetHeight):s.offsetHeight)-(parseInt(i.css(\"borderBottomWidth\"),10)||0)-(parseInt(i.css(\"paddingBottom\"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relativeContainer=i),void 0):(this.containment=null,void 0)},_convertPositionTo:function(t,e){e||(e=this.position);var i=\"absolute\"===t?1:-1,s=this._isRootNode(this.scrollParent[0]);return{top:e.top+this.offset.relative.top*i+this.offset.parent.top*i-(\"fixed\"===this.cssPosition?-this.offset.scroll.top:s?0:this.offset.scroll.top)*i,left:e.left+this.offset.relative.left*i+this.offset.parent.left*i-(\"fixed\"===this.cssPosition?-this.offset.scroll.left:s?0:this.offset.scroll.left)*i}},_generatePosition:function(t,e){var i,s,n,o,a=this.options,r=this._isRootNode(this.scrollParent[0]),h=t.pageX,l=t.pageY;return r&&this.offset.scroll||(this.offset.scroll={top:this.scrollParent.scrollTop(),left:this.scrollParent.scrollLeft()}),e&&(this.containment&&(this.relativeContainer?(s=this.relativeContainer.offset(),i=[this.containment[0]+s.left,this.containment[1]+s.top,this.containment[2]+s.left,this.containment[3]+s.top]):i=this.containment,t.pageX-this.offset.click.left<i[0]&&(h=i[0]+this.offset.click.left),t.pageY-this.offset.click.top<i[1]&&(l=i[1]+this.offset.click.top),t.pageX-this.offset.click.left>i[2]&&(h=i[2]+this.offset.click.left),t.pageY-this.offset.click.top>i[3]&&(l=i[3]+this.offset.click.top)),a.grid&&(n=a.grid[1]?this.originalPageY+Math.round((l-this.originalPageY)/a.grid[1])*a.grid[1]:this.originalPageY,l=i?n-this.offset.click.top>=i[1]||n-this.offset.click.top>i[3]?n:n-this.offset.click.top>=i[1]?n-a.grid[1]:n+a.grid[1]:n,o=a.grid[0]?this.originalPageX+Math.round((h-this.originalPageX)/a.grid[0])*a.grid[0]:this.originalPageX,h=i?o-this.offset.click.left>=i[0]||o-this.offset.click.left>i[2]?o:o-this.offset.click.left>=i[0]?o-a.grid[0]:o+a.grid[0]:o),\"y\"===a.axis&&(h=this.originalPageX),\"x\"===a.axis&&(l=this.originalPageY)),{top:l-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(\"fixed\"===this.cssPosition?-this.offset.scroll.top:r?0:this.offset.scroll.top),left:h-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(\"fixed\"===this.cssPosition?-this.offset.scroll.left:r?0:this.offset.scroll.left)}},_clear:function(){this._removeClass(this.helper,\"ui-draggable-dragging\"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1,this.destroyOnClear&&this.destroy()},_trigger:function(e,i,s){return s=s||this._uiHash(),t.ui.plugin.call(this,e,[i,s,this],!0),/^(drag|start|stop)/.test(e)&&(this.positionAbs=this._convertPositionTo(\"absolute\"),s.offset=this.positionAbs),t.Widget.prototype._trigger.call(this,e,i,s)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),t.ui.plugin.add(\"draggable\",\"connectToSortable\",{start:function(e,i,s){var n=t.extend({},i,{item:s.element});s.sortables=[],t(s.options.connectToSortable).each(function(){var i=t(this).sortable(\"instance\");i&&!i.options.disabled&&(s.sortables.push(i),i.refreshPositions(),i._trigger(\"activate\",e,n))})},stop:function(e,i,s){var n=t.extend({},i,{item:s.element});s.cancelHelperRemoval=!1,t.each(s.sortables,function(){var t=this;t.isOver?(t.isOver=0,s.cancelHelperRemoval=!0,t.cancelHelperRemoval=!1,t._storedCSS={position:t.placeholder.css(\"position\"),top:t.placeholder.css(\"top\"),left:t.placeholder.css(\"left\")},t._mouseStop(e),t.options.helper=t.options._helper):(t.cancelHelperRemoval=!0,t._trigger(\"deactivate\",e,n))})},drag:function(e,i,s){t.each(s.sortables,function(){var n=!1,o=this;o.positionAbs=s.positionAbs,o.helperProportions=s.helperProportions,o.offset.click=s.offset.click,o._intersectsWith(o.containerCache)&&(n=!0,t.each(s.sortables,function(){return this.positionAbs=s.positionAbs,this.helperProportions=s.helperProportions,this.offset.click=s.offset.click,this!==o&&this._intersectsWith(this.containerCache)&&t.contains(o.element[0],this.element[0])&&(n=!1),n})),n?(o.isOver||(o.isOver=1,s._parent=i.helper.parent(),o.currentItem=i.helper.appendTo(o.element).data(\"ui-sortable-item\",!0),o.options._helper=o.options.helper,o.options.helper=function(){return i.helper[0]},e.target=o.currentItem[0],o._mouseCapture(e,!0),o._mouseStart(e,!0,!0),o.offset.click.top=s.offset.click.top,o.offset.click.left=s.offset.click.left,o.offset.parent.left-=s.offset.parent.left-o.offset.parent.left,o.offset.parent.top-=s.offset.parent.top-o.offset.parent.top,s._trigger(\"toSortable\",e),s.dropped=o.element,t.each(s.sortables,function(){this.refreshPositions()}),s.currentItem=s.element,o.fromOutside=s),o.currentItem&&(o._mouseDrag(e),i.position=o.position)):o.isOver&&(o.isOver=0,o.cancelHelperRemoval=!0,o.options._revert=o.options.revert,o.options.revert=!1,o._trigger(\"out\",e,o._uiHash(o)),o._mouseStop(e,!0),o.options.revert=o.options._revert,o.options.helper=o.options._helper,o.placeholder&&o.placeholder.remove(),i.helper.appendTo(s._parent),s._refreshOffsets(e),i.position=s._generatePosition(e,!0),s._trigger(\"fromSortable\",e),s.dropped=!1,t.each(s.sortables,function(){this.refreshPositions()}))})}}),t.ui.plugin.add(\"draggable\",\"cursor\",{start:function(e,i,s){var n=t(\"body\"),o=s.options;n.css(\"cursor\")&&(o._cursor=n.css(\"cursor\")),n.css(\"cursor\",o.cursor)},stop:function(e,i,s){var n=s.options;n._cursor&&t(\"body\").css(\"cursor\",n._cursor)}}),t.ui.plugin.add(\"draggable\",\"opacity\",{start:function(e,i,s){var n=t(i.helper),o=s.options;n.css(\"opacity\")&&(o._opacity=n.css(\"opacity\")),n.css(\"opacity\",o.opacity)},stop:function(e,i,s){var n=s.options;n._opacity&&t(i.helper).css(\"opacity\",n._opacity)}}),t.ui.plugin.add(\"draggable\",\"scroll\",{start:function(t,e,i){i.scrollParentNotHidden||(i.scrollParentNotHidden=i.helper.scrollParent(!1)),i.scrollParentNotHidden[0]!==i.document[0]&&\"HTML\"!==i.scrollParentNotHidden[0].tagName&&(i.overflowOffset=i.scrollParentNotHidden.offset())},drag:function(e,i,s){var n=s.options,o=!1,a=s.scrollParentNotHidden[0],r=s.document[0];a!==r&&\"HTML\"!==a.tagName?(n.axis&&\"x\"===n.axis||(s.overflowOffset.top+a.offsetHeight-e.pageY<n.scrollSensitivity?a.scrollTop=o=a.scrollTop+n.scrollSpeed:e.pageY-s.overflowOffset.top<n.scrollSensitivity&&(a.scrollTop=o=a.scrollTop-n.scrollSpeed)),n.axis&&\"y\"===n.axis||(s.overflowOffset.left+a.offsetWidth-e.pageX<n.scrollSensitivity?a.scrollLeft=o=a.scrollLeft+n.scrollSpeed:e.pageX-s.overflowOffset.left<n.scrollSensitivity&&(a.scrollLeft=o=a.scrollLeft-n.scrollSpeed))):(n.axis&&\"x\"===n.axis||(e.pageY-t(r).scrollTop()<n.scrollSensitivity?o=t(r).scrollTop(t(r).scrollTop()-n.scrollSpeed):t(window).height()-(e.pageY-t(r).scrollTop())<n.scrollSensitivity&&(o=t(r).scrollTop(t(r).scrollTop()+n.scrollSpeed))),n.axis&&\"y\"===n.axis||(e.pageX-t(r).scrollLeft()<n.scrollSensitivity?o=t(r).scrollLeft(t(r).scrollLeft()-n.scrollSpeed):t(window).width()-(e.pageX-t(r).scrollLeft())<n.scrollSensitivity&&(o=t(r).scrollLeft(t(r).scrollLeft()+n.scrollSpeed)))),o!==!1&&t.ui.ddmanager&&!n.dropBehaviour&&t.ui.ddmanager.prepareOffsets(s,e)}}),t.ui.plugin.add(\"draggable\",\"snap\",{start:function(e,i,s){var n=s.options;s.snapElements=[],t(n.snap.constructor!==String?n.snap.items||\":data(ui-draggable)\":n.snap).each(function(){var e=t(this),i=e.offset();this!==s.element[0]&&s.snapElements.push({item:this,width:e.outerWidth(),height:e.outerHeight(),top:i.top,left:i.left})})},drag:function(e,i,s){var n,o,a,r,h,l,c,u,d,p,f=s.options,g=f.snapTolerance,m=i.offset.left,_=m+s.helperProportions.width,v=i.offset.top,b=v+s.helperProportions.height;for(d=s.snapElements.length-1;d>=0;d--)h=s.snapElements[d].left-s.margins.left,l=h+s.snapElements[d].width,c=s.snapElements[d].top-s.margins.top,u=c+s.snapElements[d].height,h-g>_||m>l+g||c-g>b||v>u+g||!t.contains(s.snapElements[d].item.ownerDocument,s.snapElements[d].item)?(s.snapElements[d].snapping&&s.options.snap.release&&s.options.snap.release.call(s.element,e,t.extend(s._uiHash(),{snapItem:s.snapElements[d].item})),s.snapElements[d].snapping=!1):(\"inner\"!==f.snapMode&&(n=g>=Math.abs(c-b),o=g>=Math.abs(u-v),a=g>=Math.abs(h-_),r=g>=Math.abs(l-m),n&&(i.position.top=s._convertPositionTo(\"relative\",{top:c-s.helperProportions.height,left:0}).top),o&&(i.position.top=s._convertPositionTo(\"relative\",{top:u,left:0}).top),a&&(i.position.left=s._convertPositionTo(\"relative\",{top:0,left:h-s.helperProportions.width}).left),r&&(i.position.left=s._convertPositionTo(\"relative\",{top:0,left:l}).left)),p=n||o||a||r,\"outer\"!==f.snapMode&&(n=g>=Math.abs(c-v),o=g>=Math.abs(u-b),a=g>=Math.abs(h-m),r=g>=Math.abs(l-_),n&&(i.position.top=s._convertPositionTo(\"relative\",{top:c,left:0}).top),o&&(i.position.top=s._convertPositionTo(\"relative\",{top:u-s.helperProportions.height,left:0}).top),a&&(i.position.left=s._convertPositionTo(\"relative\",{top:0,left:h}).left),r&&(i.position.left=s._convertPositionTo(\"relative\",{top:0,left:l-s.helperProportions.width}).left)),!s.snapElements[d].snapping&&(n||o||a||r||p)&&s.options.snap.snap&&s.options.snap.snap.call(s.element,e,t.extend(s._uiHash(),{snapItem:s.snapElements[d].item})),s.snapElements[d].snapping=n||o||a||r||p)}}),t.ui.plugin.add(\"draggable\",\"stack\",{start:function(e,i,s){var n,o=s.options,a=t.makeArray(t(o.stack)).sort(function(e,i){return(parseInt(t(e).css(\"zIndex\"),10)||0)-(parseInt(t(i).css(\"zIndex\"),10)||0)});a.length&&(n=parseInt(t(a[0]).css(\"zIndex\"),10)||0,t(a).each(function(e){t(this).css(\"zIndex\",n+e)}),this.css(\"zIndex\",n+a.length))}}),t.ui.plugin.add(\"draggable\",\"zIndex\",{start:function(e,i,s){var n=t(i.helper),o=s.options;n.css(\"zIndex\")&&(o._zIndex=n.css(\"zIndex\")),n.css(\"zIndex\",o.zIndex)},stop:function(e,i,s){var n=s.options;n._zIndex&&t(i.helper).css(\"zIndex\",n._zIndex)}}),t.ui.draggable,t.widget(\"ui.resizable\",t.ui.mouse,{version:\"1.12.1\",widgetEventPrefix:\"resize\",options:{alsoResize:!1,animate:!1,animateDuration:\"slow\",animateEasing:\"swing\",aspectRatio:!1,autoHide:!1,classes:{\"ui-resizable-se\":\"ui-icon ui-icon-gripsmall-diagonal-se\"},containment:!1,ghost:!1,grid:!1,handles:\"e,s,se\",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_num:function(t){return parseFloat(t)||0},_isNumber:function(t){return!isNaN(parseFloat(t))},_hasScroll:function(e,i){if(\"hidden\"===t(e).css(\"overflow\"))return!1;var s=i&&\"left\"===i?\"scrollLeft\":\"scrollTop\",n=!1;return e[s]>0?!0:(e[s]=1,n=e[s]>0,e[s]=0,n)},_create:function(){var e,i=this.options,s=this;this._addClass(\"ui-resizable\"),t.extend(this,{_aspectRatio:!!i.aspectRatio,aspectRatio:i.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:i.helper||i.ghost||i.animate?i.helper||\"ui-resizable-helper\":null}),this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i)&&(this.element.wrap(t(\"<div class='ui-wrapper' style='overflow: hidden;'></div>\").css({position:this.element.css(\"position\"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css(\"top\"),left:this.element.css(\"left\")})),this.element=this.element.parent().data(\"ui-resizable\",this.element.resizable(\"instance\")),this.elementIsWrapper=!0,e={marginTop:this.originalElement.css(\"marginTop\"),marginRight:this.originalElement.css(\"marginRight\"),marginBottom:this.originalElement.css(\"marginBottom\"),marginLeft:this.originalElement.css(\"marginLeft\")},this.element.css(e),this.originalElement.css(\"margin\",0),this.originalResizeStyle=this.originalElement.css(\"resize\"),this.originalElement.css(\"resize\",\"none\"),this._proportionallyResizeElements.push(this.originalElement.css({position:\"static\",zoom:1,display:\"block\"})),this.originalElement.css(e),this._proportionallyResize()),this._setupHandles(),i.autoHide&&t(this.element).on(\"mouseenter\",function(){i.disabled||(s._removeClass(\"ui-resizable-autohide\"),s._handles.show())}).on(\"mouseleave\",function(){i.disabled||s.resizing||(s._addClass(\"ui-resizable-autohide\"),s._handles.hide())}),this._mouseInit()},_destroy:function(){this._mouseDestroy();var e,i=function(e){t(e).removeData(\"resizable\").removeData(\"ui-resizable\").off(\".resizable\").find(\".ui-resizable-handle\").remove()};return this.elementIsWrapper&&(i(this.element),e=this.element,this.originalElement.css({position:e.css(\"position\"),width:e.outerWidth(),height:e.outerHeight(),top:e.css(\"top\"),left:e.css(\"left\")}).insertAfter(e),e.remove()),this.originalElement.css(\"resize\",this.originalResizeStyle),i(this.originalElement),this},_setOption:function(t,e){switch(this._super(t,e),t){case\"handles\":this._removeHandles(),this._setupHandles();break;default:}},_setupHandles:function(){var e,i,s,n,o,a=this.options,r=this;if(this.handles=a.handles||(t(\".ui-resizable-handle\",this.element).length?{n:\".ui-resizable-n\",e:\".ui-resizable-e\",s:\".ui-resizable-s\",w:\".ui-resizable-w\",se:\".ui-resizable-se\",sw:\".ui-resizable-sw\",ne:\".ui-resizable-ne\",nw:\".ui-resizable-nw\"}:\"e,s,se\"),this._handles=t(),this.handles.constructor===String)for(\"all\"===this.handles&&(this.handles=\"n,e,s,w,se,sw,ne,nw\"),s=this.handles.split(\",\"),this.handles={},i=0;s.length>i;i++)e=t.trim(s[i]),n=\"ui-resizable-\"+e,o=t(\"<div>\"),this._addClass(o,\"ui-resizable-handle \"+n),o.css({zIndex:a.zIndex}),this.handles[e]=\".ui-resizable-\"+e,this.element.append(o);this._renderAxis=function(e){var i,s,n,o;e=e||this.element;for(i in this.handles)this.handles[i].constructor===String?this.handles[i]=this.element.children(this.handles[i]).first().show():(this.handles[i].jquery||this.handles[i].nodeType)&&(this.handles[i]=t(this.handles[i]),this._on(this.handles[i],{mousedown:r._mouseDown})),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i)&&(s=t(this.handles[i],this.element),o=/sw|ne|nw|se|n|s/.test(i)?s.outerHeight():s.outerWidth(),n=[\"padding\",/ne|nw|n/.test(i)?\"Top\":/se|sw|s/.test(i)?\"Bottom\":/^e$/.test(i)?\"Right\":\"Left\"].join(\"\"),e.css(n,o),this._proportionallyResize()),this._handles=this._handles.add(this.handles[i])},this._renderAxis(this.element),this._handles=this._handles.add(this.element.find(\".ui-resizable-handle\")),this._handles.disableSelection(),this._handles.on(\"mouseover\",function(){r.resizing||(this.className&&(o=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),r.axis=o&&o[1]?o[1]:\"se\")}),a.autoHide&&(this._handles.hide(),this._addClass(\"ui-resizable-autohide\"))},_removeHandles:function(){this._handles.remove()},_mouseCapture:function(e){var i,s,n=!1;for(i in this.handles)s=t(this.handles[i])[0],(s===e.target||t.contains(s,e.target))&&(n=!0);return!this.options.disabled&&n},_mouseStart:function(e){var i,s,n,o=this.options,a=this.element;return this.resizing=!0,this._renderProxy(),i=this._num(this.helper.css(\"left\")),s=this._num(this.helper.css(\"top\")),o.containment&&(i+=t(o.containment).scrollLeft()||0,s+=t(o.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:i,top:s},this.size=this._helper?{width:this.helper.width(),height:this.helper.height()}:{width:a.width(),height:a.height()},this.originalSize=this._helper?{width:a.outerWidth(),height:a.outerHeight()}:{width:a.width(),height:a.height()},this.sizeDiff={width:a.outerWidth()-a.width(),height:a.outerHeight()-a.height()},this.originalPosition={left:i,top:s},this.originalMousePosition={left:e.pageX,top:e.pageY},this.aspectRatio=\"number\"==typeof o.aspectRatio?o.aspectRatio:this.originalSize.width/this.originalSize.height||1,n=t(\".ui-resizable-\"+this.axis).css(\"cursor\"),t(\"body\").css(\"cursor\",\"auto\"===n?this.axis+\"-resize\":n),this._addClass(\"ui-resizable-resizing\"),this._propagate(\"start\",e),!0},_mouseDrag:function(e){var i,s,n=this.originalMousePosition,o=this.axis,a=e.pageX-n.left||0,r=e.pageY-n.top||0,h=this._change[o];return this._updatePrevProperties(),h?(i=h.apply(this,[e,a,r]),this._updateVirtualBoundaries(e.shiftKey),(this._aspectRatio||e.shiftKey)&&(i=this._updateRatio(i,e)),i=this._respectSize(i,e),this._updateCache(i),this._propagate(\"resize\",e),s=this._applyChanges(),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),t.isEmptyObject(s)||(this._updatePrevProperties(),this._trigger(\"resize\",e,this.ui()),this._applyChanges()),!1):!1},_mouseStop:function(e){this.resizing=!1;var i,s,n,o,a,r,h,l=this.options,c=this;return this._helper&&(i=this._proportionallyResizeElements,s=i.length&&/textarea/i.test(i[0].nodeName),n=s&&this._hasScroll(i[0],\"left\")?0:c.sizeDiff.height,o=s?0:c.sizeDiff.width,a={width:c.helper.width()-o,height:c.helper.height()-n},r=parseFloat(c.element.css(\"left\"))+(c.position.left-c.originalPosition.left)||null,h=parseFloat(c.element.css(\"top\"))+(c.position.top-c.originalPosition.top)||null,l.animate||this.element.css(t.extend(a,{top:h,left:r})),c.helper.height(c.size.height),c.helper.width(c.size.width),this._helper&&!l.animate&&this._proportionallyResize()),t(\"body\").css(\"cursor\",\"auto\"),this._removeClass(\"ui-resizable-resizing\"),this._propagate(\"stop\",e),this._helper&&this.helper.remove(),!1},_updatePrevProperties:function(){this.prevPosition={top:this.position.top,left:this.position.left},this.prevSize={width:this.size.width,height:this.size.height}},_applyChanges:function(){var t={};return this.position.top!==this.prevPosition.top&&(t.top=this.position.top+\"px\"),this.position.left!==this.prevPosition.left&&(t.left=this.position.left+\"px\"),this.size.width!==this.prevSize.width&&(t.width=this.size.width+\"px\"),this.size.height!==this.prevSize.height&&(t.height=this.size.height+\"px\"),this.helper.css(t),t},_updateVirtualBoundaries:function(t){var e,i,s,n,o,a=this.options;o={minWidth:this._isNumber(a.minWidth)?a.minWidth:0,maxWidth:this._isNumber(a.maxWidth)?a.maxWidth:1/0,minHeight:this._isNumber(a.minHeight)?a.minHeight:0,maxHeight:this._isNumber(a.maxHeight)?a.maxHeight:1/0},(this._aspectRatio||t)&&(e=o.minHeight*this.aspectRatio,s=o.minWidth/this.aspectRatio,i=o.maxHeight*this.aspectRatio,n=o.maxWidth/this.aspectRatio,e>o.minWidth&&(o.minWidth=e),s>o.minHeight&&(o.minHeight=s),o.maxWidth>i&&(o.maxWidth=i),o.maxHeight>n&&(o.maxHeight=n)),this._vBoundaries=o},_updateCache:function(t){this.offset=this.helper.offset(),this._isNumber(t.left)&&(this.position.left=t.left),this._isNumber(t.top)&&(this.position.top=t.top),this._isNumber(t.height)&&(this.size.height=t.height),this._isNumber(t.width)&&(this.size.width=t.width)},_updateRatio:function(t){var e=this.position,i=this.size,s=this.axis;return this._isNumber(t.height)?t.width=t.height*this.aspectRatio:this._isNumber(t.width)&&(t.height=t.width/this.aspectRatio),\"sw\"===s&&(t.left=e.left+(i.width-t.width),t.top=null),\"nw\"===s&&(t.top=e.top+(i.height-t.height),t.left=e.left+(i.width-t.width)),t},_respectSize:function(t){var e=this._vBoundaries,i=this.axis,s=this._isNumber(t.width)&&e.maxWidth&&e.maxWidth<t.width,n=this._isNumber(t.height)&&e.maxHeight&&e.maxHeight<t.height,o=this._isNumber(t.width)&&e.minWidth&&e.minWidth>t.width,a=this._isNumber(t.height)&&e.minHeight&&e.minHeight>t.height,r=this.originalPosition.left+this.originalSize.width,h=this.originalPosition.top+this.originalSize.height,l=/sw|nw|w/.test(i),c=/nw|ne|n/.test(i);return o&&(t.width=e.minWidth),a&&(t.height=e.minHeight),s&&(t.width=e.maxWidth),n&&(t.height=e.maxHeight),o&&l&&(t.left=r-e.minWidth),s&&l&&(t.left=r-e.maxWidth),a&&c&&(t.top=h-e.minHeight),n&&c&&(t.top=h-e.maxHeight),t.width||t.height||t.left||!t.top?t.width||t.height||t.top||!t.left||(t.left=null):t.top=null,t},_getPaddingPlusBorderDimensions:function(t){for(var e=0,i=[],s=[t.css(\"borderTopWidth\"),t.css(\"borderRightWidth\"),t.css(\"borderBottomWidth\"),t.css(\"borderLeftWidth\")],n=[t.css(\"paddingTop\"),t.css(\"paddingRight\"),t.css(\"paddingBottom\"),t.css(\"paddingLeft\")];4>e;e++)i[e]=parseFloat(s[e])||0,i[e]+=parseFloat(n[e])||0;return{height:i[0]+i[2],width:i[1]+i[3]}},_proportionallyResize:function(){if(this._proportionallyResizeElements.length)for(var t,e=0,i=this.helper||this.element;this._proportionallyResizeElements.length>e;e++)t=this._proportionallyResizeElements[e],this.outerDimensions||(this.outerDimensions=this._getPaddingPlusBorderDimensions(t)),t.css({height:i.height()-this.outerDimensions.height||0,width:i.width()-this.outerDimensions.width||0})},_renderProxy:function(){var e=this.element,i=this.options;this.elementOffset=e.offset(),this._helper?(this.helper=this.helper||t(\"<div style='overflow:hidden;'></div>\"),this._addClass(this.helper,this._helper),this.helper.css({width:this.element.outerWidth(),height:this.element.outerHeight(),position:\"absolute\",left:this.elementOffset.left+\"px\",top:this.elementOffset.top+\"px\",zIndex:++i.zIndex}),this.helper.appendTo(\"body\").disableSelection()):this.helper=this.element},_change:{e:function(t,e){return{width:this.originalSize.width+e}},w:function(t,e){var i=this.originalSize,s=this.originalPosition;return{left:s.left+e,width:i.width-e}},n:function(t,e,i){var s=this.originalSize,n=this.originalPosition;return{top:n.top+i,height:s.height-i}},s:function(t,e,i){return{height:this.originalSize.height+i}},se:function(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[e,i,s]))},sw:function(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[e,i,s]))},ne:function(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[e,i,s]))},nw:function(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[e,i,s]))}},_propagate:function(e,i){t.ui.plugin.call(this,e,[i,this.ui()]),\"resize\"!==e&&this._trigger(e,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),t.ui.plugin.add(\"resizable\",\"animate\",{stop:function(e){var i=t(this).resizable(\"instance\"),s=i.options,n=i._proportionallyResizeElements,o=n.length&&/textarea/i.test(n[0].nodeName),a=o&&i._hasScroll(n[0],\"left\")?0:i.sizeDiff.height,r=o?0:i.sizeDiff.width,h={width:i.size.width-r,height:i.size.height-a},l=parseFloat(i.element.css(\"left\"))+(i.position.left-i.originalPosition.left)||null,c=parseFloat(i.element.css(\"top\"))+(i.position.top-i.originalPosition.top)||null;i.element.animate(t.extend(h,c&&l?{top:c,left:l}:{}),{duration:s.animateDuration,easing:s.animateEasing,step:function(){var s={width:parseFloat(i.element.css(\"width\")),height:parseFloat(i.element.css(\"height\")),top:parseFloat(i.element.css(\"top\")),left:parseFloat(i.element.css(\"left\"))};n&&n.length&&t(n[0]).css({width:s.width,height:s.height}),i._updateCache(s),i._propagate(\"resize\",e)}})}}),t.ui.plugin.add(\"resizable\",\"containment\",{start:function(){var e,i,s,n,o,a,r,h=t(this).resizable(\"instance\"),l=h.options,c=h.element,u=l.containment,d=u instanceof t?u.get(0):/parent/.test(u)?c.parent().get(0):u;d&&(h.containerElement=t(d),/document/.test(u)||u===document?(h.containerOffset={left:0,top:0},h.containerPosition={left:0,top:0},h.parentData={element:t(document),left:0,top:0,width:t(document).width(),height:t(document).height()||document.body.parentNode.scrollHeight}):(e=t(d),i=[],t([\"Top\",\"Right\",\"Left\",\"Bottom\"]).each(function(t,s){i[t]=h._num(e.css(\"padding\"+s))}),h.containerOffset=e.offset(),h.containerPosition=e.position(),h.containerSize={height:e.innerHeight()-i[3],width:e.innerWidth()-i[1]},s=h.containerOffset,n=h.containerSize.height,o=h.containerSize.width,a=h._hasScroll(d,\"left\")?d.scrollWidth:o,r=h._hasScroll(d)?d.scrollHeight:n,h.parentData={element:d,left:s.left,top:s.top,width:a,height:r}))},resize:function(e){var i,s,n,o,a=t(this).resizable(\"instance\"),r=a.options,h=a.containerOffset,l=a.position,c=a._aspectRatio||e.shiftKey,u={top:0,left:0},d=a.containerElement,p=!0;d[0]!==document&&/static/.test(d.css(\"position\"))&&(u=h),l.left<(a._helper?h.left:0)&&(a.size.width=a.size.width+(a._helper?a.position.left-h.left:a.position.left-u.left),c&&(a.size.height=a.size.width/a.aspectRatio,p=!1),a.position.left=r.helper?h.left:0),l.top<(a._helper?h.top:0)&&(a.size.height=a.size.height+(a._helper?a.position.top-h.top:a.position.top),c&&(a.size.width=a.size.height*a.aspectRatio,p=!1),a.position.top=a._helper?h.top:0),n=a.containerElement.get(0)===a.element.parent().get(0),o=/relative|absolute/.test(a.containerElement.css(\"position\")),n&&o?(a.offset.left=a.parentData.left+a.position.left,a.offset.top=a.parentData.top+a.position.top):(a.offset.left=a.element.offset().left,a.offset.top=a.element.offset().top),i=Math.abs(a.sizeDiff.width+(a._helper?a.offset.left-u.left:a.offset.left-h.left)),s=Math.abs(a.sizeDiff.height+(a._helper?a.offset.top-u.top:a.offset.top-h.top)),i+a.size.width>=a.parentData.width&&(a.size.width=a.parentData.width-i,c&&(a.size.height=a.size.width/a.aspectRatio,p=!1)),s+a.size.height>=a.parentData.height&&(a.size.height=a.parentData.height-s,c&&(a.size.width=a.size.height*a.aspectRatio,p=!1)),p||(a.position.left=a.prevPosition.left,a.position.top=a.prevPosition.top,a.size.width=a.prevSize.width,a.size.height=a.prevSize.height)},stop:function(){var e=t(this).resizable(\"instance\"),i=e.options,s=e.containerOffset,n=e.containerPosition,o=e.containerElement,a=t(e.helper),r=a.offset(),h=a.outerWidth()-e.sizeDiff.width,l=a.outerHeight()-e.sizeDiff.height;e._helper&&!i.animate&&/relative/.test(o.css(\"position\"))&&t(this).css({left:r.left-n.left-s.left,width:h,height:l}),e._helper&&!i.animate&&/static/.test(o.css(\"position\"))&&t(this).css({left:r.left-n.left-s.left,width:h,height:l})}}),t.ui.plugin.add(\"resizable\",\"alsoResize\",{start:function(){var e=t(this).resizable(\"instance\"),i=e.options;t(i.alsoResize).each(function(){var e=t(this);e.data(\"ui-resizable-alsoresize\",{width:parseFloat(e.width()),height:parseFloat(e.height()),left:parseFloat(e.css(\"left\")),top:parseFloat(e.css(\"top\"))})})},resize:function(e,i){var s=t(this).resizable(\"instance\"),n=s.options,o=s.originalSize,a=s.originalPosition,r={height:s.size.height-o.height||0,width:s.size.width-o.width||0,top:s.position.top-a.top||0,left:s.position.left-a.left||0};t(n.alsoResize).each(function(){var e=t(this),s=t(this).data(\"ui-resizable-alsoresize\"),n={},o=e.parents(i.originalElement[0]).length?[\"width\",\"height\"]:[\"width\",\"height\",\"top\",\"left\"];t.each(o,function(t,e){var i=(s[e]||0)+(r[e]||0);i&&i>=0&&(n[e]=i||null)}),e.css(n)})},stop:function(){t(this).removeData(\"ui-resizable-alsoresize\")}}),t.ui.plugin.add(\"resizable\",\"ghost\",{start:function(){var e=t(this).resizable(\"instance\"),i=e.size;e.ghost=e.originalElement.clone(),e.ghost.css({opacity:.25,display:\"block\",position:\"relative\",height:i.height,width:i.width,margin:0,left:0,top:0}),e._addClass(e.ghost,\"ui-resizable-ghost\"),t.uiBackCompat!==!1&&\"string\"==typeof e.options.ghost&&e.ghost.addClass(this.options.ghost),e.ghost.appendTo(e.helper)},resize:function(){var e=t(this).resizable(\"instance\");e.ghost&&e.ghost.css({position:\"relative\",height:e.size.height,width:e.size.width})},stop:function(){var e=t(this).resizable(\"instance\");e.ghost&&e.helper&&e.helper.get(0).removeChild(e.ghost.get(0))}}),t.ui.plugin.add(\"resizable\",\"grid\",{resize:function(){var e,i=t(this).resizable(\"instance\"),s=i.options,n=i.size,o=i.originalSize,a=i.originalPosition,r=i.axis,h=\"number\"==typeof s.grid?[s.grid,s.grid]:s.grid,l=h[0]||1,c=h[1]||1,u=Math.round((n.width-o.width)/l)*l,d=Math.round((n.height-o.height)/c)*c,p=o.width+u,f=o.height+d,g=s.maxWidth&&p>s.maxWidth,m=s.maxHeight&&f>s.maxHeight,_=s.minWidth&&s.minWidth>p,v=s.minHeight&&s.minHeight>f;s.grid=h,_&&(p+=l),v&&(f+=c),g&&(p-=l),m&&(f-=c),/^(se|s|e)$/.test(r)?(i.size.width=p,i.size.height=f):/^(ne)$/.test(r)?(i.size.width=p,i.size.height=f,i.position.top=a.top-d):/^(sw)$/.test(r)?(i.size.width=p,i.size.height=f,i.position.left=a.left-u):((0>=f-c||0>=p-l)&&(e=i._getPaddingPlusBorderDimensions(this)),f-c>0?(i.size.height=f,i.position.top=a.top-d):(f=c-e.height,i.size.height=f,i.position.top=a.top+o.height-f),p-l>0?(i.size.width=p,i.position.left=a.left-u):(p=l-e.width,i.size.width=p,i.position.left=a.left+o.width-p))}}),t.ui.resizable,t.widget(\"ui.dialog\",{version:\"1.12.1\",options:{appendTo:\"body\",autoOpen:!0,buttons:[],classes:{\"ui-dialog\":\"ui-corner-all\",\"ui-dialog-titlebar\":\"ui-corner-all\"},closeOnEscape:!0,closeText:\"Close\",draggable:!0,hide:null,height:\"auto\",maxHeight:null,maxWidth:null,minHeight:150,minWidth:150,modal:!1,position:{my:\"center\",at:\"center\",of:window,collision:\"fit\",using:function(e){var i=t(this).css(e).offset().top;0>i&&t(this).css(\"top\",e.top-i)}},resizable:!0,show:null,title:null,width:300,beforeClose:null,close:null,drag:null,dragStart:null,dragStop:null,focus:null,open:null,resize:null,resizeStart:null,resizeStop:null},sizeRelatedOptions:{buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},resizableRelatedOptions:{maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0},_create:function(){this.originalCss={display:this.element[0].style.display,width:this.element[0].style.width,minHeight:this.element[0].style.minHeight,maxHeight:this.element[0].style.maxHeight,height:this.element[0].style.height},this.originalPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.originalTitle=this.element.attr(\"title\"),null==this.options.title&&null!=this.originalTitle&&(this.options.title=this.originalTitle),this.options.disabled&&(this.options.disabled=!1),this._createWrapper(),this.element.show().removeAttr(\"title\").appendTo(this.uiDialog),this._addClass(\"ui-dialog-content\",\"ui-widget-content\"),this._createTitlebar(),this._createButtonPane(),this.options.draggable&&t.fn.draggable&&this._makeDraggable(),this.options.resizable&&t.fn.resizable&&this._makeResizable(),this._isOpen=!1,this._trackFocus()},_init:function(){this.options.autoOpen&&this.open()},_appendTo:function(){var e=this.options.appendTo;return e&&(e.jquery||e.nodeType)?t(e):this.document.find(e||\"body\").eq(0)},_destroy:function(){var t,e=this.originalPosition;this._untrackInstance(),this._destroyOverlay(),this.element.removeUniqueId().css(this.originalCss).detach(),this.uiDialog.remove(),this.originalTitle&&this.element.attr(\"title\",this.originalTitle),t=e.parent.children().eq(e.index),t.length&&t[0]!==this.element[0]?t.before(this.element):e.parent.append(this.element)},widget:function(){return this.uiDialog\n},disable:t.noop,enable:t.noop,close:function(e){var i=this;this._isOpen&&this._trigger(\"beforeClose\",e)!==!1&&(this._isOpen=!1,this._focusedElement=null,this._destroyOverlay(),this._untrackInstance(),this.opener.filter(\":focusable\").trigger(\"focus\").length||t.ui.safeBlur(t.ui.safeActiveElement(this.document[0])),this._hide(this.uiDialog,this.options.hide,function(){i._trigger(\"close\",e)}))},isOpen:function(){return this._isOpen},moveToTop:function(){this._moveToTop()},_moveToTop:function(e,i){var s=!1,n=this.uiDialog.siblings(\".ui-front:visible\").map(function(){return+t(this).css(\"z-index\")}).get(),o=Math.max.apply(null,n);return o>=+this.uiDialog.css(\"z-index\")&&(this.uiDialog.css(\"z-index\",o+1),s=!0),s&&!i&&this._trigger(\"focus\",e),s},open:function(){var e=this;return this._isOpen?(this._moveToTop()&&this._focusTabbable(),void 0):(this._isOpen=!0,this.opener=t(t.ui.safeActiveElement(this.document[0])),this._size(),this._position(),this._createOverlay(),this._moveToTop(null,!0),this.overlay&&this.overlay.css(\"z-index\",this.uiDialog.css(\"z-index\")-1),this._show(this.uiDialog,this.options.show,function(){e._focusTabbable(),e._trigger(\"focus\")}),this._makeFocusTarget(),this._trigger(\"open\"),void 0)},_focusTabbable:function(){var t=this._focusedElement;t||(t=this.element.find(\"[autofocus]\")),t.length||(t=this.element.find(\":tabbable\")),t.length||(t=this.uiDialogButtonPane.find(\":tabbable\")),t.length||(t=this.uiDialogTitlebarClose.filter(\":tabbable\")),t.length||(t=this.uiDialog),t.eq(0).trigger(\"focus\")},_keepFocus:function(e){function i(){var e=t.ui.safeActiveElement(this.document[0]),i=this.uiDialog[0]===e||t.contains(this.uiDialog[0],e);i||this._focusTabbable()}e.preventDefault(),i.call(this),this._delay(i)},_createWrapper:function(){this.uiDialog=t(\"<div>\").hide().attr({tabIndex:-1,role:\"dialog\"}).appendTo(this._appendTo()),this._addClass(this.uiDialog,\"ui-dialog\",\"ui-widget ui-widget-content ui-front\"),this._on(this.uiDialog,{keydown:function(e){if(this.options.closeOnEscape&&!e.isDefaultPrevented()&&e.keyCode&&e.keyCode===t.ui.keyCode.ESCAPE)return e.preventDefault(),this.close(e),void 0;if(e.keyCode===t.ui.keyCode.TAB&&!e.isDefaultPrevented()){var i=this.uiDialog.find(\":tabbable\"),s=i.filter(\":first\"),n=i.filter(\":last\");e.target!==n[0]&&e.target!==this.uiDialog[0]||e.shiftKey?e.target!==s[0]&&e.target!==this.uiDialog[0]||!e.shiftKey||(this._delay(function(){n.trigger(\"focus\")}),e.preventDefault()):(this._delay(function(){s.trigger(\"focus\")}),e.preventDefault())}},mousedown:function(t){this._moveToTop(t)&&this._focusTabbable()}}),this.element.find(\"[aria-describedby]\").length||this.uiDialog.attr({\"aria-describedby\":this.element.uniqueId().attr(\"id\")})},_createTitlebar:function(){var e;this.uiDialogTitlebar=t(\"<div>\"),this._addClass(this.uiDialogTitlebar,\"ui-dialog-titlebar\",\"ui-widget-header ui-helper-clearfix\"),this._on(this.uiDialogTitlebar,{mousedown:function(e){t(e.target).closest(\".ui-dialog-titlebar-close\")||this.uiDialog.trigger(\"focus\")}}),this.uiDialogTitlebarClose=t(\"<button type='button'></button>\").button({label:t(\"<a>\").text(this.options.closeText).html(),icon:\"ui-icon-closethick\",showLabel:!1}).appendTo(this.uiDialogTitlebar),this._addClass(this.uiDialogTitlebarClose,\"ui-dialog-titlebar-close\"),this._on(this.uiDialogTitlebarClose,{click:function(t){t.preventDefault(),this.close(t)}}),e=t(\"<span>\").uniqueId().prependTo(this.uiDialogTitlebar),this._addClass(e,\"ui-dialog-title\"),this._title(e),this.uiDialogTitlebar.prependTo(this.uiDialog),this.uiDialog.attr({\"aria-labelledby\":e.attr(\"id\")})},_title:function(t){this.options.title?t.text(this.options.title):t.html(\"&#160;\")},_createButtonPane:function(){this.uiDialogButtonPane=t(\"<div>\"),this._addClass(this.uiDialogButtonPane,\"ui-dialog-buttonpane\",\"ui-widget-content ui-helper-clearfix\"),this.uiButtonSet=t(\"<div>\").appendTo(this.uiDialogButtonPane),this._addClass(this.uiButtonSet,\"ui-dialog-buttonset\"),this._createButtons()},_createButtons:function(){var e=this,i=this.options.buttons;return this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),t.isEmptyObject(i)||t.isArray(i)&&!i.length?(this._removeClass(this.uiDialog,\"ui-dialog-buttons\"),void 0):(t.each(i,function(i,s){var n,o;s=t.isFunction(s)?{click:s,text:i}:s,s=t.extend({type:\"button\"},s),n=s.click,o={icon:s.icon,iconPosition:s.iconPosition,showLabel:s.showLabel,icons:s.icons,text:s.text},delete s.click,delete s.icon,delete s.iconPosition,delete s.showLabel,delete s.icons,\"boolean\"==typeof s.text&&delete s.text,t(\"<button></button>\",s).button(o).appendTo(e.uiButtonSet).on(\"click\",function(){n.apply(e.element[0],arguments)})}),this._addClass(this.uiDialog,\"ui-dialog-buttons\"),this.uiDialogButtonPane.appendTo(this.uiDialog),void 0)},_makeDraggable:function(){function e(t){return{position:t.position,offset:t.offset}}var i=this,s=this.options;this.uiDialog.draggable({cancel:\".ui-dialog-content, .ui-dialog-titlebar-close\",handle:\".ui-dialog-titlebar\",containment:\"document\",start:function(s,n){i._addClass(t(this),\"ui-dialog-dragging\"),i._blockFrames(),i._trigger(\"dragStart\",s,e(n))},drag:function(t,s){i._trigger(\"drag\",t,e(s))},stop:function(n,o){var a=o.offset.left-i.document.scrollLeft(),r=o.offset.top-i.document.scrollTop();s.position={my:\"left top\",at:\"left\"+(a>=0?\"+\":\"\")+a+\" \"+\"top\"+(r>=0?\"+\":\"\")+r,of:i.window},i._removeClass(t(this),\"ui-dialog-dragging\"),i._unblockFrames(),i._trigger(\"dragStop\",n,e(o))}})},_makeResizable:function(){function e(t){return{originalPosition:t.originalPosition,originalSize:t.originalSize,position:t.position,size:t.size}}var i=this,s=this.options,n=s.resizable,o=this.uiDialog.css(\"position\"),a=\"string\"==typeof n?n:\"n,e,s,w,se,sw,ne,nw\";this.uiDialog.resizable({cancel:\".ui-dialog-content\",containment:\"document\",alsoResize:this.element,maxWidth:s.maxWidth,maxHeight:s.maxHeight,minWidth:s.minWidth,minHeight:this._minHeight(),handles:a,start:function(s,n){i._addClass(t(this),\"ui-dialog-resizing\"),i._blockFrames(),i._trigger(\"resizeStart\",s,e(n))},resize:function(t,s){i._trigger(\"resize\",t,e(s))},stop:function(n,o){var a=i.uiDialog.offset(),r=a.left-i.document.scrollLeft(),h=a.top-i.document.scrollTop();s.height=i.uiDialog.height(),s.width=i.uiDialog.width(),s.position={my:\"left top\",at:\"left\"+(r>=0?\"+\":\"\")+r+\" \"+\"top\"+(h>=0?\"+\":\"\")+h,of:i.window},i._removeClass(t(this),\"ui-dialog-resizing\"),i._unblockFrames(),i._trigger(\"resizeStop\",n,e(o))}}).css(\"position\",o)},_trackFocus:function(){this._on(this.widget(),{focusin:function(e){this._makeFocusTarget(),this._focusedElement=t(e.target)}})},_makeFocusTarget:function(){this._untrackInstance(),this._trackingInstances().unshift(this)},_untrackInstance:function(){var e=this._trackingInstances(),i=t.inArray(this,e);-1!==i&&e.splice(i,1)},_trackingInstances:function(){var t=this.document.data(\"ui-dialog-instances\");return t||(t=[],this.document.data(\"ui-dialog-instances\",t)),t},_minHeight:function(){var t=this.options;return\"auto\"===t.height?t.minHeight:Math.min(t.minHeight,t.height)},_position:function(){var t=this.uiDialog.is(\":visible\");t||this.uiDialog.show(),this.uiDialog.position(this.options.position),t||this.uiDialog.hide()},_setOptions:function(e){var i=this,s=!1,n={};t.each(e,function(t,e){i._setOption(t,e),t in i.sizeRelatedOptions&&(s=!0),t in i.resizableRelatedOptions&&(n[t]=e)}),s&&(this._size(),this._position()),this.uiDialog.is(\":data(ui-resizable)\")&&this.uiDialog.resizable(\"option\",n)},_setOption:function(e,i){var s,n,o=this.uiDialog;\"disabled\"!==e&&(this._super(e,i),\"appendTo\"===e&&this.uiDialog.appendTo(this._appendTo()),\"buttons\"===e&&this._createButtons(),\"closeText\"===e&&this.uiDialogTitlebarClose.button({label:t(\"<a>\").text(\"\"+this.options.closeText).html()}),\"draggable\"===e&&(s=o.is(\":data(ui-draggable)\"),s&&!i&&o.draggable(\"destroy\"),!s&&i&&this._makeDraggable()),\"position\"===e&&this._position(),\"resizable\"===e&&(n=o.is(\":data(ui-resizable)\"),n&&!i&&o.resizable(\"destroy\"),n&&\"string\"==typeof i&&o.resizable(\"option\",\"handles\",i),n||i===!1||this._makeResizable()),\"title\"===e&&this._title(this.uiDialogTitlebar.find(\".ui-dialog-title\")))},_size:function(){var t,e,i,s=this.options;this.element.show().css({width:\"auto\",minHeight:0,maxHeight:\"none\",height:0}),s.minWidth>s.width&&(s.width=s.minWidth),t=this.uiDialog.css({height:\"auto\",width:s.width}).outerHeight(),e=Math.max(0,s.minHeight-t),i=\"number\"==typeof s.maxHeight?Math.max(0,s.maxHeight-t):\"none\",\"auto\"===s.height?this.element.css({minHeight:e,maxHeight:i,height:\"auto\"}):this.element.height(Math.max(0,s.height-t)),this.uiDialog.is(\":data(ui-resizable)\")&&this.uiDialog.resizable(\"option\",\"minHeight\",this._minHeight())},_blockFrames:function(){this.iframeBlocks=this.document.find(\"iframe\").map(function(){var e=t(this);return t(\"<div>\").css({position:\"absolute\",width:e.outerWidth(),height:e.outerHeight()}).appendTo(e.parent()).offset(e.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_allowInteraction:function(e){return t(e.target).closest(\".ui-dialog\").length?!0:!!t(e.target).closest(\".ui-datepicker\").length},_createOverlay:function(){if(this.options.modal){var e=!0;this._delay(function(){e=!1}),this.document.data(\"ui-dialog-overlays\")||this._on(this.document,{focusin:function(t){e||this._allowInteraction(t)||(t.preventDefault(),this._trackingInstances()[0]._focusTabbable())}}),this.overlay=t(\"<div>\").appendTo(this._appendTo()),this._addClass(this.overlay,null,\"ui-widget-overlay ui-front\"),this._on(this.overlay,{mousedown:\"_keepFocus\"}),this.document.data(\"ui-dialog-overlays\",(this.document.data(\"ui-dialog-overlays\")||0)+1)}},_destroyOverlay:function(){if(this.options.modal&&this.overlay){var t=this.document.data(\"ui-dialog-overlays\")-1;t?this.document.data(\"ui-dialog-overlays\",t):(this._off(this.document,\"focusin\"),this.document.removeData(\"ui-dialog-overlays\")),this.overlay.remove(),this.overlay=null}}}),t.uiBackCompat!==!1&&t.widget(\"ui.dialog\",t.ui.dialog,{options:{dialogClass:\"\"},_createWrapper:function(){this._super(),this.uiDialog.addClass(this.options.dialogClass)},_setOption:function(t,e){\"dialogClass\"===t&&this.uiDialog.removeClass(this.options.dialogClass).addClass(e),this._superApply(arguments)}}),t.ui.dialog,t.widget(\"ui.droppable\",{version:\"1.12.1\",widgetEventPrefix:\"drop\",options:{accept:\"*\",addClasses:!0,greedy:!1,scope:\"default\",tolerance:\"intersect\",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function(){var e,i=this.options,s=i.accept;this.isover=!1,this.isout=!0,this.accept=t.isFunction(s)?s:function(t){return t.is(s)},this.proportions=function(){return arguments.length?(e=arguments[0],void 0):e?e:e={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight}},this._addToManager(i.scope),i.addClasses&&this._addClass(\"ui-droppable\")},_addToManager:function(e){t.ui.ddmanager.droppables[e]=t.ui.ddmanager.droppables[e]||[],t.ui.ddmanager.droppables[e].push(this)},_splice:function(t){for(var e=0;t.length>e;e++)t[e]===this&&t.splice(e,1)},_destroy:function(){var e=t.ui.ddmanager.droppables[this.options.scope];this._splice(e)},_setOption:function(e,i){if(\"accept\"===e)this.accept=t.isFunction(i)?i:function(t){return t.is(i)};else if(\"scope\"===e){var s=t.ui.ddmanager.droppables[this.options.scope];this._splice(s),this._addToManager(i)}this._super(e,i)},_activate:function(e){var i=t.ui.ddmanager.current;this._addActiveClass(),i&&this._trigger(\"activate\",e,this.ui(i))},_deactivate:function(e){var i=t.ui.ddmanager.current;this._removeActiveClass(),i&&this._trigger(\"deactivate\",e,this.ui(i))},_over:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this._addHoverClass(),this._trigger(\"over\",e,this.ui(i)))},_out:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this._removeHoverClass(),this._trigger(\"out\",e,this.ui(i)))},_drop:function(e,i){var s=i||t.ui.ddmanager.current,n=!1;return s&&(s.currentItem||s.element)[0]!==this.element[0]?(this.element.find(\":data(ui-droppable)\").not(\".ui-draggable-dragging\").each(function(){var i=t(this).droppable(\"instance\");return i.options.greedy&&!i.options.disabled&&i.options.scope===s.options.scope&&i.accept.call(i.element[0],s.currentItem||s.element)&&v(s,t.extend(i,{offset:i.element.offset()}),i.options.tolerance,e)?(n=!0,!1):void 0}),n?!1:this.accept.call(this.element[0],s.currentItem||s.element)?(this._removeActiveClass(),this._removeHoverClass(),this._trigger(\"drop\",e,this.ui(s)),this.element):!1):!1},ui:function(t){return{draggable:t.currentItem||t.element,helper:t.helper,position:t.position,offset:t.positionAbs}},_addHoverClass:function(){this._addClass(\"ui-droppable-hover\")},_removeHoverClass:function(){this._removeClass(\"ui-droppable-hover\")},_addActiveClass:function(){this._addClass(\"ui-droppable-active\")},_removeActiveClass:function(){this._removeClass(\"ui-droppable-active\")}});var v=t.ui.intersect=function(){function t(t,e,i){return t>=e&&e+i>t}return function(e,i,s,n){if(!i.offset)return!1;var o=(e.positionAbs||e.position.absolute).left+e.margins.left,a=(e.positionAbs||e.position.absolute).top+e.margins.top,r=o+e.helperProportions.width,h=a+e.helperProportions.height,l=i.offset.left,c=i.offset.top,u=l+i.proportions().width,d=c+i.proportions().height;switch(s){case\"fit\":return o>=l&&u>=r&&a>=c&&d>=h;case\"intersect\":return o+e.helperProportions.width/2>l&&u>r-e.helperProportions.width/2&&a+e.helperProportions.height/2>c&&d>h-e.helperProportions.height/2;case\"pointer\":return t(n.pageY,c,i.proportions().height)&&t(n.pageX,l,i.proportions().width);case\"touch\":return(a>=c&&d>=a||h>=c&&d>=h||c>a&&h>d)&&(o>=l&&u>=o||r>=l&&u>=r||l>o&&r>u);default:return!1}}}();t.ui.ddmanager={current:null,droppables:{\"default\":[]},prepareOffsets:function(e,i){var s,n,o=t.ui.ddmanager.droppables[e.options.scope]||[],a=i?i.type:null,r=(e.currentItem||e.element).find(\":data(ui-droppable)\").addBack();t:for(s=0;o.length>s;s++)if(!(o[s].options.disabled||e&&!o[s].accept.call(o[s].element[0],e.currentItem||e.element))){for(n=0;r.length>n;n++)if(r[n]===o[s].element[0]){o[s].proportions().height=0;continue t}o[s].visible=\"none\"!==o[s].element.css(\"display\"),o[s].visible&&(\"mousedown\"===a&&o[s]._activate.call(o[s],i),o[s].offset=o[s].element.offset(),o[s].proportions({width:o[s].element[0].offsetWidth,height:o[s].element[0].offsetHeight}))}},drop:function(e,i){var s=!1;return t.each((t.ui.ddmanager.droppables[e.options.scope]||[]).slice(),function(){this.options&&(!this.options.disabled&&this.visible&&v(e,this,this.options.tolerance,i)&&(s=this._drop.call(this,i)||s),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],e.currentItem||e.element)&&(this.isout=!0,this.isover=!1,this._deactivate.call(this,i)))}),s},dragStart:function(e,i){e.element.parentsUntil(\"body\").on(\"scroll.droppable\",function(){e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)})},drag:function(e,i){e.options.refreshPositions&&t.ui.ddmanager.prepareOffsets(e,i),t.each(t.ui.ddmanager.droppables[e.options.scope]||[],function(){if(!this.options.disabled&&!this.greedyChild&&this.visible){var s,n,o,a=v(e,this,this.options.tolerance,i),r=!a&&this.isover?\"isout\":a&&!this.isover?\"isover\":null;r&&(this.options.greedy&&(n=this.options.scope,o=this.element.parents(\":data(ui-droppable)\").filter(function(){return t(this).droppable(\"instance\").options.scope===n}),o.length&&(s=t(o[0]).droppable(\"instance\"),s.greedyChild=\"isover\"===r)),s&&\"isover\"===r&&(s.isover=!1,s.isout=!0,s._out.call(s,i)),this[r]=!0,this[\"isout\"===r?\"isover\":\"isout\"]=!1,this[\"isover\"===r?\"_over\":\"_out\"].call(this,i),s&&\"isout\"===r&&(s.isout=!1,s.isover=!0,s._over.call(s,i)))}})},dragStop:function(e,i){e.element.parentsUntil(\"body\").off(\"scroll.droppable\"),e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)}},t.uiBackCompat!==!1&&t.widget(\"ui.droppable\",t.ui.droppable,{options:{hoverClass:!1,activeClass:!1},_addActiveClass:function(){this._super(),this.options.activeClass&&this.element.addClass(this.options.activeClass)},_removeActiveClass:function(){this._super(),this.options.activeClass&&this.element.removeClass(this.options.activeClass)},_addHoverClass:function(){this._super(),this.options.hoverClass&&this.element.addClass(this.options.hoverClass)},_removeHoverClass:function(){this._super(),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass)}}),t.ui.droppable,t.widget(\"ui.progressbar\",{version:\"1.12.1\",options:{classes:{\"ui-progressbar\":\"ui-corner-all\",\"ui-progressbar-value\":\"ui-corner-left\",\"ui-progressbar-complete\":\"ui-corner-right\"},max:100,value:0,change:null,complete:null},min:0,_create:function(){this.oldValue=this.options.value=this._constrainedValue(),this.element.attr({role:\"progressbar\",\"aria-valuemin\":this.min}),this._addClass(\"ui-progressbar\",\"ui-widget ui-widget-content\"),this.valueDiv=t(\"<div>\").appendTo(this.element),this._addClass(this.valueDiv,\"ui-progressbar-value\",\"ui-widget-header\"),this._refreshValue()},_destroy:function(){this.element.removeAttr(\"role aria-valuemin aria-valuemax aria-valuenow\"),this.valueDiv.remove()},value:function(t){return void 0===t?this.options.value:(this.options.value=this._constrainedValue(t),this._refreshValue(),void 0)},_constrainedValue:function(t){return void 0===t&&(t=this.options.value),this.indeterminate=t===!1,\"number\"!=typeof t&&(t=0),this.indeterminate?!1:Math.min(this.options.max,Math.max(this.min,t))},_setOptions:function(t){var e=t.value;delete t.value,this._super(t),this.options.value=this._constrainedValue(e),this._refreshValue()},_setOption:function(t,e){\"max\"===t&&(e=Math.max(this.min,e)),this._super(t,e)},_setOptionDisabled:function(t){this._super(t),this.element.attr(\"aria-disabled\",t),this._toggleClass(null,\"ui-state-disabled\",!!t)},_percentage:function(){return this.indeterminate?100:100*(this.options.value-this.min)/(this.options.max-this.min)},_refreshValue:function(){var e=this.options.value,i=this._percentage();this.valueDiv.toggle(this.indeterminate||e>this.min).width(i.toFixed(0)+\"%\"),this._toggleClass(this.valueDiv,\"ui-progressbar-complete\",null,e===this.options.max)._toggleClass(\"ui-progressbar-indeterminate\",null,this.indeterminate),this.indeterminate?(this.element.removeAttr(\"aria-valuenow\"),this.overlayDiv||(this.overlayDiv=t(\"<div>\").appendTo(this.valueDiv),this._addClass(this.overlayDiv,\"ui-progressbar-overlay\"))):(this.element.attr({\"aria-valuemax\":this.options.max,\"aria-valuenow\":e}),this.overlayDiv&&(this.overlayDiv.remove(),this.overlayDiv=null)),this.oldValue!==e&&(this.oldValue=e,this._trigger(\"change\")),e===this.options.max&&this._trigger(\"complete\")}}),t.widget(\"ui.selectable\",t.ui.mouse,{version:\"1.12.1\",options:{appendTo:\"body\",autoRefresh:!0,distance:0,filter:\"*\",tolerance:\"touch\",selected:null,selecting:null,start:null,stop:null,unselected:null,unselecting:null},_create:function(){var e=this;this._addClass(\"ui-selectable\"),this.dragged=!1,this.refresh=function(){e.elementPos=t(e.element[0]).offset(),e.selectees=t(e.options.filter,e.element[0]),e._addClass(e.selectees,\"ui-selectee\"),e.selectees.each(function(){var i=t(this),s=i.offset(),n={left:s.left-e.elementPos.left,top:s.top-e.elementPos.top};t.data(this,\"selectable-item\",{element:this,$element:i,left:n.left,top:n.top,right:n.left+i.outerWidth(),bottom:n.top+i.outerHeight(),startselected:!1,selected:i.hasClass(\"ui-selected\"),selecting:i.hasClass(\"ui-selecting\"),unselecting:i.hasClass(\"ui-unselecting\")})})},this.refresh(),this._mouseInit(),this.helper=t(\"<div>\"),this._addClass(this.helper,\"ui-selectable-helper\")},_destroy:function(){this.selectees.removeData(\"selectable-item\"),this._mouseDestroy()},_mouseStart:function(e){var i=this,s=this.options;this.opos=[e.pageX,e.pageY],this.elementPos=t(this.element[0]).offset(),this.options.disabled||(this.selectees=t(s.filter,this.element[0]),this._trigger(\"start\",e),t(s.appendTo).append(this.helper),this.helper.css({left:e.pageX,top:e.pageY,width:0,height:0}),s.autoRefresh&&this.refresh(),this.selectees.filter(\".ui-selected\").each(function(){var s=t.data(this,\"selectable-item\");s.startselected=!0,e.metaKey||e.ctrlKey||(i._removeClass(s.$element,\"ui-selected\"),s.selected=!1,i._addClass(s.$element,\"ui-unselecting\"),s.unselecting=!0,i._trigger(\"unselecting\",e,{unselecting:s.element}))}),t(e.target).parents().addBack().each(function(){var s,n=t.data(this,\"selectable-item\");return n?(s=!e.metaKey&&!e.ctrlKey||!n.$element.hasClass(\"ui-selected\"),i._removeClass(n.$element,s?\"ui-unselecting\":\"ui-selected\")._addClass(n.$element,s?\"ui-selecting\":\"ui-unselecting\"),n.unselecting=!s,n.selecting=s,n.selected=s,s?i._trigger(\"selecting\",e,{selecting:n.element}):i._trigger(\"unselecting\",e,{unselecting:n.element}),!1):void 0}))},_mouseDrag:function(e){if(this.dragged=!0,!this.options.disabled){var i,s=this,n=this.options,o=this.opos[0],a=this.opos[1],r=e.pageX,h=e.pageY;return o>r&&(i=r,r=o,o=i),a>h&&(i=h,h=a,a=i),this.helper.css({left:o,top:a,width:r-o,height:h-a}),this.selectees.each(function(){var i=t.data(this,\"selectable-item\"),l=!1,c={};i&&i.element!==s.element[0]&&(c.left=i.left+s.elementPos.left,c.right=i.right+s.elementPos.left,c.top=i.top+s.elementPos.top,c.bottom=i.bottom+s.elementPos.top,\"touch\"===n.tolerance?l=!(c.left>r||o>c.right||c.top>h||a>c.bottom):\"fit\"===n.tolerance&&(l=c.left>o&&r>c.right&&c.top>a&&h>c.bottom),l?(i.selected&&(s._removeClass(i.$element,\"ui-selected\"),i.selected=!1),i.unselecting&&(s._removeClass(i.$element,\"ui-unselecting\"),i.unselecting=!1),i.selecting||(s._addClass(i.$element,\"ui-selecting\"),i.selecting=!0,s._trigger(\"selecting\",e,{selecting:i.element}))):(i.selecting&&((e.metaKey||e.ctrlKey)&&i.startselected?(s._removeClass(i.$element,\"ui-selecting\"),i.selecting=!1,s._addClass(i.$element,\"ui-selected\"),i.selected=!0):(s._removeClass(i.$element,\"ui-selecting\"),i.selecting=!1,i.startselected&&(s._addClass(i.$element,\"ui-unselecting\"),i.unselecting=!0),s._trigger(\"unselecting\",e,{unselecting:i.element}))),i.selected&&(e.metaKey||e.ctrlKey||i.startselected||(s._removeClass(i.$element,\"ui-selected\"),i.selected=!1,s._addClass(i.$element,\"ui-unselecting\"),i.unselecting=!0,s._trigger(\"unselecting\",e,{unselecting:i.element})))))}),!1}},_mouseStop:function(e){var i=this;return this.dragged=!1,t(\".ui-unselecting\",this.element[0]).each(function(){var s=t.data(this,\"selectable-item\");i._removeClass(s.$element,\"ui-unselecting\"),s.unselecting=!1,s.startselected=!1,i._trigger(\"unselected\",e,{unselected:s.element})}),t(\".ui-selecting\",this.element[0]).each(function(){var s=t.data(this,\"selectable-item\");i._removeClass(s.$element,\"ui-selecting\")._addClass(s.$element,\"ui-selected\"),s.selecting=!1,s.selected=!0,s.startselected=!0,i._trigger(\"selected\",e,{selected:s.element})}),this._trigger(\"stop\",e),this.helper.remove(),!1}}),t.widget(\"ui.selectmenu\",[t.ui.formResetMixin,{version:\"1.12.1\",defaultElement:\"<select>\",options:{appendTo:null,classes:{\"ui-selectmenu-button-open\":\"ui-corner-top\",\"ui-selectmenu-button-closed\":\"ui-corner-all\"},disabled:null,icons:{button:\"ui-icon-triangle-1-s\"},position:{my:\"left top\",at:\"left bottom\",collision:\"none\"},width:!1,change:null,close:null,focus:null,open:null,select:null},_create:function(){var e=this.element.uniqueId().attr(\"id\");this.ids={element:e,button:e+\"-button\",menu:e+\"-menu\"},this._drawButton(),this._drawMenu(),this._bindFormResetHandler(),this._rendered=!1,this.menuItems=t()},_drawButton:function(){var e,i=this,s=this._parseOption(this.element.find(\"option:selected\"),this.element[0].selectedIndex);this.labels=this.element.labels().attr(\"for\",this.ids.button),this._on(this.labels,{click:function(t){this.button.focus(),t.preventDefault()}}),this.element.hide(),this.button=t(\"<span>\",{tabindex:this.options.disabled?-1:0,id:this.ids.button,role:\"combobox\",\"aria-expanded\":\"false\",\"aria-autocomplete\":\"list\",\"aria-owns\":this.ids.menu,\"aria-haspopup\":\"true\",title:this.element.attr(\"title\")}).insertAfter(this.element),this._addClass(this.button,\"ui-selectmenu-button ui-selectmenu-button-closed\",\"ui-button ui-widget\"),e=t(\"<span>\").appendTo(this.button),this._addClass(e,\"ui-selectmenu-icon\",\"ui-icon \"+this.options.icons.button),this.buttonItem=this._renderButtonItem(s).appendTo(this.button),this.options.width!==!1&&this._resizeButton(),this._on(this.button,this._buttonEvents),this.button.one(\"focusin\",function(){i._rendered||i._refreshMenu()})},_drawMenu:function(){var e=this;this.menu=t(\"<ul>\",{\"aria-hidden\":\"true\",\"aria-labelledby\":this.ids.button,id:this.ids.menu}),this.menuWrap=t(\"<div>\").append(this.menu),this._addClass(this.menuWrap,\"ui-selectmenu-menu\",\"ui-front\"),this.menuWrap.appendTo(this._appendTo()),this.menuInstance=this.menu.menu({classes:{\"ui-menu\":\"ui-corner-bottom\"},role:\"listbox\",select:function(t,i){t.preventDefault(),e._setSelection(),e._select(i.item.data(\"ui-selectmenu-item\"),t)},focus:function(t,i){var s=i.item.data(\"ui-selectmenu-item\");null!=e.focusIndex&&s.index!==e.focusIndex&&(e._trigger(\"focus\",t,{item:s}),e.isOpen||e._select(s,t)),e.focusIndex=s.index,e.button.attr(\"aria-activedescendant\",e.menuItems.eq(s.index).attr(\"id\"))}}).menu(\"instance\"),this.menuInstance._off(this.menu,\"mouseleave\"),this.menuInstance._closeOnDocumentClick=function(){return!1},this.menuInstance._isDivider=function(){return!1}},refresh:function(){this._refreshMenu(),this.buttonItem.replaceWith(this.buttonItem=this._renderButtonItem(this._getSelectedItem().data(\"ui-selectmenu-item\")||{})),null===this.options.width&&this._resizeButton()},_refreshMenu:function(){var t,e=this.element.find(\"option\");this.menu.empty(),this._parseOptions(e),this._renderMenu(this.menu,this.items),this.menuInstance.refresh(),this.menuItems=this.menu.find(\"li\").not(\".ui-selectmenu-optgroup\").find(\".ui-menu-item-wrapper\"),this._rendered=!0,e.length&&(t=this._getSelectedItem(),this.menuInstance.focus(null,t),this._setAria(t.data(\"ui-selectmenu-item\")),this._setOption(\"disabled\",this.element.prop(\"disabled\")))},open:function(t){this.options.disabled||(this._rendered?(this._removeClass(this.menu.find(\".ui-state-active\"),null,\"ui-state-active\"),this.menuInstance.focus(null,this._getSelectedItem())):this._refreshMenu(),this.menuItems.length&&(this.isOpen=!0,this._toggleAttr(),this._resizeMenu(),this._position(),this._on(this.document,this._documentClick),this._trigger(\"open\",t)))},_position:function(){this.menuWrap.position(t.extend({of:this.button},this.options.position))},close:function(t){this.isOpen&&(this.isOpen=!1,this._toggleAttr(),this.range=null,this._off(this.document),this._trigger(\"close\",t))},widget:function(){return this.button},menuWidget:function(){return this.menu},_renderButtonItem:function(e){var i=t(\"<span>\");return this._setText(i,e.label),this._addClass(i,\"ui-selectmenu-text\"),i},_renderMenu:function(e,i){var s=this,n=\"\";t.each(i,function(i,o){var a;o.optgroup!==n&&(a=t(\"<li>\",{text:o.optgroup}),s._addClass(a,\"ui-selectmenu-optgroup\",\"ui-menu-divider\"+(o.element.parent(\"optgroup\").prop(\"disabled\")?\" ui-state-disabled\":\"\")),a.appendTo(e),n=o.optgroup),s._renderItemData(e,o)})},_renderItemData:function(t,e){return this._renderItem(t,e).data(\"ui-selectmenu-item\",e)},_renderItem:function(e,i){var s=t(\"<li>\"),n=t(\"<div>\",{title:i.element.attr(\"title\")});return i.disabled&&this._addClass(s,null,\"ui-state-disabled\"),this._setText(n,i.label),s.append(n).appendTo(e)},_setText:function(t,e){e?t.text(e):t.html(\"&#160;\")},_move:function(t,e){var i,s,n=\".ui-menu-item\";this.isOpen?i=this.menuItems.eq(this.focusIndex).parent(\"li\"):(i=this.menuItems.eq(this.element[0].selectedIndex).parent(\"li\"),n+=\":not(.ui-state-disabled)\"),s=\"first\"===t||\"last\"===t?i[\"first\"===t?\"prevAll\":\"nextAll\"](n).eq(-1):i[t+\"All\"](n).eq(0),s.length&&this.menuInstance.focus(e,s)},_getSelectedItem:function(){return this.menuItems.eq(this.element[0].selectedIndex).parent(\"li\")},_toggle:function(t){this[this.isOpen?\"close\":\"open\"](t)},_setSelection:function(){var t;this.range&&(window.getSelection?(t=window.getSelection(),t.removeAllRanges(),t.addRange(this.range)):this.range.select(),this.button.focus())},_documentClick:{mousedown:function(e){this.isOpen&&(t(e.target).closest(\".ui-selectmenu-menu, #\"+t.ui.escapeSelector(this.ids.button)).length||this.close(e))}},_buttonEvents:{mousedown:function(){var t;window.getSelection?(t=window.getSelection(),t.rangeCount&&(this.range=t.getRangeAt(0))):this.range=document.selection.createRange()},click:function(t){this._setSelection(),this._toggle(t)},keydown:function(e){var i=!0;switch(e.keyCode){case t.ui.keyCode.TAB:case t.ui.keyCode.ESCAPE:this.close(e),i=!1;break;case t.ui.keyCode.ENTER:this.isOpen&&this._selectFocusedItem(e);break;case t.ui.keyCode.UP:e.altKey?this._toggle(e):this._move(\"prev\",e);break;case t.ui.keyCode.DOWN:e.altKey?this._toggle(e):this._move(\"next\",e);break;case t.ui.keyCode.SPACE:this.isOpen?this._selectFocusedItem(e):this._toggle(e);break;case t.ui.keyCode.LEFT:this._move(\"prev\",e);break;case t.ui.keyCode.RIGHT:this._move(\"next\",e);break;case t.ui.keyCode.HOME:case t.ui.keyCode.PAGE_UP:this._move(\"first\",e);break;case t.ui.keyCode.END:case t.ui.keyCode.PAGE_DOWN:this._move(\"last\",e);break;default:this.menu.trigger(e),i=!1}i&&e.preventDefault()}},_selectFocusedItem:function(t){var e=this.menuItems.eq(this.focusIndex).parent(\"li\");e.hasClass(\"ui-state-disabled\")||this._select(e.data(\"ui-selectmenu-item\"),t)},_select:function(t,e){var i=this.element[0].selectedIndex;this.element[0].selectedIndex=t.index,this.buttonItem.replaceWith(this.buttonItem=this._renderButtonItem(t)),this._setAria(t),this._trigger(\"select\",e,{item:t}),t.index!==i&&this._trigger(\"change\",e,{item:t}),this.close(e)},_setAria:function(t){var e=this.menuItems.eq(t.index).attr(\"id\");this.button.attr({\"aria-labelledby\":e,\"aria-activedescendant\":e}),this.menu.attr(\"aria-activedescendant\",e)},_setOption:function(t,e){if(\"icons\"===t){var i=this.button.find(\"span.ui-icon\");this._removeClass(i,null,this.options.icons.button)._addClass(i,null,e.button)}this._super(t,e),\"appendTo\"===t&&this.menuWrap.appendTo(this._appendTo()),\"width\"===t&&this._resizeButton()},_setOptionDisabled:function(t){this._super(t),this.menuInstance.option(\"disabled\",t),this.button.attr(\"aria-disabled\",t),this._toggleClass(this.button,null,\"ui-state-disabled\",t),this.element.prop(\"disabled\",t),t?(this.button.attr(\"tabindex\",-1),this.close()):this.button.attr(\"tabindex\",0)},_appendTo:function(){var e=this.options.appendTo;return e&&(e=e.jquery||e.nodeType?t(e):this.document.find(e).eq(0)),e&&e[0]||(e=this.element.closest(\".ui-front, dialog\")),e.length||(e=this.document[0].body),e},_toggleAttr:function(){this.button.attr(\"aria-expanded\",this.isOpen),this._removeClass(this.button,\"ui-selectmenu-button-\"+(this.isOpen?\"closed\":\"open\"))._addClass(this.button,\"ui-selectmenu-button-\"+(this.isOpen?\"open\":\"closed\"))._toggleClass(this.menuWrap,\"ui-selectmenu-open\",null,this.isOpen),this.menu.attr(\"aria-hidden\",!this.isOpen)},_resizeButton:function(){var t=this.options.width;return t===!1?(this.button.css(\"width\",\"\"),void 0):(null===t&&(t=this.element.show().outerWidth(),this.element.hide()),this.button.outerWidth(t),void 0)},_resizeMenu:function(){this.menu.outerWidth(Math.max(this.button.outerWidth(),this.menu.width(\"\").outerWidth()+1))},_getCreateOptions:function(){var t=this._super();return t.disabled=this.element.prop(\"disabled\"),t},_parseOptions:function(e){var i=this,s=[];e.each(function(e,n){s.push(i._parseOption(t(n),e))}),this.items=s},_parseOption:function(t,e){var i=t.parent(\"optgroup\");return{element:t,index:e,value:t.val(),label:t.text(),optgroup:i.attr(\"label\")||\"\",disabled:i.prop(\"disabled\")||t.prop(\"disabled\")}},_destroy:function(){this._unbindFormResetHandler(),this.menuWrap.remove(),this.button.remove(),this.element.show(),this.element.removeUniqueId(),this.labels.attr(\"for\",this.ids.element)}}]),t.widget(\"ui.slider\",t.ui.mouse,{version:\"1.12.1\",widgetEventPrefix:\"slide\",options:{animate:!1,classes:{\"ui-slider\":\"ui-corner-all\",\"ui-slider-handle\":\"ui-corner-all\",\"ui-slider-range\":\"ui-corner-all ui-widget-header\"},distance:0,max:100,min:0,orientation:\"horizontal\",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},numPages:5,_create:function(){this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this._calculateNewMax(),this._addClass(\"ui-slider ui-slider-\"+this.orientation,\"ui-widget ui-widget-content\"),this._refresh(),this._animateOff=!1\n},_refresh:function(){this._createRange(),this._createHandles(),this._setupEvents(),this._refreshValue()},_createHandles:function(){var e,i,s=this.options,n=this.element.find(\".ui-slider-handle\"),o=\"<span tabindex='0'></span>\",a=[];for(i=s.values&&s.values.length||1,n.length>i&&(n.slice(i).remove(),n=n.slice(0,i)),e=n.length;i>e;e++)a.push(o);this.handles=n.add(t(a.join(\"\")).appendTo(this.element)),this._addClass(this.handles,\"ui-slider-handle\",\"ui-state-default\"),this.handle=this.handles.eq(0),this.handles.each(function(e){t(this).data(\"ui-slider-handle-index\",e).attr(\"tabIndex\",0)})},_createRange:function(){var e=this.options;e.range?(e.range===!0&&(e.values?e.values.length&&2!==e.values.length?e.values=[e.values[0],e.values[0]]:t.isArray(e.values)&&(e.values=e.values.slice(0)):e.values=[this._valueMin(),this._valueMin()]),this.range&&this.range.length?(this._removeClass(this.range,\"ui-slider-range-min ui-slider-range-max\"),this.range.css({left:\"\",bottom:\"\"})):(this.range=t(\"<div>\").appendTo(this.element),this._addClass(this.range,\"ui-slider-range\")),(\"min\"===e.range||\"max\"===e.range)&&this._addClass(this.range,\"ui-slider-range-\"+e.range)):(this.range&&this.range.remove(),this.range=null)},_setupEvents:function(){this._off(this.handles),this._on(this.handles,this._handleEvents),this._hoverable(this.handles),this._focusable(this.handles)},_destroy:function(){this.handles.remove(),this.range&&this.range.remove(),this._mouseDestroy()},_mouseCapture:function(e){var i,s,n,o,a,r,h,l,c=this,u=this.options;return u.disabled?!1:(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),i={x:e.pageX,y:e.pageY},s=this._normValueFromMouse(i),n=this._valueMax()-this._valueMin()+1,this.handles.each(function(e){var i=Math.abs(s-c.values(e));(n>i||n===i&&(e===c._lastChangedValue||c.values(e)===u.min))&&(n=i,o=t(this),a=e)}),r=this._start(e,a),r===!1?!1:(this._mouseSliding=!0,this._handleIndex=a,this._addClass(o,null,\"ui-state-active\"),o.trigger(\"focus\"),h=o.offset(),l=!t(e.target).parents().addBack().is(\".ui-slider-handle\"),this._clickOffset=l?{left:0,top:0}:{left:e.pageX-h.left-o.width()/2,top:e.pageY-h.top-o.height()/2-(parseInt(o.css(\"borderTopWidth\"),10)||0)-(parseInt(o.css(\"borderBottomWidth\"),10)||0)+(parseInt(o.css(\"marginTop\"),10)||0)},this.handles.hasClass(\"ui-state-hover\")||this._slide(e,a,s),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(t){var e={x:t.pageX,y:t.pageY},i=this._normValueFromMouse(e);return this._slide(t,this._handleIndex,i),!1},_mouseStop:function(t){return this._removeClass(this.handles,null,\"ui-state-active\"),this._mouseSliding=!1,this._stop(t,this._handleIndex),this._change(t,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation=\"vertical\"===this.options.orientation?\"vertical\":\"horizontal\"},_normValueFromMouse:function(t){var e,i,s,n,o;return\"horizontal\"===this.orientation?(e=this.elementSize.width,i=t.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(e=this.elementSize.height,i=t.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),s=i/e,s>1&&(s=1),0>s&&(s=0),\"vertical\"===this.orientation&&(s=1-s),n=this._valueMax()-this._valueMin(),o=this._valueMin()+s*n,this._trimAlignValue(o)},_uiHash:function(t,e,i){var s={handle:this.handles[t],handleIndex:t,value:void 0!==e?e:this.value()};return this._hasMultipleValues()&&(s.value=void 0!==e?e:this.values(t),s.values=i||this.values()),s},_hasMultipleValues:function(){return this.options.values&&this.options.values.length},_start:function(t,e){return this._trigger(\"start\",t,this._uiHash(e))},_slide:function(t,e,i){var s,n,o=this.value(),a=this.values();this._hasMultipleValues()&&(n=this.values(e?0:1),o=this.values(e),2===this.options.values.length&&this.options.range===!0&&(i=0===e?Math.min(n,i):Math.max(n,i)),a[e]=i),i!==o&&(s=this._trigger(\"slide\",t,this._uiHash(e,i,a)),s!==!1&&(this._hasMultipleValues()?this.values(e,i):this.value(i)))},_stop:function(t,e){this._trigger(\"stop\",t,this._uiHash(e))},_change:function(t,e){this._keySliding||this._mouseSliding||(this._lastChangedValue=e,this._trigger(\"change\",t,this._uiHash(e)))},value:function(t){return arguments.length?(this.options.value=this._trimAlignValue(t),this._refreshValue(),this._change(null,0),void 0):this._value()},values:function(e,i){var s,n,o;if(arguments.length>1)return this.options.values[e]=this._trimAlignValue(i),this._refreshValue(),this._change(null,e),void 0;if(!arguments.length)return this._values();if(!t.isArray(arguments[0]))return this._hasMultipleValues()?this._values(e):this.value();for(s=this.options.values,n=arguments[0],o=0;s.length>o;o+=1)s[o]=this._trimAlignValue(n[o]),this._change(null,o);this._refreshValue()},_setOption:function(e,i){var s,n=0;switch(\"range\"===e&&this.options.range===!0&&(\"min\"===i?(this.options.value=this._values(0),this.options.values=null):\"max\"===i&&(this.options.value=this._values(this.options.values.length-1),this.options.values=null)),t.isArray(this.options.values)&&(n=this.options.values.length),this._super(e,i),e){case\"orientation\":this._detectOrientation(),this._removeClass(\"ui-slider-horizontal ui-slider-vertical\")._addClass(\"ui-slider-\"+this.orientation),this._refreshValue(),this.options.range&&this._refreshRange(i),this.handles.css(\"horizontal\"===i?\"bottom\":\"left\",\"\");break;case\"value\":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case\"values\":for(this._animateOff=!0,this._refreshValue(),s=n-1;s>=0;s--)this._change(null,s);this._animateOff=!1;break;case\"step\":case\"min\":case\"max\":this._animateOff=!0,this._calculateNewMax(),this._refreshValue(),this._animateOff=!1;break;case\"range\":this._animateOff=!0,this._refresh(),this._animateOff=!1}},_setOptionDisabled:function(t){this._super(t),this._toggleClass(null,\"ui-state-disabled\",!!t)},_value:function(){var t=this.options.value;return t=this._trimAlignValue(t)},_values:function(t){var e,i,s;if(arguments.length)return e=this.options.values[t],e=this._trimAlignValue(e);if(this._hasMultipleValues()){for(i=this.options.values.slice(),s=0;i.length>s;s+=1)i[s]=this._trimAlignValue(i[s]);return i}return[]},_trimAlignValue:function(t){if(this._valueMin()>=t)return this._valueMin();if(t>=this._valueMax())return this._valueMax();var e=this.options.step>0?this.options.step:1,i=(t-this._valueMin())%e,s=t-i;return 2*Math.abs(i)>=e&&(s+=i>0?e:-e),parseFloat(s.toFixed(5))},_calculateNewMax:function(){var t=this.options.max,e=this._valueMin(),i=this.options.step,s=Math.round((t-e)/i)*i;t=s+e,t>this.options.max&&(t-=i),this.max=parseFloat(t.toFixed(this._precision()))},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min&&(t=Math.max(t,this._precisionOf(this.options.min))),t},_precisionOf:function(t){var e=\"\"+t,i=e.indexOf(\".\");return-1===i?0:e.length-i-1},_valueMin:function(){return this.options.min},_valueMax:function(){return this.max},_refreshRange:function(t){\"vertical\"===t&&this.range.css({width:\"\",left:\"\"}),\"horizontal\"===t&&this.range.css({height:\"\",bottom:\"\"})},_refreshValue:function(){var e,i,s,n,o,a=this.options.range,r=this.options,h=this,l=this._animateOff?!1:r.animate,c={};this._hasMultipleValues()?this.handles.each(function(s){i=100*((h.values(s)-h._valueMin())/(h._valueMax()-h._valueMin())),c[\"horizontal\"===h.orientation?\"left\":\"bottom\"]=i+\"%\",t(this).stop(1,1)[l?\"animate\":\"css\"](c,r.animate),h.options.range===!0&&(\"horizontal\"===h.orientation?(0===s&&h.range.stop(1,1)[l?\"animate\":\"css\"]({left:i+\"%\"},r.animate),1===s&&h.range[l?\"animate\":\"css\"]({width:i-e+\"%\"},{queue:!1,duration:r.animate})):(0===s&&h.range.stop(1,1)[l?\"animate\":\"css\"]({bottom:i+\"%\"},r.animate),1===s&&h.range[l?\"animate\":\"css\"]({height:i-e+\"%\"},{queue:!1,duration:r.animate}))),e=i}):(s=this.value(),n=this._valueMin(),o=this._valueMax(),i=o!==n?100*((s-n)/(o-n)):0,c[\"horizontal\"===this.orientation?\"left\":\"bottom\"]=i+\"%\",this.handle.stop(1,1)[l?\"animate\":\"css\"](c,r.animate),\"min\"===a&&\"horizontal\"===this.orientation&&this.range.stop(1,1)[l?\"animate\":\"css\"]({width:i+\"%\"},r.animate),\"max\"===a&&\"horizontal\"===this.orientation&&this.range.stop(1,1)[l?\"animate\":\"css\"]({width:100-i+\"%\"},r.animate),\"min\"===a&&\"vertical\"===this.orientation&&this.range.stop(1,1)[l?\"animate\":\"css\"]({height:i+\"%\"},r.animate),\"max\"===a&&\"vertical\"===this.orientation&&this.range.stop(1,1)[l?\"animate\":\"css\"]({height:100-i+\"%\"},r.animate))},_handleEvents:{keydown:function(e){var i,s,n,o,a=t(e.target).data(\"ui-slider-handle-index\");switch(e.keyCode){case t.ui.keyCode.HOME:case t.ui.keyCode.END:case t.ui.keyCode.PAGE_UP:case t.ui.keyCode.PAGE_DOWN:case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(e.preventDefault(),!this._keySliding&&(this._keySliding=!0,this._addClass(t(e.target),null,\"ui-state-active\"),i=this._start(e,a),i===!1))return}switch(o=this.options.step,s=n=this._hasMultipleValues()?this.values(a):this.value(),e.keyCode){case t.ui.keyCode.HOME:n=this._valueMin();break;case t.ui.keyCode.END:n=this._valueMax();break;case t.ui.keyCode.PAGE_UP:n=this._trimAlignValue(s+(this._valueMax()-this._valueMin())/this.numPages);break;case t.ui.keyCode.PAGE_DOWN:n=this._trimAlignValue(s-(this._valueMax()-this._valueMin())/this.numPages);break;case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:if(s===this._valueMax())return;n=this._trimAlignValue(s+o);break;case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(s===this._valueMin())return;n=this._trimAlignValue(s-o)}this._slide(e,a,n)},keyup:function(e){var i=t(e.target).data(\"ui-slider-handle-index\");this._keySliding&&(this._keySliding=!1,this._stop(e,i),this._change(e,i),this._removeClass(t(e.target),null,\"ui-state-active\"))}}}),t.widget(\"ui.sortable\",t.ui.mouse,{version:\"1.12.1\",widgetEventPrefix:\"sort\",ready:!1,options:{appendTo:\"parent\",axis:!1,connectWith:!1,containment:!1,cursor:\"auto\",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:\"original\",items:\"> *\",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:\"default\",tolerance:\"intersect\",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_isOverAxis:function(t,e,i){return t>=e&&e+i>t},_isFloating:function(t){return/left|right/.test(t.css(\"float\"))||/inline|table-cell/.test(t.css(\"display\"))},_create:function(){this.containerCache={},this._addClass(\"ui-sortable\"),this.refresh(),this.offset=this.element.offset(),this._mouseInit(),this._setHandleClassName(),this.ready=!0},_setOption:function(t,e){this._super(t,e),\"handle\"===t&&this._setHandleClassName()},_setHandleClassName:function(){var e=this;this._removeClass(this.element.find(\".ui-sortable-handle\"),\"ui-sortable-handle\"),t.each(this.items,function(){e._addClass(this.instance.options.handle?this.item.find(this.instance.options.handle):this.item,\"ui-sortable-handle\")})},_destroy:function(){this._mouseDestroy();for(var t=this.items.length-1;t>=0;t--)this.items[t].item.removeData(this.widgetName+\"-item\");return this},_mouseCapture:function(e,i){var s=null,n=!1,o=this;return this.reverting?!1:this.options.disabled||\"static\"===this.options.type?!1:(this._refreshItems(e),t(e.target).parents().each(function(){return t.data(this,o.widgetName+\"-item\")===o?(s=t(this),!1):void 0}),t.data(e.target,o.widgetName+\"-item\")===o&&(s=t(e.target)),s?!this.options.handle||i||(t(this.options.handle,s).find(\"*\").addBack().each(function(){this===e.target&&(n=!0)}),n)?(this.currentItem=s,this._removeCurrentsFromItems(),!0):!1:!1)},_mouseStart:function(e,i,s){var n,o,a=this.options;if(this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(e),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css(\"position\",\"absolute\"),this.cssPosition=this.helper.css(\"position\"),this.originalPosition=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,a.cursorAt&&this._adjustOffsetFromHelper(a.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),a.containment&&this._setContainment(),a.cursor&&\"auto\"!==a.cursor&&(o=this.document.find(\"body\"),this.storedCursor=o.css(\"cursor\"),o.css(\"cursor\",a.cursor),this.storedStylesheet=t(\"<style>*{ cursor: \"+a.cursor+\" !important; }</style>\").appendTo(o)),a.opacity&&(this.helper.css(\"opacity\")&&(this._storedOpacity=this.helper.css(\"opacity\")),this.helper.css(\"opacity\",a.opacity)),a.zIndex&&(this.helper.css(\"zIndex\")&&(this._storedZIndex=this.helper.css(\"zIndex\")),this.helper.css(\"zIndex\",a.zIndex)),this.scrollParent[0]!==this.document[0]&&\"HTML\"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this._trigger(\"start\",e,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!s)for(n=this.containers.length-1;n>=0;n--)this.containers[n]._trigger(\"activate\",e,this._uiHash(this));return t.ui.ddmanager&&(t.ui.ddmanager.current=this),t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this.dragging=!0,this._addClass(this.helper,\"ui-sortable-helper\"),this._mouseDrag(e),!0},_mouseDrag:function(e){var i,s,n,o,a=this.options,r=!1;for(this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo(\"absolute\"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==this.document[0]&&\"HTML\"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-e.pageY<a.scrollSensitivity?this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop+a.scrollSpeed:e.pageY-this.overflowOffset.top<a.scrollSensitivity&&(this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop-a.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-e.pageX<a.scrollSensitivity?this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft+a.scrollSpeed:e.pageX-this.overflowOffset.left<a.scrollSensitivity&&(this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft-a.scrollSpeed)):(e.pageY-this.document.scrollTop()<a.scrollSensitivity?r=this.document.scrollTop(this.document.scrollTop()-a.scrollSpeed):this.window.height()-(e.pageY-this.document.scrollTop())<a.scrollSensitivity&&(r=this.document.scrollTop(this.document.scrollTop()+a.scrollSpeed)),e.pageX-this.document.scrollLeft()<a.scrollSensitivity?r=this.document.scrollLeft(this.document.scrollLeft()-a.scrollSpeed):this.window.width()-(e.pageX-this.document.scrollLeft())<a.scrollSensitivity&&(r=this.document.scrollLeft(this.document.scrollLeft()+a.scrollSpeed))),r!==!1&&t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e)),this.positionAbs=this._convertPositionTo(\"absolute\"),this.options.axis&&\"y\"===this.options.axis||(this.helper[0].style.left=this.position.left+\"px\"),this.options.axis&&\"x\"===this.options.axis||(this.helper[0].style.top=this.position.top+\"px\"),i=this.items.length-1;i>=0;i--)if(s=this.items[i],n=s.item[0],o=this._intersectsWithPointer(s),o&&s.instance===this.currentContainer&&n!==this.currentItem[0]&&this.placeholder[1===o?\"next\":\"prev\"]()[0]!==n&&!t.contains(this.placeholder[0],n)&&(\"semi-dynamic\"===this.options.type?!t.contains(this.element[0],n):!0)){if(this.direction=1===o?\"down\":\"up\",\"pointer\"!==this.options.tolerance&&!this._intersectsWithSides(s))break;this._rearrange(e,s),this._trigger(\"change\",e,this._uiHash());break}return this._contactContainers(e),t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),this._trigger(\"sort\",e,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(e,i){if(e){if(t.ui.ddmanager&&!this.options.dropBehaviour&&t.ui.ddmanager.drop(this,e),this.options.revert){var s=this,n=this.placeholder.offset(),o=this.options.axis,a={};o&&\"x\"!==o||(a.left=n.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollLeft)),o&&\"y\"!==o||(a.top=n.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,t(this.helper).animate(a,parseInt(this.options.revert,10)||500,function(){s._clear(e)})}else this._clear(e,i);return!1}},cancel:function(){if(this.dragging){this._mouseUp(new t.Event(\"mouseup\",{target:null})),\"original\"===this.options.helper?(this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,\"ui-sortable-helper\")):this.currentItem.show();for(var e=this.containers.length-1;e>=0;e--)this.containers[e]._trigger(\"deactivate\",null,this._uiHash(this)),this.containers[e].containerCache.over&&(this.containers[e]._trigger(\"out\",null,this._uiHash(this)),this.containers[e].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),\"original\"!==this.options.helper&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),t.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?t(this.domPosition.prev).after(this.currentItem):t(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},t(i).each(function(){var i=(t(e.item||this).attr(e.attribute||\"id\")||\"\").match(e.expression||/(.+)[\\-=_](.+)/);i&&s.push((e.key||i[1]+\"[]\")+\"=\"+(e.key&&e.expression?i[1]:i[2]))}),!s.length&&e.key&&s.push(e.key+\"=\"),s.join(\"&\")},toArray:function(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},i.each(function(){s.push(t(e.item||this).attr(e.attribute||\"id\")||\"\")}),s},_intersectsWith:function(t){var e=this.positionAbs.left,i=e+this.helperProportions.width,s=this.positionAbs.top,n=s+this.helperProportions.height,o=t.left,a=o+t.width,r=t.top,h=r+t.height,l=this.offset.click.top,c=this.offset.click.left,u=\"x\"===this.options.axis||s+l>r&&h>s+l,d=\"y\"===this.options.axis||e+c>o&&a>e+c,p=u&&d;return\"pointer\"===this.options.tolerance||this.options.forcePointerForContainers||\"pointer\"!==this.options.tolerance&&this.helperProportions[this.floating?\"width\":\"height\"]>t[this.floating?\"width\":\"height\"]?p:e+this.helperProportions.width/2>o&&a>i-this.helperProportions.width/2&&s+this.helperProportions.height/2>r&&h>n-this.helperProportions.height/2},_intersectsWithPointer:function(t){var e,i,s=\"x\"===this.options.axis||this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top,t.height),n=\"y\"===this.options.axis||this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left,t.width),o=s&&n;return o?(e=this._getDragVerticalDirection(),i=this._getDragHorizontalDirection(),this.floating?\"right\"===i||\"down\"===e?2:1:e&&(\"down\"===e?2:1)):!1},_intersectsWithSides:function(t){var e=this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),i=this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),s=this._getDragVerticalDirection(),n=this._getDragHorizontalDirection();return this.floating&&n?\"right\"===n&&i||\"left\"===n&&!i:s&&(\"down\"===s&&e||\"up\"===s&&!e)},_getDragVerticalDirection:function(){var t=this.positionAbs.top-this.lastPositionAbs.top;return 0!==t&&(t>0?\"down\":\"up\")},_getDragHorizontalDirection:function(){var t=this.positionAbs.left-this.lastPositionAbs.left;return 0!==t&&(t>0?\"right\":\"left\")},refresh:function(t){return this._refreshItems(t),this._setHandleClassName(),this.refreshPositions(),this},_connectWith:function(){var t=this.options;return t.connectWith.constructor===String?[t.connectWith]:t.connectWith},_getItemsAsjQuery:function(e){function i(){r.push(this)}var s,n,o,a,r=[],h=[],l=this._connectWith();if(l&&e)for(s=l.length-1;s>=0;s--)for(o=t(l[s],this.document[0]),n=o.length-1;n>=0;n--)a=t.data(o[n],this.widgetFullName),a&&a!==this&&!a.options.disabled&&h.push([t.isFunction(a.options.items)?a.options.items.call(a.element):t(a.options.items,a.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"),a]);for(h.push([t.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):t(this.options.items,this.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"),this]),s=h.length-1;s>=0;s--)h[s][0].each(i);return t(r)},_removeCurrentsFromItems:function(){var e=this.currentItem.find(\":data(\"+this.widgetName+\"-item)\");this.items=t.grep(this.items,function(t){for(var i=0;e.length>i;i++)if(e[i]===t.item[0])return!1;return!0})},_refreshItems:function(e){this.items=[],this.containers=[this];var i,s,n,o,a,r,h,l,c=this.items,u=[[t.isFunction(this.options.items)?this.options.items.call(this.element[0],e,{item:this.currentItem}):t(this.options.items,this.element),this]],d=this._connectWith();if(d&&this.ready)for(i=d.length-1;i>=0;i--)for(n=t(d[i],this.document[0]),s=n.length-1;s>=0;s--)o=t.data(n[s],this.widgetFullName),o&&o!==this&&!o.options.disabled&&(u.push([t.isFunction(o.options.items)?o.options.items.call(o.element[0],e,{item:this.currentItem}):t(o.options.items,o.element),o]),this.containers.push(o));for(i=u.length-1;i>=0;i--)for(a=u[i][1],r=u[i][0],s=0,l=r.length;l>s;s++)h=t(r[s]),h.data(this.widgetName+\"-item\",a),c.push({item:h,instance:a,width:0,height:0,left:0,top:0})},refreshPositions:function(e){this.floating=this.items.length?\"x\"===this.options.axis||this._isFloating(this.items[0].item):!1,this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());var i,s,n,o;for(i=this.items.length-1;i>=0;i--)s=this.items[i],s.instance!==this.currentContainer&&this.currentContainer&&s.item[0]!==this.currentItem[0]||(n=this.options.toleranceElement?t(this.options.toleranceElement,s.item):s.item,e||(s.width=n.outerWidth(),s.height=n.outerHeight()),o=n.offset(),s.left=o.left,s.top=o.top);if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(i=this.containers.length-1;i>=0;i--)o=this.containers[i].element.offset(),this.containers[i].containerCache.left=o.left,this.containers[i].containerCache.top=o.top,this.containers[i].containerCache.width=this.containers[i].element.outerWidth(),this.containers[i].containerCache.height=this.containers[i].element.outerHeight();return this},_createPlaceholder:function(e){e=e||this;var i,s=e.options;s.placeholder&&s.placeholder.constructor!==String||(i=s.placeholder,s.placeholder={element:function(){var s=e.currentItem[0].nodeName.toLowerCase(),n=t(\"<\"+s+\">\",e.document[0]);return e._addClass(n,\"ui-sortable-placeholder\",i||e.currentItem[0].className)._removeClass(n,\"ui-sortable-helper\"),\"tbody\"===s?e._createTrPlaceholder(e.currentItem.find(\"tr\").eq(0),t(\"<tr>\",e.document[0]).appendTo(n)):\"tr\"===s?e._createTrPlaceholder(e.currentItem,n):\"img\"===s&&n.attr(\"src\",e.currentItem.attr(\"src\")),i||n.css(\"visibility\",\"hidden\"),n},update:function(t,n){(!i||s.forcePlaceholderSize)&&(n.height()||n.height(e.currentItem.innerHeight()-parseInt(e.currentItem.css(\"paddingTop\")||0,10)-parseInt(e.currentItem.css(\"paddingBottom\")||0,10)),n.width()||n.width(e.currentItem.innerWidth()-parseInt(e.currentItem.css(\"paddingLeft\")||0,10)-parseInt(e.currentItem.css(\"paddingRight\")||0,10)))}}),e.placeholder=t(s.placeholder.element.call(e.element,e.currentItem)),e.currentItem.after(e.placeholder),s.placeholder.update(e,e.placeholder)},_createTrPlaceholder:function(e,i){var s=this;e.children().each(function(){t(\"<td>&#160;</td>\",s.document[0]).attr(\"colspan\",t(this).attr(\"colspan\")||1).appendTo(i)})},_contactContainers:function(e){var i,s,n,o,a,r,h,l,c,u,d=null,p=null;for(i=this.containers.length-1;i>=0;i--)if(!t.contains(this.currentItem[0],this.containers[i].element[0]))if(this._intersectsWith(this.containers[i].containerCache)){if(d&&t.contains(this.containers[i].element[0],d.element[0]))continue;d=this.containers[i],p=i}else this.containers[i].containerCache.over&&(this.containers[i]._trigger(\"out\",e,this._uiHash(this)),this.containers[i].containerCache.over=0);if(d)if(1===this.containers.length)this.containers[p].containerCache.over||(this.containers[p]._trigger(\"over\",e,this._uiHash(this)),this.containers[p].containerCache.over=1);else{for(n=1e4,o=null,c=d.floating||this._isFloating(this.currentItem),a=c?\"left\":\"top\",r=c?\"width\":\"height\",u=c?\"pageX\":\"pageY\",s=this.items.length-1;s>=0;s--)t.contains(this.containers[p].element[0],this.items[s].item[0])&&this.items[s].item[0]!==this.currentItem[0]&&(h=this.items[s].item.offset()[a],l=!1,e[u]-h>this.items[s][r]/2&&(l=!0),n>Math.abs(e[u]-h)&&(n=Math.abs(e[u]-h),o=this.items[s],this.direction=l?\"up\":\"down\"));if(!o&&!this.options.dropOnEmpty)return;if(this.currentContainer===this.containers[p])return this.currentContainer.containerCache.over||(this.containers[p]._trigger(\"over\",e,this._uiHash()),this.currentContainer.containerCache.over=1),void 0;o?this._rearrange(e,o,null,!0):this._rearrange(e,null,this.containers[p].element,!0),this._trigger(\"change\",e,this._uiHash()),this.containers[p]._trigger(\"change\",e,this._uiHash(this)),this.currentContainer=this.containers[p],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[p]._trigger(\"over\",e,this._uiHash(this)),this.containers[p].containerCache.over=1}},_createHelper:function(e){var i=this.options,s=t.isFunction(i.helper)?t(i.helper.apply(this.element[0],[e,this.currentItem])):\"clone\"===i.helper?this.currentItem.clone():this.currentItem;return s.parents(\"body\").length||t(\"parent\"!==i.appendTo?i.appendTo:this.currentItem[0].parentNode)[0].appendChild(s[0]),s[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css(\"position\"),top:this.currentItem.css(\"top\"),left:this.currentItem.css(\"left\")}),(!s[0].style.width||i.forceHelperSize)&&s.width(this.currentItem.width()),(!s[0].style.height||i.forceHelperSize)&&s.height(this.currentItem.height()),s},_adjustOffsetFromHelper:function(e){\"string\"==typeof e&&(e=e.split(\" \")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),\"left\"in e&&(this.offset.click.left=e.left+this.margins.left),\"right\"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),\"top\"in e&&(this.offset.click.top=e.top+this.margins.top),\"bottom\"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var e=this.offsetParent.offset();return\"absolute\"===this.cssPosition&&this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===this.document[0].body||this.offsetParent[0].tagName&&\"html\"===this.offsetParent[0].tagName.toLowerCase()&&t.ui.ie)&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css(\"borderTopWidth\"),10)||0),left:e.left+(parseInt(this.offsetParent.css(\"borderLeftWidth\"),10)||0)}},_getRelativeOffset:function(){if(\"relative\"===this.cssPosition){var t=this.currentItem.position();return{top:t.top-(parseInt(this.helper.css(\"top\"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css(\"left\"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css(\"marginLeft\"),10)||0,top:parseInt(this.currentItem.css(\"marginTop\"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,s,n=this.options;\"parent\"===n.containment&&(n.containment=this.helper[0].parentNode),(\"document\"===n.containment||\"window\"===n.containment)&&(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,\"document\"===n.containment?this.document.width():this.window.width()-this.helperProportions.width-this.margins.left,(\"document\"===n.containment?this.document.height()||document.body.parentNode.scrollHeight:this.window.height()||this.document[0].body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(n.containment)||(e=t(n.containment)[0],i=t(n.containment).offset(),s=\"hidden\"!==t(e).css(\"overflow\"),this.containment=[i.left+(parseInt(t(e).css(\"borderLeftWidth\"),10)||0)+(parseInt(t(e).css(\"paddingLeft\"),10)||0)-this.margins.left,i.top+(parseInt(t(e).css(\"borderTopWidth\"),10)||0)+(parseInt(t(e).css(\"paddingTop\"),10)||0)-this.margins.top,i.left+(s?Math.max(e.scrollWidth,e.offsetWidth):e.offsetWidth)-(parseInt(t(e).css(\"borderLeftWidth\"),10)||0)-(parseInt(t(e).css(\"paddingRight\"),10)||0)-this.helperProportions.width-this.margins.left,i.top+(s?Math.max(e.scrollHeight,e.offsetHeight):e.offsetHeight)-(parseInt(t(e).css(\"borderTopWidth\"),10)||0)-(parseInt(t(e).css(\"paddingBottom\"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(e,i){i||(i=this.position);var s=\"absolute\"===e?1:-1,n=\"absolute\"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(n[0].tagName);return{top:i.top+this.offset.relative.top*s+this.offset.parent.top*s-(\"fixed\"===this.cssPosition?-this.scrollParent.scrollTop():o?0:n.scrollTop())*s,left:i.left+this.offset.relative.left*s+this.offset.parent.left*s-(\"fixed\"===this.cssPosition?-this.scrollParent.scrollLeft():o?0:n.scrollLeft())*s}},_generatePosition:function(e){var i,s,n=this.options,o=e.pageX,a=e.pageY,r=\"absolute\"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,h=/(html|body)/i.test(r[0].tagName);return\"relative\"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(e.pageX-this.offset.click.left<this.containment[0]&&(o=this.containment[0]+this.offset.click.left),e.pageY-this.offset.click.top<this.containment[1]&&(a=this.containment[1]+this.offset.click.top),e.pageX-this.offset.click.left>this.containment[2]&&(o=this.containment[2]+this.offset.click.left),e.pageY-this.offset.click.top>this.containment[3]&&(a=this.containment[3]+this.offset.click.top)),n.grid&&(i=this.originalPageY+Math.round((a-this.originalPageY)/n.grid[1])*n.grid[1],a=this.containment?i-this.offset.click.top>=this.containment[1]&&i-this.offset.click.top<=this.containment[3]?i:i-this.offset.click.top>=this.containment[1]?i-n.grid[1]:i+n.grid[1]:i,s=this.originalPageX+Math.round((o-this.originalPageX)/n.grid[0])*n.grid[0],o=this.containment?s-this.offset.click.left>=this.containment[0]&&s-this.offset.click.left<=this.containment[2]?s:s-this.offset.click.left>=this.containment[0]?s-n.grid[0]:s+n.grid[0]:s)),{top:a-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(\"fixed\"===this.cssPosition?-this.scrollParent.scrollTop():h?0:r.scrollTop()),left:o-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(\"fixed\"===this.cssPosition?-this.scrollParent.scrollLeft():h?0:r.scrollLeft())}},_rearrange:function(t,e,i,s){i?i[0].appendChild(this.placeholder[0]):e.item[0].parentNode.insertBefore(this.placeholder[0],\"down\"===this.direction?e.item[0]:e.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var n=this.counter;\nthis._delay(function(){n===this.counter&&this.refreshPositions(!s)})},_clear:function(t,e){function i(t,e,i){return function(s){i._trigger(t,s,e._uiHash(e))}}this.reverting=!1;var s,n=[];if(!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(s in this._storedCSS)(\"auto\"===this._storedCSS[s]||\"static\"===this._storedCSS[s])&&(this._storedCSS[s]=\"\");this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,\"ui-sortable-helper\")}else this.currentItem.show();for(this.fromOutside&&!e&&n.push(function(t){this._trigger(\"receive\",t,this._uiHash(this.fromOutside))}),!this.fromOutside&&this.domPosition.prev===this.currentItem.prev().not(\".ui-sortable-helper\")[0]&&this.domPosition.parent===this.currentItem.parent()[0]||e||n.push(function(t){this._trigger(\"update\",t,this._uiHash())}),this!==this.currentContainer&&(e||(n.push(function(t){this._trigger(\"remove\",t,this._uiHash())}),n.push(function(t){return function(e){t._trigger(\"receive\",e,this._uiHash(this))}}.call(this,this.currentContainer)),n.push(function(t){return function(e){t._trigger(\"update\",e,this._uiHash(this))}}.call(this,this.currentContainer)))),s=this.containers.length-1;s>=0;s--)e||n.push(i(\"deactivate\",this,this.containers[s])),this.containers[s].containerCache.over&&(n.push(i(\"out\",this,this.containers[s])),this.containers[s].containerCache.over=0);if(this.storedCursor&&(this.document.find(\"body\").css(\"cursor\",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&&this.helper.css(\"opacity\",this._storedOpacity),this._storedZIndex&&this.helper.css(\"zIndex\",\"auto\"===this._storedZIndex?\"\":this._storedZIndex),this.dragging=!1,e||this._trigger(\"beforeStop\",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.cancelHelperRemoval||(this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null),!e){for(s=0;n.length>s;s++)n[s].call(this,t);this._trigger(\"stop\",t,this._uiHash())}return this.fromOutside=!1,!this.cancelHelperRemoval},_trigger:function(){t.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(e){var i=e||this;return{helper:i.helper,placeholder:i.placeholder||t([]),position:i.position,originalPosition:i.originalPosition,offset:i.positionAbs,item:i.currentItem,sender:e?e.element:null}}}),t.widget(\"ui.spinner\",{version:\"1.12.1\",defaultElement:\"<input>\",widgetEventPrefix:\"spin\",options:{classes:{\"ui-spinner\":\"ui-corner-all\",\"ui-spinner-down\":\"ui-corner-br\",\"ui-spinner-up\":\"ui-corner-tr\"},culture:null,icons:{down:\"ui-icon-triangle-1-s\",up:\"ui-icon-triangle-1-n\"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption(\"max\",this.options.max),this._setOption(\"min\",this.options.min),this._setOption(\"step\",this.options.step),\"\"!==this.value()&&this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function(){this.element.removeAttr(\"autocomplete\")}})},_getCreateOptions:function(){var e=this._super(),i=this.element;return t.each([\"min\",\"max\",\"step\"],function(t,s){var n=i.attr(s);null!=n&&n.length&&(e[s]=n)}),e},_events:{keydown:function(t){this._start(t)&&this._keydown(t)&&t.preventDefault()},keyup:\"_stop\",focus:function(){this.previous=this.element.val()},blur:function(t){return this.cancelBlur?(delete this.cancelBlur,void 0):(this._stop(),this._refresh(),this.previous!==this.element.val()&&this._trigger(\"change\",t),void 0)},mousewheel:function(t,e){if(e){if(!this.spinning&&!this._start(t))return!1;this._spin((e>0?1:-1)*this.options.step,t),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay(function(){this.spinning&&this._stop(t)},100),t.preventDefault()}},\"mousedown .ui-spinner-button\":function(e){function i(){var e=this.element[0]===t.ui.safeActiveElement(this.document[0]);e||(this.element.trigger(\"focus\"),this.previous=s,this._delay(function(){this.previous=s}))}var s;s=this.element[0]===t.ui.safeActiveElement(this.document[0])?this.previous:this.element.val(),e.preventDefault(),i.call(this),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,i.call(this)}),this._start(e)!==!1&&this._repeat(null,t(e.currentTarget).hasClass(\"ui-spinner-up\")?1:-1,e)},\"mouseup .ui-spinner-button\":\"_stop\",\"mouseenter .ui-spinner-button\":function(e){return t(e.currentTarget).hasClass(\"ui-state-active\")?this._start(e)===!1?!1:(this._repeat(null,t(e.currentTarget).hasClass(\"ui-spinner-up\")?1:-1,e),void 0):void 0},\"mouseleave .ui-spinner-button\":\"_stop\"},_enhance:function(){this.uiSpinner=this.element.attr(\"autocomplete\",\"off\").wrap(\"<span>\").parent().append(\"<a></a><a></a>\")},_draw:function(){this._enhance(),this._addClass(this.uiSpinner,\"ui-spinner\",\"ui-widget ui-widget-content\"),this._addClass(\"ui-spinner-input\"),this.element.attr(\"role\",\"spinbutton\"),this.buttons=this.uiSpinner.children(\"a\").attr(\"tabIndex\",-1).attr(\"aria-hidden\",!0).button({classes:{\"ui-button\":\"\"}}),this._removeClass(this.buttons,\"ui-corner-all\"),this._addClass(this.buttons.first(),\"ui-spinner-button ui-spinner-up\"),this._addClass(this.buttons.last(),\"ui-spinner-button ui-spinner-down\"),this.buttons.first().button({icon:this.options.icons.up,showLabel:!1}),this.buttons.last().button({icon:this.options.icons.down,showLabel:!1}),this.buttons.height()>Math.ceil(.5*this.uiSpinner.height())&&this.uiSpinner.height()>0&&this.uiSpinner.height(this.uiSpinner.height())},_keydown:function(e){var i=this.options,s=t.ui.keyCode;switch(e.keyCode){case s.UP:return this._repeat(null,1,e),!0;case s.DOWN:return this._repeat(null,-1,e),!0;case s.PAGE_UP:return this._repeat(null,i.page,e),!0;case s.PAGE_DOWN:return this._repeat(null,-i.page,e),!0}return!1},_start:function(t){return this.spinning||this._trigger(\"start\",t)!==!1?(this.counter||(this.counter=1),this.spinning=!0,!0):!1},_repeat:function(t,e,i){t=t||500,clearTimeout(this.timer),this.timer=this._delay(function(){this._repeat(40,e,i)},t),this._spin(e*this.options.step,i)},_spin:function(t,e){var i=this.value()||0;this.counter||(this.counter=1),i=this._adjustValue(i+t*this._increment(this.counter)),this.spinning&&this._trigger(\"spin\",e,{value:i})===!1||(this._value(i),this.counter++)},_increment:function(e){var i=this.options.incremental;return i?t.isFunction(i)?i(e):Math.floor(e*e*e/5e4-e*e/500+17*e/200+1):1},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min&&(t=Math.max(t,this._precisionOf(this.options.min))),t},_precisionOf:function(t){var e=\"\"+t,i=e.indexOf(\".\");return-1===i?0:e.length-i-1},_adjustValue:function(t){var e,i,s=this.options;return e=null!==s.min?s.min:0,i=t-e,i=Math.round(i/s.step)*s.step,t=e+i,t=parseFloat(t.toFixed(this._precision())),null!==s.max&&t>s.max?s.max:null!==s.min&&s.min>t?s.min:t},_stop:function(t){this.spinning&&(clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger(\"stop\",t))},_setOption:function(t,e){var i,s,n;return\"culture\"===t||\"numberFormat\"===t?(i=this._parse(this.element.val()),this.options[t]=e,this.element.val(this._format(i)),void 0):((\"max\"===t||\"min\"===t||\"step\"===t)&&\"string\"==typeof e&&(e=this._parse(e)),\"icons\"===t&&(s=this.buttons.first().find(\".ui-icon\"),this._removeClass(s,null,this.options.icons.up),this._addClass(s,null,e.up),n=this.buttons.last().find(\".ui-icon\"),this._removeClass(n,null,this.options.icons.down),this._addClass(n,null,e.down)),this._super(t,e),void 0)},_setOptionDisabled:function(t){this._super(t),this._toggleClass(this.uiSpinner,null,\"ui-state-disabled\",!!t),this.element.prop(\"disabled\",!!t),this.buttons.button(t?\"disable\":\"enable\")},_setOptions:r(function(t){this._super(t)}),_parse:function(t){return\"string\"==typeof t&&\"\"!==t&&(t=window.Globalize&&this.options.numberFormat?Globalize.parseFloat(t,10,this.options.culture):+t),\"\"===t||isNaN(t)?null:t},_format:function(t){return\"\"===t?\"\":window.Globalize&&this.options.numberFormat?Globalize.format(t,this.options.numberFormat,this.options.culture):t},_refresh:function(){this.element.attr({\"aria-valuemin\":this.options.min,\"aria-valuemax\":this.options.max,\"aria-valuenow\":this._parse(this.element.val())})},isValid:function(){var t=this.value();return null===t?!1:t===this._adjustValue(t)},_value:function(t,e){var i;\"\"!==t&&(i=this._parse(t),null!==i&&(e||(i=this._adjustValue(i)),t=this._format(i))),this.element.val(t),this._refresh()},_destroy:function(){this.element.prop(\"disabled\",!1).removeAttr(\"autocomplete role aria-valuemin aria-valuemax aria-valuenow\"),this.uiSpinner.replaceWith(this.element)},stepUp:r(function(t){this._stepUp(t)}),_stepUp:function(t){this._start()&&(this._spin((t||1)*this.options.step),this._stop())},stepDown:r(function(t){this._stepDown(t)}),_stepDown:function(t){this._start()&&(this._spin((t||1)*-this.options.step),this._stop())},pageUp:r(function(t){this._stepUp((t||1)*this.options.page)}),pageDown:r(function(t){this._stepDown((t||1)*this.options.page)}),value:function(t){return arguments.length?(r(this._value).call(this,t),void 0):this._parse(this.element.val())},widget:function(){return this.uiSpinner}}),t.uiBackCompat!==!1&&t.widget(\"ui.spinner\",t.ui.spinner,{_enhance:function(){this.uiSpinner=this.element.attr(\"autocomplete\",\"off\").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml())},_uiSpinnerHtml:function(){return\"<span>\"},_buttonHtml:function(){return\"<a></a><a></a>\"}}),t.ui.spinner,t.widget(\"ui.tabs\",{version:\"1.12.1\",delay:300,options:{active:null,classes:{\"ui-tabs\":\"ui-corner-all\",\"ui-tabs-nav\":\"ui-corner-all\",\"ui-tabs-panel\":\"ui-corner-bottom\",\"ui-tabs-tab\":\"ui-corner-top\"},collapsible:!1,event:\"click\",heightStyle:\"content\",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_isLocal:function(){var t=/#.*$/;return function(e){var i,s;i=e.href.replace(t,\"\"),s=location.href.replace(t,\"\");try{i=decodeURIComponent(i)}catch(n){}try{s=decodeURIComponent(s)}catch(n){}return e.hash.length>1&&i===s}}(),_create:function(){var e=this,i=this.options;this.running=!1,this._addClass(\"ui-tabs\",\"ui-widget ui-widget-content\"),this._toggleClass(\"ui-tabs-collapsible\",null,i.collapsible),this._processTabs(),i.active=this._initialActive(),t.isArray(i.disabled)&&(i.disabled=t.unique(i.disabled.concat(t.map(this.tabs.filter(\".ui-state-disabled\"),function(t){return e.tabs.index(t)}))).sort()),this.active=this.options.active!==!1&&this.anchors.length?this._findActive(i.active):t(),this._refresh(),this.active.length&&this.load(i.active)},_initialActive:function(){var e=this.options.active,i=this.options.collapsible,s=location.hash.substring(1);return null===e&&(s&&this.tabs.each(function(i,n){return t(n).attr(\"aria-controls\")===s?(e=i,!1):void 0}),null===e&&(e=this.tabs.index(this.tabs.filter(\".ui-tabs-active\"))),(null===e||-1===e)&&(e=this.tabs.length?0:!1)),e!==!1&&(e=this.tabs.index(this.tabs.eq(e)),-1===e&&(e=i?!1:0)),!i&&e===!1&&this.anchors.length&&(e=0),e},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):t()}},_tabKeydown:function(e){var i=t(t.ui.safeActiveElement(this.document[0])).closest(\"li\"),s=this.tabs.index(i),n=!0;if(!this._handlePageNav(e)){switch(e.keyCode){case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:s++;break;case t.ui.keyCode.UP:case t.ui.keyCode.LEFT:n=!1,s--;break;case t.ui.keyCode.END:s=this.anchors.length-1;break;case t.ui.keyCode.HOME:s=0;break;case t.ui.keyCode.SPACE:return e.preventDefault(),clearTimeout(this.activating),this._activate(s),void 0;case t.ui.keyCode.ENTER:return e.preventDefault(),clearTimeout(this.activating),this._activate(s===this.options.active?!1:s),void 0;default:return}e.preventDefault(),clearTimeout(this.activating),s=this._focusNextTab(s,n),e.ctrlKey||e.metaKey||(i.attr(\"aria-selected\",\"false\"),this.tabs.eq(s).attr(\"aria-selected\",\"true\"),this.activating=this._delay(function(){this.option(\"active\",s)},this.delay))}},_panelKeydown:function(e){this._handlePageNav(e)||e.ctrlKey&&e.keyCode===t.ui.keyCode.UP&&(e.preventDefault(),this.active.trigger(\"focus\"))},_handlePageNav:function(e){return e.altKey&&e.keyCode===t.ui.keyCode.PAGE_UP?(this._activate(this._focusNextTab(this.options.active-1,!1)),!0):e.altKey&&e.keyCode===t.ui.keyCode.PAGE_DOWN?(this._activate(this._focusNextTab(this.options.active+1,!0)),!0):void 0},_findNextTab:function(e,i){function s(){return e>n&&(e=0),0>e&&(e=n),e}for(var n=this.tabs.length-1;-1!==t.inArray(s(),this.options.disabled);)e=i?e+1:e-1;return e},_focusNextTab:function(t,e){return t=this._findNextTab(t,e),this.tabs.eq(t).trigger(\"focus\"),t},_setOption:function(t,e){return\"active\"===t?(this._activate(e),void 0):(this._super(t,e),\"collapsible\"===t&&(this._toggleClass(\"ui-tabs-collapsible\",null,e),e||this.options.active!==!1||this._activate(0)),\"event\"===t&&this._setupEvents(e),\"heightStyle\"===t&&this._setupHeightStyle(e),void 0)},_sanitizeSelector:function(t){return t?t.replace(/[!\"$%&'()*+,.\\/:;<=>?@\\[\\]\\^`{|}~]/g,\"\\\\$&\"):\"\"},refresh:function(){var e=this.options,i=this.tablist.children(\":has(a[href])\");e.disabled=t.map(i.filter(\".ui-state-disabled\"),function(t){return i.index(t)}),this._processTabs(),e.active!==!1&&this.anchors.length?this.active.length&&!t.contains(this.tablist[0],this.active[0])?this.tabs.length===e.disabled.length?(e.active=!1,this.active=t()):this._activate(this._findNextTab(Math.max(0,e.active-1),!1)):e.active=this.tabs.index(this.active):(e.active=!1,this.active=t()),this._refresh()},_refresh:function(){this._setOptionDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({\"aria-selected\":\"false\",\"aria-expanded\":\"false\",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({\"aria-hidden\":\"true\"}),this.active.length?(this.active.attr({\"aria-selected\":\"true\",\"aria-expanded\":\"true\",tabIndex:0}),this._addClass(this.active,\"ui-tabs-active\",\"ui-state-active\"),this._getPanelForTab(this.active).show().attr({\"aria-hidden\":\"false\"})):this.tabs.eq(0).attr(\"tabIndex\",0)},_processTabs:function(){var e=this,i=this.tabs,s=this.anchors,n=this.panels;this.tablist=this._getList().attr(\"role\",\"tablist\"),this._addClass(this.tablist,\"ui-tabs-nav\",\"ui-helper-reset ui-helper-clearfix ui-widget-header\"),this.tablist.on(\"mousedown\"+this.eventNamespace,\"> li\",function(e){t(this).is(\".ui-state-disabled\")&&e.preventDefault()}).on(\"focus\"+this.eventNamespace,\".ui-tabs-anchor\",function(){t(this).closest(\"li\").is(\".ui-state-disabled\")&&this.blur()}),this.tabs=this.tablist.find(\"> li:has(a[href])\").attr({role:\"tab\",tabIndex:-1}),this._addClass(this.tabs,\"ui-tabs-tab\",\"ui-state-default\"),this.anchors=this.tabs.map(function(){return t(\"a\",this)[0]}).attr({role:\"presentation\",tabIndex:-1}),this._addClass(this.anchors,\"ui-tabs-anchor\"),this.panels=t(),this.anchors.each(function(i,s){var n,o,a,r=t(s).uniqueId().attr(\"id\"),h=t(s).closest(\"li\"),l=h.attr(\"aria-controls\");e._isLocal(s)?(n=s.hash,a=n.substring(1),o=e.element.find(e._sanitizeSelector(n))):(a=h.attr(\"aria-controls\")||t({}).uniqueId()[0].id,n=\"#\"+a,o=e.element.find(n),o.length||(o=e._createPanel(a),o.insertAfter(e.panels[i-1]||e.tablist)),o.attr(\"aria-live\",\"polite\")),o.length&&(e.panels=e.panels.add(o)),l&&h.data(\"ui-tabs-aria-controls\",l),h.attr({\"aria-controls\":a,\"aria-labelledby\":r}),o.attr(\"aria-labelledby\",r)}),this.panels.attr(\"role\",\"tabpanel\"),this._addClass(this.panels,\"ui-tabs-panel\",\"ui-widget-content\"),i&&(this._off(i.not(this.tabs)),this._off(s.not(this.anchors)),this._off(n.not(this.panels)))},_getList:function(){return this.tablist||this.element.find(\"ol, ul\").eq(0)},_createPanel:function(e){return t(\"<div>\").attr(\"id\",e).data(\"ui-tabs-destroy\",!0)},_setOptionDisabled:function(e){var i,s,n;for(t.isArray(e)&&(e.length?e.length===this.anchors.length&&(e=!0):e=!1),n=0;s=this.tabs[n];n++)i=t(s),e===!0||-1!==t.inArray(n,e)?(i.attr(\"aria-disabled\",\"true\"),this._addClass(i,null,\"ui-state-disabled\")):(i.removeAttr(\"aria-disabled\"),this._removeClass(i,null,\"ui-state-disabled\"));this.options.disabled=e,this._toggleClass(this.widget(),this.widgetFullName+\"-disabled\",null,e===!0)},_setupEvents:function(e){var i={};e&&t.each(e.split(\" \"),function(t,e){i[e]=\"_eventHandler\"}),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(!0,this.anchors,{click:function(t){t.preventDefault()}}),this._on(this.anchors,i),this._on(this.tabs,{keydown:\"_tabKeydown\"}),this._on(this.panels,{keydown:\"_panelKeydown\"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(e){var i,s=this.element.parent();\"fill\"===e?(i=s.height(),i-=this.element.outerHeight()-this.element.height(),this.element.siblings(\":visible\").each(function(){var e=t(this),s=e.css(\"position\");\"absolute\"!==s&&\"fixed\"!==s&&(i-=e.outerHeight(!0))}),this.element.children().not(this.panels).each(function(){i-=t(this).outerHeight(!0)}),this.panels.each(function(){t(this).height(Math.max(0,i-t(this).innerHeight()+t(this).height()))}).css(\"overflow\",\"auto\")):\"auto\"===e&&(i=0,this.panels.each(function(){i=Math.max(i,t(this).height(\"\").height())}).height(i))},_eventHandler:function(e){var i=this.options,s=this.active,n=t(e.currentTarget),o=n.closest(\"li\"),a=o[0]===s[0],r=a&&i.collapsible,h=r?t():this._getPanelForTab(o),l=s.length?this._getPanelForTab(s):t(),c={oldTab:s,oldPanel:l,newTab:r?t():o,newPanel:h};e.preventDefault(),o.hasClass(\"ui-state-disabled\")||o.hasClass(\"ui-tabs-loading\")||this.running||a&&!i.collapsible||this._trigger(\"beforeActivate\",e,c)===!1||(i.active=r?!1:this.tabs.index(o),this.active=a?t():o,this.xhr&&this.xhr.abort(),l.length||h.length||t.error(\"jQuery UI Tabs: Mismatching fragment identifier.\"),h.length&&this.load(this.tabs.index(o),e),this._toggle(e,c))},_toggle:function(e,i){function s(){o.running=!1,o._trigger(\"activate\",e,i)}function n(){o._addClass(i.newTab.closest(\"li\"),\"ui-tabs-active\",\"ui-state-active\"),a.length&&o.options.show?o._show(a,o.options.show,s):(a.show(),s())}var o=this,a=i.newPanel,r=i.oldPanel;this.running=!0,r.length&&this.options.hide?this._hide(r,this.options.hide,function(){o._removeClass(i.oldTab.closest(\"li\"),\"ui-tabs-active\",\"ui-state-active\"),n()}):(this._removeClass(i.oldTab.closest(\"li\"),\"ui-tabs-active\",\"ui-state-active\"),r.hide(),n()),r.attr(\"aria-hidden\",\"true\"),i.oldTab.attr({\"aria-selected\":\"false\",\"aria-expanded\":\"false\"}),a.length&&r.length?i.oldTab.attr(\"tabIndex\",-1):a.length&&this.tabs.filter(function(){return 0===t(this).attr(\"tabIndex\")}).attr(\"tabIndex\",-1),a.attr(\"aria-hidden\",\"false\"),i.newTab.attr({\"aria-selected\":\"true\",\"aria-expanded\":\"true\",tabIndex:0})},_activate:function(e){var i,s=this._findActive(e);s[0]!==this.active[0]&&(s.length||(s=this.active),i=s.find(\".ui-tabs-anchor\")[0],this._eventHandler({target:i,currentTarget:i,preventDefault:t.noop}))},_findActive:function(e){return e===!1?t():this.tabs.eq(e)},_getIndex:function(e){return\"string\"==typeof e&&(e=this.anchors.index(this.anchors.filter(\"[href$='\"+t.ui.escapeSelector(e)+\"']\"))),e},_destroy:function(){this.xhr&&this.xhr.abort(),this.tablist.removeAttr(\"role\").off(this.eventNamespace),this.anchors.removeAttr(\"role tabIndex\").removeUniqueId(),this.tabs.add(this.panels).each(function(){t.data(this,\"ui-tabs-destroy\")?t(this).remove():t(this).removeAttr(\"role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded\")}),this.tabs.each(function(){var e=t(this),i=e.data(\"ui-tabs-aria-controls\");i?e.attr(\"aria-controls\",i).removeData(\"ui-tabs-aria-controls\"):e.removeAttr(\"aria-controls\")}),this.panels.show(),\"content\"!==this.options.heightStyle&&this.panels.css(\"height\",\"\")},enable:function(e){var i=this.options.disabled;i!==!1&&(void 0===e?i=!1:(e=this._getIndex(e),i=t.isArray(i)?t.map(i,function(t){return t!==e?t:null}):t.map(this.tabs,function(t,i){return i!==e?i:null})),this._setOptionDisabled(i))},disable:function(e){var i=this.options.disabled;if(i!==!0){if(void 0===e)i=!0;else{if(e=this._getIndex(e),-1!==t.inArray(e,i))return;i=t.isArray(i)?t.merge([e],i).sort():[e]}this._setOptionDisabled(i)}},load:function(e,i){e=this._getIndex(e);var s=this,n=this.tabs.eq(e),o=n.find(\".ui-tabs-anchor\"),a=this._getPanelForTab(n),r={tab:n,panel:a},h=function(t,e){\"abort\"===e&&s.panels.stop(!1,!0),s._removeClass(n,\"ui-tabs-loading\"),a.removeAttr(\"aria-busy\"),t===s.xhr&&delete s.xhr};this._isLocal(o[0])||(this.xhr=t.ajax(this._ajaxSettings(o,i,r)),this.xhr&&\"canceled\"!==this.xhr.statusText&&(this._addClass(n,\"ui-tabs-loading\"),a.attr(\"aria-busy\",\"true\"),this.xhr.done(function(t,e,n){setTimeout(function(){a.html(t),s._trigger(\"load\",i,r),h(n,e)},1)}).fail(function(t,e){setTimeout(function(){h(t,e)},1)})))},_ajaxSettings:function(e,i,s){var n=this;return{url:e.attr(\"href\").replace(/#.*$/,\"\"),beforeSend:function(e,o){return n._trigger(\"beforeLoad\",i,t.extend({jqXHR:e,ajaxSettings:o},s))}}},_getPanelForTab:function(e){var i=t(e).attr(\"aria-controls\");return this.element.find(this._sanitizeSelector(\"#\"+i))}}),t.uiBackCompat!==!1&&t.widget(\"ui.tabs\",t.ui.tabs,{_processTabs:function(){this._superApply(arguments),this._addClass(this.tabs,\"ui-tab\")}}),t.ui.tabs,t.widget(\"ui.tooltip\",{version:\"1.12.1\",options:{classes:{\"ui-tooltip\":\"ui-corner-all ui-widget-shadow\"},content:function(){var e=t(this).attr(\"title\")||\"\";return t(\"<a>\").text(e).html()},hide:!0,items:\"[title]:not([disabled])\",position:{my:\"left top+15\",at:\"left bottom\",collision:\"flipfit flip\"},show:!0,track:!1,close:null,open:null},_addDescribedBy:function(e,i){var s=(e.attr(\"aria-describedby\")||\"\").split(/\\s+/);s.push(i),e.data(\"ui-tooltip-id\",i).attr(\"aria-describedby\",t.trim(s.join(\" \")))},_removeDescribedBy:function(e){var i=e.data(\"ui-tooltip-id\"),s=(e.attr(\"aria-describedby\")||\"\").split(/\\s+/),n=t.inArray(i,s);-1!==n&&s.splice(n,1),e.removeData(\"ui-tooltip-id\"),s=t.trim(s.join(\" \")),s?e.attr(\"aria-describedby\",s):e.removeAttr(\"aria-describedby\")},_create:function(){this._on({mouseover:\"open\",focusin:\"open\"}),this.tooltips={},this.parents={},this.liveRegion=t(\"<div>\").attr({role:\"log\",\"aria-live\":\"assertive\",\"aria-relevant\":\"additions\"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,\"ui-helper-hidden-accessible\"),this.disabledTitles=t([])},_setOption:function(e,i){var s=this;this._super(e,i),\"content\"===e&&t.each(this.tooltips,function(t,e){s._updateContent(e.element)})},_setOptionDisabled:function(t){this[t?\"_disable\":\"_enable\"]()},_disable:function(){var e=this;t.each(this.tooltips,function(i,s){var n=t.Event(\"blur\");n.target=n.currentTarget=s.element[0],e.close(n,!0)}),this.disabledTitles=this.disabledTitles.add(this.element.find(this.options.items).addBack().filter(function(){var e=t(this);return e.is(\"[title]\")?e.data(\"ui-tooltip-title\",e.attr(\"title\")).removeAttr(\"title\"):void 0}))},_enable:function(){this.disabledTitles.each(function(){var e=t(this);e.data(\"ui-tooltip-title\")&&e.attr(\"title\",e.data(\"ui-tooltip-title\"))}),this.disabledTitles=t([])},open:function(e){var i=this,s=t(e?e.target:this.element).closest(this.options.items);s.length&&!s.data(\"ui-tooltip-id\")&&(s.attr(\"title\")&&s.data(\"ui-tooltip-title\",s.attr(\"title\")),s.data(\"ui-tooltip-open\",!0),e&&\"mouseover\"===e.type&&s.parents().each(function(){var e,s=t(this);s.data(\"ui-tooltip-open\")&&(e=t.Event(\"blur\"),e.target=e.currentTarget=this,i.close(e,!0)),s.attr(\"title\")&&(s.uniqueId(),i.parents[this.id]={element:this,title:s.attr(\"title\")},s.attr(\"title\",\"\"))}),this._registerCloseHandlers(e,s),this._updateContent(s,e))},_updateContent:function(t,e){var i,s=this.options.content,n=this,o=e?e.type:null;return\"string\"==typeof s||s.nodeType||s.jquery?this._open(e,t,s):(i=s.call(t[0],function(i){n._delay(function(){t.data(\"ui-tooltip-open\")&&(e&&(e.type=o),this._open(e,t,i))})}),i&&this._open(e,t,i),void 0)},_open:function(e,i,s){function n(t){l.of=t,a.is(\":hidden\")||a.position(l)}var o,a,r,h,l=t.extend({},this.options.position);if(s){if(o=this._find(i))return o.tooltip.find(\".ui-tooltip-content\").html(s),void 0;i.is(\"[title]\")&&(e&&\"mouseover\"===e.type?i.attr(\"title\",\"\"):i.removeAttr(\"title\")),o=this._tooltip(i),a=o.tooltip,this._addDescribedBy(i,a.attr(\"id\")),a.find(\".ui-tooltip-content\").html(s),this.liveRegion.children().hide(),h=t(\"<div>\").html(a.find(\".ui-tooltip-content\").html()),h.removeAttr(\"name\").find(\"[name]\").removeAttr(\"name\"),h.removeAttr(\"id\").find(\"[id]\").removeAttr(\"id\"),h.appendTo(this.liveRegion),this.options.track&&e&&/^mouse/.test(e.type)?(this._on(this.document,{mousemove:n}),n(e)):a.position(t.extend({of:i},this.options.position)),a.hide(),this._show(a,this.options.show),this.options.track&&this.options.show&&this.options.show.delay&&(r=this.delayedShow=setInterval(function(){a.is(\":visible\")&&(n(l.of),clearInterval(r))},t.fx.interval)),this._trigger(\"open\",e,{tooltip:a})}},_registerCloseHandlers:function(e,i){var s={keyup:function(e){if(e.keyCode===t.ui.keyCode.ESCAPE){var s=t.Event(e);s.currentTarget=i[0],this.close(s,!0)}}};i[0]!==this.element[0]&&(s.remove=function(){this._removeTooltip(this._find(i).tooltip)}),e&&\"mouseover\"!==e.type||(s.mouseleave=\"close\"),e&&\"focusin\"!==e.type||(s.focusout=\"close\"),this._on(!0,i,s)},close:function(e){var i,s=this,n=t(e?e.currentTarget:this.element),o=this._find(n);return o?(i=o.tooltip,o.closing||(clearInterval(this.delayedShow),n.data(\"ui-tooltip-title\")&&!n.attr(\"title\")&&n.attr(\"title\",n.data(\"ui-tooltip-title\")),this._removeDescribedBy(n),o.hiding=!0,i.stop(!0),this._hide(i,this.options.hide,function(){s._removeTooltip(t(this))}),n.removeData(\"ui-tooltip-open\"),this._off(n,\"mouseleave focusout keyup\"),n[0]!==this.element[0]&&this._off(n,\"remove\"),this._off(this.document,\"mousemove\"),e&&\"mouseleave\"===e.type&&t.each(this.parents,function(e,i){t(i.element).attr(\"title\",i.title),delete s.parents[e]}),o.closing=!0,this._trigger(\"close\",e,{tooltip:i}),o.hiding||(o.closing=!1)),void 0):(n.removeData(\"ui-tooltip-open\"),void 0)},_tooltip:function(e){var i=t(\"<div>\").attr(\"role\",\"tooltip\"),s=t(\"<div>\").appendTo(i),n=i.uniqueId().attr(\"id\");return this._addClass(s,\"ui-tooltip-content\"),this._addClass(i,\"ui-tooltip\",\"ui-widget ui-widget-content\"),i.appendTo(this._appendTo(e)),this.tooltips[n]={element:e,tooltip:i}},_find:function(t){var e=t.data(\"ui-tooltip-id\");return e?this.tooltips[e]:null},_removeTooltip:function(t){t.remove(),delete this.tooltips[t.attr(\"id\")]},_appendTo:function(t){var e=t.closest(\".ui-front, dialog\");return e.length||(e=this.document[0].body),e},_destroy:function(){var e=this;t.each(this.tooltips,function(i,s){var n=t.Event(\"blur\"),o=s.element;n.target=n.currentTarget=o[0],e.close(n,!0),t(\"#\"+i).remove(),o.data(\"ui-tooltip-title\")&&(o.attr(\"title\")||o.attr(\"title\",o.data(\"ui-tooltip-title\")),o.removeData(\"ui-tooltip-title\"))}),this.liveRegion.remove()}}),t.uiBackCompat!==!1&&t.widget(\"ui.tooltip\",t.ui.tooltip,{options:{tooltipClass:null},_tooltip:function(){var t=this._superApply(arguments);return this.options.tooltipClass&&t.tooltip.addClass(this.options.tooltipClass),t}}),t.ui.tooltip});\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/jquery-ui-dist/jquery-ui.min.js?");

/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery JavaScript Library v3.5.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2020-05-04T22:49Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif (  true && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar flat = arr.flat ? function( array ) {\n\treturn arr.flat.call( array );\n} : function( array ) {\n\treturn arr.concat.apply( [], array );\n};\n\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n      // Support: Chrome <=57, Firefox <=52\n      // In some browsers, typeof returns \"function\" for HTML <object> elements\n      // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n      // We don't want to classify *any* DOM node as a function.\n      return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\nvar document = window.document;\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnonce: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, node, doc ) {\n\t\tdoc = doc || document;\n\n\t\tvar i, val,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\n\t\t\t\t// Support: Firefox 64+, Edge 18+\n\t\t\t\t// Some browsers don't support the \"nonce\" property on scripts.\n\t\t\t\t// On the other hand, just using `getAttribute` is not enough as\n\t\t\t\t// the `nonce` attribute is reset to an empty string whenever it\n\t\t\t\t// becomes browsing-context connected.\n\t\t\t\t// See https://github.com/whatwg/html/issues/2369\n\t\t\t\t// See https://html.spec.whatwg.org/#nonce-attributes\n\t\t\t\t// The `node.getAttribute` check was added for the sake of\n\t\t\t\t// `jQuery.globalEval` so that it can fake a nonce-containing node\n\t\t\t\t// via an object.\n\t\t\t\tval = node[ i ] || node.getAttribute && node.getAttribute( i );\n\t\t\t\tif ( val ) {\n\t\t\t\t\tscript.setAttribute( i, val );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.5.1\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teven: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn ( i + 1 ) % 2;\n\t\t} ) );\n\t},\n\n\todd: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn i % 2;\n\t\t} ) );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent Object.prototype pollution\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( name === \"__proto__\" || target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\t\t\t\t\tsrc = target[ name ];\n\n\t\t\t\t\t// Ensure proper type for the source value\n\t\t\t\t\tif ( copyIsArray && !Array.isArray( src ) ) {\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {\n\t\t\t\t\t\tclone = {};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src;\n\t\t\t\t\t}\n\t\t\t\t\tcopyIsArray = false;\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a provided context; falls back to the global one\n\t// if not specified.\n\tglobalEval: function( code, options, doc ) {\n\t\tDOMEval( code, { nonce: options && options.nonce }, doc );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn flat( ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( _i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.5\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://js.foundation/\n *\n * Date: 2020-03-14\n */\n( function( window ) {\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tnonnativeSelectorCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ( {} ).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpushNative = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[ i ] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|\" +\n\t\t\"ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n\tidentifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace +\n\t\t\"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\n\t\t// \"Attribute values must be CSS identifiers [capture 5]\n\t\t// or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" +\n\t\twhitespace + \"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" +\n\t\twhitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace +\n\t\t\"*\" ),\n\trdescend = new RegExp( whitespace + \"|>\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" +\n\t\t\twhitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" +\n\t\t\twhitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace +\n\t\t\t\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace +\n\t\t\t\"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trhtml = /HTML$/i,\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\", \"g\" ),\n\tfunescape = function( escape, nonHex ) {\n\t\tvar high = \"0x\" + escape.slice( 1 ) - 0x10000;\n\n\t\treturn nonHex ?\n\n\t\t\t// Strip the backslash prefix from a non-hex escape sequence\n\t\t\tnonHex :\n\n\t\t\t// Replace a hexadecimal escape sequence with the encoded Unicode code point\n\t\t\t// Support: IE <=11+\n\t\t\t// For values outside the Basic Multilingual Plane (BMP), manually construct a\n\t\t\t// surrogate pair\n\t\t\thigh < 0 ?\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" +\n\t\t\t\tch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tinDisabledFieldset = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t( arr = slice.call( preferredDoc.childNodes ) ),\n\t\tpreferredDoc.childNodes\n\t);\n\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\t// eslint-disable-next-line no-unused-expressions\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpushNative.apply( target, slice.call( els ) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( ( target[ j++ ] = els[ i++ ] ) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\t\tsetDocument( context );\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( ( m = match[ 1 ] ) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( ( elem = context.getElementById( m ) ) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && ( elem = newContext.getElementById( m ) ) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[ 2 ] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!nonnativeSelectorCache[ selector + \" \" ] &&\n\t\t\t\t( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&\n\n\t\t\t\t// Support: IE 8 only\n\t\t\t\t// Exclude object elements\n\t\t\t\t( nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\" ) ) {\n\n\t\t\t\tnewSelector = selector;\n\t\t\t\tnewContext = context;\n\n\t\t\t\t// qSA considers elements outside a scoping root when evaluating child or\n\t\t\t\t// descendant combinators, which is not what we want.\n\t\t\t\t// In such cases, we work around the behavior by prefixing every selector in the\n\t\t\t\t// list with an ID selector referencing the scope context.\n\t\t\t\t// The technique has to be used as well when a leading combinator is used\n\t\t\t\t// as such selectors are not recognized by querySelectorAll.\n\t\t\t\t// Thanks to Andrew Dupont for this technique.\n\t\t\t\tif ( nodeType === 1 &&\n\t\t\t\t\t( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\n\t\t\t\t\t// We can use :scope instead of the ID hack if the browser\n\t\t\t\t\t// supports it & if we're not changing the context.\n\t\t\t\t\tif ( newContext !== context || !support.scope ) {\n\n\t\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\t\tif ( ( nid = context.getAttribute( \"id\" ) ) ) {\n\t\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext.setAttribute( \"id\", ( nid = expando ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[ i ] = ( nid ? \"#\" + nid : \":scope\" ) + \" \" +\n\t\t\t\t\t\t\ttoSelector( groups[ i ] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\tnonnativeSelectorCache( selector, true );\n\t\t\t\t} finally {\n\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn ( cache[ key + \" \" ] = value );\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement( \"fieldset\" );\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch ( e ) {\n\t\treturn false;\n\t} finally {\n\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split( \"|\" ),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[ i ] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( ( cur = cur.nextSibling ) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn ( name === \"input\" || name === \"button\" ) && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\tinDisabledFieldset( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction( function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction( function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ ( j = matchIndexes[ i ] ) ] ) {\n\t\t\t\t\tseed[ j ] = !( matches[ j ] = seed[ j ] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t} );\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\tvar namespace = elem.namespaceURI,\n\t\tdocElem = ( elem.ownerDocument || elem ).documentElement;\n\n\t// Support: IE <=8\n\t// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\n\t// https://bugs.jquery.com/ticket/4833\n\treturn !rhtml.test( namespace || docElem && docElem.nodeName || \"HTML\" );\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( preferredDoc != document &&\n\t\t( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,\n\t// Safari 4 - 5 only, Opera <=11.6 - 12.x only\n\t// IE/Edge & older browsers don't support the :scope pseudo-class.\n\t// Support: Safari 6.0 only\n\t// Safari 6.0 supports :scope but it's an alias of :root there.\n\tsupport.scope = assert( function( el ) {\n\t\tdocElem.appendChild( el ).appendChild( document.createElement( \"div\" ) );\n\t\treturn typeof el.querySelectorAll !== \"undefined\" &&\n\t\t\t!el.querySelectorAll( \":scope fieldset div\" ).length;\n\t} );\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert( function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute( \"className\" );\n\t} );\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert( function( el ) {\n\t\tel.appendChild( document.createComment( \"\" ) );\n\t\treturn !el.getElementsByTagName( \"*\" ).length;\n\t} );\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert( function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t} );\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[ \"ID\" ] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute( \"id\" ) === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[ \"ID\" ] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode( \"id\" );\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( ( elem = elems[ i++ ] ) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[ \"TAG\" ] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[ \"CLASS\" ] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {\n\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert( function( el ) {\n\n\t\t\tvar input;\n\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll( \"[msallowcapture^='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll( \"[selected]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"~=\" );\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 15 - 18+\n\t\t\t// IE 11/Edge don't find elements on a `[name='']` query in some cases.\n\t\t\t// Adding a temporary attribute to the document before the selection works\n\t\t\t// around the issue.\n\t\t\t// Interestingly, IE 10 & older don't seem to have the issue.\n\t\t\tinput = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"name\", \"\" );\n\t\t\tel.appendChild( input );\n\t\t\tif ( !el.querySelectorAll( \"[name='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" +\n\t\t\t\t\twhitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll( \":checked\" ).length ) {\n\t\t\t\trbuggyQSA.push( \":checked\" );\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push( \".#.+[+~]\" );\n\t\t\t}\n\n\t\t\t// Support: Firefox <=3.6 - 5 only\n\t\t\t// Old Firefox doesn't throw on a badly-escaped identifier.\n\t\t\tel.querySelectorAll( \"\\\\\\f\" );\n\t\t\trbuggyQSA.push( \"[\\\\r\\\\n\\\\f]\" );\n\t\t} );\n\n\t\tassert( function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll( \"[name=d]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll( \":enabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll( \":disabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: Opera 10 - 11 only\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll( \"*,:x\" );\n\t\t\trbuggyQSA.push( \",.*:\" );\n\t\t} );\n\t}\n\n\tif ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector ) ) ) ) {\n\n\t\tassert( function( el ) {\n\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t} );\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( \"|\" ) );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( \"|\" ) );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t) );\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( ( b = b.parentNode ) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t// two documents; shallow comparisons work.\n\t\t// eslint-disable-next-line eqeqeq\n\t\tcompare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( a == document || a.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, a ) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( b == document || b.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, b ) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\treturn a == document ? -1 :\n\t\t\t\tb == document ? 1 :\n\t\t\t\t/* eslint-enable eqeqeq */\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[ i ] === bp[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[ i ], bp[ i ] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\tap[ i ] == preferredDoc ? -1 :\n\t\t\tbp[ i ] == preferredDoc ? 1 :\n\t\t\t/* eslint-enable eqeqeq */\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\tsetDocument( elem );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!nonnativeSelectorCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\n\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t// fragment in IE 9\n\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\tnonnativeSelectorCache( expr, true );\n\t\t}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( context.ownerDocument || context ) != document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( elem.ownerDocument || elem ) != document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn ( sel + \"\" ).replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( ( node = elem[ i++ ] ) ) {\n\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[ 1 ] = match[ 1 ].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[ 3 ] = ( match[ 3 ] || match[ 4 ] ||\n\t\t\t\tmatch[ 5 ] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[ 2 ] === \"~=\" ) {\n\t\t\t\tmatch[ 3 ] = \" \" + match[ 3 ] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[ 1 ] = match[ 1 ].toLowerCase();\n\n\t\t\tif ( match[ 1 ].slice( 0, 3 ) === \"nth\" ) {\n\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[ 3 ] ) {\n\t\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[ 4 ] = +( match[ 4 ] ?\n\t\t\t\t\tmatch[ 5 ] + ( match[ 6 ] || 1 ) :\n\t\t\t\t\t2 * ( match[ 3 ] === \"even\" || match[ 3 ] === \"odd\" ) );\n\t\t\t\tmatch[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === \"odd\" );\n\n\t\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[ 3 ] ) {\n\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[ 6 ] && match[ 2 ];\n\n\t\t\tif ( matchExpr[ \"CHILD\" ].test( match[ 0 ] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[ 3 ] ) {\n\t\t\t\tmatch[ 2 ] = match[ 4 ] || match[ 5 ] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t( excess = tokenize( unquoted, true ) ) &&\n\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t( excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length ) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[ 0 ] = match[ 0 ].slice( 0, excess );\n\t\t\t\tmatch[ 2 ] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() {\n\t\t\t\t\treturn true;\n\t\t\t\t} :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t( pattern = new RegExp( \"(^|\" + whitespace +\n\t\t\t\t\t\")\" + className + \"(\" + whitespace + \"|$)\" ) ) && classCache(\n\t\t\t\t\t\tclassName, function( elem ) {\n\t\t\t\t\t\t\treturn pattern.test(\n\t\t\t\t\t\t\t\ttypeof elem.className === \"string\" && elem.className ||\n\t\t\t\t\t\t\t\ttypeof elem.getAttribute !== \"undefined\" &&\n\t\t\t\t\t\t\t\t\telem.getAttribute( \"class\" ) ||\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\t/* eslint-disable max-len */\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t\t/* eslint-enable max-len */\n\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, _argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( ( node = node[ dir ] ) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction( function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[ i ] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction( function( selector ) {\n\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction( function( seed, matches, _context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\t\t\t\t\tseed[ i ] = !( matches[ i ] = elem );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} ) :\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tinput[ 0 ] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[ 0 ] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t} ),\n\n\t\t\"has\": markFunction( function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t} ),\n\n\t\t\"contains\": markFunction( function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t} ),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test( lang || \"\" ) ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( ( elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute( \"xml:lang\" ) || elem.getAttribute( \"lang\" ) ) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t} ),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement &&\n\t\t\t\t( !document.hasFocus || document.hasFocus() ) &&\n\t\t\t\t!!( elem.type || elem.href || ~elem.tabIndex );\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn ( nodeName === \"input\" && !!elem.checked ) ||\n\t\t\t\t( nodeName === \"option\" && !!elem.selected );\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\t// eslint-disable-next-line no-unused-expressions\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[ \"empty\" ]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( ( attr = elem.getAttribute( \"type\" ) ) == null ||\n\t\t\t\t\tattr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo( function() {\n\t\t\treturn [ 0 ];\n\t\t} ),\n\n\t\t\"last\": createPositionalPseudo( function( _matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t} ),\n\n\t\t\"eq\": createPositionalPseudo( function( _matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t} ),\n\n\t\t\"even\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"odd\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"lt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ?\n\t\t\t\targument + length :\n\t\t\t\targument > length ?\n\t\t\t\t\tlength :\n\t\t\t\t\targument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"gt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} )\n\t}\n};\n\nExpr.pseudos[ \"nth\" ] = Expr.pseudos[ \"eq\" ];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || ( match = rcomma.exec( soFar ) ) ) {\n\t\t\tif ( match ) {\n\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[ 0 ].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( ( tokens = [] ) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( ( match = rcombinators.exec( soFar ) ) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push( {\n\t\t\t\tvalue: matched,\n\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[ 0 ].replace( rtrim, \" \" )\n\t\t\t} );\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||\n\t\t\t\t( match = preFilters[ type ]( match ) ) ) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push( {\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t} );\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[ i ].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || ( elem[ expando ] = {} );\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] ||\n\t\t\t\t\t\t\t( outerCache[ elem.uniqueID ] = {} );\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( ( oldCache = uniqueCache[ key ] ) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn ( newCache[ 2 ] = oldCache[ 2 ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[ i ]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[ 0 ];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[ i ], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction( function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts(\n\t\t\t\tselector || \"*\",\n\t\t\t\tcontext.nodeType ? [ context ] : context,\n\t\t\t\t[]\n\t\t\t),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( ( elem = temp[ i ] ) ) {\n\t\t\t\t\tmatcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) ) {\n\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( ( matcherIn[ i ] = elem ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, ( matcherOut = [] ), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) &&\n\t\t\t\t\t\t( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {\n\n\t\t\t\t\t\tseed[ temp ] = !( results[ temp ] = elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t} );\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[ 0 ].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[ \" \" ],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t( checkContext = context ).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {\n\t\t\tmatchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[ j ].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\n\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\ttokens\n\t\t\t\t\t\t.slice( 0, i - 1 )\n\t\t\t\t\t\t.concat( { value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" } )\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[ \"TAG\" ]( \"*\", outermost ),\n\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\n\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\toutermostContext = context == document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\n\t\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\t\tif ( !context && elem.ownerDocument != document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( ( matcher = elementMatchers[ j++ ] ) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( ( elem = !matcher && elem ) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( ( matcher = setMatchers[ j++ ] ) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !( unmatched[ i ] || setMatched[ i ] ) ) {\n\t\t\t\t\t\t\t\tsetMatched[ i ] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[ i ] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache(\n\t\t\tselector,\n\t\t\tmatcherFromGroupMatchers( elementMatchers, setMatchers )\n\t\t);\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( ( selector = compiled.selector || selector ) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[ 0 ] = match[ 0 ].slice( 0 );\n\t\tif ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === \"ID\" &&\n\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {\n\n\t\t\tcontext = ( Expr.find[ \"ID\" ]( token.matches[ 0 ]\n\t\t\t\t.replace( runescape, funescape ), context ) || [] )[ 0 ];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[ \"needsContext\" ].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[ i ];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ ( type = token.type ) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( ( find = Expr.find[ type ] ) ) {\n\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( ( seed = find(\n\t\t\t\t\ttoken.matches[ 0 ].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext\n\t\t\t\t) ) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split( \"\" ).sort( sortOrder ).join( \"\" ) === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert( function( el ) {\n\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement( \"fieldset\" ) ) & 1;\n} );\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert( function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute( \"href\" ) === \"#\";\n} ) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert( function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n} ) ) {\n\taddHandle( \"value\", function( elem, _name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert( function( el ) {\n\treturn el.getAttribute( \"disabled\" ) == null;\n} ) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\t\tnull;\n\t\t}\n\t} );\n}\n\nreturn Sizzle;\n\n} )( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n};\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\tif ( elem.contentDocument != null &&\n\n\t\t\t// Support: IE 11+\n\t\t\t// <object> elements with no `data` attribute has an object\n\t\t\t// `contentDocument` with a `null` prototype.\n\t\t\tgetProto( elem.contentDocument ) ) {\n\n\t\t\treturn elem.contentDocument;\n\t\t}\n\n\t\t// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n\t\t// Treat the template element as a regular one in browsers that\n\t\t// don't support it.\n\t\tif ( nodeName( elem, \"template\" ) ) {\n\t\t\telem = elem.content || elem;\n\t\t}\n\n\t\treturn jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( _i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the master Deferred\n\t\t\tmaster = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn master.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t}\n\n\t\treturn master.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, _key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( _all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (#9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar documentElement = document.documentElement;\n\n\n\n\tvar isAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem );\n\t\t},\n\t\tcomposed = { composed: true };\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n\t// Check attachment across shadow DOM boundaries when possible (gh-3504)\n\t// Support: iOS 10.0-10.2 only\n\t// Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n\t// leading to errors. We need to check for `getRootNode`.\n\tif ( documentElement.getRootNode ) {\n\t\tisAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem ) ||\n\t\t\t\telem.getRootNode( composed ) === elem.ownerDocument;\n\t\t};\n\t}\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tisAttached( elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = elem.nodeType &&\n\t\t\t( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n\n\t// Support: IE <=9 only\n\t// IE <=9 replaces <option> tags with their contents when inserted outside of\n\t// the select element.\n\tdiv.innerHTML = \"<option></option>\";\n\tsupport.option = !!div.lastChild;\n} )();\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n// Support: IE <=9 only\nif ( !support.option ) {\n\twrapMap.optgroup = wrapMap.option = [ 1, \"<select multiple='multiple'>\", \"</select>\" ];\n}\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, attached, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tattached = isAttached( elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( attached ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 - 11+\n// focus() and blur() are asynchronous, except when they are no-op.\n// So expect focus to be synchronous when the element is already active,\n// and blur to be synchronous when the element is not already active.\n// (focus and blur are always synchronous in other supported browsers,\n// this just defines when we can count on it).\nfunction expectSync( elem, type ) {\n\treturn ( elem === safeActiveElement() ) === ( type === \"focus\" );\n}\n\n// Support: IE <=9 only\n// Accessing document.activeElement can throw unexpectedly\n// https://bugs.jquery.com/ticket/13393\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Only attach events to objects that accept data\n\t\tif ( !acceptData( elem ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = Object.create( null );\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\n\t\t\t// Make a writable jQuery.Event from the native event object\n\t\t\tevent = jQuery.event.fix( nativeEvent ),\n\n\t\t\thandlers = (\n\t\t\t\t\tdataPriv.get( this, \"events\" ) || Object.create( null )\n\t\t\t\t)[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// If the event is namespaced, then each handler is only invoked if it is\n\t\t\t\t// specially universal or its namespaces are a superset of the event's.\n\t\t\t\tif ( !event.rnamespace || handleObj.namespace === false ||\n\t\t\t\t\tevent.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tclick: {\n\n\t\t\t// Utilize native event to ensure correct state for checkable inputs\n\t\t\tsetup: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Claim the first handler\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\t// dataPriv.set( el, \"click\", ... )\n\t\t\t\t\tleverageNative( el, \"click\", returnTrue );\n\t\t\t\t}\n\n\t\t\t\t// Return false to allow normal processing in the caller\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\ttrigger: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Force setup before triggering a click\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\tleverageNative( el, \"click\" );\n\t\t\t\t}\n\n\t\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, suppress native .click() on links\n\t\t\t// Also prevent it if we're currently inside a leveraged native-event stack\n\t\t\t_default: function( event ) {\n\t\t\t\tvar target = event.target;\n\t\t\t\treturn rcheckableType.test( target.type ) &&\n\t\t\t\t\ttarget.click && nodeName( target, \"input\" ) &&\n\t\t\t\t\tdataPriv.get( target, \"click\" ) ||\n\t\t\t\t\tnodeName( target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Ensure the presence of an event listener that handles manually-triggered\n// synthetic events by interrupting progress until reinvoked in response to\n// *native* events that it fires directly, ensuring that state changes have\n// already occurred before other listeners are invoked.\nfunction leverageNative( el, type, expectSync ) {\n\n\t// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n\tif ( !expectSync ) {\n\t\tif ( dataPriv.get( el, type ) === undefined ) {\n\t\t\tjQuery.event.add( el, type, returnTrue );\n\t\t}\n\t\treturn;\n\t}\n\n\t// Register the controller as a special universal handler for all event namespaces\n\tdataPriv.set( el, type, false );\n\tjQuery.event.add( el, type, {\n\t\tnamespace: false,\n\t\thandler: function( event ) {\n\t\t\tvar notAsync, result,\n\t\t\t\tsaved = dataPriv.get( this, type );\n\n\t\t\tif ( ( event.isTrigger & 1 ) && this[ type ] ) {\n\n\t\t\t\t// Interrupt processing of the outer synthetic .trigger()ed event\n\t\t\t\t// Saved data should be false in such cases, but might be a leftover capture object\n\t\t\t\t// from an async native handler (gh-4350)\n\t\t\t\tif ( !saved.length ) {\n\n\t\t\t\t\t// Store arguments for use when handling the inner native event\n\t\t\t\t\t// There will always be at least one argument (an event object), so this array\n\t\t\t\t\t// will not be confused with a leftover capture object.\n\t\t\t\t\tsaved = slice.call( arguments );\n\t\t\t\t\tdataPriv.set( this, type, saved );\n\n\t\t\t\t\t// Trigger the native event and capture its result\n\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t// focus() and blur() are asynchronous\n\t\t\t\t\tnotAsync = expectSync( this, type );\n\t\t\t\t\tthis[ type ]();\n\t\t\t\t\tresult = dataPriv.get( this, type );\n\t\t\t\t\tif ( saved !== result || notAsync ) {\n\t\t\t\t\t\tdataPriv.set( this, type, false );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = {};\n\t\t\t\t\t}\n\t\t\t\t\tif ( saved !== result ) {\n\n\t\t\t\t\t\t// Cancel the outer synthetic event\n\t\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\treturn result.value;\n\t\t\t\t\t}\n\n\t\t\t\t// If this is an inner synthetic event for an event with a bubbling surrogate\n\t\t\t\t// (focus or blur), assume that the surrogate already propagated from triggering the\n\t\t\t\t// native event and prevent that from happening again here.\n\t\t\t\t// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n\t\t\t\t// bubbling surrogate propagates *after* the non-bubbling base), but that seems\n\t\t\t\t// less bad than duplication.\n\t\t\t\t} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\n\t\t\t// If this is a native event triggered above, everything is now in order\n\t\t\t// Fire an inner synthetic event with the original arguments\n\t\t\t} else if ( saved.length ) {\n\n\t\t\t\t// ...and capture the result\n\t\t\t\tdataPriv.set( this, type, {\n\t\t\t\t\tvalue: jQuery.event.trigger(\n\n\t\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t\t// Extend with the prototype to reset the above stopImmediatePropagation()\n\t\t\t\t\t\tjQuery.extend( saved[ 0 ], jQuery.Event.prototype ),\n\t\t\t\t\t\tsaved.slice( 1 ),\n\t\t\t\t\t\tthis\n\t\t\t\t\t)\n\t\t\t\t} );\n\n\t\t\t\t// Abort handling of the native event\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t}\n\t\t}\n\t} );\n}\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcode: true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\n\twhich: function( event ) {\n\t\tvar button = event.button;\n\n\t\t// Add which for key events\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t}\n\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\tif ( button & 1 ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( button & 2 ) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\tif ( button & 4 ) {\n\t\t\t\treturn 2;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn event.which;\n\t}\n}, jQuery.event.addProp );\n\njQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( type, delegateType ) {\n\tjQuery.event.special[ type ] = {\n\n\t\t// Utilize native event if possible so blur/focus sequence is correct\n\t\tsetup: function() {\n\n\t\t\t// Claim the first handler\n\t\t\t// dataPriv.set( this, \"focus\", ... )\n\t\t\t// dataPriv.set( this, \"blur\", ... )\n\t\t\tleverageNative( this, type, expectSync );\n\n\t\t\t// Return false to allow normal processing in the caller\n\t\t\treturn false;\n\t\t},\n\t\ttrigger: function() {\n\n\t\t\t// Force setup before trigger\n\t\t\tleverageNative( this, type );\n\n\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\treturn true;\n\t\t},\n\n\t\tdelegateType: delegateType\n\t};\n} );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.get( src );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdataPriv.remove( dest, \"handle events\" );\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = flat( args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl && !node.noModule ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src, {\n\t\t\t\t\t\t\t\t\tnonce: node.nonce || node.getAttribute( \"nonce\" )\n\t\t\t\t\t\t\t\t}, doc );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), node, doc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && isAttached( node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html;\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = isAttached( elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar swap = function( elem, options, callback ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.call( elem );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\t// Support: Chrome <=64\n\t\t// Don't get tricked when zoom affects offsetWidth (gh-4029)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableTrDimensionsVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t},\n\n\t\t// Support: IE 9 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Behavior in IE 9 is more subtle than in newer versions & it passes\n\t\t// some versions of this test; make sure not to make it pass there!\n\t\treliableTrDimensions: function() {\n\t\t\tvar table, tr, trChild, trStyle;\n\t\t\tif ( reliableTrDimensionsVal == null ) {\n\t\t\t\ttable = document.createElement( \"table\" );\n\t\t\t\ttr = document.createElement( \"tr\" );\n\t\t\t\ttrChild = document.createElement( \"div\" );\n\n\t\t\t\ttable.style.cssText = \"position:absolute;left:-11111px\";\n\t\t\t\ttr.style.height = \"1px\";\n\t\t\t\ttrChild.style.height = \"9px\";\n\n\t\t\t\tdocumentElement\n\t\t\t\t\t.appendChild( table )\n\t\t\t\t\t.appendChild( tr )\n\t\t\t\t\t.appendChild( trChild );\n\n\t\t\t\ttrStyle = window.getComputedStyle( tr );\n\t\t\t\treliableTrDimensionsVal = parseInt( trStyle.height ) > 3;\n\n\t\t\t\tdocumentElement.removeChild( table );\n\t\t\t}\n\t\t\treturn reliableTrDimensionsVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !isAttached( elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar cssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style,\n\tvendorProps = {};\n\n// Return a vendor-prefixed property or undefined\nfunction vendorPropName( name ) {\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a potentially-mapped jQuery.cssProps or vendor prefixed property\nfunction finalPropName( name ) {\n\tvar final = jQuery.cssProps[ name ] || vendorProps[ name ];\n\n\tif ( final ) {\n\t\treturn final;\n\t}\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\treturn vendorProps[ name ] = vendorPropName( name ) || name;\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trcustomProp = /^--/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t};\n\nfunction setPositiveNumber( _elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\n\t\t// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n\t\t// Use an explicit zero to avoid NaN (gh-3964)\n\t\t) ) || 0;\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\n\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n\t\t// Fake content-box until we know it's needed to know the true value.\n\t\tboxSizingNeeded = !support.boxSizingReliable() || extra,\n\t\tisBorderBox = boxSizingNeeded &&\n\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox,\n\n\t\tval = curCSS( elem, dimension, styles ),\n\t\toffsetProp = \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\n\t// Support: IE 9 - 11 only\n\t// Use offsetWidth/offsetHeight for when box sizing is unreliable.\n\t// In those cases, the computed value can be trusted to be border-box.\n\tif ( ( !support.boxSizingReliable() && isBorderBox ||\n\n\t\t// Support: IE 10 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Interestingly, in some cases IE 9 doesn't suffer from this issue.\n\t\t!support.reliableTrDimensions() && nodeName( elem, \"tr\" ) ||\n\n\t\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t\t// This happens for inline elements with no explicit setting (gh-3571)\n\t\tval === \"auto\" ||\n\n\t\t// Support: Android <=4.1 - 4.3 only\n\t\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) &&\n\n\t\t// Make sure the element is visible & connected\n\t\telem.getClientRects().length ) {\n\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t\t// Where available, offsetWidth/offsetHeight approximate border box dimensions.\n\t\t// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n\t\t// retrieved value as a content box dimension.\n\t\tvalueIsBorderBox = offsetProp in elem;\n\t\tif ( valueIsBorderBox ) {\n\t\t\tval = elem[ offsetProp ];\n\t\t}\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"gridArea\": true,\n\t\t\"gridColumn\": true,\n\t\t\"gridColumnEnd\": true,\n\t\t\"gridColumnStart\": true,\n\t\t\"gridRow\": true,\n\t\t\"gridRowEnd\": true,\n\t\t\"gridRowStart\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\t// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n\t\t\t// \"px\" to a few hardcoded values.\n\t\t\tif ( type === \"number\" && !isCustomProp ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( _i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\n\t\t\t\t// Only read styles.position if the test has a chance to fail\n\t\t\t\t// to avoid forcing a reflow.\n\t\t\t\tscrollboxSizeBuggy = !support.scrollboxSize() &&\n\t\t\t\t\tstyles.position === \"absolute\",\n\n\t\t\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n\t\t\t\tboxSizingNeeded = scrollboxSizeBuggy || extra,\n\t\t\t\tisBorderBox = boxSizingNeeded &&\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra ?\n\t\t\t\t\tboxModelAdjustment(\n\t\t\t\t\t\telem,\n\t\t\t\t\t\tdimension,\n\t\t\t\t\t\textra,\n\t\t\t\t\t\tisBorderBox,\n\t\t\t\t\t\tstyles\n\t\t\t\t\t) :\n\t\t\t\t\t0;\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && scrollboxSizeBuggy ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 && (\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ||\n\t\t\t\t\ttween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( _i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( _i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = classesToArray( value );\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = (\n\t\t\t\t\tdataPriv.get( cur, \"events\" ) || Object.create( null )\n\t\t\t\t)[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\n\t\t\t\t// Handle: regular nodes (via `this.ownerDocument`), window\n\t\t\t\t// (via `this.document`) & document (via `this`).\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = { guid: Date.now() };\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\tif ( a == null ) {\n\t\treturn \"\";\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( _i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() + \" \" ] =\n\t\t\t\t\t\t\t\t\t( responseHeaders[ match[ 1 ].toLowerCase() + \" \" ] || [] )\n\t\t\t\t\t\t\t\t\t\t.concat( match[ 2 ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() + \" \" ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match.join( \", \" );\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce.guid++ ) +\n\t\t\t\t\tuncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Use a noop converter for missing script\n\t\t\tif ( !isSuccess && jQuery.inArray( \"script\", s.dataTypes ) > -1 ) {\n\t\t\t\ts.converters[ \"text script\" ] = function() {};\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( _i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\njQuery.ajaxPrefilter( function( s ) {\n\tvar i;\n\tfor ( i in s.headers ) {\n\t\tif ( i.toLowerCase() === \"content-type\" ) {\n\t\t\ts.contentType = s.headers[ i ] || \"\";\n\t\t}\n\t}\n} );\n\n\njQuery._evalUrl = function( url, options, doc ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\n\t\t// Only evaluate the response if it is successful (gh-4126)\n\t\t// dataFilter is not invoked for failure responses, so using it instead\n\t\t// of the default converter is kludgy but it works.\n\t\tconverters: {\n\t\t\t\"text script\": function() {}\n\t\t},\n\t\tdataFilter: function( response ) {\n\t\t\tjQuery.globalEval( response, options, doc );\n\t\t}\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain or forced-by-attrs requests\n\tif ( s.crossDomain || s.scriptAttrs ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" )\n\t\t\t\t\t.attr( s.scriptAttrs || {} )\n\t\t\t\t\t.prop( { charset: s.scriptCharset, src: s.url } )\n\t\t\t\t\t.on( \"load error\", callback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce.guid++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tif ( typeof props.top === \"number\" ) {\n\t\t\t\tprops.top += \"px\";\n\t\t\t}\n\t\t\tif ( typeof props.left === \"number\" ) {\n\t\t\t\tprops.left += \"px\";\n\t\t\t}\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( _i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( _i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t},\n\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( _i, name ) {\n\n\t\t// Handle event binding\n\t\tjQuery.fn[ name ] = function( data, fn ) {\n\t\t\treturn arguments.length > 0 ?\n\t\t\t\tthis.on( name, null, data, fn ) :\n\t\t\t\tthis.trigger( name );\n\t\t};\n\t} );\n\n\n\n\n// Support: Android <=4.0 only\n// Make sure we trim BOM and NBSP\nvar rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\njQuery.trim = function( text ) {\n\treturn text == null ?\n\t\t\"\" :\n\t\t( text + \"\" ).replace( rtrim, \"\" );\n};\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( true ) {\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\treturn jQuery;\n\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( typeof noGlobal === \"undefined\" ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/jquery/dist/jquery.js?");

/***/ }),

/***/ "./node_modules/ngraph.events/index.js":
/*!*********************************************!*\
  !*** ./node_modules/ngraph.events/index.js ***!
  \*********************************************/
/***/ ((module) => {

eval("module.exports = function eventify(subject) {\n  validateSubject(subject);\n\n  var eventsStorage = createEventsStorage(subject);\n  subject.on = eventsStorage.on;\n  subject.off = eventsStorage.off;\n  subject.fire = eventsStorage.fire;\n  return subject;\n};\n\nfunction createEventsStorage(subject) {\n  // Store all event listeners to this hash. Key is event name, value is array\n  // of callback records.\n  //\n  // A callback record consists of callback function and its optional context:\n  // { 'eventName' => [{callback: function, ctx: object}] }\n  var registeredEvents = Object.create(null);\n\n  return {\n    on: function (eventName, callback, ctx) {\n      if (typeof callback !== 'function') {\n        throw new Error('callback is expected to be a function');\n      }\n      var handlers = registeredEvents[eventName];\n      if (!handlers) {\n        handlers = registeredEvents[eventName] = [];\n      }\n      handlers.push({callback: callback, ctx: ctx});\n\n      return subject;\n    },\n\n    off: function (eventName, callback) {\n      var wantToRemoveAll = (typeof eventName === 'undefined');\n      if (wantToRemoveAll) {\n        // Killing old events storage should be enough in this case:\n        registeredEvents = Object.create(null);\n        return subject;\n      }\n\n      if (registeredEvents[eventName]) {\n        var deleteAllCallbacksForEvent = (typeof callback !== 'function');\n        if (deleteAllCallbacksForEvent) {\n          delete registeredEvents[eventName];\n        } else {\n          var callbacks = registeredEvents[eventName];\n          for (var i = 0; i < callbacks.length; ++i) {\n            if (callbacks[i].callback === callback) {\n              callbacks.splice(i, 1);\n            }\n          }\n        }\n      }\n\n      return subject;\n    },\n\n    fire: function (eventName) {\n      var callbacks = registeredEvents[eventName];\n      if (!callbacks) {\n        return subject;\n      }\n\n      var fireArguments;\n      if (arguments.length > 1) {\n        fireArguments = Array.prototype.splice.call(arguments, 1);\n      }\n      for(var i = 0; i < callbacks.length; ++i) {\n        var callbackInfo = callbacks[i];\n        callbackInfo.callback.apply(callbackInfo.ctx, fireArguments);\n      }\n\n      return subject;\n    }\n  };\n}\n\nfunction validateSubject(subject) {\n  if (!subject) {\n    throw new Error('Eventify cannot use falsy object as events subject');\n  }\n  var reservedWords = ['on', 'fire', 'off'];\n  for (var i = 0; i < reservedWords.length; ++i) {\n    if (subject.hasOwnProperty(reservedWords[i])) {\n      throw new Error(\"Subject cannot be eventified, since it already has property '\" + reservedWords[i] + \"'\");\n    }\n  }\n}\n\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/ngraph.events/index.js?");

/***/ }),

/***/ "./node_modules/ngraph.forcelayout/index.js":
/*!**************************************************!*\
  !*** ./node_modules/ngraph.forcelayout/index.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = createLayout;\nmodule.exports.simulator = __webpack_require__(/*! ./lib/createPhysicsSimulator */ \"./node_modules/ngraph.forcelayout/lib/createPhysicsSimulator.js\");\n\nvar eventify = __webpack_require__(/*! ngraph.events */ \"./node_modules/ngraph.events/index.js\");\n\n/**\n * Creates force based layout for a given graph.\n *\n * @param {ngraph.graph} graph which needs to be laid out\n * @param {object} physicsSettings if you need custom settings\n * for physics simulator you can pass your own settings here. If it's not passed\n * a default one will be created.\n */\nfunction createLayout(graph, physicsSettings) {\n  if (!graph) {\n    throw new Error('Graph structure cannot be undefined');\n  }\n\n  var createSimulator = (physicsSettings && physicsSettings.createSimulator) || __webpack_require__(/*! ./lib/createPhysicsSimulator */ \"./node_modules/ngraph.forcelayout/lib/createPhysicsSimulator.js\");\n  var physicsSimulator = createSimulator(physicsSettings);\n  if (Array.isArray(physicsSettings)) throw new Error('Physics settings is expected to be an object');\n\n  var nodeMass = defaultNodeMass;\n  if (physicsSettings && typeof physicsSettings.nodeMass === 'function') {\n    nodeMass = physicsSettings.nodeMass\n  }\n\n  var nodeBodies = new Map();\n  var springs = {};\n  var bodiesCount = 0;\n\n  var springTransform = physicsSimulator.settings.springTransform || noop;\n\n  // Initialize physics with what we have in the graph:\n  initPhysics();\n  listenToEvents();\n\n  var wasStable = false;\n\n  var api = {\n    /**\n     * Performs one step of iterative layout algorithm\n     *\n     * @returns {boolean} true if the system should be considered stable; False otherwise.\n     * The system is stable if no further call to `step()` can improve the layout.\n     */\n    step: function() {\n      if (bodiesCount === 0) {\n        updateStableStatus(true);\n        return true;\n      }\n\n      var lastMove = physicsSimulator.step();\n\n      // Save the movement in case if someone wants to query it in the step\n      // callback.\n      api.lastMove = lastMove;\n\n      // Allow listeners to perform low-level actions after nodes are updated.\n      api.fire('step');\n\n      var ratio = lastMove/bodiesCount;\n      var isStableNow = ratio <= 0.01; // TODO: The number is somewhat arbitrary...\n      updateStableStatus(isStableNow);\n\n\n      return isStableNow;\n    },\n\n    /**\n     * For a given `nodeId` returns position\n     */\n    getNodePosition: function (nodeId) {\n      return getInitializedBody(nodeId).pos;\n    },\n\n    /**\n     * Sets position of a node to a given coordinates\n     * @param {string} nodeId node identifier\n     * @param {number} x position of a node\n     * @param {number} y position of a node\n     * @param {number=} z position of node (only if applicable to body)\n     */\n    setNodePosition: function (nodeId) {\n      var body = getInitializedBody(nodeId);\n      body.setPosition.apply(body, Array.prototype.slice.call(arguments, 1));\n    },\n\n    /**\n     * @returns {Object} Link position by link id\n     * @returns {Object.from} {x, y} coordinates of link start\n     * @returns {Object.to} {x, y} coordinates of link end\n     */\n    getLinkPosition: function (linkId) {\n      var spring = springs[linkId];\n      if (spring) {\n        return {\n          from: spring.from.pos,\n          to: spring.to.pos\n        };\n      }\n    },\n\n    /**\n     * @returns {Object} area required to fit in the graph. Object contains\n     * `x1`, `y1` - top left coordinates\n     * `x2`, `y2` - bottom right coordinates\n     */\n    getGraphRect: function () {\n      return physicsSimulator.getBBox();\n    },\n\n    /**\n     * Iterates over each body in the layout simulator and performs a callback(body, nodeId)\n     */\n    forEachBody: forEachBody,\n\n    /*\n     * Requests layout algorithm to pin/unpin node to its current position\n     * Pinned nodes should not be affected by layout algorithm and always\n     * remain at their position\n     */\n    pinNode: function (node, isPinned) {\n      var body = getInitializedBody(node.id);\n       body.isPinned = !!isPinned;\n    },\n\n    /**\n     * Checks whether given graph's node is currently pinned\n     */\n    isNodePinned: function (node) {\n      return getInitializedBody(node.id).isPinned;\n    },\n\n    /**\n     * Request to release all resources\n     */\n    dispose: function() {\n      graph.off('changed', onGraphChanged);\n      api.fire('disposed');\n    },\n\n    /**\n     * Gets physical body for a given node id. If node is not found undefined\n     * value is returned.\n     */\n    getBody: getBody,\n\n    /**\n     * Gets spring for a given edge.\n     *\n     * @param {string} linkId link identifer. If two arguments are passed then\n     * this argument is treated as formNodeId\n     * @param {string=} toId when defined this parameter denotes head of the link\n     * and first argument is treated as tail of the link (fromId)\n     */\n    getSpring: getSpring,\n\n    /**\n     * Returns length of cumulative force vector. The closer this to zero - the more stable the system is\n     */\n    getForceVectorLength: getForceVectorLength,\n\n    /**\n     * [Read only] Gets current physics simulator\n     */\n    simulator: physicsSimulator,\n\n    /**\n     * Gets the graph that was used for layout\n     */\n    graph: graph,\n\n    /**\n     * Gets amount of movement performed during last step operation\n     */\n    lastMove: 0\n  };\n\n  eventify(api);\n\n  return api;\n\n  function updateStableStatus(isStableNow) {\n    if (wasStable !== isStableNow) {\n      wasStable = isStableNow;\n      onStableChanged(isStableNow);\n    }\n  }\n\n  function forEachBody(cb) {\n    nodeBodies.forEach(function(body, bodyId) {\n      cb(body, bodyId);\n    })\n  }\n\n  function getForceVectorLength() {\n    var fx = 0, fy = 0;\n    forEachBody(function(body) {\n      fx += Math.abs(body.force.x);\n      fy += Math.abs(body.force.y);\n    });\n    return Math.sqrt(fx * fx + fy * fy);\n  }\n\n  function getSpring(fromId, toId) {\n    var linkId;\n    if (toId === undefined) {\n      if (typeof fromId !== 'object') {\n        // assume fromId as a linkId:\n        linkId = fromId;\n      } else {\n        // assume fromId to be a link object:\n        linkId = fromId.id;\n      }\n    } else {\n      // toId is defined, should grab link:\n      var link = graph.hasLink(fromId, toId);\n      if (!link) return;\n      linkId = link.id;\n    }\n\n    return springs[linkId];\n  }\n\n  function getBody(nodeId) {\n    return nodeBodies.get(nodeId);\n  }\n\n  function listenToEvents() {\n    graph.on('changed', onGraphChanged);\n  }\n\n  function onStableChanged(isStable) {\n    api.fire('stable', isStable);\n  }\n\n  function onGraphChanged(changes) {\n    for (var i = 0; i < changes.length; ++i) {\n      var change = changes[i];\n      if (change.changeType === 'add') {\n        if (change.node) {\n          initBody(change.node.id);\n        }\n        if (change.link) {\n          initLink(change.link);\n        }\n      } else if (change.changeType === 'remove') {\n        if (change.node) {\n          releaseNode(change.node);\n        }\n        if (change.link) {\n          releaseLink(change.link);\n        }\n      }\n    }\n    bodiesCount = graph.getNodesCount();\n  }\n\n  function initPhysics() {\n    bodiesCount = 0;\n\n    graph.forEachNode(function (node) {\n      initBody(node.id);\n      bodiesCount += 1;\n    });\n\n    graph.forEachLink(initLink);\n  }\n\n  function initBody(nodeId) {\n    var body = nodeBodies.get(nodeId);\n    if (!body) {\n      var node = graph.getNode(nodeId);\n      if (!node) {\n        throw new Error('initBody() was called with unknown node id');\n      }\n\n      var pos = node.position;\n      if (!pos) {\n        var neighbors = getNeighborBodies(node);\n        pos = physicsSimulator.getBestNewBodyPosition(neighbors);\n      }\n\n      body = physicsSimulator.addBodyAt(pos);\n      body.id = nodeId;\n\n      nodeBodies.set(nodeId, body);\n      updateBodyMass(nodeId);\n\n      if (isNodeOriginallyPinned(node)) {\n        body.isPinned = true;\n      }\n    }\n  }\n\n  function releaseNode(node) {\n    var nodeId = node.id;\n    var body = nodeBodies.get(nodeId);\n    if (body) {\n      nodeBodies.delete(nodeId);\n      physicsSimulator.removeBody(body);\n    }\n  }\n\n  function initLink(link) {\n    updateBodyMass(link.fromId);\n    updateBodyMass(link.toId);\n\n    var fromBody = nodeBodies.get(link.fromId),\n        toBody  = nodeBodies.get(link.toId),\n        spring = physicsSimulator.addSpring(fromBody, toBody, link.length);\n\n    springTransform(link, spring);\n\n    springs[link.id] = spring;\n  }\n\n  function releaseLink(link) {\n    var spring = springs[link.id];\n    if (spring) {\n      var from = graph.getNode(link.fromId),\n          to = graph.getNode(link.toId);\n\n      if (from) updateBodyMass(from.id);\n      if (to) updateBodyMass(to.id);\n\n      delete springs[link.id];\n\n      physicsSimulator.removeSpring(spring);\n    }\n  }\n\n  function getNeighborBodies(node) {\n    // TODO: Could probably be done better on memory\n    var neighbors = [];\n    if (!node.links) {\n      return neighbors;\n    }\n    var maxNeighbors = Math.min(node.links.length, 2);\n    for (var i = 0; i < maxNeighbors; ++i) {\n      var link = node.links[i];\n      var otherBody = link.fromId !== node.id ? nodeBodies.get(link.fromId) : nodeBodies.get(link.toId);\n      if (otherBody && otherBody.pos) {\n        neighbors.push(otherBody);\n      }\n    }\n\n    return neighbors;\n  }\n\n  function updateBodyMass(nodeId) {\n    var body = nodeBodies.get(nodeId);\n    body.mass = nodeMass(nodeId);\n    if (Number.isNaN(body.mass)) {\n      throw new Error('Node mass should be a number')\n    }\n  }\n\n  /**\n   * Checks whether graph node has in its settings pinned attribute,\n   * which means layout algorithm cannot move it. Node can be marked\n   * as pinned, if it has \"isPinned\" attribute, or when node.data has it.\n   *\n   * @param {Object} node a graph node to check\n   * @return {Boolean} true if node should be treated as pinned; false otherwise.\n   */\n  function isNodeOriginallyPinned(node) {\n    return (node && (node.isPinned || (node.data && node.data.isPinned)));\n  }\n\n  function getInitializedBody(nodeId) {\n    var body = nodeBodies.get(nodeId);\n    if (!body) {\n      initBody(nodeId);\n      body = nodeBodies.get(nodeId);\n    }\n    return body;\n  }\n\n  /**\n   * Calculates mass of a body, which corresponds to node with given id.\n   *\n   * @param {String|Number} nodeId identifier of a node, for which body mass needs to be calculated\n   * @returns {Number} recommended mass of the body;\n   */\n  function defaultNodeMass(nodeId) {\n    var links = graph.getLinks(nodeId);\n    if (!links) return 1;\n    return 1 + links.length / 3.0;\n  }\n}\n\nfunction noop() { }\n\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/ngraph.forcelayout/index.js?");

/***/ }),

/***/ "./node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js":
/*!************************************************************************************!*\
  !*** ./node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js ***!
  \************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const getVariableName = __webpack_require__(/*! ./getVariableName */ \"./node_modules/ngraph.forcelayout/lib/codeGenerators/getVariableName.js\");\n\nmodule.exports = function createPatternBuilder(dimension) {\n\n  return pattern;\n  \n  function pattern(template, config) {\n    let indent = (config && config.indent) || 0;\n    let join = (config && config.join !== undefined) ? config.join : '\\n';\n    let indentString = Array(indent + 1).join(' ');\n    let buffer = [];\n    for (let i = 0; i < dimension; ++i) {\n      let variableName = getVariableName(i);\n      let prefix = (i === 0) ? '' : indentString;\n      buffer.push(prefix + template.replace(/{var}/g, variableName));\n    }\n    return buffer.join(join)\n  }\n}\n\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js?");

/***/ }),

/***/ "./node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js":
/*!******************************************************************************!*\
  !*** ./node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = generateBoundsFunction;\nmodule.exports.generateFunctionBody = generateBoundsFunctionBody;\n\nconst createPatternBuilder = __webpack_require__(/*! ./createPatternBuilder */ \"./node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js\");\n\nfunction generateBoundsFunction(dimension) {\n  let code = generateBoundsFunctionBody(dimension);\n  return new Function('bodies', 'settings', 'random', code);\n}\n\nfunction generateBoundsFunctionBody(dimension) {\n  let pattern = createPatternBuilder(dimension);\n\n  let code = `\n  var boundingBox = {\n    ${pattern('min_{var}: 0, max_{var}: 0,', {indent: 4})}\n  };\n\n  return {\n    box: boundingBox,\n\n    update: updateBoundingBox,\n\n    reset: resetBoundingBox,\n\n    getBestNewPosition: function (neighbors) {\n      var ${pattern('base_{var} = 0', {join: ', '})};\n\n      if (neighbors.length) {\n        for (var i = 0; i < neighbors.length; ++i) {\n          let neighborPos = neighbors[i].pos;\n          ${pattern('base_{var} += neighborPos.{var};', {indent: 10})}\n        }\n\n        ${pattern('base_{var} /= neighbors.length;', {indent: 8})}\n      } else {\n        ${pattern('base_{var} = (boundingBox.min_{var} + boundingBox.max_{var}) / 2;', {indent: 8})}\n      }\n\n      var springLength = settings.springLength;\n      return {\n        ${pattern('{var}: base_{var} + (random.nextDouble() - 0.5) * springLength,', {indent: 8})}\n      };\n    }\n  };\n\n  function updateBoundingBox() {\n    var i = bodies.length;\n    if (i === 0) return; // No bodies - no borders.\n\n    ${pattern('var max_{var} = Number.MIN_VALUE;', {indent: 4})}\n    ${pattern('var min_{var} = Number.MAX_VALUE;', {indent: 4})}\n\n    while(i--) {\n      // this is O(n), it could be done faster with quadtree, if we check the root node bounds\n      var bodyPos = bodies[i].pos;\n      ${pattern('if (bodyPos.{var} < min_{var}) min_{var} = bodyPos.{var};', {indent: 6})}\n      ${pattern('if (bodyPos.{var} > max_{var}) max_{var} = bodyPos.{var};', {indent: 6})}\n    }\n\n    ${pattern('boundingBox.min_{var} = min_{var};', {indent: 4})}\n    ${pattern('boundingBox.max_{var} = max_{var};', {indent: 4})}\n  }\n\n  function resetBoundingBox() {\n    ${pattern('boundingBox.min_{var} = boundingBox.max_{var} = 0;', {indent: 4})}\n  }\n`\n  return code;\n}\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js?");

/***/ }),

/***/ "./node_modules/ngraph.forcelayout/lib/codeGenerators/generateCreateBody.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/ngraph.forcelayout/lib/codeGenerators/generateCreateBody.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst createPatternBuilder = __webpack_require__(/*! ./createPatternBuilder */ \"./node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js\");\n\nmodule.exports = generateCreateBodyFunction;\nmodule.exports.generateCreateBodyFunctionBody = generateCreateBodyFunctionBody;\n\nfunction generateCreateBodyFunction(dimension, debugSetters) {\n  let code = generateCreateBodyFunctionBody(dimension, debugSetters);\n  let {Body} = (new Function(code))();\n  return Body;\n}\n\nfunction generateCreateBodyFunctionBody(dimension, debugSetters) {\n  let pattern = createPatternBuilder(dimension);\n  let variableList = pattern('{var}', {join: ', '});\n  let setters = '';\n  if (debugSetters) {\n    setters = `${pattern(\"\\n\\\n   var v{var};\\n\\\nObject.defineProperty(this, '{var}', {\\n\\\n  set: function(v) { \\n\\\n    if (!Number.isFinite(v)) throw new Error('Cannot set non-numbers to {var}');\\n\\\n    v{var} = v; \\n\\\n  },\\n\\\n  get: function() { return v{var}; }\\n\\\n});\")}`;\n  }\n\n  let code = `\nfunction Vector(${variableList}) {\n${setters}\n  if (typeof arguments[0] === 'object') {\n    // could be another vector\n    let v = arguments[0];\n    ${pattern('if (!Number.isFinite(v.{var})) throw new Error(\"Expected value is not a finite number at Vector constructor ({var})\");', {indent: 4})}\n    ${pattern('this.{var} = v.{var};', {indent: 4})}\n  } else {\n    ${pattern('this.{var} = typeof {var} === \"number\" ? {var} : 0;', {indent: 4})}\n  }\n}\n\nVector.prototype.reset = function () {\n  ${pattern('this.{var} = ', {join: ''})}0;\n};\n\nfunction Body(${variableList}) {\n  this.isPinned = false;\n  this.pos = new Vector(${variableList});\n  this.force = new Vector();\n  this.velocity = new Vector();\n  this.mass = 1;\n\n  this.springCount = 0;\n  this.springLength = 0;\n}\n\nBody.prototype.reset = function() {\n  this.force.reset();\n  this.springCount = 0;\n  this.springLength = 0;\n}\n\nBody.prototype.setPosition = function (${variableList}) {\n  ${pattern('this.pos.{var} = {var} || 0;', {indent: 2})}\n};\n\nreturn {Body: Body, Vector: Vector};\n`\n  return code;\n}\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/ngraph.forcelayout/lib/codeGenerators/generateCreateBody.js?");

/***/ }),

/***/ "./node_modules/ngraph.forcelayout/lib/codeGenerators/generateCreateDragForce.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/ngraph.forcelayout/lib/codeGenerators/generateCreateDragForce.js ***!
  \***************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const createPatternBuilder = __webpack_require__(/*! ./createPatternBuilder */ \"./node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js\");\n\nmodule.exports = generateCreateDragForceFunction;\nmodule.exports.generateCreateDragForceFunctionBody = generateCreateDragForceFunctionBody;\n\nfunction generateCreateDragForceFunction(dimension) {\n  let code = generateCreateDragForceFunctionBody(dimension);\n  return new Function('options', code);\n}\n\nfunction generateCreateDragForceFunctionBody(dimension) {\n  let pattern = createPatternBuilder(dimension);\n  let code = `\n  if (!Number.isFinite(options.dragCoefficient)) throw new Error('dragCoefficient is not a finite number');\n\n  return {\n    update: function(body) {\n      ${pattern('body.force.{var} -= options.dragCoefficient * body.velocity.{var};', {indent: 6})}\n    }\n  };\n`\n  return code;\n}\n\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/ngraph.forcelayout/lib/codeGenerators/generateCreateDragForce.js?");

/***/ }),

/***/ "./node_modules/ngraph.forcelayout/lib/codeGenerators/generateCreateSpringForce.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/ngraph.forcelayout/lib/codeGenerators/generateCreateSpringForce.js ***!
  \*****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const createPatternBuilder = __webpack_require__(/*! ./createPatternBuilder */ \"./node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js\");\n\nmodule.exports = generateCreateSpringForceFunction;\nmodule.exports.generateCreateSpringForceFunctionBody = generateCreateSpringForceFunctionBody;\n\nfunction generateCreateSpringForceFunction(dimension) {\n  let code = generateCreateSpringForceFunctionBody(dimension);\n  return new Function('options', 'random', code);\n}\n\nfunction generateCreateSpringForceFunctionBody(dimension) {\n  let pattern = createPatternBuilder(dimension);\n  let code = `\n  if (!Number.isFinite(options.springCoefficient)) throw new Error('Spring coefficient is not a number');\n  if (!Number.isFinite(options.springLength)) throw new Error('Spring length is not a number');\n\n  return {\n    /**\n     * Updates forces acting on a spring\n     */\n    update: function (spring) {\n      var body1 = spring.from;\n      var body2 = spring.to;\n      var length = spring.length < 0 ? options.springLength : spring.length;\n      ${pattern('var d{var} = body2.pos.{var} - body1.pos.{var};', {indent: 6})}\n      var r = Math.sqrt(${pattern('d{var} * d{var}', {join: ' + '})});\n\n      if (r === 0) {\n        ${pattern('d{var} = (random.nextDouble() - 0.5) / 50;', {indent: 8})}\n        r = Math.sqrt(${pattern('d{var} * d{var}', {join: ' + '})});\n      }\n\n      var d = r - length;\n      var coefficient = ((spring.coefficient > 0) ? spring.coefficient : options.springCoefficient) * d / r;\n\n      ${pattern('body1.force.{var} += coefficient * d{var}', {indent: 6})};\n      body1.springCount += 1;\n      body1.springLength += r;\n\n      ${pattern('body2.force.{var} -= coefficient * d{var}', {indent: 6})};\n      body2.springCount += 1;\n      body2.springLength += r;\n    }\n  };\n`\n  return code;\n}\n\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/ngraph.forcelayout/lib/codeGenerators/generateCreateSpringForce.js?");

/***/ }),

/***/ "./node_modules/ngraph.forcelayout/lib/codeGenerators/generateIntegrator.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/ngraph.forcelayout/lib/codeGenerators/generateIntegrator.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const createPatternBuilder = __webpack_require__(/*! ./createPatternBuilder */ \"./node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js\");\n\nmodule.exports = generateIntegratorFunction;\nmodule.exports.generateIntegratorFunctionBody = generateIntegratorFunctionBody;\n\nfunction generateIntegratorFunction(dimension) {\n  let code = generateIntegratorFunctionBody(dimension);\n  return new Function('bodies', 'timeStep', 'adaptiveTimeStepWeight', code);\n}\n\nfunction generateIntegratorFunctionBody(dimension) {\n  let pattern = createPatternBuilder(dimension);\n  let code = `\n  var length = bodies.length;\n  if (length === 0) return 0;\n\n  ${pattern('var d{var} = 0, t{var} = 0;', {indent: 2})}\n\n  for (var i = 0; i < length; ++i) {\n    var body = bodies[i];\n    if (body.isPinned) continue;\n\n    if (adaptiveTimeStepWeight && body.springCount) {\n      timeStep = (adaptiveTimeStepWeight * body.springLength/body.springCount);\n    }\n\n    var coeff = timeStep / body.mass;\n\n    ${pattern('body.velocity.{var} += coeff * body.force.{var};', {indent: 4})}\n    ${pattern('var v{var} = body.velocity.{var};', {indent: 4})}\n    var v = Math.sqrt(${pattern('v{var} * v{var}', {join: ' + '})});\n\n    if (v > 1) {\n      // We normalize it so that we move within timeStep range. \n      // for the case when v <= 1 - we let velocity to fade out.\n      ${pattern('body.velocity.{var} = v{var} / v;', {indent: 6})}\n    }\n\n    ${pattern('d{var} = timeStep * body.velocity.{var};', {indent: 4})}\n\n    ${pattern('body.pos.{var} += d{var};', {indent: 4})}\n\n    ${pattern('t{var} += Math.abs(d{var});', {indent: 4})}\n  }\n\n  return (${pattern('t{var} * t{var}', {join: ' + '})})/length;\n`\n  return code;\n}\n\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/ngraph.forcelayout/lib/codeGenerators/generateIntegrator.js?");

/***/ }),

/***/ "./node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js":
/*!********************************************************************************!*\
  !*** ./node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const createPatternBuilder = __webpack_require__(/*! ./createPatternBuilder */ \"./node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js\");\nconst getVariableName = __webpack_require__(/*! ./getVariableName */ \"./node_modules/ngraph.forcelayout/lib/codeGenerators/getVariableName.js\");\n\nmodule.exports = generateQuadTreeFunction;\nmodule.exports.generateQuadTreeFunctionBody = generateQuadTreeFunctionBody;\n\nfunction generateQuadTreeFunction(dimension) {\n  let code = generateQuadTreeFunctionBody(dimension);\n  return (new Function(code))();\n}\n\nfunction generateQuadTreeFunctionBody(dimension) {\n  let pattern = createPatternBuilder(dimension);\n  let quadCount = Math.pow(2, dimension);\n\n  let code = `\n${getInsertStackCode()}\n${getQuadNodeCode(dimension)}\n\nfunction createQuadTree(options, random) {\n  options = options || {};\n  options.gravity = typeof options.gravity === 'number' ? options.gravity : -1;\n  options.theta = typeof options.theta === 'number' ? options.theta : 0.8;\n\n  var gravity = options.gravity;\n  var updateQueue = [];\n  var insertStack = new InsertStack();\n  var theta = options.theta;\n\n  var nodesCache = [];\n  var currentInCache = 0;\n  var root = newNode();\n\n  return {\n    insertBodies: insertBodies,\n\n    /**\n     * Gets root node if it is present\n     */\n    getRoot: function() {\n      return root;\n    },\n\n    updateBodyForce: update,\n\n    options: function(newOptions) {\n      if (newOptions) {\n        if (typeof newOptions.gravity === 'number') {\n          gravity = newOptions.gravity;\n        }\n        if (typeof newOptions.theta === 'number') {\n          theta = newOptions.theta;\n        }\n\n        return this;\n      }\n\n      return {\n        gravity: gravity,\n        theta: theta\n      };\n    }\n  };\n\n  function newNode() {\n    // To avoid pressure on GC we reuse nodes.\n    var node = nodesCache[currentInCache];\n    if (node) {\n${assignQuads('      node.')}\n      node.body = null;\n      node.mass = ${pattern('node.mass_{var} = ', {join: ''})}0;\n      ${pattern('node.min_{var} = node.max_{var} = ', {join: ''})}0;\n    } else {\n      node = new QuadNode();\n      nodesCache[currentInCache] = node;\n    }\n\n    ++currentInCache;\n    return node;\n  }\n\n  function update(sourceBody) {\n    var queue = updateQueue;\n    var v;\n    ${pattern('var d{var};', {indent: 4})}\n    var r; \n    ${pattern('var f{var} = 0;', {indent: 4})}\n    var queueLength = 1;\n    var shiftIdx = 0;\n    var pushIdx = 1;\n\n    queue[0] = root;\n\n    while (queueLength) {\n      var node = queue[shiftIdx];\n      var body = node.body;\n\n      queueLength -= 1;\n      shiftIdx += 1;\n      var differentBody = (body !== sourceBody);\n      if (body && differentBody) {\n        // If the current node is a leaf node (and it is not source body),\n        // calculate the force exerted by the current node on body, and add this\n        // amount to body's net force.\n        ${pattern('d{var} = body.pos.{var} - sourceBody.pos.{var};', {indent: 8})}\n        r = Math.sqrt(${pattern('d{var} * d{var}', {join: ' + '})});\n\n        if (r === 0) {\n          // Poor man's protection against zero distance.\n          ${pattern('d{var} = (random.nextDouble() - 0.5) / 50;', {indent: 10})}\n          r = Math.sqrt(${pattern('d{var} * d{var}', {join: ' + '})});\n        }\n\n        // This is standard gravitation force calculation but we divide\n        // by r^3 to save two operations when normalizing force vector.\n        v = gravity * body.mass * sourceBody.mass / (r * r * r);\n        ${pattern('f{var} += v * d{var};', {indent: 8})}\n      } else if (differentBody) {\n        // Otherwise, calculate the ratio s / r,  where s is the width of the region\n        // represented by the internal node, and r is the distance between the body\n        // and the node's center-of-mass\n        ${pattern('d{var} = node.mass_{var} / node.mass - sourceBody.pos.{var};', {indent: 8})}\n        r = Math.sqrt(${pattern('d{var} * d{var}', {join: ' + '})});\n\n        if (r === 0) {\n          // Sorry about code duplication. I don't want to create many functions\n          // right away. Just want to see performance first.\n          ${pattern('d{var} = (random.nextDouble() - 0.5) / 50;', {indent: 10})}\n          r = Math.sqrt(${pattern('d{var} * d{var}', {join: ' + '})});\n        }\n        // If s / r < θ, treat this internal node as a single body, and calculate the\n        // force it exerts on sourceBody, and add this amount to sourceBody's net force.\n        if ((node.max_${getVariableName(0)} - node.min_${getVariableName(0)}) / r < theta) {\n          // in the if statement above we consider node's width only\n          // because the region was made into square during tree creation.\n          // Thus there is no difference between using width or height.\n          v = gravity * node.mass * sourceBody.mass / (r * r * r);\n          ${pattern('f{var} += v * d{var};', {indent: 10})}\n        } else {\n          // Otherwise, run the procedure recursively on each of the current node's children.\n\n          // I intentionally unfolded this loop, to save several CPU cycles.\n${runRecursiveOnChildren()}\n        }\n      }\n    }\n\n    ${pattern('sourceBody.force.{var} += f{var};', {indent: 4})}\n  }\n\n  function insertBodies(bodies) {\n    ${pattern('var {var}min = Number.MAX_VALUE;', {indent: 4})}\n    ${pattern('var {var}max = Number.MIN_VALUE;', {indent: 4})}\n    var i = bodies.length;\n\n    // To reduce quad tree depth we are looking for exact bounding box of all particles.\n    while (i--) {\n      var pos = bodies[i].pos;\n      ${pattern('if (pos.{var} < {var}min) {var}min = pos.{var};', {indent: 6})}\n      ${pattern('if (pos.{var} > {var}max) {var}max = pos.{var};', {indent: 6})}\n    }\n\n    // Makes the bounds square.\n    var maxSideLength = -Infinity;\n    ${pattern('if ({var}max - {var}min > maxSideLength) maxSideLength = {var}max - {var}min ;', {indent: 4})}\n\n    currentInCache = 0;\n    root = newNode();\n    ${pattern('root.min_{var} = {var}min;', {indent: 4})}\n    ${pattern('root.max_{var} = {var}min + maxSideLength;', {indent: 4})}\n\n    i = bodies.length - 1;\n    if (i >= 0) {\n      root.body = bodies[i];\n    }\n    while (i--) {\n      insert(bodies[i], root);\n    }\n  }\n\n  function insert(newBody) {\n    insertStack.reset();\n    insertStack.push(root, newBody);\n\n    while (!insertStack.isEmpty()) {\n      var stackItem = insertStack.pop();\n      var node = stackItem.node;\n      var body = stackItem.body;\n\n      if (!node.body) {\n        // This is internal node. Update the total mass of the node and center-of-mass.\n        ${pattern('var {var} = body.pos.{var};', {indent: 8})}\n        node.mass += body.mass;\n        ${pattern('node.mass_{var} += body.mass * {var};', {indent: 8})}\n\n        // Recursively insert the body in the appropriate quadrant.\n        // But first find the appropriate quadrant.\n        var quadIdx = 0; // Assume we are in the 0's quad.\n        ${pattern('var min_{var} = node.min_{var};', {indent: 8})}\n        ${pattern('var max_{var} = (min_{var} + node.max_{var}) / 2;', {indent: 8})}\n\n${assignInsertionQuadIndex(8)}\n\n        var child = getChild(node, quadIdx);\n\n        if (!child) {\n          // The node is internal but this quadrant is not taken. Add\n          // subnode to it.\n          child = newNode();\n          ${pattern('child.min_{var} = min_{var};', {indent: 10})}\n          ${pattern('child.max_{var} = max_{var};', {indent: 10})}\n          child.body = body;\n\n          setChild(node, quadIdx, child);\n        } else {\n          // continue searching in this quadrant.\n          insertStack.push(child, body);\n        }\n      } else {\n        // We are trying to add to the leaf node.\n        // We have to convert current leaf into internal node\n        // and continue adding two nodes.\n        var oldBody = node.body;\n        node.body = null; // internal nodes do not cary bodies\n\n        if (isSamePosition(oldBody.pos, body.pos)) {\n          // Prevent infinite subdivision by bumping one node\n          // anywhere in this quadrant\n          var retriesCount = 3;\n          do {\n            var offset = random.nextDouble();\n            ${pattern('var d{var} = (node.max_{var} - node.min_{var}) * offset;', {indent: 12})}\n\n            ${pattern('oldBody.pos.{var} = node.min_{var} + d{var};', {indent: 12})}\n            retriesCount -= 1;\n            // Make sure we don't bump it out of the box. If we do, next iteration should fix it\n          } while (retriesCount > 0 && isSamePosition(oldBody.pos, body.pos));\n\n          if (retriesCount === 0 && isSamePosition(oldBody.pos, body.pos)) {\n            // This is very bad, we ran out of precision.\n            // if we do not return from the method we'll get into\n            // infinite loop here. So we sacrifice correctness of layout, and keep the app running\n            // Next layout iteration should get larger bounding box in the first step and fix this\n            return;\n          }\n        }\n        // Next iteration should subdivide node further.\n        insertStack.push(node, oldBody);\n        insertStack.push(node, body);\n      }\n    }\n  }\n}\n\nfunction getChild(node, idx) {\n${getChildBody()}\n  return null;\n}\n\nfunction setChild(node, idx, child) {\n${setChildBody()}\n}\n\nfunction isSamePosition(point1, point2) {\n  ${pattern('var d{var} = Math.abs(point1.{var} - point2.{var});', {indent: 2})}\n\n  return ${pattern('d{var} < 1e-8', {join: ' && '})};\n}\n\nreturn createQuadTree;\n\n`\n  return code;\n\n  function getChildBody() {\n    let code = [];\n    for (let i = 0; i < quadCount; ++i) {\n      code.push(`  if (idx === ${i}) return node.quad${i};`);\n    }\n\n    return code.join('\\n');\n    // if (idx === 0) return node.quad0;\n    // if (idx === 1) return node.quad1;\n    // if (idx === 2) return node.quad2;\n    // if (idx === 3) return node.quad3;\n  }\n\n  function setChildBody() {\n    let code = [];\n    for (let i = 0; i < quadCount; ++i) {\n      let prefix = (i === 0) ? '  ' : '  else ';\n      code.push(`${prefix}if (idx === ${i}) node.quad${i} = child;`);\n    }\n\n    return code.join('\\n');\n    // if (idx === 0) node.quad0 = child;\n    // else if (idx === 1) node.quad1 = child;\n    // else if (idx === 2) node.quad2 = child;\n    // else if (idx === 3) node.quad3 = child;\n  }\n\n  function assignInsertionQuadIndex(indentCount) {\n    let code = [];\n    let indent = Array(indentCount + 1).join(' ');\n    for (let i = 0; i < dimension; ++i) {\n      code.push(indent + `if (${getVariableName(i)} > max_${getVariableName(i)}) {`)\n      code.push(indent + `  quadIdx = quadIdx + ${Math.pow(2, i)};`);\n      code.push(indent + `  min_${getVariableName(i)} = max_${getVariableName(i)};`);\n      code.push(indent + `  max_${getVariableName(i)} = node.max_${getVariableName(i)};`);\n      code.push(indent + `}`)\n    }\n    return code.join('\\n');\n    // if (x > max_x) { // somewhere in the eastern part.\n    //   quadIdx = quadIdx + 1;\n    //   left = right;\n    //   right = node.right;\n    // }\n  }\n\n  function runRecursiveOnChildren() {\n    let indent = Array(11).join(' ');\n    let code = [];\n    for (let i = 0; i < quadCount; ++i) {\n      code.push(indent + `if (node.quad${i}) {`)\n      code.push(indent + `  queue[pushIdx] = node.quad${i};`)\n      code.push(indent + `  queueLength += 1;`)\n      code.push(indent + `  pushIdx += 1;`)\n      code.push(indent + `}`)\n    }\n    return code.join('\\n');\n    // if (node.quad0) {\n    //   queue[pushIdx] = node.quad0;\n    //   queueLength += 1;\n    //   pushIdx += 1;\n    // }\n  }\n\n\n  function getQuadNodeCode(dimension) {\n    let code = `\nfunction QuadNode() {\n  // body stored inside this node. In quad tree only leaf nodes (by construction)\n  // contain bodies:\n  this.body = null;\n\n  // Child nodes are stored in quads. Each quad is presented by number:\n  // 0 | 1\n  // -----\n  // 2 | 3\n${assignQuads('  this.')}\n\n  // Total mass of current node\n  this.mass = 0;\n\n  // Center of mass coordinates\n  ${pattern('this.mass_{var} = 0;', {indent: 2})}\n\n  // bounding box coordinates\n  ${pattern('this.min_{var} = 0;', {indent: 2})}\n  ${pattern('this.max_{var} = 0;', {indent: 2})}\n}\n`\n    return code;\n  }\n\n  function assignQuads(indent) {\n    // this.quad0 = null;\n    // this.quad1 = null;\n    // this.quad2 = null;\n    // this.quad3 = null;\n    let quads = [];\n    for (let i = 0; i < quadCount; ++i) {\n      quads.push(`${indent}quad${i} = null;`)\n    }\n    return quads.join('\\n')\n  }\n}\n\n\nfunction getInsertStackCode() {\n  return `\n/**\n * Our implementation of QuadTree is non-recursive to avoid GC hit\n * This data structure represent stack of elements\n * which we are trying to insert into quad tree.\n */\nfunction InsertStack () {\n    this.stack = [];\n    this.popIdx = 0;\n}\n\nInsertStack.prototype = {\n    isEmpty: function() {\n        return this.popIdx === 0;\n    },\n    push: function (node, body) {\n        var item = this.stack[this.popIdx];\n        if (!item) {\n            // we are trying to avoid memory pressure: create new element\n            // only when absolutely necessary\n            this.stack[this.popIdx] = new InsertStackElement(node, body);\n        } else {\n            item.node = node;\n            item.body = body;\n        }\n        ++this.popIdx;\n    },\n    pop: function () {\n        if (this.popIdx > 0) {\n            return this.stack[--this.popIdx];\n        }\n    },\n    reset: function () {\n        this.popIdx = 0;\n    }\n};\n\nfunction InsertStackElement(node, body) {\n    this.node = node; // QuadTree node\n    this.body = body; // physical body which needs to be inserted to node\n}\n`\n}\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js?");

/***/ }),

/***/ "./node_modules/ngraph.forcelayout/lib/codeGenerators/getVariableName.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/ngraph.forcelayout/lib/codeGenerators/getVariableName.js ***!
  \*******************************************************************************/
/***/ ((module) => {

eval("module.exports = function getVariableName(index) {\n//  return 'x' + index;\n  if (index === 0) return 'x';\n  if (index === 1) return 'y';\n  if (index === 2) return 'z';\n  return 'c' + (index + 1);\n}\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/ngraph.forcelayout/lib/codeGenerators/getVariableName.js?");

/***/ }),

/***/ "./node_modules/ngraph.forcelayout/lib/createPhysicsSimulator.js":
/*!***********************************************************************!*\
  !*** ./node_modules/ngraph.forcelayout/lib/createPhysicsSimulator.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Manages a simulation of physical forces acting on bodies and springs.\n */\nmodule.exports = createPhysicsSimulator;\n\nvar generateCreateBodyFunction = __webpack_require__(/*! ./codeGenerators/generateCreateBody */ \"./node_modules/ngraph.forcelayout/lib/codeGenerators/generateCreateBody.js\");\nvar generateQuadTreeFunction = __webpack_require__(/*! ./codeGenerators/generateQuadTree */ \"./node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js\");\nvar generateBoundsFunction = __webpack_require__(/*! ./codeGenerators/generateBounds */ \"./node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js\");\nvar generateCreateDragForceFunction = __webpack_require__(/*! ./codeGenerators/generateCreateDragForce */ \"./node_modules/ngraph.forcelayout/lib/codeGenerators/generateCreateDragForce.js\");\nvar generateCreateSpringForceFunction = __webpack_require__(/*! ./codeGenerators/generateCreateSpringForce */ \"./node_modules/ngraph.forcelayout/lib/codeGenerators/generateCreateSpringForce.js\");\nvar generateIntegratorFunction = __webpack_require__(/*! ./codeGenerators/generateIntegrator */ \"./node_modules/ngraph.forcelayout/lib/codeGenerators/generateIntegrator.js\")\n\nvar dimensionalCache = {}\n\nfunction createPhysicsSimulator(settings) {\n  var Spring = __webpack_require__(/*! ./spring */ \"./node_modules/ngraph.forcelayout/lib/spring.js\");\n  var merge = __webpack_require__(/*! ngraph.merge */ \"./node_modules/ngraph.merge/index.js\");\n  var eventify = __webpack_require__(/*! ngraph.events */ \"./node_modules/ngraph.events/index.js\");\n  if (settings) {\n    // Check for names from older versions of the layout\n    if (settings.springCoeff !== undefined) throw new Error('springCoeff was renamed to springCoefficient');\n    if (settings.dragCoeff !== undefined) throw new Error('dragCoeff was renamed to dragCoefficient');\n  }\n\n  settings = merge(settings, {\n      /**\n       * Ideal length for links (springs in physical model).\n       */\n      springLength: 10,\n\n      /**\n       * Hook's law coefficient. 1 - solid spring.\n       */\n      springCoefficient: 0.8, \n\n      /**\n       * Coulomb's law coefficient. It's used to repel nodes thus should be negative\n       * if you make it positive nodes start attract each other :).\n       */\n      gravity: -12,\n\n      /**\n       * Theta coefficient from Barnes Hut simulation. Ranged between (0, 1).\n       * The closer it's to 1 the more nodes algorithm will have to go through.\n       * Setting it to one makes Barnes Hut simulation no different from\n       * brute-force forces calculation (each node is considered).\n       */\n      theta: 0.8,\n\n      /**\n       * Drag force coefficient. Used to slow down system, thus should be less than 1.\n       * The closer it is to 0 the less tight system will be.\n       */\n      dragCoefficient: 0.9, // TODO: Need to rename this to something better. E.g. `dragCoefficient`\n\n      /**\n       * Default time step (dt) for forces integration\n       */\n      timeStep : 0.5,\n\n      /**\n       * Adaptive time step uses average spring length to compute actual time step:\n       * See: https://twitter.com/anvaka/status/1293067160755957760\n       */\n      adaptiveTimeStepWeight: 0,\n\n      /**\n       * This parameter defines number of dimensions of the space where simulation\n       * is performed. \n       */\n      dimensions: 2,\n\n      /**\n       * In debug mode more checks are performed, this will help you catch errors\n       * quickly, however for production build it is recommended to turn off this flag\n       * to speed up computation.\n       */\n      debug: false\n  });\n\n  var factory = dimensionalCache[settings.dimensions];\n  if (!factory) {\n    var dimensions = settings.dimensions;\n    factory = {\n      Body: generateCreateBodyFunction(dimensions, settings.debug),\n      createQuadTree: generateQuadTreeFunction(dimensions),\n      createBounds: generateBoundsFunction(dimensions),\n      createDragForce: generateCreateDragForceFunction(dimensions),\n      createSpringForce: generateCreateSpringForceFunction(dimensions),\n      integrate: generateIntegratorFunction(dimensions),\n    };\n    dimensionalCache[dimensions] = factory;\n  }\n\n  var Body = factory.Body;\n  var createQuadTree = factory.createQuadTree;\n  var createBounds = factory.createBounds;\n  var createDragForce = factory.createDragForce;\n  var createSpringForce = factory.createSpringForce;\n  var integrate = factory.integrate;\n  var createBody = pos => new Body(pos);\n\n  var random = __webpack_require__(/*! ngraph.random */ \"./node_modules/ngraph.random/index.js\").random(42);\n  var bodies = []; // Bodies in this simulation.\n  var springs = []; // Springs in this simulation.\n\n  var quadTree =  createQuadTree(settings, random);\n  var bounds = createBounds(bodies, settings, random);\n  var springForce = createSpringForce(settings, random);\n  var dragForce = createDragForce(settings);\n\n  var totalMovement = 0; // how much movement we made on last step\n  var forces = [];\n  var forceMap = new Map();\n  var iterationNumber = 0;\n \n  addForce('nbody', nbodyForce);\n  addForce('spring', updateSpringForce);\n\n  var publicApi = {\n    /**\n     * Array of bodies, registered with current simulator\n     *\n     * Note: To add new body, use addBody() method. This property is only\n     * exposed for testing/performance purposes.\n     */\n    bodies: bodies,\n\n    quadTree: quadTree,\n\n    /**\n     * Array of springs, registered with current simulator\n     *\n     * Note: To add new spring, use addSpring() method. This property is only\n     * exposed for testing/performance purposes.\n     */\n    springs: springs,\n\n    /**\n     * Returns settings with which current simulator was initialized\n     */\n    settings: settings,\n\n    /**\n     * Adds a new force to simulation\n     */\n    addForce: addForce,\n    \n    /**\n     * Removes a force from the simulation.\n     */\n    removeForce: removeForce,\n\n    /**\n     * Returns a map of all registered forces.\n     */\n    getForces: getForces,\n\n    /**\n     * Performs one step of force simulation.\n     *\n     * @returns {boolean} true if system is considered stable; False otherwise.\n     */\n    step: function () {\n      for (var i = 0; i < forces.length; ++i) {\n        forces[i](iterationNumber);\n      }\n      var movement = integrate(bodies, settings.timeStep, settings.adaptiveTimeStepWeight);\n      iterationNumber += 1;\n      return movement;\n    },\n\n    /**\n     * Adds body to the system\n     *\n     * @param {ngraph.physics.primitives.Body} body physical body\n     *\n     * @returns {ngraph.physics.primitives.Body} added body\n     */\n    addBody: function (body) {\n      if (!body) {\n        throw new Error('Body is required');\n      }\n      bodies.push(body);\n\n      return body;\n    },\n\n    /**\n     * Adds body to the system at given position\n     *\n     * @param {Object} pos position of a body\n     *\n     * @returns {ngraph.physics.primitives.Body} added body\n     */\n    addBodyAt: function (pos) {\n      if (!pos) {\n        throw new Error('Body position is required');\n      }\n      var body = createBody(pos);\n      bodies.push(body);\n\n      return body;\n    },\n\n    /**\n     * Removes body from the system\n     *\n     * @param {ngraph.physics.primitives.Body} body to remove\n     *\n     * @returns {Boolean} true if body found and removed. falsy otherwise;\n     */\n    removeBody: function (body) {\n      if (!body) { return; }\n\n      var idx = bodies.indexOf(body);\n      if (idx < 0) { return; }\n\n      bodies.splice(idx, 1);\n      if (bodies.length === 0) {\n        bounds.reset();\n      }\n      return true;\n    },\n\n    /**\n     * Adds a spring to this simulation.\n     *\n     * @returns {Object} - a handle for a spring. If you want to later remove\n     * spring pass it to removeSpring() method.\n     */\n    addSpring: function (body1, body2, springLength, springCoefficient) {\n      if (!body1 || !body2) {\n        throw new Error('Cannot add null spring to force simulator');\n      }\n\n      if (typeof springLength !== 'number') {\n        springLength = -1; // assume global configuration\n      }\n\n      var spring = new Spring(body1, body2, springLength, springCoefficient >= 0 ? springCoefficient : -1);\n      springs.push(spring);\n\n      // TODO: could mark simulator as dirty.\n      return spring;\n    },\n\n    /**\n     * Returns amount of movement performed on last step() call\n     */\n    getTotalMovement: function () {\n      return totalMovement;\n    },\n\n    /**\n     * Removes spring from the system\n     *\n     * @param {Object} spring to remove. Spring is an object returned by addSpring\n     *\n     * @returns {Boolean} true if spring found and removed. falsy otherwise;\n     */\n    removeSpring: function (spring) {\n      if (!spring) { return; }\n      var idx = springs.indexOf(spring);\n      if (idx > -1) {\n        springs.splice(idx, 1);\n        return true;\n      }\n    },\n\n    getBestNewBodyPosition: function (neighbors) {\n      return bounds.getBestNewPosition(neighbors);\n    },\n\n    /**\n     * Returns bounding box which covers all bodies\n     */\n    getBBox: getBoundingBox, \n    getBoundingBox: getBoundingBox, \n\n    invalidateBBox: function () {\n      console.warn('invalidateBBox() is deprecated, bounds always recomputed on `getBBox()` call');\n    },\n\n    gravity: function (value) {\n      if (value !== undefined) {\n        settings.gravity = value;\n        quadTree.options({gravity: value});\n        return this;\n      } else {\n        return settings.gravity;\n      }\n    },\n\n    theta: function (value) {\n      if (value !== undefined) {\n        settings.theta = value;\n        quadTree.options({theta: value});\n        return this;\n      } else {\n        return settings.theta;\n      }\n    }\n  };\n\n  // allow settings modification via public API:\n  expose(settings, publicApi);\n\n  eventify(publicApi);\n\n  return publicApi;\n\n  function getBoundingBox() {\n    bounds.update();\n    return bounds.box;\n  }\n\n  function addForce(forceName, forceFunction) {\n    if (forceMap.has(forceName)) throw new Error('Force ' + forceName + ' is already added');\n\n    forceMap.set(forceName, forceFunction);\n    forces.push(forceFunction)\n  }\n\n  function removeForce(forceName) {\n    var forceIndex = forces.indexOf(forceMap.get(forceName))\n    if (forceIndex < 0) return;\n    forces.splice(forceIndex, 1);\n  }\n\n  function getForces() {\n    // TODO: Should I trust them or clone the forces?\n    return forceMap;\n  }\n\n  function nbodyForce(iterationUmber) {\n    if (bodies.length === 0) return;\n\n    quadTree.insertBodies(bodies);\n    var i = bodies.length;\n    while (i--) {\n      var body = bodies[i];\n      if (!body.isPinned) {\n        body.reset();\n        quadTree.updateBodyForce(body);\n        dragForce.update(body);\n      }\n    }\n  }\n\n  function updateSpringForce() {\n    var i = springs.length;\n    while (i--) {\n      springForce.update(springs[i]);\n    }\n  }\n\n  function expose(settings, target) {\n    for (var key in settings) {\n      augment(settings, target, key);\n    }\n  }\n\n  function augment(source, target, key) {\n    if (!source.hasOwnProperty(key)) return\n    if (typeof target[key] === 'function') {\n      // this accessor is already defined. Ignore it\n      return;\n    }\n    var sourceIsNumber = Number.isFinite(source[key]);\n\n    if (sourceIsNumber) {\n      target[key] = function (value) {\n        if (value !== undefined) {\n          if (!Number.isFinite(value)) throw new Error('Value of ' + key + ' should be a valid number.');\n          source[key] = value;\n          return target;\n        }\n        return source[key];\n      }\n    } else {\n      target[key] = function (value) {\n        if (value !== undefined) {\n          source[key] = value;\n          return target;\n        }\n        return source[key];\n      }\n    }\n  }\n}\n\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/ngraph.forcelayout/lib/createPhysicsSimulator.js?");

/***/ }),

/***/ "./node_modules/ngraph.forcelayout/lib/spring.js":
/*!*******************************************************!*\
  !*** ./node_modules/ngraph.forcelayout/lib/spring.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("module.exports = Spring;\n\n/**\n * Represents a physical spring. Spring connects two bodies, has rest length\n * stiffness coefficient and optional weight\n */\nfunction Spring(fromBody, toBody, length, coeff) {\n    this.from = fromBody;\n    this.to = toBody;\n    this.length = length;\n    this.coeff = coeff;\n}\n\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/ngraph.forcelayout/lib/spring.js?");

/***/ }),

/***/ "./node_modules/ngraph.graph/index.js":
/*!********************************************!*\
  !*** ./node_modules/ngraph.graph/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * @fileOverview Contains definition of the core graph object.\n */\n\n// TODO: need to change storage layer:\n// 1. Be able to get all nodes O(1)\n// 2. Be able to get number of links O(1)\n\n/**\n * @example\n *  var graph = require('ngraph.graph')();\n *  graph.addNode(1);     // graph has one node.\n *  graph.addLink(2, 3);  // now graph contains three nodes and one link.\n *\n */\nmodule.exports = createGraph;\n\nvar eventify = __webpack_require__(/*! ngraph.events */ \"./node_modules/ngraph.events/index.js\");\n\n/**\n * Creates a new graph\n */\nfunction createGraph(options) {\n  // Graph structure is maintained as dictionary of nodes\n  // and array of links. Each node has 'links' property which\n  // hold all links related to that node. And general links\n  // array is used to speed up all links enumeration. This is inefficient\n  // in terms of memory, but simplifies coding.\n  options = options || {};\n  if ('uniqueLinkId' in options) {\n    console.warn(\n      'ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\\n' +\n      'Use `multigraph` option instead\\n',\n      '\\n',\n      'Note: there is also change in default behavior: From now on each graph\\n'+\n      'is considered to be not a multigraph by default (each edge is unique).'\n    );\n\n    options.multigraph = options.uniqueLinkId;\n  }\n\n  // Dear reader, the non-multigraphs do not guarantee that there is only\n  // one link for a given pair of node. When this option is set to false\n  // we can save some memory and CPU (18% faster for non-multigraph);\n  if (options.multigraph === undefined) options.multigraph = false;\n\n  if (typeof Map !== 'function') {\n    // TODO: Should we polyfill it ourselves? We don't use much operations there..\n    throw new Error('ngraph.graph requires `Map` to be defined. Please polyfill it before using ngraph');\n  } \n\n  var nodes = new Map();\n  var links = [],\n    // Hash of multi-edges. Used to track ids of edges between same nodes\n    multiEdges = {},\n    suspendEvents = 0,\n\n    createLink = options.multigraph ? createUniqueLink : createSingleLink,\n\n    // Our graph API provides means to listen to graph changes. Users can subscribe\n    // to be notified about changes in the graph by using `on` method. However\n    // in some cases they don't use it. To avoid unnecessary memory consumption\n    // we will not record graph changes until we have at least one subscriber.\n    // Code below supports this optimization.\n    //\n    // Accumulates all changes made during graph updates.\n    // Each change element contains:\n    //  changeType - one of the strings: 'add', 'remove' or 'update';\n    //  node - if change is related to node this property is set to changed graph's node;\n    //  link - if change is related to link this property is set to changed graph's link;\n    changes = [],\n    recordLinkChange = noop,\n    recordNodeChange = noop,\n    enterModification = noop,\n    exitModification = noop;\n\n  // this is our public API:\n  var graphPart = {\n    /**\n     * Adds node to the graph. If node with given id already exists in the graph\n     * its data is extended with whatever comes in 'data' argument.\n     *\n     * @param nodeId the node's identifier. A string or number is preferred.\n     * @param [data] additional data for the node being added. If node already\n     *   exists its data object is augmented with the new one.\n     *\n     * @return {node} The newly added node or node with given id if it already exists.\n     */\n    addNode: addNode,\n\n    /**\n     * Adds a link to the graph. The function always create a new\n     * link between two nodes. If one of the nodes does not exists\n     * a new node is created.\n     *\n     * @param fromId link start node id;\n     * @param toId link end node id;\n     * @param [data] additional data to be set on the new link;\n     *\n     * @return {link} The newly created link\n     */\n    addLink: addLink,\n\n    /**\n     * Removes link from the graph. If link does not exist does nothing.\n     *\n     * @param link - object returned by addLink() or getLinks() methods.\n     *\n     * @returns true if link was removed; false otherwise.\n     */\n    removeLink: removeLink,\n\n    /**\n     * Removes node with given id from the graph. If node does not exist in the graph\n     * does nothing.\n     *\n     * @param nodeId node's identifier passed to addNode() function.\n     *\n     * @returns true if node was removed; false otherwise.\n     */\n    removeNode: removeNode,\n\n    /**\n     * Gets node with given identifier. If node does not exist undefined value is returned.\n     *\n     * @param nodeId requested node identifier;\n     *\n     * @return {node} in with requested identifier or undefined if no such node exists.\n     */\n    getNode: getNode,\n\n    /**\n     * Gets number of nodes in this graph.\n     *\n     * @return number of nodes in the graph.\n     */\n    getNodeCount: getNodeCount,\n\n    /**\n     * Gets total number of links in the graph.\n     */\n    getLinkCount: getLinkCount,\n\n    /**\n     * Synonym for `getLinkCount()`\n     */\n    getLinksCount: getLinkCount,\n    \n    /**\n     * Synonym for `getNodeCount()`\n     */\n    getNodesCount: getNodeCount,\n\n    /**\n     * Gets all links (inbound and outbound) from the node with given id.\n     * If node with given id is not found null is returned.\n     *\n     * @param nodeId requested node identifier.\n     *\n     * @return Array of links from and to requested node if such node exists;\n     *   otherwise null is returned.\n     */\n    getLinks: getLinks,\n\n    /**\n     * Invokes callback on each node of the graph.\n     *\n     * @param {Function(node)} callback Function to be invoked. The function\n     *   is passed one argument: visited node.\n     */\n    forEachNode: forEachNode,\n\n    /**\n     * Invokes callback on every linked (adjacent) node to the given one.\n     *\n     * @param nodeId Identifier of the requested node.\n     * @param {Function(node, link)} callback Function to be called on all linked nodes.\n     *   The function is passed two parameters: adjacent node and link object itself.\n     * @param oriented if true graph treated as oriented.\n     */\n    forEachLinkedNode: forEachLinkedNode,\n\n    /**\n     * Enumerates all links in the graph\n     *\n     * @param {Function(link)} callback Function to be called on all links in the graph.\n     *   The function is passed one parameter: graph's link object.\n     *\n     * Link object contains at least the following fields:\n     *  fromId - node id where link starts;\n     *  toId - node id where link ends,\n     *  data - additional data passed to graph.addLink() method.\n     */\n    forEachLink: forEachLink,\n\n    /**\n     * Suspend all notifications about graph changes until\n     * endUpdate is called.\n     */\n    beginUpdate: enterModification,\n\n    /**\n     * Resumes all notifications about graph changes and fires\n     * graph 'changed' event in case there are any pending changes.\n     */\n    endUpdate: exitModification,\n\n    /**\n     * Removes all nodes and links from the graph.\n     */\n    clear: clear,\n\n    /**\n     * Detects whether there is a link between two nodes.\n     * Operation complexity is O(n) where n - number of links of a node.\n     * NOTE: this function is synonim for getLink()\n     *\n     * @returns link if there is one. null otherwise.\n     */\n    hasLink: getLink,\n\n    /**\n     * Detects whether there is a node with given id\n     * \n     * Operation complexity is O(1)\n     * NOTE: this function is synonim for getNode()\n     *\n     * @returns node if there is one; Falsy value otherwise.\n     */\n    hasNode: getNode,\n\n    /**\n     * Gets an edge between two nodes.\n     * Operation complexity is O(n) where n - number of links of a node.\n     *\n     * @param {string} fromId link start identifier\n     * @param {string} toId link end identifier\n     *\n     * @returns link if there is one. null otherwise.\n     */\n    getLink: getLink\n  };\n\n  // this will add `on()` and `fire()` methods.\n  eventify(graphPart);\n\n  monitorSubscribers();\n\n  return graphPart;\n\n  function monitorSubscribers() {\n    var realOn = graphPart.on;\n\n    // replace real `on` with our temporary on, which will trigger change\n    // modification monitoring:\n    graphPart.on = on;\n\n    function on() {\n      // now it's time to start tracking stuff:\n      graphPart.beginUpdate = enterModification = enterModificationReal;\n      graphPart.endUpdate = exitModification = exitModificationReal;\n      recordLinkChange = recordLinkChangeReal;\n      recordNodeChange = recordNodeChangeReal;\n\n      // this will replace current `on` method with real pub/sub from `eventify`.\n      graphPart.on = realOn;\n      // delegate to real `on` handler:\n      return realOn.apply(graphPart, arguments);\n    }\n  }\n\n  function recordLinkChangeReal(link, changeType) {\n    changes.push({\n      link: link,\n      changeType: changeType\n    });\n  }\n\n  function recordNodeChangeReal(node, changeType) {\n    changes.push({\n      node: node,\n      changeType: changeType\n    });\n  }\n\n  function addNode(nodeId, data) {\n    if (nodeId === undefined) {\n      throw new Error('Invalid node identifier');\n    }\n\n    enterModification();\n\n    var node = getNode(nodeId);\n    if (!node) {\n      node = new Node(nodeId, data);\n      recordNodeChange(node, 'add');\n    } else {\n      node.data = data;\n      recordNodeChange(node, 'update');\n    }\n\n    nodes.set(nodeId, node);\n\n    exitModification();\n    return node;\n  }\n\n  function getNode(nodeId) {\n    return nodes.get(nodeId);\n  }\n\n  function removeNode(nodeId) {\n    var node = getNode(nodeId);\n    if (!node) {\n      return false;\n    }\n\n    enterModification();\n\n    var prevLinks = node.links;\n    if (prevLinks) {\n      node.links = null;\n      for(var i = 0; i < prevLinks.length; ++i) {\n        removeLink(prevLinks[i]);\n      }\n    }\n\n    nodes.delete(nodeId)\n\n    recordNodeChange(node, 'remove');\n\n    exitModification();\n\n    return true;\n  }\n\n\n  function addLink(fromId, toId, data) {\n    enterModification();\n\n    var fromNode = getNode(fromId) || addNode(fromId);\n    var toNode = getNode(toId) || addNode(toId);\n\n    var link = createLink(fromId, toId, data);\n\n    links.push(link);\n\n    // TODO: this is not cool. On large graphs potentially would consume more memory.\n    addLinkToNode(fromNode, link);\n    if (fromId !== toId) {\n      // make sure we are not duplicating links for self-loops\n      addLinkToNode(toNode, link);\n    }\n\n    recordLinkChange(link, 'add');\n\n    exitModification();\n\n    return link;\n  }\n\n  function createSingleLink(fromId, toId, data) {\n    var linkId = makeLinkId(fromId, toId);\n    return new Link(fromId, toId, data, linkId);\n  }\n\n  function createUniqueLink(fromId, toId, data) {\n    // TODO: Get rid of this method.\n    var linkId = makeLinkId(fromId, toId);\n    var isMultiEdge = multiEdges.hasOwnProperty(linkId);\n    if (isMultiEdge || getLink(fromId, toId)) {\n      if (!isMultiEdge) {\n        multiEdges[linkId] = 0;\n      }\n      var suffix = '@' + (++multiEdges[linkId]);\n      linkId = makeLinkId(fromId + suffix, toId + suffix);\n    }\n\n    return new Link(fromId, toId, data, linkId);\n  }\n\n  function getNodeCount() {\n    return nodes.size;\n  }\n\n  function getLinkCount() {\n    return links.length;\n  }\n\n  function getLinks(nodeId) {\n    var node = getNode(nodeId);\n    return node ? node.links : null;\n  }\n\n  function removeLink(link) {\n    if (!link) {\n      return false;\n    }\n    var idx = indexOfElementInArray(link, links);\n    if (idx < 0) {\n      return false;\n    }\n\n    enterModification();\n\n    links.splice(idx, 1);\n\n    var fromNode = getNode(link.fromId);\n    var toNode = getNode(link.toId);\n\n    if (fromNode) {\n      idx = indexOfElementInArray(link, fromNode.links);\n      if (idx >= 0) {\n        fromNode.links.splice(idx, 1);\n      }\n    }\n\n    if (toNode) {\n      idx = indexOfElementInArray(link, toNode.links);\n      if (idx >= 0) {\n        toNode.links.splice(idx, 1);\n      }\n    }\n\n    recordLinkChange(link, 'remove');\n\n    exitModification();\n\n    return true;\n  }\n\n  function getLink(fromNodeId, toNodeId) {\n    // TODO: Use sorted links to speed this up\n    var node = getNode(fromNodeId),\n      i;\n    if (!node || !node.links) {\n      return null;\n    }\n\n    for (i = 0; i < node.links.length; ++i) {\n      var link = node.links[i];\n      if (link.fromId === fromNodeId && link.toId === toNodeId) {\n        return link;\n      }\n    }\n\n    return null; // no link.\n  }\n\n  function clear() {\n    enterModification();\n    forEachNode(function(node) {\n      removeNode(node.id);\n    });\n    exitModification();\n  }\n\n  function forEachLink(callback) {\n    var i, length;\n    if (typeof callback === 'function') {\n      for (i = 0, length = links.length; i < length; ++i) {\n        callback(links[i]);\n      }\n    }\n  }\n\n  function forEachLinkedNode(nodeId, callback, oriented) {\n    var node = getNode(nodeId);\n\n    if (node && node.links && typeof callback === 'function') {\n      if (oriented) {\n        return forEachOrientedLink(node.links, nodeId, callback);\n      } else {\n        return forEachNonOrientedLink(node.links, nodeId, callback);\n      }\n    }\n  }\n\n  function forEachNonOrientedLink(links, nodeId, callback) {\n    var quitFast;\n    for (var i = 0; i < links.length; ++i) {\n      var link = links[i];\n      var linkedNodeId = link.fromId === nodeId ? link.toId : link.fromId;\n\n      quitFast = callback(nodes.get(linkedNodeId), link);\n      if (quitFast) {\n        return true; // Client does not need more iterations. Break now.\n      }\n    }\n  }\n\n  function forEachOrientedLink(links, nodeId, callback) {\n    var quitFast;\n    for (var i = 0; i < links.length; ++i) {\n      var link = links[i];\n      if (link.fromId === nodeId) {\n        quitFast = callback(nodes.get(link.toId), link)\n        if (quitFast) {\n          return true; // Client does not need more iterations. Break now.\n        }\n      }\n    }\n  }\n\n  // we will not fire anything until users of this library explicitly call `on()`\n  // method.\n  function noop() {}\n\n  // Enter, Exit modification allows bulk graph updates without firing events.\n  function enterModificationReal() {\n    suspendEvents += 1;\n  }\n\n  function exitModificationReal() {\n    suspendEvents -= 1;\n    if (suspendEvents === 0 && changes.length > 0) {\n      graphPart.fire('changed', changes);\n      changes.length = 0;\n    }\n  }\n\n  function forEachNode(callback) {\n    if (typeof callback !== 'function') {\n      throw new Error('Function is expected to iterate over graph nodes. You passed ' + callback);\n    }\n\n    var valuesIterator = nodes.values();\n    var nextValue = valuesIterator.next();\n    while (!nextValue.done) {\n      if (callback(nextValue.value)) {\n        return true; // client doesn't want to proceed. Return.\n      }\n      nextValue = valuesIterator.next();\n    }\n  }\n}\n\n// need this for old browsers. Should this be a separate module?\nfunction indexOfElementInArray(element, array) {\n  if (!array) return -1;\n\n  if (array.indexOf) {\n    return array.indexOf(element);\n  }\n\n  var len = array.length,\n    i;\n\n  for (i = 0; i < len; i += 1) {\n    if (array[i] === element) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Internal structure to represent node;\n */\nfunction Node(id, data) {\n  this.id = id;\n  this.links = null;\n  this.data = data;\n}\n\nfunction addLinkToNode(node, link) {\n  if (node.links) {\n    node.links.push(link);\n  } else {\n    node.links = [link];\n  }\n}\n\n/**\n * Internal structure to represent links;\n */\nfunction Link(fromId, toId, data, id) {\n  this.fromId = fromId;\n  this.toId = toId;\n  this.data = data;\n  this.id = id;\n}\n\nfunction makeLinkId(fromId, toId) {\n  return fromId.toString() + '👉 ' + toId.toString();\n}\n\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/ngraph.graph/index.js?");

/***/ }),

/***/ "./node_modules/ngraph.merge/index.js":
/*!********************************************!*\
  !*** ./node_modules/ngraph.merge/index.js ***!
  \********************************************/
/***/ ((module) => {

eval("module.exports = merge;\n\n/**\n * Augments `target` with properties in `options`. Does not override\n * target's properties if they are defined and matches expected type in \n * options\n *\n * @returns {Object} merged object\n */\nfunction merge(target, options) {\n  var key;\n  if (!target) { target = {}; }\n  if (options) {\n    for (key in options) {\n      if (options.hasOwnProperty(key)) {\n        var targetHasIt = target.hasOwnProperty(key),\n            optionsValueType = typeof options[key],\n            shouldReplace = !targetHasIt || (typeof target[key] !== optionsValueType);\n\n        if (shouldReplace) {\n          target[key] = options[key];\n        } else if (optionsValueType === 'object') {\n          // go deep, don't care about loops here, we are simple API!:\n          target[key] = merge(target[key], options[key]);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/ngraph.merge/index.js?");

/***/ }),

/***/ "./node_modules/ngraph.random/index.js":
/*!*********************************************!*\
  !*** ./node_modules/ngraph.random/index.js ***!
  \*********************************************/
/***/ ((module) => {

eval("module.exports = random;\n\n// TODO: Deprecate?\nmodule.exports.random = random,\nmodule.exports.randomIterator = randomIterator\n\n/**\n * Creates seeded PRNG with two methods:\n *   next() and nextDouble()\n */\nfunction random(inputSeed) {\n  var seed = typeof inputSeed === 'number' ? inputSeed : (+new Date());\n  return new Generator(seed)\n}\n\nfunction Generator(seed) {\n  this.seed = seed;\n}\n\n/**\n  * Generates random integer number in the range from 0 (inclusive) to maxValue (exclusive)\n  *\n  * @param maxValue Number REQUIRED. Omitting this number will result in NaN values from PRNG.\n  */\nGenerator.prototype.next = next;\n\n/**\n  * Generates random double number in the range from 0 (inclusive) to 1 (exclusive)\n  * This function is the same as Math.random() (except that it could be seeded)\n  */\nGenerator.prototype.nextDouble = nextDouble;\n\n/**\n * Returns a random real number from uniform distribution in [0, 1)\n */\nGenerator.prototype.uniform = nextDouble;\n\n/**\n * Returns a random real number from a Gaussian distribution\n * with 0 as a mean, and 1 as standard deviation u ~ N(0,1)\n */\nGenerator.prototype.gaussian = gaussian;\n\nfunction gaussian() {\n  // use the polar form of the Box-Muller transform\n  // based on https://introcs.cs.princeton.edu/java/23recursion/StdRandom.java\n  var r, x, y;\n  do {\n    x = this.nextDouble() * 2 - 1;\n    y = this.nextDouble() * 2 - 1;\n    r = x * x + y * y;\n  } while (r >= 1 || r === 0);\n\n  return x * Math.sqrt(-2 * Math.log(r)/r);\n}\n\n/**\n * See https://twitter.com/anvaka/status/1296182534150135808\n */\nGenerator.prototype.levy = levy;\n\nfunction levy() {\n  var beta = 3 / 2;\n  var sigma = Math.pow(\n      gamma( 1 + beta ) * Math.sin(Math.PI * beta / 2) / \n        (gamma((1 + beta) / 2) * beta * Math.pow(2, (beta - 1) / 2)),\n      1/beta\n  );\n  return this.gaussian() * sigma / Math.pow(Math.abs(this.gaussian()), 1/beta);\n}\n\n// gamma function approximation\nfunction gamma(z) {\n  return Math.sqrt(2 * Math.PI / z) * Math.pow((1 / Math.E) * (z + 1 / (12 * z - 1 / (10 * z))), z);\n}\n\nfunction nextDouble() {\n  var seed = this.seed;\n  // Robert Jenkins' 32 bit integer hash function.\n  seed = ((seed + 0x7ed55d16) + (seed << 12)) & 0xffffffff;\n  seed = ((seed ^ 0xc761c23c) ^ (seed >>> 19)) & 0xffffffff;\n  seed = ((seed + 0x165667b1) + (seed << 5)) & 0xffffffff;\n  seed = ((seed + 0xd3a2646c) ^ (seed << 9)) & 0xffffffff;\n  seed = ((seed + 0xfd7046c5) + (seed << 3)) & 0xffffffff;\n  seed = ((seed ^ 0xb55a4f09) ^ (seed >>> 16)) & 0xffffffff;\n  this.seed = seed;\n  return (seed & 0xfffffff) / 0x10000000;\n}\n\nfunction next(maxValue) {\n  return Math.floor(this.nextDouble() * maxValue);\n}\n\n/*\n * Creates iterator over array, which returns items of array in random order\n * Time complexity is guaranteed to be O(n);\n */\nfunction randomIterator(array, customRandom) {\n  var localRandom = customRandom || random();\n  if (typeof localRandom.next !== 'function') {\n    throw new Error('customRandom does not match expected API: next() function is missing');\n  }\n\n  return {\n    forEach: forEach,\n\n    /**\n     * Shuffles array randomly, in place.\n     */\n    shuffle: shuffle\n  };\n\n  function shuffle() {\n    var i, j, t;\n    for (i = array.length - 1; i > 0; --i) {\n      j = localRandom.next(i + 1); // i inclusive\n      t = array[j];\n      array[j] = array[i];\n      array[i] = t;\n    }\n\n    return array;\n  }\n\n  function forEach(callback) {\n    var i, j, t;\n    for (i = array.length - 1; i > 0; --i) {\n      j = localRandom.next(i + 1); // i inclusive\n      t = array[j];\n      array[j] = array[i];\n      array[i] = t;\n\n      callback(t);\n    }\n\n    if (array.length) {\n      callback(array[0]);\n    }\n  }\n}\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/ngraph.random/index.js?");

/***/ }),

/***/ "./css/index.css":
/*!***********************!*\
  !*** ./css/index.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./index.css */ \"./node_modules/css-loader/dist/cjs.js!./css/index.css\");\n\n            \n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_index_css__WEBPACK_IMPORTED_MODULE_1__.default, options);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_index_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});\n\n//# sourceURL=webpack://ascdc-sna/./css/index.css?");

/***/ }),

/***/ "./node_modules/@simonwep/pickr/dist/themes/nano.min.css":
/*!***************************************************************!*\
  !*** ./node_modules/@simonwep/pickr/dist/themes/nano.min.css ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _css_loader_dist_cjs_js_nano_min_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../../css-loader/dist/cjs.js!./nano.min.css */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/@simonwep/pickr/dist/themes/nano.min.css\");\n\n            \n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_nano_min_css__WEBPACK_IMPORTED_MODULE_1__.default, options);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_nano_min_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/@simonwep/pickr/dist/themes/nano.min.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : 0;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://ascdc-sna/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./js/mainSetting.js");
/******/ 	
/******/ })()
;